"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

"""Indicates an Input Object is a OneOf Input Object."""
directive @oneOf on INPUT_OBJECT

type AccountTakeoverAnomalyDetectionConfig {
  keyValuePairs: [AnomalyDetectionConfigKeyValuePair]
  name: AccountTakeoverAnomalyDetectionConfigName!
  ruleId: String
}

enum AccountTakeoverAnomalyDetectionConfigName {
  """CREDENTIAL_STUFFING_ANOMALY_CONFIG"""
  CREDENTIAL_STUFFING_ANOMALY_CONFIG
}

"""Category of the activity indicating its source"""
enum ActivityCategory {
  """TRACEABLE"""
  TRACEABLE

  """USER_RELATED"""
  USER_RELATED

  """ORGANIZATION_NOTIFICATION"""
  ORGANIZATION_NOTIFICATION
}

enum ActivityEventType {
  """THREAT_ACTOR_CHANGE"""
  THREAT_ACTOR_CHANGE

  """SECURITY_CONFIGURATION_CHANGE"""
  SECURITY_CONFIGURATION_CHANGE

  """THREAT_AUTO_BLOCKING_CONFIGURATION_CHANGE"""
  THREAT_AUTO_BLOCKING_CONFIGURATION_CHANGE

  """API_ENTITY_CHANGE"""
  API_ENTITY_CHANGE

  """AGENT_ENTITY_CHANGE"""
  AGENT_ENTITY_CHANGE

  """AGENT_MODULE_ENTITY_CHANGE"""
  AGENT_MODULE_ENTITY_CHANGE

  """ENVIRONMENT_ENTITY_CHANGE"""
  ENVIRONMENT_ENTITY_CHANGE

  """SERVICE_ENTITY_CHANGE"""
  SERVICE_ENTITY_CHANGE

  """DOMAIN_ENTITY_CHANGE"""
  DOMAIN_ENTITY_CHANGE

  """USER_ATTRIBUTION_CONFIGURATION_CHANGE"""
  USER_ATTRIBUTION_CONFIGURATION_CHANGE

  """SESSION_IDENTIFICATION_CONFIGURATION_CHANGE"""
  SESSION_IDENTIFICATION_CONFIGURATION_CHANGE

  """ANOMALY_SCORE_CONTRIBUTION_UPDATE"""
  ANOMALY_SCORE_CONTRIBUTION_UPDATE

  """SECURITY_EVENT_SCORE_CONTRIBUTION_UPDATE"""
  SECURITY_EVENT_SCORE_CONTRIBUTION_UPDATE

  """LICENSE_CHANGE"""
  LICENSE_CHANGE

  """PROTECTION_MODE_CONFIGURATION_CHANGE"""
  PROTECTION_MODE_CONFIGURATION_CHANGE

  """FULL_PRIVACY_MODE_CONFIGURATION_CHANGE"""
  FULL_PRIVACY_MODE_CONFIGURATION_CHANGE

  """RISK_SCORING_UPDATE"""
  RISK_SCORING_UPDATE

  """SCANNER_IDENTIFICATION"""
  SCANNER_IDENTIFICATION

  """ANOMALY_EXCLUSION_RULE_CONFIGURATION_CHANGE"""
  ANOMALY_EXCLUSION_RULE_CONFIGURATION_CHANGE

  """NOTIFICATION_RULE_CONFIGURATION_CHANGE"""
  NOTIFICATION_RULE_CONFIGURATION_CHANGE

  """NOTIFICATION_CHANNEL_CONFIGURATION_CHANGE"""
  NOTIFICATION_CHANNEL_CONFIGURATION_CHANGE

  """ANOMALY_RULE_UPDATE"""
  ANOMALY_RULE_UPDATE

  """ANOMALY_SUB_RULE_UPDATE"""
  ANOMALY_SUB_RULE_UPDATE

  """API_CHANGE_LABEL_CHANGE"""
  API_CHANGE_LABEL_CHANGE

  """API_INTELLIGENCE_CHANGE"""
  API_INTELLIGENCE_CHANGE

  """API_DEFINITION_CHANGE"""
  API_DEFINITION_CHANGE

  """DATA_TYPE_CONFIG_CHANGE"""
  DATA_TYPE_CONFIG_CHANGE

  """DATA_SET_CONFIG_CHANGE"""
  DATA_SET_CONFIG_CHANGE

  """THREAT_ACTOR_SEVERITY_CHANGE"""
  THREAT_ACTOR_SEVERITY_CHANGE

  """USER_CHANGE"""
  USER_CHANGE

  """BACKEND_API_CHANGE"""
  BACKEND_API_CHANGE

  """VULNERABILITY_CHANGE"""
  VULNERABILITY_CHANGE

  """USER_LOGIN_EVENT"""
  USER_LOGIN_EVENT

  """USER_LOGOUT_EVENT"""
  USER_LOGOUT_EVENT

  """API_NAMING_RULE_CONFIGURATION_CHANGE"""
  API_NAMING_RULE_CONFIGURATION_CHANGE

  """API_SPEC_CONFIGURATION_CHANGE"""
  API_SPEC_CONFIGURATION_CHANGE

  """EXCLUDE_SPAN_RULE_CONFIGURATION_CHANGE"""
  EXCLUDE_SPAN_RULE_CONFIGURATION_CHANGE

  """RISK_SCORING_CONFIGURATION_CHANGE"""
  RISK_SCORING_CONFIGURATION_CHANGE

  """LABEL_CONFIGURATION_CHANGE"""
  LABEL_CONFIGURATION_CHANGE

  """AST_SCAN_CHANGE"""
  AST_SCAN_CHANGE

  """AST_SCAN_POLICY_CHANGE"""
  AST_SCAN_POLICY_CHANGE

  """AST_SCAN_SUITE_CHANGE"""
  AST_SCAN_SUITE_CHANGE

  """BACKEND_ENTITY_CHANGE"""
  BACKEND_ENTITY_CHANGE

  """INTEGRATION_EVENT"""
  INTEGRATION_EVENT

  """THREAT_SCORE_BOUND_UPDATE"""
  THREAT_SCORE_BOUND_UPDATE

  """THREAT_SCORE_SECURITY_EVENT_TYPE_CONTRIBUTION_UPDATE"""
  THREAT_SCORE_SECURITY_EVENT_TYPE_CONTRIBUTION_UPDATE

  """THREAT_SCORE_IP_REPUTATION_UPDATE"""
  THREAT_SCORE_IP_REPUTATION_UPDATE

  """THREAT_SCORE_STATUS_CODE_CONTRIBUTION_UPDATE"""
  THREAT_SCORE_STATUS_CODE_CONTRIBUTION_UPDATE

  """AGENT_TOKEN_CHANGE"""
  AGENT_TOKEN_CHANGE

  """ROLE_CHANGE"""
  ROLE_CHANGE
}

type ActivityLog {
  """Category of the activity indicating its source"""
  activityCategory: ActivityCategory!

  """Type of the activity event indicating what changed"""
  activityEventType: ActivityEventType!

  """Type of the activity indicating what changed"""
  activityType: ActivityType!

  """
  If the activity event type is AGENT_ENTITY_CHANGE, then this field contains
  the Agent Entity change details, otherwise it's null
  """
  agentEntityChange: AgentEntityChange

  """
  If the activity event type is AGENT_MODULE_ENTITY_CHANGE, then this field
  contains the Agent Module Entity change details, otherwise it's null
  """
  agentModuleEntityChange: AgentModuleEntityChange

  """
  If the activity event type is AGENT_TOKEN_CHANGE, then this field contains the
  Agent Token change details, otherwise it's null
  """
  agentTokenChange: AgentTokenChange

  """
  If the activity event type is ANOMALY_EXCLUSION_RULE_CONFIGURATION_CHANGE,
  then this field contains the Anomaly Exclusion Rule Configuration change
  details, otherwise it's null
  """
  anomalyExclusionRuleConfigurationChange: AnomalyExclusionRuleConfigurationChange

  """
  If the activity event type is ANOMALY_RULE_UPDATE, then this field contains
  the Activity Log Anomaly Rule update details, otherwise it's null
  """
  anomalyRuleUpdate: ActivityLogAnomalyRuleUpdate

  """
  If the activity event type is ANOMALY_SUB_RULE_UPDATE, then this field
  contains the Activity Log Anomaly Sub Rule update details, otherwise it's null
  """
  anomalySubRuleUpdate: ActivityLogAnomalySubRuleUpdate

  """
  If the activity event type is ANOMALY_SCORE_CONTRIBUTION_UPDATE, then this
  field contains the Anomaly Threat Score Contribution update details, otherwise it's null
  """
  anomalyThreatScoreContributionUpdate: AnomalyScoreContributionUpdate

  """
  If the activity event type is API_CHANGE_LABEL_CHANGE, then this field
  contains the API Change Label change details, otherwise it's null
  """
  apiChangeLabelChange: ApiChangeLabelChange @deprecated(reason: "Deprecated")

  """
  If the activity event type is API_DEFINITION_CHANGE, then this field contains
  the API Definition change details, otherwise it's null
  """
  apiDefinitionChange: ApiDefinitionChange

  """
  If the activity event type is API_ENTITY_CHANGE, then this field contains the
  API Entity change details, otherwise it's null
  """
  apiEntityChange: ApiEntityChange @deprecated(reason: "Deprecated")

  """
  If the activity event type is API_INTELLIGENCE_CHANGE, then this field
  contains the API Intelligence change details, otherwise it's null
  """
  apiIntelligenceChange: ApiIntelligenceChange

  """
  If the activity event type is API_NAMING_RULE_CONFIGURATION_CHANGE, then this
  field contains the API Naming Rule Configuration change details, otherwise it's null
  """
  apiNamingRuleConfigChange: ApiNamingRuleConfigurationChange

  """
  If the activity event type is API_SPEC_CONFIGURATION_CHANGE, then this field
  contains the API Spec Configuration change details, otherwise it's null
  """
  apiSpecConfigChange: ApiSpecConfigurationChange

  """
  If the activity event type is AST_SCAN_CHANGE, then this field contains the Ast Scan change details, otherwise it's null
  """
  astScanChange: AstScanChange

  """
  If the activity event type is AST_SCAN_POLICY_CHANGE, then this field contains
  the Ast Scan Policy change details, otherwise it's null
  """
  astScanPolicyChange: AstScanPolicyChange

  """
  If the activity event type is AST_SCAN_SUITE_CHANGE, then this field contains
  the Ast Scan Suite change details, otherwise it's null
  """
  astScanSuiteChange: AstScanSuiteChange

  """
  If the activity event type is BACKEND_API_CHANGE, then this field contains the
  Backend API change details, otherwise it's null
  """
  backendApiChange: BackendApiChange

  """
  If the activity event type is BACKEND_ENTITY_CHANGE, then this field contains the Backend details, otherwise it's null
  """
  backendEntityChange: BackendEntityChange

  """
  If the activity event type is DATA_SET_CONFIG_CHANGE, then this field contains
  the Data Set Config change details, otherwise it's null
  """
  dataSetConfigChange: DataSetConfigChange

  """
  If the activity event type is DATA_TYPE_CONFIG_CHANGE, then this field
  contains the Data Type Config change details, otherwise it's null
  """
  dataTypeConfigChange: DataTypeConfigChange

  """
  If the activity event type is DOMAIN_ENTITY_CHANGE, then this field contains
  the Domain Entity change details, otherwise it's null
  """
  domainEntityChange: DomainEntityChange
  entity(type: String!): Entity

  """ID of the environment in which the activity happened"""
  environment: String

  """
  If the activity event type is ENVIRONMENT_ENTITY_CHANGE, then this field
  contains the Environment Entity change details, otherwise it's null
  """
  environmentEntityChange: EnvironmentEntityChange

  """Timestamp at which the activity happened"""
  eventTime: DateTime!

  """
  If the activity event type is EXCLUDE_SPAN_RULE_CONFIGURATION_CHANGE, then
  this field contains the Exclude Span Rule Configuration change details,
  otherwise it's null
  """
  excludeSpanRuleConfigChange: ExcludeSpanRuleConfigurationChange

  """
  If the activity event type is FULL_PRIVACY_MODE_CONFIGURATION_CHANGE, then
  this field contains the Full Privacy Mode Configuration change details,
  otherwise it's null
  """
  fullPrivacyModeConfigurationChange: FullPrivacyModeConfigurationChange
  id: String!

  """
  If the activity event type is INTEGRATION_EVENT, then this field contains the Integration event, otherwise it's null
  """
  integrationEvent: IntegrationEvent

  """
  If the activity event type is LABEL_CONFIGURATION_CHANGE, then this field
  contains the Label Configuration change details, otherwise it's null
  """
  labelConfigChange: LabelConfigurationChange

  """
  If the activity event type is LICENSE_CHANGE, then this field contains the License change details, otherwise it's null
  """
  licenseChange: LicenseChange

  """
  If the activity event type is NOTIFICATION_CHANNEL_CONFIGURATION_CHANGE, then
  this field contains the Notification Channel Configuration change details,
  otherwise it's null
  """
  notificationChannelConfigurationChange: NotificationChannelConfigurationChange

  """
  If the activity event type is NOTIFICATION_RULE_CONFIGURATION_CHANGE, then
  this field contains the Notification Rule Configuration change details,
  otherwise it's null
  """
  notificationRuleConfigurationChange: NotificationRuleConfigurationChange

  """Notification rules matching this activity log event"""
  notificationRules: [NotificationRule]

  """
  If the activity event type is PROTECTION_MODE_CONFIGURATION_CHANGE, then this
  field contains the Protection Mode Configuration change details, otherwise it's null
  """
  protectionModeConfigurationChange: ProtectionModeConfigurationChange

  """
  If the activity event type is RISK_SCORING_CONFIGURATION_CHANGE, then this
  field contains the Risk Score Configuration change details, otherwise it's null
  """
  riskScoreConfigChange: RiskScoreConfigurationChange

  """
  If the activity event type is RISK_SCORING_UPDATE, then this field contains
  the Activity Log Risk Scoring update details, otherwise it's null
  """
  riskScoringUpdate: ActivityLogRiskScoringUpdate

  """
  If the activity event type is ROLE_CHANGE, then this field contains the Role change details, otherwise it's null
  """
  roleChange: RoleChange

  """
  If the activity event type is SCANNER_IDENTIFICATION, then this field contains
  the Scanner Identification details, otherwise it's null
  """
  scannerIdentification: ScannerIdentification

  """
  If the activity event type is SECURITY_CONFIGURATION_CHANGE, then this field
  contains the Security Configuration change details, otherwise it's null
  """
  securityConfigurationChange: SecurityConfigurationChange

  """
  If the activity event type is SECURITY_EVENT_SCORE_CONTRIBUTION_UPDATE, then
  this field contains the Security Event Threat Score Contribution update
  details, otherwise it's null
  """
  securityEventThreatScoreContributionUpdate: SecurityEventThreatScoreContributionUpdate

  """
  If the activity event type is SERVICE_ENTITY_CHANGE, then this field contains
  the Service Entity change details, otherwise it's null
  """
  serviceEntityChange: ServiceEntityChange

  """
  If the activity event type is SESSION_IDENTIFICATION_CONFIGURATION_CHANGE,
  then this field contains the Session Identification Configuration change
  details, otherwise it's null
  """
  sessionIdentificationConfigurationChange: SessionIdentificationConfigurationChange

  """
  If the activity event type is THREAT_ACTOR_CHANGE, then this field contains
  the Threat Actor change details, otherwise it's null
  """
  threatActorChange: ThreatActorChange

  """
  If the activity event type is THREAT_ACTOR_SEVERITY_CHANGE, then this field
  contains the Threat Actor Severity change details, otherwise it's null
  """
  threatActorSeverityChange: ThreatActorSeverityChange

  """
  If the activity event type is THREAT_AUTO_BLOCKING_CONFIGURATION_CHANGE, then
  this field contains the Threat Auto Blocking Configuration change details,
  otherwise it's null
  """
  threatAutoBlockingConfigurationChange: ThreatAutoBlockingConfigurationChange

  """
  If the activity event type is USER_ATTRIBUTION_CONFIGURATION_CHANGE, then this
  field contains the User Attribution Configuration change details, otherwise it's null
  """
  userAttributionConfigurationChange: UserAttributionConfigurationChange

  """
  If the activity event type is USER_CHANGE, then this field contains the User change details, otherwise it's null
  """
  userChange: UserChange

  """
  If the activity category is USER_RELATED, then this field indicates the ID of
  the user who initiated this activity, otherwise it's null
  """
  userId: String

  """
  This field indicates if it is a user login event and the method for logging in (GOOGLE/SAML/LOCAL)
  """
  userLogin: UserLoginEvent

  """This field indicates if it is a user login event"""
  userLoginEvent: Boolean @deprecated(reason: "Deprecated")

  """This field indicates if it is a user logout event"""
  userLogoutEvent: Boolean

  """
  If the activity category is USER_RELATED, then this field indicates the name
  of the user who initiated this activity, otherwise it's null
  """
  userName: String

  """
  If the activity event type is VULNERABILITY_CHANGE, then this field contains
  the Vulnerability change details, otherwise it's null
  """
  vulnerabilityChange: VulnerabilityChange
}

"""Activity Log Anomaly Rule update details"""
type ActivityLogAnomalyRuleUpdate {
  identity: ActivityLogIdentity!
  toggleAction: ToggleAction!
}

"""Activity Log Anomaly Sub Rule update details"""
type ActivityLogAnomalySubRuleUpdate {
  blockingToggleAction: ToggleAction!
  ruleIdentity: ActivityLogIdentity!
  subRuleIdentity: ActivityLogIdentity!
}

enum ActivityLogApiChangeLabel {
  """NEW"""
  NEW

  """CHANGED"""
  CHANGED
}

enum ActivityLogField {
  """EVENT_TIME"""
  EVENT_TIME

  """ACTIVITY_CATEGORY"""
  ACTIVITY_CATEGORY

  """ACTIVITY_TYPE"""
  ACTIVITY_TYPE

  """ENVIRONMENT"""
  ENVIRONMENT

  """USER_ID"""
  USER_ID

  """ID"""
  ID
}

type ActivityLogIdentity {
  id: String!
  name: String!
}

type ActivityLogResultSet {
  count: Long!

  """List of the activity log events"""
  results: [ActivityLog]!
  total: Long!
}

type ActivityLogRiskElementConfig {
  id: String!
  riskElementScoringChange: RiskElementScoringChange!
}

type ActivityLogRiskFactorGridCell {
  impactRiskScoreCategory: RiskScoreCategory!
  likelihoodRiskScoreCategory: RiskScoreCategory!
  scoreUpdate: LongChange!
}

type ActivityLogRiskFactorGridConfigUpdate {
  updatedRiskFactorGridCellList: [ActivityLogRiskFactorGridCell]!
}

type ActivityLogRiskLevelConfigUpdate {
  criticalLevelMinScoreChange: LongChange
  highLevelMinScoreChange: LongChange
  mediumLevelMinScoreChange: LongChange
}

"""Activity Log Risk Scoring update details"""
type ActivityLogRiskScoringUpdate {
  riskFactorGridConfigUpdate: ActivityLogRiskFactorGridConfigUpdate
  riskLevelConfigUpdate: ActivityLogRiskLevelConfigUpdate
  riskScoringUpdateType: ActivityLogRiskScoringUpdateType!
}

enum ActivityLogRiskScoringUpdateType {
  """RISK_LEVEL_CONFIG_UPDATE"""
  RISK_LEVEL_CONFIG_UPDATE

  """RISK_FACTOR_GRID_CONFIG_UPDATE"""
  RISK_FACTOR_GRID_CONFIG_UPDATE

  """RISK_IMPACT_OR_LIKELIHOOD_CONFIG_UPDATE"""
  RISK_IMPACT_OR_LIKELIHOOD_CONFIG_UPDATE
}

"""Type of the activity indicating what changed"""
enum ActivityType {
  """THREAT_ACTOR_CHANGE"""
  THREAT_ACTOR_CHANGE

  """SECURITY_CONFIGURATION_CHANGE"""
  SECURITY_CONFIGURATION_CHANGE

  """PRODUCT_ACCESS_CHANGE"""
  PRODUCT_ACCESS_CHANGE

  """SENSITIVE_DATA_CONFIGURATION_CHANGE"""
  SENSITIVE_DATA_CONFIGURATION_CHANGE

  """DATA_COLLECTION_CONFIGURATION_CHANGE"""
  DATA_COLLECTION_CONFIGURATION_CHANGE

  """API_INTELLIGENCE_CHANGE"""
  API_INTELLIGENCE_CHANGE

  """ADMINISTRATION_CONFIGURATION_CHANGE"""
  ADMINISTRATION_CONFIGURATION_CHANGE

  """SCORING_UPDATES"""
  SCORING_UPDATES

  """API_CHANGE_LABEL_CHANGE"""
  API_CHANGE_LABEL_CHANGE

  """API_DEFINITION_CHANGE"""
  API_DEFINITION_CHANGE

  """THREAT_ACTOR_SEVERITY_CHANGE"""
  THREAT_ACTOR_SEVERITY_CHANGE

  """THREAT_ACTOR_STATUS_CHANGE"""
  THREAT_ACTOR_STATUS_CHANGE

  """BACKEND_API_CHANGE"""
  BACKEND_API_CHANGE

  """VULNERABILITY_CHANGE"""
  VULNERABILITY_CHANGE

  """SERVICE_ENTITY_CHANGE"""
  SERVICE_ENTITY_CHANGE

  """USER_LOGIN_EVENT"""
  USER_LOGIN_EVENT

  """USER_LOGOUT_EVENT"""
  USER_LOGOUT_EVENT

  """API_NAMING_RULE_CONFIGURATION_CHANGE"""
  API_NAMING_RULE_CONFIGURATION_CHANGE

  """API_SPEC_CONFIGURATION_CHANGE"""
  API_SPEC_CONFIGURATION_CHANGE

  """EXCLUDE_SPAN_RULE_CONFIGURATION_CHANGE"""
  EXCLUDE_SPAN_RULE_CONFIGURATION_CHANGE

  """RISK_SCORING_CONFIGURATION_CHANGE"""
  RISK_SCORING_CONFIGURATION_CHANGE

  """LABEL_CONFIGURATION_CHANGE"""
  LABEL_CONFIGURATION_CHANGE

  """AST_SCAN_CHANGE"""
  AST_SCAN_CHANGE

  """AST_SCAN_POLICY_CHANGE"""
  AST_SCAN_POLICY_CHANGE

  """AST_SCAN_SUITE_CHANGE"""
  AST_SCAN_SUITE_CHANGE

  """DOMAIN_ENTITY_CHANGE"""
  DOMAIN_ENTITY_CHANGE

  """BACKEND_ENTITY_CHANGE"""
  BACKEND_ENTITY_CHANGE

  """INTEGRATION_EVENT"""
  INTEGRATION_EVENT

  """THREAT_SCORING_CONFIGURATION_CHANGE"""
  THREAT_SCORING_CONFIGURATION_CHANGE

  """AGENT_TOKEN_CHANGE"""
  AGENT_TOKEN_CHANGE

  """ROLE_CHANGE"""
  ROLE_CHANGE
}

type Actor {
  attribute(key: String, expression: InputAttributeExpression): Unknown
  events(filterBy: [InputFilter], orderBy: [InputOrder], limit: Int, offset: Int): EventResultSet!
  id: String!
  tagData: [TagData]
}

type ActorResultSet {
  count: Long!
  results: [Actor]!
  total: Long!
}

enum ActorSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

type ActorSeverityStateChangeEventCondition {
  """Actor ip reputation level list"""
  actorIpReputationLevels: [IpReputationLevel]
  actorSeverities: [ActorSeverity]
}

enum ActorState {
  """NORMAL"""
  NORMAL

  """THREAT_ACTOR"""
  THREAT_ACTOR

  """RESOLVED"""
  RESOLVED

  """ALWAYS_ALLOWED"""
  ALWAYS_ALLOWED

  """ALWAYS_DENIED"""
  ALWAYS_DENIED

  """SUSPENDED"""
  SUSPENDED

  """SNOOZED"""
  SNOOZED
}

enum ActorStatusMutationType {
  """THREAT_ACTOR"""
  THREAT_ACTOR

  """NORMAL"""
  NORMAL

  """ALWAYS_DENIED"""
  ALWAYS_DENIED

  """RESOLVED"""
  RESOLVED

  """ALWAYS_ALLOWED"""
  ALWAYS_ALLOWED

  """SUSPENDED"""
  SUSPENDED

  """SNOOZED"""
  SNOOZED
}

"""Advance mode fields"""
type AdvancedMode {
  """Hook code snippet"""
  hookScript: String!
}

type AdvanceScanSuiteConfiguration {
  delayDurationBetweenRequests: Duration
  idleTimeoutDuration: Duration
  scanTimeoutDuration: Duration
  totalTestExecutionThreads: Int
}

"""Affected entity type"""
enum AffectedEntityType {
  """SONAR"""
  SONAR
}

"""Agent activity status value"""
enum AgentActivityStatusChange {
  """ACTIVE"""
  ACTIVE

  """IDLE"""
  IDLE

  """OFFLINE"""
  OFFLINE
}

"""Agent activity type value"""
enum AgentActivityType {
  """NEW_DEPLOYMENT"""
  NEW_DEPLOYMENT

  """NO_DATA_IN_ENVIRONMENT"""
  NO_DATA_IN_ENVIRONMENT

  """STATUS_CHANGE"""
  STATUS_CHANGE
}

"""Agent Entity change details"""
type AgentEntityChange {
  """Agent Entity Change Type"""
  agentEntityChangeType: AgentEntityChangeType!

  """Agent Entity Status Change"""
  agentEntityStatusChange: AgentEntityStatusChange
  agentType: String @deprecated(reason: "Deprecated")
  crudAction: CrudAction @deprecated(reason: "Deprecated")

  """Environment Identity"""
  environmentIdentity: EnvironmentIdentity

  """Agent Activity Log Identity"""
  identity: ActivityLogIdentity!

  """Agent Version"""
  version: String
}

enum AgentEntityChangeType {
  """AGENT_CREATION"""
  AGENT_CREATION

  """AGENT_STATUS_CHANGE"""
  AGENT_STATUS_CHANGE
}

enum AgentEntityStatus {
  """ACTIVE"""
  ACTIVE

  """IDLE"""
  IDLE

  """OFFLINE"""
  OFFLINE
}

type AgentEntityStatusChange {
  """Current Agent Entity Status"""
  currentStatus: AgentEntityStatus!

  """Previous Agent Entity Status"""
  previousStatus: AgentEntityStatus!
}

"""Agent Module Entity change details"""
type AgentModuleEntityChange {
  """Agent Module Entity Change Event Type"""
  agentModuleEntityChangeType: AgentModuleEntityChangeType!

  """Agent Module Status Change"""
  agentModuleEntityStatusChange: AgentModuleEntityStatusChange

  """Environment Identity"""
  environmentIdentity: EnvironmentIdentity

  """Activity Log Identity"""
  identity: ActivityLogIdentity!

  """Agent Module Version"""
  version: String
}

enum AgentModuleEntityChangeType {
  """AGENT_MODULE_CREATION"""
  AGENT_MODULE_CREATION

  """AGENT_MODULE_STATUS_CHANGE"""
  AGENT_MODULE_STATUS_CHANGE
}

enum AgentModuleEntityStatus {
  """ACTIVE"""
  ACTIVE

  """OFFLINE"""
  OFFLINE
}

type AgentModuleEntityStatusChange {
  """Current Agent Module Status"""
  currentStatus: AgentModuleEntityStatus!

  """Previous Agent Module Status"""
  previousStatus: AgentModuleEntityStatus!
}

type AgentsReportingResponse {
  any: Boolean!
  java: Boolean!
  kong: Boolean!
  sidecar: Boolean!
}

type AgentToken {
  id: String
  createdBy: String!
  creationTimestamp: DateTime!
  lastUsedTimestamp: DateTime
  name: String!
  token: String!
}

"""Agent token change details"""
type AgentTokenChange {
  affectedTokenId: String!
  affectedTokenName: String!

  """Only for update events"""
  affectedTokenOldName: String
  crudAction: CrudAction!
}

type AgentTokenMetadata {
  id: String
  createdBy: String!
  creationTimestamp: DateTime!
  lastUsedTimestamp: DateTime
  name: String!
}

type AgentTokenMetadataResultSet {
  count: Long
  total: Long
  results: [AgentTokenMetadata]!
}

type AggregatableOrder {
  aggregation: MetricAggregationType
  direction: OrderDirection
  key: String @deprecated(reason: "Deprecated")
  keyExpression: AttributeExpression
  size: Int

  """Time Units used for this orderBy argument"""
  units: TimeUnit
}

"""Akamai auth credentials"""
type AkamaiAuthCredentials {
  """Akamai access token credentials"""
  accessToken: String!

  """Akamai client secret credentials"""
  clientSecret: String!

  """Akamai client token credentials"""
  clientToken: String!
}

"""Akamai integration details"""
type AkamaiIntegrationDetails {
  """Akamai auth credentials"""
  authCredentials: AkamaiAuthCredentials!

  """Akamai security policy configuration id"""
  configurationId: String!

  """Akamai security policy id on which custom rules will be created"""
  securityPolicyId: String!
}

"""Akamai integration params"""
type AkamaiIntegrationParams {
  """Akamai integration details"""
  akamaiIntegrationDetails: AkamaiIntegrationDetails!

  """Host"""
  host: String!
}

enum AlertingSecurityConfigurationType {
  """SECURITY_CONFIGURATION_TYPE_SIGNATURE_BASED_BLOCKING"""
  SECURITY_CONFIGURATION_TYPE_SIGNATURE_BASED_BLOCKING

  """SECURITY_CONFIGURATION_TYPE_RATE_LIMITING"""
  SECURITY_CONFIGURATION_TYPE_RATE_LIMITING

  """SECURITY_CONFIGURATION_TYPE_DATA_LOSS_PREVENTION"""
  SECURITY_CONFIGURATION_TYPE_DATA_LOSS_PREVENTION

  """SECURITY_CONFIGURATION_TYPE_ENUMERATION"""
  SECURITY_CONFIGURATION_TYPE_ENUMERATION

  """SECURITY_CONFIGURATION_TYPE_IP_RANGE"""
  SECURITY_CONFIGURATION_TYPE_IP_RANGE

  """SECURITY_CONFIGURATION_TYPE_LOCATION"""
  SECURITY_CONFIGURATION_TYPE_LOCATION

  """SECURITY_CONFIGURATION_TYPE_CUSTOM_SIGNATURE"""
  SECURITY_CONFIGURATION_TYPE_CUSTOM_SIGNATURE

  """SECURITY_CONFIGURATION_TYPE_THREAT_AUTO_BLOCKING"""
  SECURITY_CONFIGURATION_TYPE_THREAT_AUTO_BLOCKING

  """SECURITY_CONFIGURATION_TYPE_DETECTION"""
  SECURITY_CONFIGURATION_TYPE_DETECTION

  """SECURITY_CONFIGURATION_TYPE_EXCLUSIONS"""
  SECURITY_CONFIGURATION_TYPE_EXCLUSIONS

  """SECURITY_CONFIGURATION_TYPE_MALICIOUS_SOURCES_RULE"""
  SECURITY_CONFIGURATION_TYPE_MALICIOUS_SOURCES_RULE

  """SECURITY_CONFIGURATION_TYPE_MALICIOUS_SOURCES_IP_RANGE_RULE"""
  SECURITY_CONFIGURATION_TYPE_MALICIOUS_SOURCES_IP_RANGE_RULE

  """SECURITY_CONFIGURATION_TYPE_MALICIOUS_SOURCES_REGION_RULE"""
  SECURITY_CONFIGURATION_TYPE_MALICIOUS_SOURCES_REGION_RULE

  """SECURITY_CONFIGURATION_TYPE_MALICIOUS_SOURCES_EMAIL_DOMAIN_RULE"""
  SECURITY_CONFIGURATION_TYPE_MALICIOUS_SOURCES_EMAIL_DOMAIN_RULE

  """SECURITY_CONFIGURATION_TYPE_MALICIOUS_SOURCES_IP_TYPE_RULE"""
  SECURITY_CONFIGURATION_TYPE_MALICIOUS_SOURCES_IP_TYPE_RULE
}

"""Analytics query"""
type AnalyticsQuery {
  """Time range to be used for this analytics query"""
  between: TimeRange!

  """Filters to be used for this analytics query"""
  filterBy: [Filter]

  """Group by clause to be used for this analytics query"""
  groupBy: GroupByArgument

  """Interval to be used for this analytics query"""
  interval: IntervalArgument

  """Limit to be used for this analytics query"""
  limit: Int!

  """Name provided for this analytics query"""
  name: String!

  """Offset to be used for this analytics query"""
  offset: Int

  """Order by clause to be used for this analytics query"""
  orderBy: [AggregatableOrder]

  """Scope to be used for this analytics query"""
  scope: String!

  """The list of selections for this analytics query"""
  selections: [AnalyticsQuerySelectionArgument]!
}

type AnalyticsQueryBatchDetail {
  """The author of this batch of analytics queries"""
  author: String!

  """The batch id associated with the analytics request"""
  batchId: String!

  """The creation timestamp of this batch"""
  creationTimestamp: DateTime!

  """Query batch execution mode type"""
  executionMode: QueryBatchExecutionMode!

  """Timestamp after which query expires"""
  expirationTimestamp: DateTime!

  """Metadata associated with the analytics request batch"""
  metadata: String!

  """
  Details of all the named analytics queries submitted as part from this batch
  """
  queryDetails: [AnalyticsQueryDetail]!

  """Current state of this batch"""
  state: AnalyticsQueryBatchState!
}

type AnalyticsQueryBatchDetailWithResults {
  """The result of a query with the provided name and scope in this batch"""
  queryResult(name: String!, scope: String!, offset: Int, limit: Int): AnalyticsQueryResultSet

  """The author of this batch of analytics queries"""
  author: String!

  """The batch id associated with the analytics request"""
  batchId: String!

  """The creation timestamp of this batch"""
  creationTimestamp: DateTime!

  """Query batch execution mode type"""
  executionMode: QueryBatchExecutionMode!

  """Timestamp after which query expires"""
  expirationTimestamp: DateTime!

  """Metadata associated with the analytics request batch"""
  metadata: String!

  """
  Details of all the named analytics queries submitted as part from this batch
  """
  queryDetails: [AnalyticsQueryDetail]!

  """Current state of this batch"""
  state: AnalyticsQueryBatchState!
}

type AnalyticsQueryBatchesDetail {
  count: Long
  total: Long

  """The list of batch details of submitted analytics requests"""
  results: [AnalyticsQueryBatchDetail]!
}

enum AnalyticsQueryBatchState {
  """IN_PROGRESS"""
  IN_PROGRESS

  """SUCCEEDED"""
  SUCCEEDED

  """FAILED"""
  FAILED
}

type AnalyticsQueryDetail {
  """The named analytics query submitted as part from this batch"""
  query: AnalyticsQuery!

  """The current state of the named query in this batch"""
  state: AnalyticsQueryState!
}

type AnalyticsQueryResultRow {
  """Accesses a result value matching the provided criteria"""
  selection(expression: InputAttributeExpression, aggregation: MetricAggregationType, size: Int, units: TimeUnit): Selection

  """The interval start time for row in the result"""
  intervalStart: DateTime
}

type AnalyticsQueryResultSet {
  count: Long
  total: Long

  """The set of results for an analytics query in the batch"""
  results: [AnalyticsQueryResultRow]!
}

"""Selection"""
type AnalyticsQuerySelectionArgument {
  """Metric aggregation type argument to be used for this analytics query"""
  aggregation: MetricAggregationType

  """Attribute selection argument for this analytics query"""
  expression: AttributeExpression!

  """Size argument for this analytics query"""
  size: Int

  """Units argument be used for this analytics query"""
  units: TimeUnit
}

enum AnalyticsQueryState {
  """IN_PROGRESS"""
  IN_PROGRESS

  """SUCCEEDED"""
  SUCCEEDED

  """FAILED"""
  FAILED
}

type AncestorTestResultDetails {
  testId: String!
}

type AnomalyActorExclusionInfo {
  actorExclusionType: AnomalyActorExclusionType!
  actorId: String
}

enum AnomalyActorExclusionType {
  """ALL"""
  ALL

  """ACTOR"""
  ACTOR
}

"""API Param scope for anomaly configs"""
type AnomalyApiParamScope {
  """API Scope"""
  apiScope: AnomalyApiScope @deprecated(reason: "Deprecated")

  """Param Info"""
  paramInfo: AnomalyParamInfo

  """Parameter Name"""
  paramName: String @deprecated(reason: "Deprecated")

  """Param Info Scope"""
  scope: AnomalyParamInfoScope
}

"""API scope for anomaly configs"""
type AnomalyApiScope {
  """API Identifier"""
  id: String!

  """Service Scope"""
  serviceScope: AnomalyServiceScope!
}

"""Backend API scope for anomaly configs"""
type AnomalyBackendApiScope {
  """Backend Scope"""
  backendScope: AnomalyBackendScope!

  """Backend API Identifier"""
  id: String!
}

"""Backend scope for anomaly configs"""
type AnomalyBackendScope {
  """Environment Scope"""
  environmentScope: AnomalyEnvironmentScope

  """Backend Identifier"""
  id: String!
}

type AnomalyCategoryConfig {
  eventScoreCategory: AnomalyEventScoreCategory
  securityEventCategory: AnomalySecurityEventCategory
}

"""Confidence level of anomaly event"""
enum AnomalyConfidenceLevel {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH
}

"""Abuse Velocity"""
enum AnomalyConfigAbuseVelocity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH
}

type AnomalyConfigDescriptor {
  configType: String!
  configTypeKey: String!
  subConfigTypes: [AnomalySubConfigTypeDescriptor]!
}

"""IpType"""
enum AnomalyConfigIpType {
  """IP_TYPE_VPN"""
  IP_TYPE_VPN

  """IP_TYPE_PUBLIC_PROXY"""
  IP_TYPE_PUBLIC_PROXY

  """IP_TYPE_HOSTING_PROVIDER"""
  IP_TYPE_HOSTING_PROVIDER

  """IP_TYPE_TOR"""
  IP_TYPE_TOR

  """IP_TYPE_BOT"""
  IP_TYPE_BOT
}

type AnomalyConfigKeyDescriptor {
  configKey: String!
  configValueType: String!
}

type AnomalyConfigStatus {
  disabled: Boolean!
  internal: Boolean!
}

type AnomalyConfigStatusChange {
  disabled: Boolean
  internal: Boolean
}

type AnomalyDetectionConfig {
  """AnomalyDetectionConfig for Account Takeover Anomaly Detection"""
  accountTakeoverAnomalyDetectionConfig: AccountTakeoverAnomalyDetectionConfig

  """AnomalyDetectionConfig for API Definition Metadata"""
  apiDefinitionMetadataAnomalyDetectionConfig: ApiDefinitionMetadataAnomalyDetectionConfig

  """AnomalyDetectionConfig for API State Based detections"""
  apiStateBasedAnomalyDetectionConfig: ApiStateBasedAnomalyDetectionConfig

  """AnomalyDetectionConfig for Blocking Metadata"""
  blockingMetadataAnomalyDetectionConfig: BlockingMetadataAnomalyDetectionConfig

  """Anomaly Config Category"""
  category: AnomalyCategoryConfig

  """Type for AnomalyDetectionConfig"""
  configType: AnomalyDetectionConfigType!

  """AnomalyDetectionConfig for Credential Stuffing Anomaly Detection"""
  credentialStuffingAnomalyDetectionConfig: CredentialStuffingAnomalyDetectionConfig @deprecated(reason: "Deprecated")

  """AnomalyDetectionConfig for Custom Rules"""
  customRulesAnomalyDetectionConfig: CustomRulesAnomalyDetectionConfig

  """AnomalyDetectionConfig for modsecurity"""
  modSecurityAnomalyDetectionConfig: ModsecurityAnomalyDetectionConfig

  """AnomalyDetectionConfig for Session Definition Metadata"""
  sessionDefinitionMetadataAnomalyDetectionConfig: SessionDefinitionMetadataAnomalyDetectionConfig

  """Anomaly Config status"""
  status: AnomalyConfigStatusChange

  """AnomalyDetectionConfig for Volumetric Anomaly Detection"""
  volumetricAnomalyDetectionConfig: VolumetricAnomalyDetectionConfig
}

type AnomalyDetectionConfigKeyValuePair {
  configKey: String!
  configValue: AnomalyDetectionConfigValue!
}

enum AnomalyDetectionConfigType {
  """MODSECURITY"""
  MODSECURITY

  """API_DEFINITION_METADATA"""
  API_DEFINITION_METADATA

  """API_STATE_BASED"""
  API_STATE_BASED

  """CREDENTIAL_STUFFING"""
  CREDENTIAL_STUFFING

  """ACCOUNT_TAKEOVER"""
  ACCOUNT_TAKEOVER

  """SESSION_DEFINITION_METADATA"""
  SESSION_DEFINITION_METADATA

  """BLOCKING_METADATA"""
  BLOCKING_METADATA

  """CUSTOM_RULES"""
  CUSTOM_RULES

  """VOLUMETRIC"""
  VOLUMETRIC
}

type AnomalyDetectionConfigValue {
  """API Call Spike tuning config list"""
  apiCallSpikeTuningConfigList: [ApiCallSpikeTuningConfig]

  """Credential Stuffing tuning config list"""
  credentialStuffingTuningConfigList: [CredentialStuffingTuningConfig]

  """Anomaly Config for Email Domain"""
  emailDomainAnomalyConfig: EmailDomainAnomalyConfig

  """Anomaly Config for Ip Type"""
  ipTypeAnomalyConfig: IpTypeAnomalyConfig

  """Anomaly Config for Land Speed Violation"""
  landSpeedViolationConfig: LandSpeedViolationConfig

  """Multi valued string param rule list"""
  multiValuedStringParamRuleList: [MultiValuedStringParamRule]

  """Param value type excluded by modsec"""
  paramValueTypeModsecExcludes: [ParamValueTypeModsecExclude]

  """Config for predecessor successor API sequence"""
  predecessorSuccessorApiSequenceConfig: PredecessorSuccessorApiSequenceConfig

  """Anomaly Config for Session Expiry"""
  sessionExpiryConfig: SessionExpiryConfig

  """Anomaly Detection Config value as string list"""
  stringList: [String]

  """Sub rule config list"""
  subRuleConfigList: [AnomalyDetectionSubRuleConfig]

  """User ID data config list"""
  userIdDataConfigList: [DetectionUserIdDataConfig]

  """Anomaly Detection Config string value"""
  value: String
}

type AnomalyDetectionRuleConfigsResultSet {
  count: Long!
  total: Long!
  results: [AnomalyRuleConfig]!
}

type AnomalyDetectionSubRuleConfig {
  blockingEnabled: Boolean
  category: AnomalyCategoryConfig
  status: AnomalyConfigStatusChange
  subRuleId: String!
}

enum AnomalyDetectionType {
  """API_PROTECTION"""
  API_PROTECTION

  """WAF"""
  WAF
}

"""Environment scope for anomaly configs"""
type AnomalyEnvironmentScope {
  """Environment Identifier"""
  id: String!
}

enum AnomalyEventCategory {
  """SECURITY"""
  SECURITY

  """BLOCKED"""
  BLOCKED
}

type AnomalyEventExclusionInfo {
  eventExclusionType: AnomalyEventExclusionType!
  eventFamily: AnomalyEventFamily
  eventTypeId: String
  eventTypeName: String
}

enum AnomalyEventExclusionType {
  """ALL"""
  ALL

  """EVENT_TYPE"""
  EVENT_TYPE

  """EVENT_SUBTYPE"""
  EVENT_SUBTYPE
}

enum AnomalyEventFamily {
  """UNKNOWN"""
  UNKNOWN

  """API_DEF"""
  API_DEF

  """MODSEC"""
  MODSEC

  """SESSION"""
  SESSION

  """CRED_STUFF"""
  CRED_STUFF

  """VOLUMETRIC"""
  VOLUMETRIC

  """RATE_LIMITING"""
  RATE_LIMITING

  """RATE_LIMIT"""
  RATE_LIMIT

  """CUSTOM_SIGNATURE"""
  CUSTOM_SIGNATURE

  """MALICIOUS_SOURCES"""
  MALICIOUS_SOURCES
}

enum AnomalyEventScoreCategory {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

type AnomalyExclusionConfigOptions {
  eventSubTypeApplicable: Boolean! @deprecated(reason: "Deprecated")
  exclusionApplicable: Boolean!
  paramScopeApplicable: Boolean! @deprecated(reason: "Deprecated")
}

type AnomalyExclusionRuleConfig {
  configStatus: AnomalyConfigStatus!
  entity(type: String!): Entity
  id: String!
  ruleData: AnomalyExclusionRuleData!
}

"""Anomaly Exclusion Rule Configuration change details"""
type AnomalyExclusionRuleConfigurationChange {
  configStatusChangeToggleAction: ToggleAction
  crudAction: CrudAction!
  eventTypeIdentity: ActivityLogIdentity!
  identity: ActivityLogIdentity!
  oldEventTypeIdentity: ActivityLogIdentity
  oldIdentity: ActivityLogIdentity
  threatActorEntityId: String
  threatActorId: String
}

type AnomalyExclusionRuleData {
  actorExclusionInfo: AnomalyActorExclusionInfo!
  anomalyScope: AnomalyScope!
  description: String!
  eventExclusionInfo: AnomalyEventExclusionInfo!
  name: String!
  sourceScope: AnomalyScope
}

type AnomalyExclusionRuleResultSet {
  count: Long!
  total: Long!
  results: [AnomalyExclusionRuleConfig]!
}

type AnomalyParamInfo {
  paramInfoType: AnomalyParamInfoType!
  paramName: String
  paramRegex: String
}

type AnomalyParamInfoScope {
  apiScope: AnomalyApiScope
  scopeType: AnomalyScopeType!
  serviceScope: AnomalyServiceScope
}

enum AnomalyParamInfoType {
  """PARAM_NAME"""
  PARAM_NAME

  """PARAM_REGEX"""
  PARAM_REGEX
}

enum AnomalyProtectionType {
  """Recommended for Blocking"""
  RECOMMENDED

  """Cautious while Blocking"""
  CAUTIOUS

  """Aggressive Alerting"""
  AGGRESSIVE

  """Standard Protection Type"""
  STANDARD

  """Api Protection Type"""
  API_PROTECTION

  """Anomaly"""
  ANOMALY
}

type AnomalyRuleConfig {
  """Anomaly detection type"""
  anomalyDetectionType: AnomalyDetectionType!

  """Severity of the anomaly sub rule config"""
  anomalyRuleSeverity: AnomalyRuleSeverity

  """Config status of the anomaly sub rule"""
  configStatus: AnomalyConfigStatus!

  """
  Anomaly Detection Config type like MODSEC, API_DEF, API_STATE_BASED, etc
  """
  configType: AnomalyDetectionConfigType!

  """
  Associated Event Details like description, mitigation, etc for the anomaly sub rule
  """
  eventDetails: AnomalyRuleEventDetails

  """Associated event family like MODSEC, API_DEF, etc for the anomaly rule"""
  eventFamily: AnomalyEventFamily! @deprecated(reason: "Deprecated")

  """Associated Event Labels for the anomaly sub rule"""
  eventLabels: [AnomalyRuleEventLabel]!

  """Boolean for whether the anomaly rule is hidden from customers"""
  hidden: Boolean!

  """List of scopes whose config is overriding this scope config"""
  overriddenParentScopes: [AnomalyScope]!

  """Scopes details whose config is overriding this scope config"""
  overriddenParentScopesDetails: OverriddenScopesDetails @deprecated(reason: "Deprecated")

  """List of scopes whose config is getting overridden by this scope config"""
  overridingChildrenScopes: [AnomalyScope]!

  """Scopes details whose config is getting overridden by this scope config"""
  overridingChildrenScopesDetails: OverriddenScopesDetails @deprecated(reason: "Deprecated")

  """Anomaly Rule category"""
  ruleCategory: String!

  """Anomaly Rule ID"""
  ruleId: String!

  """Anomaly Rule name"""
  ruleName: String!

  """Anomaly Sub Rule Configs"""
  subRuleConfigs: [AnomalySubRuleConfig]!
}

type AnomalyRuleConfigUpdate {
  configStatus: AnomalyConfigStatusChange
  configType: AnomalyDetectionConfigType!
  ruleId: String!
  subRuleConfigs: [AnomalySubRuleConfigUpdate]
}

type AnomalyRuleEventDetails {
  """Event Description"""
  description: String!

  """Event Impact"""
  impact: String!

  """Event Mitigation"""
  mitigation: String!

  """Event References"""
  references: String!
}

type AnomalyRuleEventLabel {
  labelKey: String!
  labelValue: String!
}

enum AnomalyRuleSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

"""Scope for anomaly configs"""
type AnomalyScope {
  """API Param Scope populated when scopeType = AnomalyScopeType.API_PARAM"""
  apiParamScope: AnomalyApiParamScope @deprecated(reason: "Deprecated")

  """API Scope populated when scopeType = AnomalyScopeType.API"""
  apiScope: AnomalyApiScope

  """
  Backend API Scope populated when scopeType = AnomalyScopeType.BACKEND_API
  """
  backendApiScope: AnomalyBackendApiScope

  """Backend Scope populated when scopeType = AnomalyScopeType.BACKEND"""
  backendScope: AnomalyBackendScope

  """
  Environment Scope populated when scopeType = AnomalyScopeType.ENVIRONMENT
  """
  environmentScope: AnomalyEnvironmentScope

  """Scope Type"""
  scopeType: AnomalyScopeType!

  """Service Scope populated when scopeType = AnomalyScopeType.SERVICE"""
  serviceScope: AnomalyServiceScope
}

"""Scope type for anomaly configs"""
enum AnomalyScopeType {
  """CUSTOMER"""
  CUSTOMER

  """ENVIRONMENT"""
  ENVIRONMENT

  """SERVICE"""
  SERVICE

  """API"""
  API

  """BACKEND"""
  BACKEND

  """BACKEND_API"""
  BACKEND_API

  """PARAM"""
  PARAM

  """DEFAULT"""
  DEFAULT
}

type AnomalyScoreContributions {
  anomalyScore: Int!
  defaultAnomalyScore: Int!
}

"""Anomaly Threat Score Contribution update details"""
type AnomalyScoreContributionUpdate {
  anomalyScoreUpdate: LongChange!
}

type AnomalyScoringConfig {
  """Confidence scoring config"""
  confidenceScoringConfig: ConfidenceScoringConfig! @deprecated(reason: "Deprecated")

  """Impact scoring config"""
  impactScoringConfig: ImpactScoringConfig! @deprecated(reason: "Deprecated")
}

enum AnomalySecurityEventCategory {
  """LATENT"""
  LATENT

  """MALICIOUS"""
  MALICIOUS

  """TAGGED"""
  TAGGED
}

"""Service scope for anomaly configs"""
type AnomalyServiceScope {
  """Environment Scope"""
  environmentScope: AnomalyEnvironmentScope

  """Service Identifier"""
  id: String!
}

type AnomalySubConfigTypeDescriptor {
  keyValuePairs: [AnomalyConfigKeyDescriptor]!
  name: String!
}

enum AnomalySubRuleAction {
  """IGNORE"""
  IGNORE

  """DISABLE"""
  DISABLE

  """MONITOR"""
  MONITOR

  """BLOCK"""
  BLOCK
}

type AnomalySubRuleConfig {
  """Anomaly protection type like aggressive, cautious, etc"""
  anomalyProtectionType: AnomalyProtectionType!

  """Severity of the anomaly sub rule config"""
  anomalyRuleSeverity: AnomalyRuleSeverity

  """Action for the anomaly sub rule"""
  anomalySubRuleAction: AnomalySubRuleAction!

  """Boolean for whether blocking is enabled for the anomaly sub rule"""
  blockingEnabled: Boolean!

  """Config status of the anomaly sub rule"""
  configStatus: AnomalyConfigStatus!

  """
  Associated Event Details like description, mitigation, etc for the anomaly sub rule
  """
  eventDetails: AnomalyRuleEventDetails

  """Associated Event Labels for the anomaly sub rule"""
  eventLabels: [AnomalyRuleEventLabel]!

  """Boolean for whether the anomaly rule is hidden from customers"""
  hidden: Boolean!

  """List of scopes whose config is overriding this scope config"""
  overriddenParentScopes: [AnomalyScope]!

  """Scopes details whose config is overriding this scope config"""
  overriddenParentScopesDetails: OverriddenScopesDetails @deprecated(reason: "Deprecated")

  """List of scopes whose config is getting overridden by this scope config"""
  overridingChildrenScopes: [AnomalyScope]!

  """Scopes details whose config is getting overridden by this scope config"""
  overridingChildrenScopesDetails: OverriddenScopesDetails @deprecated(reason: "Deprecated")

  """Anomaly Sub Rule ID"""
  subRuleId: String!

  """Anomaly Sub Rule name"""
  subRuleName: String!

  """Anomaly Sub Rule Types like BLOCKED, SAFE, etc"""
  subRuleTypes: [AnomalySubRuleType]!
}

type AnomalySubRuleConfigUpdate {
  """Action for the anomaly sub rule"""
  anomalySubRuleAction: AnomalySubRuleAction
  blockingEnabled: Boolean
  configStatus: AnomalyConfigStatusChange
  subRuleId: String!
}

enum AnomalySubRuleType {
  """REGULAR"""
  REGULAR

  """SAFE"""
  SAFE

  """BLOCK"""
  BLOCK
}

type ApiAccessKey {
  """Access key"""
  apiAuthKey: String!

  """Info of where to place apikey in request"""
  requestTokenInfo: RequestTokenInfo
}

enum ApiAccessType {
  """INTERNAL"""
  INTERNAL

  """EXTERNAL"""
  EXTERNAL
}

type ApiAttributeOverrides {
  apiId: String!
  attributeOverrides: [AttributeOverride]!
}

type ApiAttributeOverridesResultSet {
  count: Long!
  total: Long!
  results: [ApiAttributeOverrides]!
}

type ApiCallSpikeTrainingConfig {
  """
  It specifies that the PX value (percentile value like P95) for the span count
  within the training data samples should be greater than 0. For example, if the
  value = 0.25, that means the P25(training data samples) > 0 or we should have
  at least 75% legitimate training data points.
  """
  endpointSpanCountPercentileThreshold: Float!

  """
  It specifies that we should have seen these many spans for the endpoint within the training window at least once
  """
  endpointSpanCountThreshold: Long!

  """
  It specifies what the maximum permissible time duration between the first and
  last time sorted data points should be as a fraction of the training data window.
  """
  timeFractionTrainingWindowThreshold: Float!

  """
  The training config would be applied on the endpoints identified by this config
  """
  trainingScopeConfig: TrainingScopeConfig!
}

type ApiCallSpikeTuningConfig {
  """
  The detection config would be applied on the endpoints identified by this config
  """
  detectionScopeConfig: DetectionScopeConfig!

  """
  Minimum span count for the API to be present during the detection run for the
  API data to be qualified to be run through the detector
  """
  endpointSpanCountDetectionThreshold: Long!
}

type ApiCategoryCard {
  numGraphqlApis: Long!
  numGrpcApis: Long!
  numRestApis: Long!
  totalApis: Long!
}

type ApiChange {
  reason: ApiChangeReason!
}

"""API Change Label change details"""
type ApiChangeLabelChange {
  changeLabelTimestamp: Long!
  currentApiChangeLabel: ActivityLogApiChangeLabel!
  identity: ActivityLogIdentity!
  oldApiChangeLabel: ActivityLogApiChangeLabel
}

enum ApiChangeReason {
  """PARAMS_ADDED"""
  PARAMS_ADDED
}

type ApiChangeResultSet {
  count: Long!
  results: [ApiChange]!
  total: Long!
}

type ApiDataTypeChange {
  dataTypeChanges: [dataTypeChange]!
}

"""API default config type"""
enum ApiDefaultConfigsType {
  """ONLY_API_DEF_ENABLED"""
  ONLY_API_DEF_ENABLED
}

type ApiDefinition {
  """The API definition string"""
  definition: String!

  """The API definition format"""
  format: ApiDefinitionFormat!

  """The pagination information"""
  paginationInfo: ApiDefinitionPaginationInfo!
}

"""API Definition change details"""
type ApiDefinitionChange {
  apiChangeResultSet: ApiChangeResultSet!
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

enum ApiDefinitionFormat {
  """OPEN_API_JSON"""
  OPEN_API_JSON

  """OPEN_API_YAML"""
  OPEN_API_YAML

  """WSDL"""
  WSDL
}

type ApiDefinitionJob {
  createdBy: String!
  createdTimestamp: DateTime!
  domainId: String
  downloadUrl: String!
  environment: String
  executionMode: JobExecutionMode
  format: Format!
  id: String!

  """
  The API definition generated will contain the API endpoints having any (one or more) of these label names
  """
  labels: [String]
  learningEndpointStrategy: LearningEndpointStrategy
  messages: [String]
  name: String

  """The id of the service whose API definition is to be downloaded"""
  serviceId: String
  source: JobSource
  status: JobStatus!
  statusUpdatedTimestamp: DateTime!
}

type ApiDefinitionLinePaginationInfo {
  """The number of lines currently included in this response"""
  includedLinesCount: Long!

  """The total number of lines in this API definition"""
  totalLinesCount: Long!
}

type ApiDefinitionMetadataAnomalyDetectionConfig {
  keyValuePairs: [AnomalyDetectionConfigKeyValuePair]
  name: ApiDefinitionMetadataAnomalyDetectionConfigName!
  ruleId: String
}

enum ApiDefinitionMetadataAnomalyDetectionConfigName {
  """MISSING_PARAM_ANOMALY_CONFIG"""
  MISSING_PARAM_ANOMALY_CONFIG

  """ENUMERATIONS_ANOMALY_CONFIG"""
  ENUMERATIONS_ANOMALY_CONFIG

  """TYPE_ANOMALY_CONFIG"""
  TYPE_ANOMALY_CONFIG

  """INTEGER_ANOMALY_CONFIG"""
  INTEGER_ANOMALY_CONFIG

  """DEVICE_ANOMALY_CONFIG"""
  DEVICE_ANOMALY_CONFIG

  """HTTP_STATUS_ANOMALY_CONFIG"""
  HTTP_STATUS_ANOMALY_CONFIG

  """CONTENT_TYPE_ANOMALY_CONFIG"""
  CONTENT_TYPE_ANOMALY_CONFIG

  """CONTENT_SIZE_ANOMALY_CONFIG"""
  CONTENT_SIZE_ANOMALY_CONFIG

  """PAYLOAD_ANOMALY_CONFIG"""
  PAYLOAD_ANOMALY_CONFIG

  """SSRF_ANOMALY_CONFIG"""
  SSRF_ANOMALY_CONFIG

  """UNKNOWN_PARAM_ANOMALY_CONFIG"""
  UNKNOWN_PARAM_ANOMALY_CONFIG

  """BFLA_ANOMALY_CONFIG"""
  BFLA_ANOMALY_CONFIG

  """JWT_ANOMALY_CONFIG"""
  JWT_ANOMALY_CONFIG

  """SPECIAL_CHARACTER_ANOMALY_CONFIG"""
  SPECIAL_CHARACTER_ANOMALY_CONFIG

  """CONTENT_EXPLOSION_ANOMALY_CONFIG"""
  CONTENT_EXPLOSION_ANOMALY_CONFIG
}

type ApiDefinitionPaginationInfo {
  """The pagination information for the paginationType 'LINE'"""
  linePaginationInfo: ApiDefinitionLinePaginationInfo

  """The type of pagination used"""
  paginationType: ApiDefinitionPaginationUnit!
}

enum ApiDefinitionPaginationUnit {
  """NONE"""
  NONE

  """LINE"""
  LINE
}

type ApiDiscoveryConfig {
  """Key-Value Pairs in API Discovery Config"""
  keyValuePairs: [TrainingConfigKeyValuePair]

  """API Discovery Config Name"""
  name: ApiDiscoveryConfigName!
}

enum ApiDiscoveryConfigName {
  """STATIC_API_DISCOVERY_CONFIG"""
  STATIC_API_DISCOVERY_CONFIG

  """STATIC_API_DISCOVERY_ACTION"""
  STATIC_API_DISCOVERY_ACTION
}

type ApiEndpoint {
  id: String!
  name: String!
}

"""API Entity change details"""
type ApiEntityChange {
  crudAction: CrudAction!
  currentApiState: ApiState!
  identity: ActivityLogIdentity!
  oldApiState: ApiState
}

type ApiEnvironmentScope {
  """The environment id"""
  environmentId: String
}

type ApiExternalOverride {
  isExternal: Boolean!
}

"""Factor contributing to a score"""
type ApiFraudContributingFactor {
  """A sentence explaining how this factor contributed to the overall score"""
  explanation: String!
}

"""Event type condition for API Fraud Incident"""
type ApiFraudIncidentChangeEventCondition {
  changeTypes: [ApiFraudIncidentChangeType]!
  confidenceLevels: [ApiFraudIncidentConfidenceLevel]!
  severities: [ApiFraudIncidentSeverity]!
}

"""Indicates how the API Fraud Incident changed"""
enum ApiFraudIncidentChangeType {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE
}

"""Confidence level of the API Fraud Incident"""
enum ApiFraudIncidentConfidenceLevel {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH
}

"""Severity of the API Fraud Incident"""
enum ApiFraudIncidentSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH
}

"""Global config related to api"""
type ApiGlobalConfig {
  """API default config type"""
  defaultConfigsType: ApiDefaultConfigsType

  """Boolean denoting status for api global config"""
  disabled: Boolean

  """Boolean denoting if detection is enabled for exit spans or not"""
  enabledForExitSpans: Boolean

  """List of scopes whose config is overriding this scope config"""
  overriddenParentScopes: [AnomalyScope]

  """List of scopes whose config is getting overridden by this scope config"""
  overridingChildrenScopes: [AnomalyScope]
}

type ApiInsight {
  allImpactElements: [String]
  allLikelihoodElements: [String]

  """The API definitions of this API in requested formats"""
  apiDefinition(apiDefinition: InputApiDefinitionInput!): [ApiDefinition]
  apiRiskData: ApiRiskData

  """Evidences for Attributes"""
  attributeEvidences: AttributeEvidenceResultSet
  changeLabel: String
  changeLabelTimestamp: DateTime
  id: String!
  impactElements: [String]
  isLearnt: Boolean
  likelihoodElements: [String]
  numExecutions: Long
  numLearntParams: Long
  numPathParams: Long
  numQueryParams: Long
  numRequestBodyParams: Long
  numRequestHeaders: Long
  numRequiredRequestCookies: Long
  numRequiredResponseCookies: Long
  numResponseBodyParams: Long
  numResponseHeaders: Long
  numSensitiveLearntParams: Long
  numUniqueIps: Long
  numUniqueUsers: Long
  openApiSpec: String
  openApiSpecYaml: String
  requestSchema: String
  requestSensitiveParams: SensitiveParamResultSet
  responseSchema: String
  responseSensitiveParams: SensitiveParamResultSet
  riskData: String
  riskScore: Int

  """The scoped API risk data"""
  scopedApiRiskData: ScopedApiRiskData
  scoreCategory: String
  statusCodes: ValueTypeDistributionResultSet
  summary: String
  totalParams: Long
  totalRequestCookies: Long
  totalResponseCookies: Long
  userRoles: ValueTypeDistributionResultSet
}

enum ApiInspectorAggregationType {
  """AVG"""
  AVG

  """SUM"""
  SUM

  """MIN"""
  MIN

  """MAX"""
  MAX

  """DISTINCT"""
  DISTINCT

  """COUNT"""
  COUNT

  """DISTINCTCOUNT"""
  DISTINCTCOUNT
}

enum ApiInspectorField {
  """API_INSPECTOR_SPEC_ID"""
  API_INSPECTOR_SPEC_ID

  """API_INSPECTOR_PATH"""
  API_INSPECTOR_PATH

  """API_INSPECTOR_RULE_ID"""
  API_INSPECTOR_RULE_ID

  """API_INSPECTOR_RULE_NAME"""
  API_INSPECTOR_RULE_NAME

  """API_INSPECTOR_RULE_CATEGORY"""
  API_INSPECTOR_RULE_CATEGORY

  """API_INSPECTOR_RULE_DESCRIPTION"""
  API_INSPECTOR_RULE_DESCRIPTION

  """API_INSPECTOR_RULE_SEVERITY"""
  API_INSPECTOR_RULE_SEVERITY

  """API_INSPECTOR_RULE_TEST_STATUS"""
  API_INSPECTOR_RULE_TEST_STATUS

  """API_INSPECTOR_RULE_TEST_SCORE"""
  API_INSPECTOR_RULE_TEST_SCORE

  """API_INSPECTOR_RULE_MAX_SCORE"""
  API_INSPECTOR_RULE_MAX_SCORE
}

enum ApiInspectorJobField {
  """JOB_FIELD_JOB_ID"""
  JOB_FIELD_JOB_ID

  """JOB_FIELD_JOB_NAME"""
  JOB_FIELD_JOB_NAME

  """JOB_FIELD_CREATOR"""
  JOB_FIELD_CREATOR

  """JOB_FIELD_CREATED_TIMESTAMP_MILLIS"""
  JOB_FIELD_CREATED_TIMESTAMP_MILLIS

  """JOB_FIELD_STATUS"""
  JOB_FIELD_STATUS

  """JOB_FIELD_UPDATED_TIMESTAMP_MILLIS"""
  JOB_FIELD_UPDATED_TIMESTAMP_MILLIS

  """JOB_FIELD_EXECUTION_MODE"""
  JOB_FIELD_EXECUTION_MODE

  """JOB_FIELD_SOURCE"""
  JOB_FIELD_SOURCE

  """JOB_FIELD_INSTANCE_TYPE"""
  JOB_FIELD_INSTANCE_TYPE

  """API_INSPECTOR_JOB_RESULT_FIELD_SPEC_ID"""
  API_INSPECTOR_JOB_RESULT_FIELD_SPEC_ID
}

type ApiInspectorJobQueryResult {
  selection(key: ApiInspectorJobField!): ApiInspectorJobValue
}

type ApiInspectorJobQueryResultSet {
  count: Long!
  results: [ApiInspectorJobQueryResult]!
  total: Long!
}

type ApiInspectorJobValue {
  type: AttributeType!
  value: Unknown
}

type ApiInspectorResult {
  aggregation(key: ApiInspectorField!, aggregation: ApiInspectorAggregationType!): ApiInspectorValue
  selection(key: ApiInspectorField!): ApiInspectorValue
}

type ApiInspectorResultSet {
  count: Long!
  results: [ApiInspectorResult]!
  total: Long!
}

type ApiInspectorRuleInformation {
  information: String!
}

type ApiInspectorValue {
  type: AttributeType!
  value: Unknown
}

"""API Intelligence change details"""
type ApiIntelligenceChange {
  apiDataTypeChange: ApiDataTypeChange
  apiStateChange: ApiStateChange
  changeType: ApiIntelligenceChangeType
  identity: ActivityLogIdentity!
  riskCategoryChange: RiskCategoryChange
  serviceIdentity: ActivityLogIdentity
}

enum ApiIntelligenceChangeType {
  """RISK_CATEGORY_CHANGE"""
  RISK_CATEGORY_CHANGE

  """API_DATA_TYPE_CHANGE"""
  API_DATA_TYPE_CHANGE

  """API_STATE_UPDATE"""
  API_STATE_UPDATE
}

type ApiKey {
  """ID"""
  id: String!

  """Raw API key value"""
  rawValue: String!
}

type ApiKeysResultSet {
  count: Long!
  total: Long!
  results: [ApiKey]!
}

type ApiNamingRule {
  """Api naming rule config"""
  apiNamingRuleConfig: ApiNamingRuleConfig!

  """Creation time of api naming rule"""
  creationTime: DateTime!

  """Says if api naming rule is disabled"""
  disabled: Boolean!
  id: String!

  """Last updated time of api naming rule"""
  lastUpdatedTime: DateTime!

  """Name of the api naming rule"""
  name: String!

  """Filter to match the spans to apply the api naming rule"""
  spanFilter: TraceableSpanProcessingRuleFilter!
}

"""
Api naming rule config. There may be multiple configs, but only the one
corresponding to the api naming rule config type would be non null
"""
type ApiNamingRuleConfig {
  """Specifies the api naming rule config type"""
  apiNamingRuleConfigType: ApiNamingRuleConfigType!

  """Segment matching based api naming rule config"""
  segmentMatchingBasedRuleConfig: SegmentMatchingBasedRuleConfig
}

"""Event type condition for Api naming Rule"""
type ApiNamingRuleConfigChangeCondition {
  """Represents operation on Api Naming Rule i.e Create/Update/Delete """
  apiNamingRuleConfigChangeTypes: [ApiNamingRuleConfigChangeType]!
}

"""Represents operation of config """
enum ApiNamingRuleConfigChangeType {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE

  """DELETE"""
  DELETE
}

"""Api naming rule config types"""
enum ApiNamingRuleConfigType {
  """Specifies segment matching based api naming rule"""
  SEGMENT_MATCHING
}

"""API Naming Rule Configuration change details"""
type ApiNamingRuleConfigurationChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

type ApiNamingRuleResultSet {
  count: Long!

  """List of api naming rules"""
  results: [ApiNamingRule]!
  total: Long!
}

type ApiNamingTrainingConfig {
  keyValuePairs: [TrainingConfigKeyValuePair]
  name: ApiNamingTrainingConfigName!
}

enum ApiNamingTrainingConfigName {
  """URL_FILTER_CONFIG"""
  URL_FILTER_CONFIG

  """TRIE_MODEL_TRAINING_CONFIG"""
  TRIE_MODEL_TRAINING_CONFIG

  """CUSTOM_RULES_LIST_CONFIG"""
  CUSTOM_RULES_LIST_CONFIG

  """REJECT_FILTER_CONFIG"""
  REJECT_FILTER_CONFIG
}

type ApiRiskConfigScope {
  """The scope level"""
  apiRiskConfigScopeLevel: ApiRiskConfigScopeLevel

  """The environment scope"""
  environmentScope: ApiEnvironmentScope
}

enum ApiRiskConfigScopeLevel {
  """GLOBAL"""
  GLOBAL

  """ENVIRONMENT"""
  ENVIRONMENT
}

enum ApiRiskContributorCategory {
  """LIKELIHOOD"""
  LIKELIHOOD

  """IMPACT"""
  IMPACT
}

type ApiRiskData {
  apiRiskScore: Float!
  apiRiskScoreCategory: ApiRiskScoreCategory
  riskImpactFactors: [ApiRiskFactor]!
  riskImpactScore: Float!
  riskImpactScoreCategory: ApiRiskScoreCategory
  riskLikelihoodFactors: [ApiRiskFactor]!
  riskLikelihoodScore: Float!
  riskLikelihoodScoreCategory: ApiRiskScoreCategory
}

type ApiRiskElement {
  id: String!
  name: String!
  score: Float!
}

enum ApiRiskElementEnumOperator {
  """EQUALS"""
  EQUALS
}

type ApiRiskElementEnumPredicate {
  """The predicate operator"""
  operator: ApiRiskElementEnumOperator!

  """The value to be compared"""
  value: ApiRiskElementEnumValues!
}

enum ApiRiskElementEnumValues {
  """EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_NONE"""
  EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_NONE

  """EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_WEAK"""
  EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_WEAK

  """EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_STRONG"""
  EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_STRONG

  """EXTERNAL_ENCRYPTED_AUTH_CATEGORY_NONE"""
  EXTERNAL_ENCRYPTED_AUTH_CATEGORY_NONE

  """EXTERNAL_ENCRYPTED_AUTH_CATEGORY_WEAK"""
  EXTERNAL_ENCRYPTED_AUTH_CATEGORY_WEAK

  """EXTERNAL_ENCRYPTED_AUTH_CATEGORY_STRONG"""
  EXTERNAL_ENCRYPTED_AUTH_CATEGORY_STRONG

  """INTERNAL_UNENCRYPTED_AUTH_CATEGORY_NONE"""
  INTERNAL_UNENCRYPTED_AUTH_CATEGORY_NONE

  """INTERNAL_UNENCRYPTED_AUTH_CATEGORY_WEAK"""
  INTERNAL_UNENCRYPTED_AUTH_CATEGORY_WEAK

  """INTERNAL_UNENCRYPTED_AUTH_CATEGORY_STRONG"""
  INTERNAL_UNENCRYPTED_AUTH_CATEGORY_STRONG

  """INTERNAL_ENCRYPTED_AUTH_CATEGORY_NONE"""
  INTERNAL_ENCRYPTED_AUTH_CATEGORY_NONE

  """INTERNAL_ENCRYPTED_AUTH_CATEGORY_WEAK"""
  INTERNAL_ENCRYPTED_AUTH_CATEGORY_WEAK

  """INTERNAL_ENCRYPTED_AUTH_CATEGORY_STRONG"""
  INTERNAL_ENCRYPTED_AUTH_CATEGORY_STRONG

  """PATH_PARAM_TYPE_NONE"""
  PATH_PARAM_TYPE_NONE

  """PATH_PARAM_TYPE_DIGIT"""
  PATH_PARAM_TYPE_DIGIT

  """PATH_PARAM_TYPE_STRING"""
  PATH_PARAM_TYPE_STRING

  """VULNERABILITY_SEVERITY_CRITICAL"""
  VULNERABILITY_SEVERITY_CRITICAL

  """VULNERABILITY_SEVERITY_HIGH"""
  VULNERABILITY_SEVERITY_HIGH

  """VULNERABILITY_SEVERITY_MEDIUM"""
  VULNERABILITY_SEVERITY_MEDIUM

  """VULNERABILITY_SEVERITY_LOW"""
  VULNERABILITY_SEVERITY_LOW

  """RESPONSE_SENSITIVITY_CRITICAL"""
  RESPONSE_SENSITIVITY_CRITICAL

  """RESPONSE_SENSITIVITY_HIGH"""
  RESPONSE_SENSITIVITY_HIGH

  """RESPONSE_SENSITIVITY_MEDIUM"""
  RESPONSE_SENSITIVITY_MEDIUM

  """RESPONSE_SENSITIVITY_LOW"""
  RESPONSE_SENSITIVITY_LOW
}

type ApiRiskElementLongPredicate {
  """The predicate operator"""
  operator: ApiRiskElementNumberOperator!

  """The value to be compared"""
  value: Long!
}

enum ApiRiskElementNumberOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS

  """GREATER_THAN"""
  GREATER_THAN

  """GREATER_THAN_EQUALS"""
  GREATER_THAN_EQUALS
}

type ApiRiskElementPredicate {
  """The enum Predicate"""
  enumPredicate: ApiRiskElementEnumPredicate

  """The long Predicate"""
  longPredicate: ApiRiskElementLongPredicate

  """The predicate item name"""
  predicateItem: ApiRiskElementPredicateItem!

  """The string Predicate"""
  stringPredicate: ApiRiskElementStringPredicate
}

enum ApiRiskElementPredicateItem {
  """EXTERNAL_UNENCRYPTED_AUTH_CATEGORY"""
  EXTERNAL_UNENCRYPTED_AUTH_CATEGORY

  """EXTERNAL_ENCRYPTED_AUTH_CATEGORY"""
  EXTERNAL_ENCRYPTED_AUTH_CATEGORY

  """INTERNAL_UNENCRYPTED_AUTH_CATEGORY"""
  INTERNAL_UNENCRYPTED_AUTH_CATEGORY

  """INTERNAL_ENCRYPTED_AUTH_CATEGORY"""
  INTERNAL_ENCRYPTED_AUTH_CATEGORY

  """PATH_PARAM_TYPE"""
  PATH_PARAM_TYPE

  """VULNERABILITY_SEVERITY"""
  VULNERABILITY_SEVERITY

  """RESPONSE_SENSITIVITY"""
  RESPONSE_SENSITIVITY

  """DEPENDENT_APIS_COUNT"""
  DEPENDENT_APIS_COUNT

  """THIRD_PARTY_APIS_COUNT"""
  THIRD_PARTY_APIS_COUNT

  """LABEL_ID"""
  LABEL_ID
}

enum ApiRiskElementStringOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS
}

type ApiRiskElementStringPredicate {
  """The predicate operator"""
  operator: ApiRiskElementStringOperator!

  """The value to be compared"""
  value: String!
}

type ApiRiskFactor {
  id: String!
  isContributor: Boolean!
  matchedRiskElements: [ApiRiskElement]!
  name: String!
  score: Float!
  unmatchedRiskElements: [ApiRiskElement]!
}

enum ApiRiskFactorCategory {
  """EASE_OF_ACCESS"""
  EASE_OF_ACCESS

  """VULNERABILITY"""
  VULNERABILITY

  """RESOURCE_DISCOVERY"""
  RESOURCE_DISCOVERY

  """SENSITIVE_DATA_EXPOSURE"""
  SENSITIVE_DATA_EXPOSURE

  """BLAST_RADIUS"""
  BLAST_RADIUS

  """LABELS"""
  LABELS
}

type ApiRiskFactorConfigs {
  """The list of risk factors"""
  apiRiskFactors: [ScopedApiRiskFactor]!
}

enum ApiRiskFactorUpdateType {
  """SET_DISABLED"""
  SET_DISABLED

  """ELEMENT_UPDATE"""
  ELEMENT_UPDATE
}

type ApiRiskLevelValues {
  """The minimum score required to consider a 'CRITICAL' risk severity"""
  criticalLevelMinScore: Int!

  """The minimum score required to consider a 'HIGH' risk severity"""
  highLevelMinScore: Int!

  """The minimum score required to consider a 'MEDIUM' risk severity"""
  mediumLevelMinScore: Int!
}

enum ApiRiskScoreCategory {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

type ApiRiskScoringConfigs {
  """The config scope"""
  apiRiskConfigScope: ApiRiskConfigScope!

  """The risk level values"""
  apiRiskLevelValues: ApiRiskLevelValues!

  """The list of grid cells"""
  apiRiskScoringGridCells: [ApiRiskScoringGridCell]!

  """Whether the grid is default or not"""
  isDefault: Boolean!
}

type ApiRiskScoringGridCell {
  """The impact axis"""
  apiRiskImpactScoreCategory: ScopedApiRiskScoreCategory!

  """The likelihood axis"""
  apiRiskLikelihoodScoreCategory: ScopedApiRiskScoreCategory!

  """The integer score value"""
  score: Int!
}

type ApiSpec {
  """Whether the APIs should be discovered from the uploaded spec"""
  apiDiscoveryEnabled: Boolean @deprecated(reason: "Use apiDiscoveryEnabledV2 instead")

  """Whether the APIs should be discovered from the uploaded spec"""
  apiDiscoveryEnabledV2: Boolean

  """Whether the API inspector is disabled for the uploaded spec"""
  apiInspectorDisabled: Boolean

  """Whether the discovered APIs should be named as per the uploaded spec"""
  apiNamingEnabled: Boolean!

  """Metadata associated with the spec"""
  apiSpecMetadata: ApiSpecMetadata

  """Spec type of the associated file"""
  apiSpecType: ApiSpecType

  """Creation time of the API spec"""
  creationTime: DateTime!

  """The SHA256 hash of the Open API spec file contents"""
  fileContentSha256: String
  id: String!

  """Last updated time of the API spec"""
  lastUpdatedTime: DateTime!

  """Name of the Open API spec"""
  name: String!

  """Whether the spec is a reference spec or a main spec"""
  referenceType: ReferenceType!

  """The path of the spec in repository"""
  specPath: String

  """Current status of the API spec file upload"""
  status: ApiSpecStatus!
}

"""Event type condition for Api Spec Config"""
type ApiSpecConfigChangeCondition {
  """Represents operation on Api Spec Config i.e Create/Update/Delete """
  apiSpecConfigChangeTypes: [ApiSpecConfigChangeType]!
}

"""Represents operation of config """
enum ApiSpecConfigChangeType {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE

  """DELETE"""
  DELETE
}

"""API Spec Configuration change details"""
type ApiSpecConfigurationChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

enum ApiSpecConformanceAggregationType {
  """AVG"""
  AVG

  """SUM"""
  SUM

  """MIN"""
  MIN

  """MAX"""
  MAX

  """DISTINCT"""
  DISTINCT

  """COUNT"""
  COUNT

  """DISTINCTCOUNT"""
  DISTINCTCOUNT
}

enum ApiSpecConformanceApiCharacteristicType {
  """EXTERNAL_ONLY"""
  EXTERNAL_ONLY

  """ALL"""
  ALL

  """API_ENDPOINT_SELECTION"""
  API_ENDPOINT_SELECTION

  """DYNAMIC_API_ENDPOINT_SELECTION"""
  DYNAMIC_API_ENDPOINT_SELECTION
}

type ApiSpecConformanceApiEndpointComparisonStats {
  totalExpectedApiEndpoints: Int!
  totalObservedApiEndpoints: Int!
}

type ApiSpecConformanceApiEndpointDiffResult {
  apiEndpointKey: ApiSpecConformanceApiEndpointKey!
  entity(type: String!): Entity
  orphanParameters: [ApiSpecConformanceOrphanParameterResult]!
  parameterMatchingSummary: ParameterMatchingSummary!
  parametersDiff: [ApiSpecConformanceParameterDiffResult]!
  shadowParameters: [ApiSpecConformanceShadowParameterResult]!
}

type ApiSpecConformanceApiEndpointKey {
  endpointId: String
  operationType: ApiSpecConformanceOperationType!
  path: String!
}

enum ApiSpecConformanceField {
  """SHADOW_ENDPOINT_FIELD_ENDPOINT_ID"""
  SHADOW_ENDPOINT_FIELD_ENDPOINT_ID

  """SHADOW_ENDPOINT_FIELD_OPERATION_TYPE"""
  SHADOW_ENDPOINT_FIELD_OPERATION_TYPE

  """SHADOW_ENDPOINT_FIELD_ENDPOINT_NAME"""
  SHADOW_ENDPOINT_FIELD_ENDPOINT_NAME

  """SHADOW_ENDPOINT_FIELD_FULL_ENDPOINT_NAME"""
  SHADOW_ENDPOINT_FIELD_FULL_ENDPOINT_NAME

  """SHADOW_ENDPOINT_FIELD_SERVICE_ID"""
  SHADOW_ENDPOINT_FIELD_SERVICE_ID

  """SHADOW_ENDPOINT_FIELD_SERVICE_NAME"""
  SHADOW_ENDPOINT_FIELD_SERVICE_NAME

  """SHADOW_ENDPOINT_FIELD_DOMAIN_ID"""
  SHADOW_ENDPOINT_FIELD_DOMAIN_ID

  """SHADOW_ENDPOINT_FIELD_DOMAIN_NAME"""
  SHADOW_ENDPOINT_FIELD_DOMAIN_NAME

  """SHADOW_ENDPOINT_FIELD_SENSITIVITY"""
  SHADOW_ENDPOINT_FIELD_SENSITIVITY

  """ORPHAN_ENDPOINT_FIELD_OPERATION_TYPE"""
  ORPHAN_ENDPOINT_FIELD_OPERATION_TYPE

  """ORPHAN_ENDPOINT_FIELD_ENDPOINT_NAME"""
  ORPHAN_ENDPOINT_FIELD_ENDPOINT_NAME

  """ORPHAN_ENDPOINT_FIELD_FULL_ENDPOINT_NAME"""
  ORPHAN_ENDPOINT_FIELD_FULL_ENDPOINT_NAME

  """ORPHAN_ENDPOINT_FIELD_UNDER_LEARNING"""
  ORPHAN_ENDPOINT_FIELD_UNDER_LEARNING

  """API_ENDPOINT_NO_DIFF_FIELD_ENDPOINT_ID"""
  API_ENDPOINT_NO_DIFF_FIELD_ENDPOINT_ID

  """API_ENDPOINT_NO_DIFF_FIELD_OPERATION_TYPE"""
  API_ENDPOINT_NO_DIFF_FIELD_OPERATION_TYPE

  """API_ENDPOINT_NO_DIFF_FIELD_ENDPOINT_NAME"""
  API_ENDPOINT_NO_DIFF_FIELD_ENDPOINT_NAME

  """API_ENDPOINT_NO_DIFF_FIELD_FULL_ENDPOINT_NAME"""
  API_ENDPOINT_NO_DIFF_FIELD_FULL_ENDPOINT_NAME

  """API_ENDPOINT_NO_DIFF_FIELD_SERVICE_ID"""
  API_ENDPOINT_NO_DIFF_FIELD_SERVICE_ID

  """API_ENDPOINT_NO_DIFF_FIELD_SERVICE_NAME"""
  API_ENDPOINT_NO_DIFF_FIELD_SERVICE_NAME

  """API_ENDPOINT_NO_DIFF_FIELD_DOMAIN_ID"""
  API_ENDPOINT_NO_DIFF_FIELD_DOMAIN_ID

  """API_ENDPOINT_NO_DIFF_FIELD_DOMAIN_NAME"""
  API_ENDPOINT_NO_DIFF_FIELD_DOMAIN_NAME

  """API_ENDPOINT_NO_DIFF_FIELD_SENSITIVITY"""
  API_ENDPOINT_NO_DIFF_FIELD_SENSITIVITY

  """API_ENDPOINT_NO_DIFF_FIELD_UNDER_LEARNING"""
  API_ENDPOINT_NO_DIFF_FIELD_UNDER_LEARNING

  """API_ENDPOINT_DIFF_FIELD_ENDPOINT_ID"""
  API_ENDPOINT_DIFF_FIELD_ENDPOINT_ID

  """API_ENDPOINT_DIFF_FIELD_OPERATION_TYPE"""
  API_ENDPOINT_DIFF_FIELD_OPERATION_TYPE

  """API_ENDPOINT_DIFF_FIELD_ENDPOINT_NAME"""
  API_ENDPOINT_DIFF_FIELD_ENDPOINT_NAME

  """API_ENDPOINT_DIFF_FIELD_FULL_ENDPOINT_NAME"""
  API_ENDPOINT_DIFF_FIELD_FULL_ENDPOINT_NAME

  """API_ENDPOINT_DIFF_FIELD_SERVICE_ID"""
  API_ENDPOINT_DIFF_FIELD_SERVICE_ID

  """API_ENDPOINT_DIFF_FIELD_SERVICE_NAME"""
  API_ENDPOINT_DIFF_FIELD_SERVICE_NAME

  """API_ENDPOINT_DIFF_FIELD_DOMAIN_ID"""
  API_ENDPOINT_DIFF_FIELD_DOMAIN_ID

  """API_ENDPOINT_DIFF_FIELD_DOMAIN_NAME"""
  API_ENDPOINT_DIFF_FIELD_DOMAIN_NAME

  """API_ENDPOINT_DIFF_FIELD_UNDER_LEARNING"""
  API_ENDPOINT_DIFF_FIELD_UNDER_LEARNING

  """SHADOW_PARAMETER_FIELD_NAME"""
  SHADOW_PARAMETER_FIELD_NAME

  """SHADOW_PARAMETER_FIELD_LOCATION"""
  SHADOW_PARAMETER_FIELD_LOCATION

  """SHADOW_PARAMETER_FIELD_UNDER_LEARNING"""
  SHADOW_PARAMETER_FIELD_UNDER_LEARNING

  """ORPHAN_PARAMETER_FIELD_NAME"""
  ORPHAN_PARAMETER_FIELD_NAME

  """ORPHAN_PARAMETER_FIELD_LOCATION"""
  ORPHAN_PARAMETER_FIELD_LOCATION

  """PARAMETER_DIFF_FIELD_NAME"""
  PARAMETER_DIFF_FIELD_NAME

  """PARAMETER_DIFF_FIELD_LOCATION"""
  PARAMETER_DIFF_FIELD_LOCATION

  """TYPE_DIFF_FIELD_EXPECTED_TYPE"""
  TYPE_DIFF_FIELD_EXPECTED_TYPE

  """TYPE_DIFF_FIELD_OBSERVED_TYPE"""
  TYPE_DIFF_FIELD_OBSERVED_TYPE

  """EXPECTED_SECURITY_SCHEME_FIELD_TYPE"""
  EXPECTED_SECURITY_SCHEME_FIELD_TYPE

  """EXPECTED_SECURITY_SCHEME_FIELD_SCHEME"""
  EXPECTED_SECURITY_SCHEME_FIELD_SCHEME

  """OBSERVED_SECURITY_SCHEME_FIELD_TYPE"""
  OBSERVED_SECURITY_SCHEME_FIELD_TYPE

  """OBSERVED_SECURITY_SCHEME_FIELD_SCHEME"""
  OBSERVED_SECURITY_SCHEME_FIELD_SCHEME

  """EXPECTED_REQUEST_MEDIA_TYPE_FIELD_TYPE"""
  EXPECTED_REQUEST_MEDIA_TYPE_FIELD_TYPE

  """OBSERVED_REQUEST_MEDIA_TYPE_FIELD_TYPE"""
  OBSERVED_REQUEST_MEDIA_TYPE_FIELD_TYPE

  """SUMMARY_FIELD_EXPECTED_ENDPOINT_COUNT"""
  SUMMARY_FIELD_EXPECTED_ENDPOINT_COUNT

  """SUMMARY_FIELD_OBSERVED_ENDPOINT_COUNT"""
  SUMMARY_FIELD_OBSERVED_ENDPOINT_COUNT

  """SUMMARY_FIELD_SHADOW_ENDPOINT_COUNT"""
  SUMMARY_FIELD_SHADOW_ENDPOINT_COUNT

  """SUMMARY_FIELD_ORPHAN_ENDPOINT_COUNT"""
  SUMMARY_FIELD_ORPHAN_ENDPOINT_COUNT

  """SUMMARY_FIELD_DIFF_ENDPOINT_COUNT"""
  SUMMARY_FIELD_DIFF_ENDPOINT_COUNT

  """SUMMARY_FIELD_NO_DIFF_ENDPOINT_COUNT"""
  SUMMARY_FIELD_NO_DIFF_ENDPOINT_COUNT

  """SUMMARY_FIELD_TRUE_ORPHAN_ENDPOINT_COUNT"""
  SUMMARY_FIELD_TRUE_ORPHAN_ENDPOINT_COUNT

  """SUMMARY_FIELD_LEARNING_ORPHAN_ENDPOINT_COUNT"""
  SUMMARY_FIELD_LEARNING_ORPHAN_ENDPOINT_COUNT
}

type ApiSpecConformanceJob {
  apiSpecConformanceJobResult: ApiSpecConformanceJobResult
  apiSpecConformanceJobSpec: ApiSpecConformanceJobSpec!
  createdBy: String!
  createdTimestamp: DateTime!
  executionMode: JobExecutionMode
  id: String!
  messages: [String]
  name: String
  source: JobSource
  status: JobStatus!
  statusUpdatedTimestamp: DateTime!
}

enum ApiSpecConformanceJobField {
  """JOB_FIELD_JOB_ID"""
  JOB_FIELD_JOB_ID

  """JOB_FIELD_JOB_NAME"""
  JOB_FIELD_JOB_NAME

  """JOB_FIELD_CREATOR"""
  JOB_FIELD_CREATOR

  """JOB_FIELD_CREATED_TIMESTAMP_MILLIS"""
  JOB_FIELD_CREATED_TIMESTAMP_MILLIS

  """JOB_FIELD_STATUS"""
  JOB_FIELD_STATUS

  """JOB_FIELD_UPDATED_TIMESTAMP_MILLIS"""
  JOB_FIELD_UPDATED_TIMESTAMP_MILLIS

  """JOB_FIELD_EXECUTION_MODE"""
  JOB_FIELD_EXECUTION_MODE

  """JOB_FIELD_SOURCE"""
  JOB_FIELD_SOURCE

  """JOB_FIELD_INSTANCE_TYPE"""
  JOB_FIELD_INSTANCE_TYPE

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_ENVIRONMENT"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_ENVIRONMENT

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_CHARACTERISTIC_TYPE"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_CHARACTERISTIC_TYPE

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_FILE_NAME"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_FILE_NAME

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_SERVICE_ID"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_SERVICE_ID

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_SERVICE_NAME"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_SERVICE_NAME

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_DOCUMENTATION_ID"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_DOCUMENTATION_ID

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_API_ID"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_API_ID

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_API_NAME"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_API_NAME

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_API_FILTER_ID"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_API_FILTER_ID

  """SPEC_CONFORMANCE_JOB_RESULT_FIELD_EXPECTED_ENDPOINTS_COUNT"""
  SPEC_CONFORMANCE_JOB_RESULT_FIELD_EXPECTED_ENDPOINTS_COUNT

  """SPEC_CONFORMANCE_JOB_RESULT_FIELD_OBSERVED_ENDPOINTS_COUNT"""
  SPEC_CONFORMANCE_JOB_RESULT_FIELD_OBSERVED_ENDPOINTS_COUNT

  """SPEC_CONFORMANCE_JOB_RESULT_FIELD_SHADOW_ENDPOINTS_COUNT"""
  SPEC_CONFORMANCE_JOB_RESULT_FIELD_SHADOW_ENDPOINTS_COUNT

  """SPEC_CONFORMANCE_JOB_RESULT_FIELD_ORPHAN_ENDPOINTS_COUNT"""
  SPEC_CONFORMANCE_JOB_RESULT_FIELD_ORPHAN_ENDPOINTS_COUNT

  """SPEC_CONFORMANCE_JOB_RESULT_FIELD_DIFF_ENDPOINTS_COUNT"""
  SPEC_CONFORMANCE_JOB_RESULT_FIELD_DIFF_ENDPOINTS_COUNT

  """SPEC_CONFORMANCE_JOB_RESULT_FIELD_NO_DIFF_ENDPOINTS_COUNT"""
  SPEC_CONFORMANCE_JOB_RESULT_FIELD_NO_DIFF_ENDPOINTS_COUNT

  """SPEC_CONFORMANCE_JOB_RESULT_FIELD_TRUE_ORPHAN_ENDPOINTS_COUNT"""
  SPEC_CONFORMANCE_JOB_RESULT_FIELD_TRUE_ORPHAN_ENDPOINTS_COUNT

  """SPEC_CONFORMANCE_JOB_RESULT_FIELD_LEARNING_ORPHAN_ENDPOINTS_COUNT"""
  SPEC_CONFORMANCE_JOB_RESULT_FIELD_LEARNING_ORPHAN_ENDPOINTS_COUNT

  """SPEC_CONFORMANCE_MESSAGE_FIELD_ERROR"""
  SPEC_CONFORMANCE_MESSAGE_FIELD_ERROR
}

type ApiSpecConformanceJobQueryResult {
  """API endpoints matching this filter are used for conformance analysis"""
  apiEndpointsFilter: GenericFilter
  selection(key: ApiSpecConformanceJobField!): ApiSpecConformanceJobValue
}

type ApiSpecConformanceJobQueryResultSet {
  count: Long!
  results: [ApiSpecConformanceJobQueryResult]!
  total: Long!
}

type ApiSpecConformanceJobResult {
  apiSpecConformanceJobResultSummary: ApiSpecConformanceJobResultSummary!
  openApiDiffResult: ApiSpecConformanceOpenApiDiffResult!
}

type ApiSpecConformanceJobResultSummary {
  apiEndpointComparisonStats: ApiSpecConformanceApiEndpointComparisonStats!
  totalCommonApiEndpointsWithIssues: Long!
  totalCommonApiEndpointsWithNoIssues: Long!
  learningOrphanApiEndpoints: Long!
  totalOrphanApiEndpoints: Long!
  totalShadowApiEndpoints: Long!
  trueOrphanOrphanApiEndpoints: Long!
}

type ApiSpecConformanceJobSpec {
  apiCharacteristicType: ApiSpecConformanceApiCharacteristicType!
  apiEndpoints: [ApiEndpoint]
  apiEndpointsFilter: GenericFilter
  apiSpecs: ApiSpecResultSet
  environment: String!
  fileNames: [String] @deprecated(reason: "Deprecated")
  serviceIds: [String] @deprecated(reason: "Deprecated")
  serviceNames: [String] @deprecated(reason: "Deprecated")
  specId: String @deprecated(reason: "Deprecated")
}

type ApiSpecConformanceJobValue {
  type: AttributeType!
  value: Unknown
}

enum ApiSpecConformanceLocation {
  """PATH"""
  PATH

  """HEADER"""
  HEADER

  """QUERY"""
  QUERY

  """COOKIE"""
  COOKIE
}

type ApiSpecConformanceOpenApiDiffResult {
  apiEndpointsDiff: [ApiSpecConformanceApiEndpointDiffResult]!
  orphanApiEndpoints: [ApiSpecConformanceOrphanApiEndpointResult]!
  shadowApiEndpoints: [ApiSpecConformanceShadowApiEndpointResult]!
}

enum ApiSpecConformanceOperationType {
  """GET"""
  GET

  """PUT"""
  PUT

  """POST"""
  POST

  """DELETE"""
  DELETE

  """OPTIONS"""
  OPTIONS

  """HEAD"""
  HEAD

  """PATCH"""
  PATCH

  """TRACE"""
  TRACE
}

type ApiSpecConformanceOrphanApiEndpointResult {
  apiEndpointKey: ApiSpecConformanceApiEndpointKey!
  learning: Boolean!
}

type ApiSpecConformanceOrphanParameterResult {
  parameterKey: ApiSpecConformanceParameterKey!
}

type ApiSpecConformanceParameterDiffResult {
  parameterKey: ApiSpecConformanceParameterKey!
  typeDiff: ApiSpecConformanceTypeDiff
}

type ApiSpecConformanceParameterKey {
  location: ApiSpecConformanceLocation!
  name: String!
}

type ApiSpecConformanceResult {
  aggregation(key: ApiSpecConformanceField!, aggregation: ApiSpecConformanceAggregationType!): ApiSpecConformanceValue
  entity(type: String!): Entity
  selection(key: ApiSpecConformanceField!): ApiSpecConformanceValue
}

type ApiSpecConformanceResultSet {
  count: Long!
  results: [ApiSpecConformanceResult]!
  total: Long!
}

type ApiSpecConformanceScheduledJob {
  apiSpecConformanceJobSpec: ApiSpecConformanceJobSpec!
  createdBy: String
  createdTimestamp: DateTime!

  """Schedule configuration of conformance in case of daily schedule"""
  dailySchedule: DailySchedule
  duration: Duration
  id: String!
  lastJobExecutionTimestamp: DateTime
  lastUpdatedTimestamp: DateTime!
  name: String
  nextJobExecutionTimestamp: DateTime
  source: JobSource!
  status: ScheduledJobStatus!

  """Schedule configuration of conformance in case of weekly schedule"""
  weeklySchedule: WeeklySchedule
}

type ApiSpecConformanceShadowApiEndpointResult {
  apiEndpointKey: ApiSpecConformanceApiEndpointKey!
  entity(type: String!): Entity
}

type ApiSpecConformanceShadowParameterResult {
  parameterKey: ApiSpecConformanceParameterKey!
}

type ApiSpecConformanceTypeDiff {
  expectedType: String!
  observedType: String!
}

type ApiSpecConformanceValue {
  type: AttributeType!
  value: Unknown
}

type ApiSpecMetadata {
  """Open API spec metadata associated with the API spec"""
  openApiSpecMetadata: OpenApiSpecMetadata
}

type ApiSpecResultSet {
  count: Long!
  results: [ApiSpec]!
  total: Long!
}

enum ApiSpecStatus {
  """IN_PROGRESS"""
  IN_PROGRESS

  """COMPLETED"""
  COMPLETED

  """UPLOAD_IN_PROGRESS"""
  UPLOAD_IN_PROGRESS

  """UPLOAD_COMPLETED"""
  UPLOAD_COMPLETED

  """INVALID_FORMAT"""
  INVALID_FORMAT

  """SIZE_LIMIT_EXCEEDED"""
  SIZE_LIMIT_EXCEEDED

  """FILE_LIMIT_EXCEEDED"""
  FILE_LIMIT_EXCEEDED

  """NO_FILES_FOUND"""
  NO_FILES_FOUND

  """INVALID_JOB_ID"""
  INVALID_JOB_ID

  """RESOLUTION_IN_PROGRESS"""
  RESOLUTION_IN_PROGRESS

  """RESOLUTION_COMPLETED"""
  RESOLUTION_COMPLETED

  """RESOLUTION_FAILED"""
  RESOLUTION_FAILED
}

enum ApiSpecType {
  """OPEN_API_SPEC"""
  OPEN_API_SPEC

  """POSTMAN_COLLECTION"""
  POSTMAN_COLLECTION

  """POSTMAN_ENVIRONMENT"""
  POSTMAN_ENVIRONMENT

  """GRAPHQL_SCHEMA"""
  GRAPHQL_SCHEMA

  """WSDL"""
  WSDL
}

enum ApiState {
  """LEARNT"""
  LEARNT

  """LEARNING"""
  LEARNING
}

type ApiStateBasedAnomalyDetectionConfig {
  keyValuePairs: [AnomalyDetectionConfigKeyValuePair]
  name: ApiStateBasedAnomalyDetectionConfigName!
}

enum ApiStateBasedAnomalyDetectionConfigName {
  """UNKNOWN_API_ANOMALY_CONFIG"""
  UNKNOWN_API_ANOMALY_CONFIG

  """UNDER_DISCOVERY_API_ANOMALY_CONFIG"""
  UNDER_DISCOVERY_API_ANOMALY_CONFIG

  """UNDER_THRESHOLD_LEARNING_API_ANOMALY_CONFIG"""
  UNDER_THRESHOLD_LEARNING_API_ANOMALY_CONFIG

  """LEARNT_API_ANOMALY_CONFIG"""
  LEARNT_API_ANOMALY_CONFIG
}

type ApiStateChange {
  currentApiState: ApiState!
  oldApiState: ApiState!
}

type ApiStats {
  entity(type: String!): Entity
  id: String!
  completedTestsCount: Long!
  generatedTestsCount: Long!
  openVulnerabilities: Long!
  serviceId: String!
  severity: VulnerabilityV2Severity
  totalVulnerabilities: Long!
}

type ApiStatsList {
  apiStatsList: [ApiStats]!
}

type ApiTagResponse {
  success: Boolean!
}

type ApiTokenMetadata {
  id: String
  creationTimestamp: DateTime!
  name: String!
}

type ApiTokenMetadataResultSet {
  count: Long
  total: Long
  results: [ApiTokenMetadata]!
}

type ApiUserRoleCard {
  highestUserRoles: ValueTypeDistributionResultSet!
  lowestUserRoles: ValueTypeDistributionResultSet!
  numHighRiskApis: Long!
  numHighRiskUnauthenticatedApis: Long!
  totalApis: Long!
}

enum AssertionMatchOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS

  """MATCHES_REGEX"""
  MATCHES_REGEX

  """NOT_MATCHES_REGEX"""
  NOT_MATCHES_REGEX

  """GREATER_THAN"""
  GREATER_THAN

  """GREATER_THAN_EQUALS"""
  GREATER_THAN_EQUALS

  """LESS_THAN"""
  LESS_THAN

  """LESS_THAN_EQUALS"""
  LESS_THAN_EQUALS

  """CONTAINS"""
  CONTAINS

  """NOT_CONTAINS"""
  NOT_CONTAINS

  """KEYS_EQUALS"""
  KEYS_EQUALS

  """KEYS_NOT_EQUALS"""
  KEYS_NOT_EQUALS

  """FUZZY_EQUALS"""
  FUZZY_EQUALS

  """FUZZY_NOT_EQUALS"""
  FUZZY_NOT_EQUALS

  """FUZZY_KEYS_EQUALS"""
  FUZZY_KEYS_EQUALS

  """FUZZY_KEYS_NOT_EQUALS"""
  FUZZY_KEYS_NOT_EQUALS

  """VALUES_DIFFERENCE"""
  VALUES_DIFFERENCE

  """VALUES_SEARCH"""
  VALUES_SEARCH

  """VALUES_NOT_SEARCH"""
  VALUES_NOT_SEARCH

  """REGEX_LOOKUP_EQUALS"""
  REGEX_LOOKUP_EQUALS

  """REGEX_LOOKUP_NOT_EQUALS"""
  REGEX_LOOKUP_NOT_EQUALS

  """REGEX_LOOKUP_MATCHES_REGEX"""
  REGEX_LOOKUP_MATCHES_REGEX

  """REGEX_LOOKUP_NOT_MATCHES_REGEX"""
  REGEX_LOOKUP_NOT_MATCHES_REGEX

  """ALWAYS_TRUE"""
  ALWAYS_TRUE

  """ALWAYS_FALSE"""
  ALWAYS_FALSE

  """RAW"""
  RAW

  """COLLABORATOR_LOOKUP_CONTAINS"""
  COLLABORATOR_LOOKUP_CONTAINS

  """ATTRIBUTE_EXISTS"""
  ATTRIBUTE_EXISTS

  """ATTRIBUTE_NOT_EXISTS"""
  ATTRIBUTE_NOT_EXISTS

  """IN"""
  IN

  """NOT_IN"""
  NOT_IN
}

enum AssertionResult {
  """OK"""
  OK

  """NOT_OK"""
  NOT_OK

  """NOT_EVALUATED"""
  NOT_EVALUATED
}

type AssetNameToAssetTypePair {
  key: String
  value: String
}

type AssetSelection {
  domain: SelectedDomainAsset
  endpoint: SelectedEndpointAsset
  selectedAsset: SelectedAsset!

  """Asset filter that will be used while running suite"""
  selectedAssetFilter: [Filter]
  selectionMode: SelectionMode!
  service: SelectedServiceAsset
}

enum AssetTag {
  """CRITICAL"""
  CRITICAL

  """SENSITIVE"""
  SENSITIVE

  """EXTERNAL"""
  EXTERNAL

  """SENTRY"""
  SENTRY
}

enum AstAggregationField {
  """SUITE_NAMES"""
  SUITE_NAMES

  """SCAN_RUN_NUMBER"""
  SCAN_RUN_NUMBER

  """API_ID"""
  API_ID

  """API_NAME"""
  API_NAME

  """SKIPPED_API_REASON"""
  SKIPPED_API_REASON

  """SCAN_STATUS"""
  SCAN_STATUS

  """VULNERABILITY_SEVERITY"""
  VULNERABILITY_SEVERITY
}

enum AstAggregationType {
  """AVG"""
  AVG

  """SUM"""
  SUM

  """MIN"""
  MIN

  """MAX"""
  MAX

  """DISTINCT"""
  DISTINCT

  """COUNT"""
  COUNT

  """DISTINCT_COUNT"""
  DISTINCT_COUNT
}

"""AST Assertion Override config. Only one of the below must be set."""
type AstAssertionOverride {
  """System defined Assertion Override"""
  systemDefinedAssertionOverride: TestAssertion

  """User defined Assertion Override"""
  userDefinedAssertionOverride: TestAssertion
}

enum AstAttackCoverage {
  """SMOKE"""
  SMOKE

  """OPTIMIZED"""
  OPTIMIZED

  """EXHAUSTIVE"""
  EXHAUSTIVE
}

enum AstAttackImpact {
  """SAFE"""
  SAFE
}

"""Attack labels response"""
type AstAttackLabelsResponse {
  """List of attack labels"""
  attackLabels: [String]!
}

enum AstAttackMethod {
  """GET"""
  GET

  """POST"""
  POST

  """PUT"""
  PUT

  """DELETE"""
  DELETE

  """PATCH"""
  PATCH
}

"""Custom test plugin"""
type AstCustomTestPlugin {
  codeSnippetDetails: CustomTestPluginCodeSnippetDetails
  customTestPluginDetails: CustomTestPluginDetails
  id: String
  name: String
  validationFailureReasons: [String]
}

"""Result Set for getting custom test plugins"""
type AstCustomTestPluginResultSet {
  count: Long
  total: Long
  results: [AstCustomTestPlugin]!
}

"""Ast Data Source"""
enum astDataSource {
  """SUITES"""
  SUITES

  """API_COVERAGE"""
  API_COVERAGE

  """SCANS"""
  SCANS
}

"""
This Configuration if non-null implies AST is enabled in this environment and
also contains configs for other AST features. By default, AST is enabled.
"""
type AstEnabledConfig {
  """
  The replay configuration describes the AST replay features in this environment. By default, replay is disabled.
  """
  replayConfig: AstReplayConfig!
}

"""
This configuration describes whether AST is enabled/disabled for this
environment. If enabled it also describes various other AST feature configs.
"""
type AstFeatureConfig {
  enabledConfig: AstEnabledConfig
  environmentId: String
}

"""AST feature configs' result set"""
type AstFeatureConfigResultSet {
  count: Long
  total: Long

  """List of AST feature configs"""
  results: [AstFeatureConfig]!
}

"""Ast Filter fields"""
enum AstFilterField {
  """SCAN_SUITE_NAME"""
  SCAN_SUITE_NAME

  """SCAN_SUITE_ID"""
  SCAN_SUITE_ID

  """ATTACK_POLICY"""
  ATTACK_POLICY

  """ENVIRONMENT"""
  ENVIRONMENT

  """VULNERABILITY_SEVERITY"""
  VULNERABILITY_SEVERITY

  """SCAN_STATUS"""
  SCAN_STATUS

  """VULNERABILITY_EXISTS"""
  VULNERABILITY_EXISTS

  """API_NAME"""
  API_NAME

  """API_REACHABILITY"""
  API_REACHABILITY

  """SKIPPED_API_REASON"""
  SKIPPED_API_REASON

  """VULNERABILITY_DISCOVERED_COUNT"""
  VULNERABILITY_DISCOVERED_COUNT

  """SCAN_RUN_NUMBER"""
  SCAN_RUN_NUMBER
}

enum AstFilterOperatorType {
  """EQUALS"""
  EQUALS

  """IN"""
  IN

  """LIKE"""
  LIKE
}

"""Ast group by fields"""
enum AstGroupByField {
  """ENVIRONMENT"""
  ENVIRONMENT

  """ATTACK_POLICY"""
  ATTACK_POLICY

  """SKIPPED_API_REASON"""
  SKIPPED_API_REASON

  """SCAN_STATUS"""
  SCAN_STATUS

  """SUITE_NAME"""
  SUITE_NAME

  """API_REACHABILITY"""
  API_REACHABILITY

  """SCAN_RUN_NUMBER"""
  SCAN_RUN_NUMBER

  """IS_API_SCANNED"""
  IS_API_SCANNED
}

"""AST hook to be used by runner/cli for scan runs"""
type AstHook {
  """Hook id"""
  id: String!

  """Hook type"""
  hookType: AstHookType!

  """Auth mechanism type"""
  authMechanism: AuthMechanism!

  """Creator of the hook"""
  createdBy: String

  """Hook description"""
  description: String

  """Hook code snippet"""
  hookScript: String!

  """Hook name"""
  name: String!
}

type AstHookResultV2 {
  astHookV2: AstHookV2!
  createdBy: String!
  astHookTestStatus: AstHookTestStatus
}

type AstHooksResultSet {
  count: Long!
  total: Long!
  results: [AstHook]!
}

type AstHooksResultSetV2 {
  count: Long!
  total: Long!
  results: [AstHookResultV2]!
}

"""AST hook test"""
type AstHookTest {
  """Hook test id"""
  id: String!

  """Auth mechanism type"""
  advancedMode: AdvancedMode

  """Allowed runner ids for hook testing"""
  allowedRunnerIdsList: [String]

  """Pick any runner for hook testing"""
  anyRunner: Boolean

  """Hook config for normal mode"""
  hookConfig: HookConfig

  """Hook mode"""
  hookMode: HookMode!

  """Hook test logs"""
  hookTestLogs: [String]

  """Role of the user of the hook"""
  role: AstHookUserRole!

  """Status of ast hook test"""
  hookTestStatus: AstHookTestStatus
}

enum AstHookTestStatus {
  """PASSED"""
  PASSED

  """FAILED"""
  FAILED

  """PENDING"""
  PENDING

  """ABORTED"""
  ABORTED

  """RUNNER_ASSIGNED"""
  RUNNER_ASSIGNED
}

enum AstHookType {
  """PRE_HOOK"""
  PRE_HOOK

  """POST_HOOK"""
  POST_HOOK

  """AUTH_HOOK"""
  AUTH_HOOK
}

enum AstHookUserRole {
  """STANDARD"""
  STANDARD

  """ADMIN"""
  ADMIN

  """READER"""
  READER

  """WRITER"""
  WRITER
}

"""AST hook V2 to be used by runner/cli for scan runs"""
type AstHookV2 {
  """Hook id"""
  id: String!

  """Auth mechanism type"""
  advancedMode: AdvancedMode

  """Auth mechanism type v2"""
  authMechanismV2: AuthMechanismV2!

  """Hook description"""
  description: String

  """Hook config for normal mode"""
  hookConfig: HookConfig

  """Hook mode"""
  hookMode: HookMode!

  """is the hook a draft"""
  isDraft: Boolean

  """Hook name"""
  name: String!

  """Role of the user of the hook"""
  role: AstHookUserRole
}

type AstHookV2Status {
  """status of whether the token is persisted"""
  tokenStatus: Boolean!
}

type AstMapData {
  key: String!
  value: String!
}

"""AST Mutation Override config"""
type AstMutationOverride {
  """System defined Mutation Override"""
  systemDefinedMutationOverride: TestMutation

  """User defined Mutation Override"""
  userDefinedMutationOverride: TestMutation
}

enum AstOrder {
  """APIS_COUNT"""
  APIS_COUNT

  """SCAN_COUNT"""
  SCAN_COUNT

  """EXECUTED_TESTS"""
  EXECUTED_TESTS

  """DISCOVERED_VULNERABILITY_COUNT"""
  DISCOVERED_VULNERABILITY_COUNT

  """SCAN_START_TIME"""
  SCAN_START_TIME
}

"""AST Override"""
type AstOverride {
  """Override created by"""
  createdBy: String!

  """Description for the override"""
  description: String

  """Id of the override"""
  id: String!

  """Override last updated by"""
  lastUpdatedBy: String!

  """Override last updated timestamp"""
  lastUpdatedTimestamp: DateTime!

  """Name of the override"""
  name: String!

  """Override config"""
  overrideConfig: AstOverrideConfig!

  """Override scopes"""
  overrideScopes: [AstOverrideScope]!
}

"""AST Override config. Exactly one of the fields must be set"""
type AstOverrideConfig {
  """Assertion Override"""
  assertionOverride: AstAssertionOverride

  """Mutation Override"""
  mutationOverride: AstMutationOverride
}

type AstOverrideResultSet {
  count: Long!
  results: [AstOverride]!
  total: Long!
}

"""
Defined the scope for the override. Exactly one of the fields must be set
"""
type AstOverrideScope {
  """
  Fixed test id of the test scope in which this override is to be applied
  """
  fixedTestId: String!
}

type AstPoliciesV2ResultSet {
  count: Long!
  results: [AstPolicyV2]!
  total: Long!
}

type AstPolicyV2 {
  configuration: AstPolicyV2Configuration!
  description: String
  id: String!
  metadata: AstPolicyV2Metadata!
  name: String!
}

type AstPolicyV2Configuration {
  attackCoverage: AstAttackCoverage!
  attackImpact: AstAttackImpact
  attackMethods: [AstAttackMethod]!
  attacksSelection: [AttackSelection]!
}

enum AstPolicyV2FilterKey {
  """NAME"""
  NAME

  """OWNERS"""
  OWNERS

  """POLICY_ID"""
  POLICY_ID
}

type AstPolicyV2Metadata {
  createdBy: String!
  creationTimestamp: DateTime
  lastEditTimestamp: DateTime
  lastEditedBy: String
}

type AstReferencedScanScope {
  """The type of the reference to the scan scope"""
  referencedScanScopeType: ReferencedScanScopeType!

  """The test level scope details for the referenced scan"""
  testLevelScope: TestLevelScope!
}

enum AstRelationalOperator {
  """EQUALS"""
  EQUALS

  """MATCHES_REGEX"""
  MATCHES_REGEX

  """CONTAINS"""
  CONTAINS

  """NOT_CONTAINS"""
  NOT_CONTAINS

  """NOT_MATCHES_REGEX"""
  NOT_MATCHES_REGEX
}

"""
Describes AST replay configurations for this environment. By default, AST replay is disabled.
"""
type AstReplayConfig {
  """
  Fetch APIs in a replay scan with last called timestamp not less than this duration.
  """
  apiInactivityDuration: Duration

  """
  Tells if AST replay is enabled/disabled for this environment. By default, is false i.e. disabled.
  """
  enabled: Boolean!

  """Max number of APIs to fetch in a replay scan"""
  maxApiLimit: Int

  """Flag to control if to skip unlearnt APIs in a replay scan"""
  skipNonLearntApis: Boolean

  """Flag to control if to skip under discovery APIs in a replay scan"""
  skipUnderDiscoveryApis: Boolean

  """Filters Spans based on location and key-value predicate"""
  spanFilters: ReplayConfigSpanFilters
}

type AstResult {
  """ast aggregation"""
  aggregation(key: AstAggregationField!, aggregation: AstAggregationType!): AstValue

  """ast selection"""
  selection(key: AstSelectionField!): AstValue
}

type AstResultSet {
  count: Long!
  results: [AstResult]!
  total: Long!
}

"""Ast Scan Change Details"""
type AstScanChange {
  astScanStateChange: AstScanStateChange!
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

type AstScanJob {
  """AST scan job spec"""
  astScanScheduleJobSpec: AstScanJobSpec!

  """Schedule configuration of scan in case of daily schedule"""
  dailySchedule: DailySchedule
  id: String!

  """Scan id for latest scan run for the schedule, completed or running"""
  latestScanId: String

  """Schedule configuration of scan in case of monthly schedule"""
  monthlySchedule: MonthlySchedule

  """Scan schedule job"""
  name: String!

  """Timestamp for next job run"""
  nextExecutionTime: DateTime

  """Schedule configuration level, defines frequency"""
  scheduleFrequencyType: ScheduleFrequencyType @deprecated(reason: "Deprecated")

  """Status if the job is enabled or disabled"""
  status: ScheduledJobStatus!

  """Schedule configuration of scan in case of weekly schedule"""
  weeklySchedule: WeeklySchedule
}

type AstScanJobSpec {
  """Scope of the referenced scan"""
  referencedScanScope: AstReferencedScanScope

  """Allowed runner ids to run the scheduled scan"""
  runnerIds: [String]

  """Allowed runner names to run the scheduled scan"""
  runnerNames: [String]

  """Scan id using which scheduled scan will be cloned"""
  scanId: String

  """Scan suite id using which scheduled scan will be initiated"""
  scanInfoSource: ScanInfoSource

  """Scan policy id using which scheduled scan will be initiated"""
  scanPolicyId: String

  """Scan suite id using which scheduled scan will be initiated"""
  scanSuiteId: String
}

"""AST scan runner logs persistence config"""
type AstScanLogsPersistenceConfig {
  """
  Max log lines to be persisted. It is considered unlimited in case this is set to null
  """
  maxPersistLogLines: Int
}

"""AST scan runner logs purge config"""
type AstScanLogsPurgeConfig {
  """Says if ast scan logs purging is enabled"""
  enabled: Boolean!

  """Duration for which scan logs are to be persisted"""
  retentionDuration: Duration!
}

"""Ast Scan Change Details"""
type AstScanPolicyChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

type AstScanScheduleResultSet {
  count: Long!
  results: [AstScanJob]!
  total: Long!
}

enum AstScanState {
  """SCAN_STATE_UNSPECIFIED"""
  SCAN_STATE_UNSPECIFIED

  """SCAN_STATE_INITIALIZED"""
  SCAN_STATE_INITIALIZED

  """SCAN_STATE_RUNNING"""
  SCAN_STATE_RUNNING

  """SCAN_STATE_COMPLETED"""
  SCAN_STATE_COMPLETED

  """SCAN_STATE_ABORTED"""
  SCAN_STATE_ABORTED

  """SCAN_STATE_TIMED_OUT"""
  SCAN_STATE_TIMED_OUT

  """SCAN_STATE_MAX_TEST_LIMIT_REACHED"""
  SCAN_STATE_MAX_TEST_LIMIT_REACHED

  """SCAN_STATE_CLI_IDLE_TIME_OUT"""
  SCAN_STATE_CLI_IDLE_TIME_OUT

  """SCAN_STATE_ERROR"""
  SCAN_STATE_ERROR

  """SCAN_STATE_QUEUED"""
  SCAN_STATE_QUEUED

  """SCAN_STATE_SCHEDULED"""
  SCAN_STATE_SCHEDULED

  """SCAN_STATE_NO_HEARTBEAT"""
  SCAN_STATE_NO_HEARTBEAT

  """SCAN_STATE_PAUSED_EXECUTION_STOPPED_GENERATION"""
  SCAN_STATE_PAUSED_EXECUTION_STOPPED_GENERATION

  """SCAN_STATE_RESUME_EXECUTION"""
  SCAN_STATE_RESUME_EXECUTION
}

"""Ast Scan State Change Details"""
type AstScanStateChange {
  astScanCurrentState: AstScanState!
  astScanPreviousState: AstScanState!
}

"""Ast Scan Change Details"""
type AstScanSuiteChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

enum AstSelectionField {
  """ATTACK_POLICY"""
  ATTACK_POLICY

  """ENVIRONMENT"""
  ENVIRONMENT

  """SCAN_SUITE_NAME"""
  SCAN_SUITE_NAME

  """SCAN_SUITE_ID"""
  SCAN_SUITE_ID

  """SCANNED_APIS_COUNT"""
  SCANNED_APIS_COUNT

  """API_NAME"""
  API_NAME

  """API_ID"""
  API_ID

  """EXECUTED_TESTS_COUNT"""
  EXECUTED_TESTS_COUNT

  """GENERATED_TESTS_COUNT"""
  GENERATED_TESTS_COUNT

  """VULNERABILITY_DISCOVERED_COUNT"""
  VULNERABILITY_DISCOVERED_COUNT

  """SKIPPED_API_REASON"""
  SKIPPED_API_REASON

  """SCAN_RUN_NUMBER"""
  SCAN_RUN_NUMBER

  """SCAN_STATUS"""
  SCAN_STATUS

  """SCAN_DURATION"""
  SCAN_DURATION

  """SCAN_STATUS_REASON"""
  SCAN_STATUS_REASON

  """RESPONSE_CODES"""
  RESPONSE_CODES

  """SCAN_COUNT"""
  SCAN_COUNT

  """VULNERABILITY_TREND_PERCENTAGE"""
  VULNERABILITY_TREND_PERCENTAGE

  """SCAN_ID"""
  SCAN_ID

  """API_REACHABILITY_CATEGORY"""
  API_REACHABILITY_CATEGORY

  """SCAN_END_TIME"""
  SCAN_END_TIME

  """IS_API_SCANNED"""
  IS_API_SCANNED

  """SCAN_START_TIME"""
  SCAN_START_TIME
}

enum AstSortOrder {
  """ASC"""
  ASC

  """DESC"""
  DESC
}

"""Metadata describing APIs and their traces stored for AST scans."""
type AstStoredApiMetadata {
  """ID of the API to which this metadata belongs."""
  apiId: String!

  """Name of the API to which this metadata belongs."""
  apiName: String!

  """
  Metadata of the traces stored for this API, a non-empty list as traces should always be present for a stored API.
  """
  astStoredTraceMetadata: [AstStoredTraceMetadata]!

  """Environment ID to which this API belongs."""
  environmentId: String!

  """Timestamp of the last stored trace for this API."""
  lastStoredTraceTimestamp: DateTime!
}

"""Result set of stored API metadata stored for AST."""
type AstStoredApiMetadataResultSet {
  count: Long
  total: Long

  """List of environment's stored API count."""
  environmentStoredApiCounts: [EnvironmentStoredApiCount]!

  """List of stored api metadata."""
  results: [AstStoredApiMetadata]!
}

enum AstStoredApiMetadataSortField {
  """LAST_STORED_TRACE_TIMESTAMP"""
  LAST_STORED_TRACE_TIMESTAMP

  """NAME"""
  NAME
}

"""
Metadata giving information about trace stored for an API to be used in AST scans.
"""
type AstStoredTraceMetadata {
  """Timestamp of this stored trace."""
  timestamp: DateTime!

  """ID for this stored trace."""
  traceId: String!
}

enum AstTestPluginSafetyType {
  """TEST_PLUGIN_SAFETY_TYPE_SAFE"""
  TEST_PLUGIN_SAFETY_TYPE_SAFE

  """TEST_PLUGIN_SAFETY_TYPE_UNSAFE"""
  TEST_PLUGIN_SAFETY_TYPE_UNSAFE
}

enum AstTestPluginSourceType {
  """SYSTEM"""
  SYSTEM

  """CUSTOM"""
  CUSTOM
}

enum AstTestPluginType {
  """TEST_PLUGIN_TYPE_ACTIVE"""
  TEST_PLUGIN_TYPE_ACTIVE

  """TEST_PLUGIN_TYPE_PASSIVE"""
  TEST_PLUGIN_TYPE_PASSIVE
}

type AstValue {
  type: AttributeType!
  value: Unknown
}

enum AttackField {
  """VULNERABILITY_LABEL"""
  VULNERABILITY_LABEL

  """VULNERABILITY_CATEGORY"""
  VULNERABILITY_CATEGORY

  """VULNERABILITY_SEVERITY"""
  VULNERABILITY_SEVERITY

  """SOURCE_PLUGIN"""
  SOURCE_PLUGIN

  """SOURCE_PLUGIN_SAFETY_TYPE"""
  SOURCE_PLUGIN_SAFETY_TYPE

  """SOURCE_PLUGIN_TYPE"""
  SOURCE_PLUGIN_TYPE

  """CUSTOM_LABEL"""
  CUSTOM_LABEL
}

type AttackSelection {
  attackSelectionLevel: AttackSelectionLevel!
  plugin: SelectedLevelPlugin
  pluginCategory: SelectedLevelPluginCategory
  pluginSelectionGroup: SelectedLevelPluginSelectionGroup

  """Attack selection rule"""
  rule: AttackSelectionRule
  selectionMode: SelectionMode!

  """Vulnerability type name"""
  vulnerabilityType: SelectedLevelVulnerabilityType
}

enum AttackSelectionLevel {
  """PLUGIN"""
  PLUGIN

  """PLUGIN_CATEGORY"""
  PLUGIN_CATEGORY

  """PLUGIN_SELECTION_GROUP"""
  PLUGIN_SELECTION_GROUP

  """RULES"""
  RULES

  """ALL"""
  ALL

  """VULNERABILITY_TYPE"""
  VULNERABILITY_TYPE
}

type AttackSelectionRule {
  attackField: AttackField!
  operatorType: AstFilterOperatorType!
  value: Unknown!
}

type AttributeEvidence {
  """API attribute key"""
  attributeKey: String!

  """API attribute evidence metadata"""
  evidenceMetadata: [EvidenceMetadata]!
}

type AttributeEvidenceResultSet {
  count: Long!
  results: [AttributeEvidence]!
  total: Long!
}

type AttributeExpression {
  key: String!
  subpath: String
}

type AttributeMetadata {
  description: String
  displayName: String!
  groupable: Boolean!
  isCustom: Boolean!
  name: String!

  """
  Signifies an attribute is only available as an aggregation on all queries
  """
  onlySupportsAggregation: Boolean!

  """Signifies an attribute is only available in a grouped query"""
  onlySupportsGrouping: Boolean!
  scope: String!
  supportedAggregations: [MetricAggregationType]!
  type: AttributeType!
  units: String!
}

type AttributeOverride {
  apiExternalOverride: ApiExternalOverride
  attributeOverrideType: AttributeOverrideType!
  paramTypeOverride: ParamTypeOverride
}

enum AttributeOverrideParamTypeAction {
  """EXCLUDE"""
  EXCLUDE

  """COLLAPSE"""
  COLLAPSE
}

enum AttributeOverrideParamValueType {
  """BOOLEAN"""
  BOOLEAN

  """INTEGER"""
  INTEGER

  """FLOAT"""
  FLOAT

  """CHAR"""
  CHAR

  """STRING"""
  STRING

  """OBJECT"""
  OBJECT

  """URL"""
  URL

  """EMAIL"""
  EMAIL

  """JSON"""
  JSON

  """CREDIT_CARD"""
  CREDIT_CARD

  """DATE"""
  DATE

  """ARRAY"""
  ARRAY

  """CLOB"""
  CLOB
}

enum AttributeOverrideType {
  """PARAM_TYPE"""
  PARAM_TYPE

  """API_EXTERNAL"""
  API_EXTERNAL
}

enum AttributeScope {
  """TRACE"""
  TRACE

  """SPAN"""
  SPAN

  """API"""
  API

  """API_TRACE"""
  API_TRACE

  """BACKEND"""
  BACKEND

  """BACKEND_TRACE"""
  BACKEND_TRACE

  """INTERACTION"""
  INTERACTION

  """SERVICE"""
  SERVICE

  """ACTOR"""
  ACTOR

  """DOMAIN"""
  DOMAIN

  """DOMAIN_EVENT"""
  DOMAIN_EVENT

  """BACKEND_API"""
  BACKEND_API
}

enum AttributeType {
  """STRING"""
  STRING

  """BOOLEAN"""
  BOOLEAN

  """LONG"""
  LONG

  """DOUBLE"""
  DOUBLE

  """TIMESTAMP"""
  TIMESTAMP

  """STRING_MAP"""
  STRING_MAP

  """STRING_ARRAY"""
  STRING_ARRAY

  """DOUBLE_ARRAY"""
  DOUBLE_ARRAY

  """LONG_ARRAY"""
  LONG_ARRAY

  """BOOLEAN_ARRAY"""
  BOOLEAN_ARRAY
}

"""A rule describing how to determine auth on a request"""
type AuthDetectionRule {
  """Rule ID"""
  id: String!

  """
  Type of auth the rule identifies. If auth type is unset the specific auth type is not assigned
  """
  authType: String

  """Default rules have been provided by Traceable"""
  defaultRule: Boolean!

  """Predicate used to match against a request"""
  predicate: AuthDetectionRulePredicate!

  """
  Scope for which the rule applies. If scope is unset, a rule is always applicable
  """
  scope: AuthDetectionRuleScope
}

"""
A complex predicate representing one or more children combined with a logical operator
"""
type AuthDetectionRuleCompositePredicate {
  """Child predicates"""
  children: [AuthDetectionRulePredicate]!

  """Operator to used for combining child predicates"""
  operator: LogicalOperator!
}

"""A predicate that compares against a key-value pair"""
type AuthDetectionRuleKeyValuePredicate {
  """A predicate to compare against the key of a key-value pair"""
  keyPredicate: AuthDetectionRuleStringPredicate!

  """
  A predicate to compare against the value of a key-value pair. Optional.
  """
  valuePredicate: AuthDetectionRuleStringPredicate
}

"""Predicate used to detect auth on a request"""
type AuthDetectionRulePredicate {
  """Composite predicate representing a complex condition."""
  compositePredicate: AuthDetectionRuleCompositePredicate

  """Key Value predicate representing a match against a key-value pair"""
  keyValuePredicate: AuthDetectionRuleKeyValuePredicate

  """
  The type of predicate populated. Only one predicate field should be assigned corresponding to this type
  """
  predicateType: AuthDetectionRulePredicateType!
}

"""Type of predicate determining auth"""
enum AuthDetectionRulePredicateType {
  """Composite predicates use the AuthDetectionRuleCompositePredicate type"""
  COMPOSITE_PREDICATE

  """Header predicates use the AuthDetectionRuleKeyValuePredicate type"""
  HEADER_PREDICATE

  """Cookie predicates use the AuthDetectionRuleKeyValuePredicate type"""
  COOKIE_PREDICATE

  """
  Query Parameter predicates use the AuthDetectionRuleKeyValuePredicate type
  """
  QUERY_PARAMETER_PREDICATE

  """Form Body predicates use the AuthDetectionRuleKeyValuePredicate type"""
  FORM_BODY_PREDICATE

  """JSON Body predicates use the AuthDetectionRuleKeyValuePredicate type"""
  JSON_BODY_PREDICATE
}

"""An operator for comparing against a string value"""
enum AuthDetectionRuleRelationalOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS

  """MATCHES_REGEX"""
  MATCHES_REGEX

  """NOT_MATCHES_REGEX"""
  NOT_MATCHES_REGEX
}

"""Result Set of Auth Detection Rules"""
type AuthDetectionRuleResultSet {
  count: Long
  total: Long

  """Rules matching the request"""
  results: [AuthDetectionRule]!
}

"""Scope for which an Auth Detection Rule applies"""
type AuthDetectionRuleScope {
  """A list of environment names where the rule is applicable"""
  environmentNames: [String]!
}

"""A predicate that compares against a string value"""
type AuthDetectionRuleStringPredicate {
  """Operator to use for comparison"""
  operator: AuthDetectionRuleRelationalOperator!

  """Value to compare against"""
  value: String!
}

type Authentication {
  type: String!
}

"""Create a task which will test the provided hook"""
type AuthHookTestResult {
  """Log entries while testing auth hook"""
  logEntries: [String]

  """Status of testing, will be null unless passes or fails"""
  status: AstHookTestStatus!
}

enum AuthMechanism {
  """BEARER_TOKEN"""
  BEARER_TOKEN

  """FORM_BASED"""
  FORM_BASED

  """AUTH_CUSTOM_JSON_PAYLOAD"""
  AUTH_CUSTOM_JSON_PAYLOAD

  """AUTH0_CLIENT_CREDENTIALS"""
  AUTH0_CLIENT_CREDENTIALS

  """AUTH0_RESOURCE_OWNER_PASSWORD"""
  AUTH0_RESOURCE_OWNER_PASSWORD

  """OKTA_CLIENT_CREDENTIALS"""
  OKTA_CLIENT_CREDENTIALS

  """OKTA_RESOURCE_OWNER_PASSWORD"""
  OKTA_RESOURCE_OWNER_PASSWORD

  """COGNITO_USER_PASSWORD"""
  COGNITO_USER_PASSWORD

  """CUSTOM"""
  CUSTOM
}

enum AuthMechanismV2 {
  """POSTMAN"""
  POSTMAN

  """BASIC_AUTH"""
  BASIC_AUTH

  """JWT"""
  JWT

  """HMAC"""
  HMAC

  """OAUTH"""
  OAUTH

  """CONTENT_SIGNATURE"""
  CONTENT_SIGNATURE

  """BEARER"""
  BEARER

  """MUTUAL_TLS"""
  MUTUAL_TLS

  """AWS_SIGNATURE_V4"""
  AWS_SIGNATURE_V4

  """POP_TOKEN_SIGNATURE"""
  POP_TOKEN_SIGNATURE

  """API_KEY"""
  API_KEY

  """CUSTOM"""
  CUSTOM
}

type AuthorizationLinkResponse {
  authorizationLink: String!
  requestToken: String!
}

enum AutomaticDetectionStatus {
  """ENABLED"""
  ENABLED

  """DISABLED"""
  DISABLED
}

type AutomaticSecretRedactionResponse {
  enabled: Boolean!
}

"""AWS WAF authentication using Id and secret"""
type AwsAuthenticationCredentials {
  """AWS Access Key"""
  accessKey: String

  """AWS Access Key ID"""
  accessKeyId: String!
}

"""Action Type for AWS Integration"""
enum AwsIntegrationActionType {
  """COUNT"""
  COUNT

  """ALLOW_OR_BLOCK"""
  ALLOW_OR_BLOCK
}

"""Authentication Type Used For Aws Waf"""
enum AwsIntegrationAuthType {
  """AWS_CREDENTIALS_AUTHENTICATION"""
  AWS_CREDENTIALS_AUTHENTICATION

  """WEB_IDENTITY_AUTHENTICATION"""
  WEB_IDENTITY_AUTHENTICATION
}

"""AWS WAF Integration Details"""
type AwsIntegrationParams {
  """AWS Access Key"""
  accessKey: String @deprecated(reason: "Deprecated")

  """AWS Access Key ID"""
  accessKeyId: String @deprecated(reason: "Deprecated")

  """Type of authentication used for Aws integration"""
  awsIntegrationAuthType: AwsIntegrationAuthType

  """AWS client id and secret to authenticate"""
  awsAuthCredentials: AwsAuthenticationCredentials

  """Aws action type for all the rules defined at integration scope"""
  awsIntegrationActionType: AwsIntegrationActionType!

  """List of AWS resources"""
  resources: [AwsResource]!

  """Rule group capacity for Aws waf"""
  ruleGroupCapacity: Long

  """web identity credentials to authenticate"""
  webIdentityAuthCredentials: WebIdentityAuthenticationCredentials
}

"""AWS resource detail"""
type AwsResource {
  """Resource ARN"""
  arn: String!

  """Resource region"""
  region: String!
}

type AwsSignature {
  """Access Id key"""
  accessIdKey: String!

  """Aws region"""
  awsRegion: String!

  """Secret access key"""
  secretAccessKey: String!

  """aws service name"""
  serviceName: String!
}

"""Aws Waf rule"""
type AwsWafRule {
  """Aws Waf rule action"""
  ruleAction: AwsWafRuleAction!

  """Aws Waf rule override action"""
  ruleOverrideAction: AwsWafRuleOverrideAction!

  """Aws Waf rule priority"""
  priority: Int!

  """Aws Waf rule Name"""
  ruleName: String!

  """Aws Waf statement"""
  awsStatement: String!
}

"""Aws waf rule action"""
enum AwsWafRuleAction {
  """BLOCK"""
  BLOCK

  """ALLOW"""
  ALLOW

  """COUNT"""
  COUNT

  """UNSUPPORTED"""
  UNSUPPORTED
}

"""Aws waf rule override action"""
enum AwsWafRuleOverrideAction {
  """COUNT"""
  COUNT

  """NONE"""
  NONE
}

"""Azure application gateway waf details"""
type AzureApplicationGatewayWafDetails {
  """Managed rule definition"""
  managedRuleDefinition: AzureManagedRuleDefinition!
}

"""Azure auth credentials"""
type AzureAuthCredentials {
  """Azure client ID"""
  clientId: String!

  """Azure client secret"""
  clientSecret: String!
}

"""A set of all work item type field details for a project"""
type AzureDevopsAzureDevopsIntegrationGetAzureProjectWorkItemTypeFieldDetailsResultSet {
  """
  This list contains all the work item type field details for the project
  """
  workItemTypeFieldDetails: [AzureDevopsIntegrationWorkItemTypeFieldDetails]!
}

"""A set containing the details of azure devops assignees"""
type AzureDevopsIntegrationAssigneesResultSet {
  """The details of azure devops work item assignees"""
  assignees: [AzureDevopsIntegrationUserInfo]!
}

"""A set of azure devops projects"""
type AzureDevopsIntegrationGetAllAzureDevopsProjectsResultSet {
  """
  This list contains all the azure devops projects associated with the environment
  """
  projects: [AzureDevopsIntegrationProjectDetails]!
}

"""A set of all work item types for a project"""
type AzureDevopsIntegrationGetAzureProjectWorkItemTypesResultSet {
  """This list contains all the work item types for the project"""
  workItemTypes: [String]!
}

"""A set of azure devops project details"""
type AzureDevopsIntegrationProjectDetails {
  """The project ID of the azure devops project"""
  projectId: String!

  """The project name of the azure devops project"""
  projectName: String!
}

"""The details corresponding to a azure devops integration"""
type AzureDevopsIntegrationResponse {
  """A suitable description about this integration"""
  description: String!

  """The associated set of environment as IDs"""
  environmentIds: [String]!

  """The ID corresponding to this Azure Devops integration"""
  integrationConfigId: String!

  """The name of this Azure Devops integration"""
  name: String!

  """The configured url of the Azure Devops instance"""
  organizationUrl: String!
}

"""A set of configured azure devops integrations"""
type AzureDevopsIntegrationsResultSet {
  """A set of configured azure devops integrations"""
  azureDevopsIntegrations: [AzureDevopsIntegrationResponse]!
}

"""The information corresponding to a azure devops user"""
type AzureDevopsIntegrationUserInfo {
  """The name of the user."""
  displayName: String!

  """The "user-id" of the user. Azure Devops identifies the user by this ID"""
  userId: String!
}

"""A mapping from an incident reference to the incident details"""
type AzureDevopsIntegrationWorkItemMapping {
  """The associated incident."""
  workItem: AzureDevopsIntegrationWorkItemResponse!

  """The work item reference corresponding to the work item."""
  workItemReference: AzureDevopsIntegrationWorkItemReference!
}

"""A link to the entity associated to a azure devops work item"""
type AzureDevopsIntegrationWorkItemReference {
  """The ID of entity for associated with this azure devops work item"""
  referenceId: String!

  """The type of entity for associated with this azure devops work item"""
  referenceType: AzureDevopsIntegrationWorkItemReferenceType!
}

"""
The types of entities for which a azure devops work item can be created
"""
enum AzureDevopsIntegrationWorkItemReferenceType {
  """API_SPEC_CONFORMANCE"""
  API_SPEC_CONFORMANCE

  """API_ENDPOINT_DETAIL"""
  API_ENDPOINT_DETAIL

  """AST_SCAN_VULNERABILITY"""
  AST_SCAN_VULNERABILITY

  """EVENT"""
  EVENT

  """SENSITIVE_DATA"""
  SENSITIVE_DATA

  """THREAT_ACTIVITY"""
  THREAT_ACTIVITY

  """VULNERABILITY"""
  VULNERABILITY
}

"""The details corresponding to a azure devops integration"""
type AzureDevopsIntegrationWorkItemResponse {
  """The url to the created azure devops work item"""
  workItemUrl: String!
}

"""A set of azure devops work item details"""
type AzureDevopsIntegrationWorkItemsResultSet {
  """This list contains incidents mapped from references to details"""
  workItemMappings: [AzureDevopsIntegrationWorkItemMapping]!
}

"""A set of work item type field details for a project"""
type AzureDevopsIntegrationWorkItemTypeFieldDetails {
  """This list contains all the allowed values for the field"""
  allowedValues: [String]!

  """The default value of the field"""
  defaultValue: String

  """The name of the field"""
  fieldName: String!

  """The reference path of the field"""
  fieldReferencePath: String!
}

"""Azure environment"""
enum AzureEnvironment {
  """AZURE"""
  AZURE

  """CHINA"""
  CHINA

  """US_GOVERNMENT"""
  US_GOVERNMENT
}

"""Azure front door waf details"""
type AzureFrontDoorWafDetails {
  """Front door names"""
  frontDoorNames: [String]!
}

"""Azure integration details"""
type AzureIntegrationDetails {
  """Azure auth credentials"""
  azureAuthCredentials: AzureAuthCredentials!

  """Azure environment"""
  azureEnvironment: AzureEnvironment!

  """Azure resource group details"""
  azureResourceGroupDetails: [AzureResourceGroupDetails] @deprecated(reason: "Deprecated")

  """Azure tenant ID"""
  azureTenantId: String!

  """Azure waf details"""
  azureWafDetails: AzureWafDetails @deprecated(reason: "Deprecated")

  """Azure waf policy details"""
  azureWafPolicyDetails: AzureWafPolicyDetails!

  """Azure integration detail id"""
  id: String

  """Azure subscription ID"""
  subscriptionId: String!
}

"""Azure integration params"""
type AzureIntegrationParams {
  """Azure integration details"""
  azureIntegrationDetails: [AzureIntegrationDetails]!
}

"""Azure managed rule definition"""
type AzureManagedRuleDefinition {
  """Managed rule set type"""
  ruleSetType: String!

  """Managed rule set version"""
  ruleSetVersion: String!
}

"""Azure resource group details"""
type AzureResourceGroupDetails {
  """Azure resource group name"""
  name: String!

  """Azure resource group region"""
  region: String!
}

"""Azure waf details"""
type AzureWafDetails {
  """Azure application gateway waf details"""
  azureApplicationGatewayWafDetails: AzureApplicationGatewayWafDetails

  """Azure front door waf details"""
  azureFrontDoorWafDetails: AzureFrontDoorWafDetails

  """Azure waf type"""
  azureWafType: AzureWafType!
}

"""Azure waf policy details on which custom rules will be applied"""
type AzureWafPolicyDetails {
  """Type of azure waf policy"""
  azureWafType: AzureWafType!

  """Waf policy name"""
  wafPolicyName: String!

  """Resource group name of the waf policy"""
  wafPolicyResourceGroupName: String!
}

"""Azure waf policy type"""
enum AzureWafPolicyType {
  """APPLICATION_GATEWAY"""
  APPLICATION_GATEWAY

  """FRONT_DOOR"""
  FRONT_DOOR
}

"""Azure waf type"""
enum AzureWafType {
  """APPLICATION_GATEWAY"""
  APPLICATION_GATEWAY

  """FRONT_DOOR"""
  FRONT_DOOR
}

"""Backend API change details"""
type BackendApiChange {
  backendApiDataTypeChange: BackendApiDataTypeChange
  backendApiBackendIdentity: ActivityLogIdentity!
  changeType: backendApiChangeType!
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

enum backendApiChangeType {
  """BACKEND_API_CREATE"""
  BACKEND_API_CREATE

  """BACKEND_API_DATA_TYPE_CHANGE"""
  BACKEND_API_DATA_TYPE_CHANGE
}

type BackendApiDataTypeChange {
  dataTypeChange: [dataTypeChange]!
}

"""Backend change details"""
type BackendEntityChange {
  backendType: backendType!
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

enum backendType {
  """BACKEND"""
  BACKEND

  """THIRD_PARTY"""
  THIRD_PARTY

  """UNSPECIFIED"""
  UNSPECIFIED
}

type BaselinedMetricAggregation {
  baseline: MetricBaselineAggregation
  value: Float
}

type BaselinedMetricAggregationContainer {
  avg: BaselinedMetricAggregation!
  avgrate(size: Int!, units: TimeUnit!): BaselinedMetricAggregation!
  count: BaselinedMetricAggregation!
  distinctarray: MetricAggregation!
  distinctcount: BaselinedMetricAggregation!
  max: BaselinedMetricAggregation!
  min: BaselinedMetricAggregation!
  percentile(size: Int!): BaselinedMetricAggregation!
  sum: BaselinedMetricAggregation!
}

type baselineInterval {
  avg: MetricBaselineAggregation!
  avgrate(size: Int!, units: TimeUnit!): MetricBaselineAggregation!
  count: MetricBaselineAggregation!
  distinctarray: MetricAggregation!
  distinctcount: MetricBaselineAggregation!
  endTime: DateTime!
  max: MetricBaselineAggregation!
  min: MetricBaselineAggregation!
  percentile(size: Int!): MetricBaselineAggregation!
  startTime: DateTime!
  sum: MetricBaselineAggregation!
}

type BasicAuth {
  """password"""
  password: String!

  """username"""
  username: String!

  """value format"""
  valueFormat: String
}

type Bearer {
  """Explicit token"""
  explicitToken: String

  """request token info"""
  requestTokenInfo: RequestTokenInfo!
}

enum BillingFrequency {
  """ANNUAL"""
  ANNUAL

  """MONTHLY"""
  MONTHLY
}

type BlockedEventCondition {
  blockedEventTypes: [BlockedEventType]

  """List of blocked threat activities """
  blockedThreatActivityConditions: [BlockedThreatActivityCondition]
}

enum BlockedEventType {
  """THREAT_ACTOR"""
  THREAT_ACTOR

  """SIGNATURE_BASED"""
  SIGNATURE_BASED

  """RATE_LIMITING"""
  RATE_LIMITING

  """IP_BASED"""
  IP_BASED

  """LOCATION_BASED"""
  LOCATION_BASED

  """IN_AGENT_VULNERABLE_LIBRARY_BASED"""
  IN_AGENT_VULNERABLE_LIBRARY_BASED

  """CUSTOM_SIGNATURE_BASED"""
  CUSTOM_SIGNATURE_BASED

  """MALICIOUS_SOURCES_BASED"""
  MALICIOUS_SOURCES_BASED
}

"""Available options for Blocked Security Event Condition"""
type BlockedSecurityEventConditionOptions {
  """List of blocked threat activity condition options"""
  blockedThreatActivityConditionOptions: [BlockedThreatActivityConditionOption]!
}

"""Blocked threat activity condition"""
type BlockedThreatActivityCondition {
  """Blocking threat activity condition type"""
  blockedThreatActivityConditionType: BlockedThreatActivityConditionType!

  """Custom blocking rule condition"""
  customBlockingCondition: CustomBlockingCondition

  """Pre defined blocking rule condition"""
  preDefinedBlockingCondition: PreDefinedBlockingCondition
}

"""Blocked threat activity condition option"""
type BlockedThreatActivityConditionOption {
  """Rule ID of pre defined anomaly rule"""
  anomalyRuleId: String

  """Blocked threat activity condition type"""
  blockedThreatActivityConditionType: BlockedThreatActivityConditionType!

  """Custom blocking type"""
  customBlockingType: CustomBlockingType

  """Display name for the threat activity condition option"""
  displayName: String!

  """Boolean for whether the anomaly rule is hidden from customers"""
  hidden: Boolean
}

enum BlockedThreatActivityConditionType {
  """PRE_DEFINED"""
  PRE_DEFINED

  """CUSTOM"""
  CUSTOM
}

type BlockingMetadataAnomalyDetectionConfig {
  keyValuePairs: [AnomalyDetectionConfigKeyValuePair]
  name: BlockingMetadataAnomalyDetectionConfigName!
}

enum BlockingMetadataAnomalyDetectionConfigName {
  """CUSTOM_IP"""
  CUSTOM_IP

  """CUSTOM_REGION"""
  CUSTOM_REGION

  """MALICIOUS_SOURCES"""
  MALICIOUS_SOURCES

  """CUSTOM_SIGNATURE"""
  CUSTOM_SIGNATURE

  """RATE_LIMIT"""
  RATE_LIMIT

  """THREAT_ACTOR"""
  THREAT_ACTOR

  """SAFE_CRS"""
  SAFE_CRS

  """IN_AGENT_VULNERABLE_LIBRARY"""
  IN_AGENT_VULNERABLE_LIBRARY
}

type BoolChange {
  currentValue: Boolean
  oldValue: Boolean
}

enum BulkUpdateOperationType {
  """SINGLE_VALUED_ATTRIBUTE_SET_OPERATION"""
  SINGLE_VALUED_ATTRIBUTE_SET_OPERATION

  """MULTI_VALUED_ATTRIBUTE_OPERATION"""
  MULTI_VALUED_ATTRIBUTE_OPERATION

  """ATTRIBUTE_UNSET_OPERATION"""
  ATTRIBUTE_UNSET_OPERATION
}

type BulkUpdateResponse {
  """The number of entities updated"""
  updatedCount: Int!
}

enum CardBrand {
  """VISA"""
  VISA

  """MASTER"""
  MASTER

  """DISCOVER"""
  DISCOVER

  """AMEX"""
  AMEX

  """OTHERS"""
  OTHERS
}

type CardDetails {
  cardBrand: CardBrand!
  lastFourDigits: String!
}

type CardValueTypeDistribution {
  count: Long!
  type: String!
}

enum Category {
  """DETECTED_SECURITY_EVENT"""
  DETECTED_SECURITY_EVENT

  """BLOCKED_EVENT"""
  BLOCKED_EVENT

  """THREAT_ACTOR_STATE_CHANGE_EVENT"""
  THREAT_ACTOR_STATE_CHANGE_EVENT

  """ACTOR_SEVERITY_STATE_CHANGE_EVENT"""
  ACTOR_SEVERITY_STATE_CHANGE_EVENT

  """SECURITY_CONFIG_CHANGE_EVENT"""
  SECURITY_CONFIG_CHANGE_EVENT

  """USER_CHANGE_EVENT"""
  USER_CHANGE_EVENT

  """NOTIFICATION_CONFIG_CHANGE_EVENT"""
  NOTIFICATION_CONFIG_CHANGE_EVENT

  """DATA_COLLECTION_CHANGE_EVENT"""
  DATA_COLLECTION_CHANGE_EVENT

  """SENSITIVE_DATA_CONFIG_CHANGE_EVENT"""
  SENSITIVE_DATA_CONFIG_CHANGE_EVENT

  """API_FRAUD_INCIDENT_CHANGE_EVENT"""
  API_FRAUD_INCIDENT_CHANGE_EVENT

  """POSTURE_EVENT"""
  POSTURE_EVENT

  """API_NAMING_RULE_CONFIG_CHANGE_EVENT"""
  API_NAMING_RULE_CONFIG_CHANGE_EVENT

  """EXCLUDE_SPAN_RULE_CONFIG_CHANGE_EVENT"""
  EXCLUDE_SPAN_RULE_CONFIG_CHANGE_EVENT

  """API_SPEC_CONFIG_CHANGE_EVENT"""
  API_SPEC_CONFIG_CHANGE_EVENT

  """LABEL_CONFIG_CHANGE_EVENT"""
  LABEL_CONFIG_CHANGE_EVENT

  """RISK_SCORING_CONFIG_CHANGE_EVENT"""
  RISK_SCORING_CONFIG_CHANGE_EVENT

  """INTEGRATION_CHANGE_EVENT_CONDITION"""
  INTEGRATION_CHANGE_EVENT_CONDITION

  """THREAT_SCORING_CONFIG_CHANGE_EVENT"""
  THREAT_SCORING_CONFIG_CHANGE_EVENT

  """FRAUD_DETECTION_EVENT_CONDITION"""
  FRAUD_DETECTION_EVENT_CONDITION
}

type ClaimsKeyValue {
  key: String
  value: String
}

type CloneAndRunScanResponse {
  collaboratorEndpoint: String!
  scanId: String!
  scanStatus: ScanStatus!
}

type CloneScanDetails {
  """Source scan id in case if the scan is cloned"""
  sourceScanId: String!

  """Source scan name in case if the scan is cloned"""
  sourceScanName: String!
}

type CloudflareIntegrationParams {
  apiToken: String!
  email: String!
  zone: String!
}

type Cluster {
  actors: [ClusterActor]!
  apiSequenceDetail: [ClusterApiSequence]!
  apiUsageDetail: [ClusterApiUsage]!
  behavior: String!
  id: String!
  metrics: ClusterMetrics!
  radius: Float!
  referenceClusters: [Cluster]!
  snapshotEndTime: DateTime!
  snapshotId: String!
  snapshotStartTime: DateTime!
  threatType: String!
  title: String!
  x: Float!
  y: Float!
}

type ClusterActor {
  id: String!
  name: String!
}

type ClusterApi {
  id: String!
  isAttacked: Boolean!
  isPiiApi: Boolean!
  name: String!
}

type ClusterApiSequence {
  fromApi: ClusterApi!
  toApi: ClusterApi!
  weight: Float!
}

type ClusterApiUsage {
  api: ClusterApi!
  weight: Float!
}

type ClusterMetrics {
  maxSequenceLength: Float!
  maxSessionDuration: Long!
  medianSequenceLength: Float!
  medianSessionDuration: Long!
  piiRiskScore: Float!
  sessionCount: Long!
  uniqueApiCount: Long!
  uniqueUserCount: Long!
}

type ClustersSnapshot {
  clusters(id: String, filterBy: [InputFilter], orderBy: [InputOrder], limit: Int, offset: Int): [Cluster]!
  constraints: ClustersSnapshotConstraints!
  id: String!
  snapshotEndTime: DateTime!
  snapshotStartTime: DateTime!
  total: Long!
}

type ClustersSnapshotConstraints {
  maxX: Float!
  maxY: Float!
  minX: Float!
  minY: Float!
}

type ClustersSnapshotResultSet {
  count: Long!
  results: [ClustersSnapshot]!
  total: Long!
}

"""Code region"""
type CodeRegion {
  """Code region end column"""
  endColumn: Int!

  """Code region end line"""
  endLine: Int!

  """Code region start column"""
  startColumn: Int!

  """Code region start line"""
  startLine: Int!
}

"""A code analysis job submitted for execution"""
type CodeScanJobSubmissionResult {
  """The ID of the initiated job"""
  jobId: String!
}

type CommandHelpSegment {
  commandType: CommandHelpSegmentType!
  helpOptionsWithDetail: [HelpOptionWithDetail]!
}

enum CommandHelpSegmentType {
  """OPTIONS"""
  OPTIONS

  """COMMANDS"""
  COMMANDS
}

type CompleteOpenApiSpecReference {
  """Open API spec reference specId"""
  specId: String!
}

enum ComplexDataKey {
  """HTTP_REQUEST_COOKIE"""
  HTTP_REQUEST_COOKIE

  """HTTP_RESPONSE_COOKIE"""
  HTTP_RESPONSE_COOKIE

  """HTTP_REQUEST_BODY"""
  HTTP_REQUEST_BODY

  """HTTP_RESPONSE_BODY"""
  HTTP_RESPONSE_BODY

  """RPC_REQUEST_BODY"""
  RPC_REQUEST_BODY

  """RPC_RESPONSE_BODY"""
  RPC_RESPONSE_BODY

  """SQL_QUERY"""
  SQL_QUERY

  """HTTP_URL"""
  HTTP_URL
}

type ConfidenceScoreLevel {
  """Minimum threshold Value for high score"""
  highMinScore: Int! @deprecated(reason: "Deprecated")

  """Minimum threshold Value for medium score"""
  mediumMinScore: Int! @deprecated(reason: "Deprecated")
}

type ConfidenceScoringConfig {
  """Configured confidence score level"""
  confidenceScoreLevel: ConfidenceScoreLevel! @deprecated(reason: "Deprecated")

  """Default confidence score level"""
  defaultConfidenceScoreLevel: ConfidenceScoreLevel! @deprecated(reason: "Deprecated")
}

type ConfigResponse {
  apiUrl: String!
  flags: [FeatureFlag]!
}

type ConfirmationResponse {
  success: Boolean!
}

"""Content signature authentication mechanism"""
type ContentSignature {
  """Header key used for content signature authentication"""
  contentSignatureHeaderKey: String!

  """Private key used for content signature authentication"""
  contentSignaturePrivateKey: String
}

"""Coraza Version to be used"""
enum CorazaEngineVersion {
  """LATEST_STABLE"""
  LATEST_STABLE

  """LATEST_TEST"""
  LATEST_TEST
}

type Country {
  """Country iso code"""
  isoCode: String!

  """Country name"""
  name: String!
}

type CreateAstPolicyV2Response {
  id: String!
}

"""Response For Custom vulnerability type creation"""
type CreateCustomVulnerabilityTypeResponse {
  vulnerabilityV2Metadata: VulnerabilityV2Metadata!
}

type CreateScanEvaluationCriteriaResponse {
  id: String!
}

type CreateScanPolicyResponse {
  scanPolicyId: String!
}

type CreateScanSuiteResponse {
  id: String!
}

"""Response For Vulnerability Creation"""
type CreateVulnerabilitiesResponse {
  """Ids of created vulnerabilities"""
  createdVulnerabilityIds: [String]!
}

type CredentialStuffingAnomalyDetectionConfig {
  keyValuePairs: [AnomalyDetectionConfigKeyValuePair]
  name: CredentialStuffingAnomalyDetectionConfigName!
  ruleId: String
}

enum CredentialStuffingAnomalyDetectionConfigName {
  """CREDENTIAL_STUFFING_ANOMALY_CONFIG"""
  CREDENTIAL_STUFFING_ANOMALY_CONFIG
}

type CredentialStuffingTuningConfig {
  """
  The detection config would be applied on the endpoints identified by this config
  """
  detectionScopeConfig: DetectionScopeConfig!

  """
  Percentage threshold for the failed attempts to be considered as credntial stuffing attack
  """
  failedLoginPercentageThreshold: Long!

  """Look back duration for the detector"""
  lookBackDuration: Duration!

  """
  Threshold for the number of user accounts attacked per IP to be considered as credential stuffing attack
  """
  uniqueUsersThreshold: Long!

  """Config for extracting the username from the API"""
  usernameExtractionConfig: ParameterExtractionConfig!
}

enum CrudAction {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE

  """DELETE"""
  DELETE
}

enum Currency {
  """USD"""
  USD
}

"""Initiator Attributes for the fraud detected based on custom attributes"""
type CustomAttributesBasedInitiatorAttributes {
  """
  A list of attribute name and value pairs characterizing this fraud incident
  """
  attributes: [KeyValuePair]!
}

"""Custom blocking rule condition"""
type CustomBlockingCondition {
  """Types of custom blocking"""
  customBlockingType: CustomBlockingType!
}

"""Types of custom blocking"""
enum CustomBlockingType {
  """CUSTOM_SIGNATURE"""
  CUSTOM_SIGNATURE

  """RATE_LIMITING"""
  RATE_LIMITING

  """DATA_ACCESS"""
  DATA_ACCESS

  """ENUMERATION"""
  ENUMERATION

  """MALICIOUS_SOURCES_IP_RANGE"""
  MALICIOUS_SOURCES_IP_RANGE

  """MALICIOUS_SOURCES_IP_TYPE"""
  MALICIOUS_SOURCES_IP_TYPE

  """MALICIOUS_SOURCES_REGION"""
  MALICIOUS_SOURCES_REGION

  """MALICIOUS_SOURCES_EMAIL"""
  MALICIOUS_SOURCES_EMAIL

  """THREAT_ACTOR"""
  THREAT_ACTOR

  """IN_AGENT_VULNERABLE_LIBRARY"""
  IN_AGENT_VULNERABLE_LIBRARY
}

type CustomComplianceIssueConfig {
  enabled: Boolean

  """Identifier for the custom compliance"""
  id: String!
  scopeOfDetection: PolicyScope

  """Description for the custom compliance"""
  description: String

  """Detection conditions for custom compliance."""
  filterConditions: PolicyFilter!
}

"""Custom detection rule condition"""
type CustomDetectionCondition {
  """Types of custom detection"""
  customDetectionType: CustomDetectionType!
}

"""Types of custom detection"""
enum CustomDetectionType {
  """CUSTOM_SIGNATURE"""
  CUSTOM_SIGNATURE

  """RATE_LIMITING"""
  RATE_LIMITING

  """DATA_ACCESS"""
  DATA_ACCESS

  """ENUMERATION"""
  ENUMERATION

  """MALICIOUS_SOURCES_IP_RANGE"""
  MALICIOUS_SOURCES_IP_RANGE

  """MALICIOUS_SOURCES_IP_TYPE"""
  MALICIOUS_SOURCES_IP_TYPE

  """MALICIOUS_SOURCES_REGION"""
  MALICIOUS_SOURCES_REGION

  """MALICIOUS_SOURCES_EMAIL"""
  MALICIOUS_SOURCES_EMAIL
}

type CustomerInfo {
  accountEmail: String
  companyName: String

  """Indicates whether signing MSA is required"""
  isMsaRequired: Boolean!
  isPlayground: Boolean! @deprecated(reason: "see isPlaygroundAvailable")

  """Indicates whether a playground is accessible from this environment"""
  isPlaygroundAvailable: Boolean!

  """
  Indicates whether this customer is using SAML for assigning roles to the user a.k.a authorization
  """
  isSamlAuthorization: Boolean!
  licenseExpiration: DateTime!
  licenseTier: LicenseTier!
  licenses: [License]!

  """Signing info of Master service Agreement"""
  msaSigningInfo: MsaSigningInfo
  numAllowedApis: IntegerLimit!
  numAllowedCalls: IntegerLimit!
  paymentDetails: PaymentDetails
  userProvisionInfo: UserProvisionInfo
  userProvisionInfoV2: UserProvisionInfoV2
}

"""User attribution rule data in JSON format"""
type CustomJsonUserAttributionData {
  """JSON rule data for authentication type"""
  authTypeJson: String

  """JSON rule data for user ID"""
  userIdJson: String

  """JSON rule data for user role"""
  userRoleJson: String
}

type CustomPluginTestHttpRequestHeader {
  key: String!
  value: String!
}

enum CustomPluginTestHttpRequestMethod {
  """GET"""
  GET

  """POST"""
  POST

  """PUT"""
  PUT

  """DELETE"""
  DELETE

  """PATCH"""
  PATCH

  """HEAD"""
  HEAD

  """OPTIONS"""
  OPTIONS

  """TRACE"""
  TRACE
}

type CustomPluginTestHttpRestApiDetails {
  """endpoint id extracted from the trace"""
  endpointId: String

  """http method type to test the plugin"""
  httpMethod: CustomPluginTestHttpRequestMethod!

  """http request headers to test the plugin"""
  httpHeaders: [CustomPluginTestHttpRequestHeader]

  """request body or payload to test the plugin"""
  requestBody: String

  """target url to test the plugin"""
  targetUrl: String!
}

type CustomPluginTestSampleData {
  """rest api details to test the plugin"""
  httpRestApiDetails: CustomPluginTestHttpRestApiDetails
}

type CustomRuleConfig {
  regex: String!
  urlPattern: String!
}

"""AnomalyDetectionConfig for Custom Rules"""
type CustomRulesAnomalyDetectionConfig {
  """AnomalyDetectionConfig key value pair list"""
  keyValuePairs: [AnomalyDetectionConfigKeyValuePair]

  """CustomRulesAnomalyDetectionConfig name"""
  name: CustomRulesAnomalyDetectionConfigName!
}

enum CustomRulesAnomalyDetectionConfigName {
  """MALICIOUS_SOURCES"""
  MALICIOUS_SOURCES

  """CUSTOM_SIGNATURE"""
  CUSTOM_SIGNATURE
}

type CustomSelection {
  assetsSelection: [AssetSelection]!
  attacksSelection: [AttackSelection]!
}

type CustomSignatureEnvironmentScope {
  environmentIds: [String]!
}

type CustomSignatureRule {
  blockingExpirationDuration: Duration
  blockingExpirationTime: DateTime
  description: String!
  disabled: Boolean
  id: String!
  internal: Boolean
  name: String!
  ruleDefinition: CustomSignatureRuleDefinition!
  ruleEffect: CustomSignatureRuleEffect!
  ruleScope: CustomSignatureRuleScope
  ruleSource: CustomSignatureRuleSource
}

type CustomSignatureRuleAgentEffect {
  agentModifications: [CustomSignatureRuleAgentModification]!
}

type CustomSignatureRuleAgentModification {
  agentModificationType: CustomSignatureRuleAgentModificationType!
  headerInjection: CustomSignatureRuleHeaderInjection!
}

enum CustomSignatureRuleAgentModificationType {
  """Add a header with inline processing of request on matching conditions"""
  HEADER_INJECTION
}

type CustomSignatureRuleAttributeKeyValueCombination {
  """Key match options"""
  keyMatchOptions: [CustomSignatureRuleMatchOption]!

  """value match options"""
  valueMatchOptions: [CustomSignatureRuleMatchOption]!
}

type CustomSignatureRuleAttributeKeyValueExpression {
  """Key condition"""
  keyCondition: CustomSignatureStringMatchCondition

  """Key match operator"""
  keyMatchOperator: CustomSignatureRuleMatchOperator @deprecated(reason: "Deprecated")

  """Match key"""
  matchKey: String @deprecated(reason: "Deprecated")

  """Match value"""
  matchValue: String @deprecated(reason: "Deprecated")

  """Value condition"""
  valueCondition: CustomSignatureStringMatchCondition

  """Value match operator"""
  valueMatchOperator: CustomSignatureRuleMatchOperator @deprecated(reason: "Deprecated")
}

type CustomSignatureRuleClauseEnumInfo {
  displayName: String!
  name: String!
}

type CustomSignatureRuleClauseGroup {
  clauseOperator: CustomSignatureRuleClauseOperator!
  clauses: [CustomSignatureRuleClauseRequest]!
}

enum CustomSignatureRuleClauseOperator {
  """AND"""
  AND
}

type CustomSignatureRuleClauseRequest {
  attributeKeyValueExpression: CustomSignatureRuleAttributeKeyValueExpression
  clauseType: CustomSignatureRuleClauseType!

  """Custom sec rule"""
  customSecRule: CustomSignatureSecRule

  """Email domain expression applicable on a custom signature rule"""
  emailDomainExpression: CustomSignatureRuleEmailDomainExpression

  """Ip abuse velocity expression applicable on a custom signature rule"""
  ipAbuseVelocityExpression: CustomSignatureRuleIpAbuseVelocityExpression

  """IP address expression applicable on a custom signature rule"""
  ipAddressExpression: CustomSignatureRuleIpAddressExpression

  """Ip asn expression applicable on a custom signature rule"""
  ipAsnExpression: CustomSignatureRuleIpAsnExpression

  """IP connection type expression applicable on a custom signature rule"""
  ipConnectionTypeExpression: CustomSignatureRuleIpConnectionTypeExpression

  """Ip organisation expression applicable on a custom signature rule"""
  ipOrganisationExpression: CustomSignatureRuleIpOrganisationExpression

  """IP reputation expression applicable on a custom signature rule"""
  ipReputationExpression: CustomSignatureRuleIpReputationExpression

  """IP type expression applicable on a custom signature rule"""
  ipTypeExpression: CustomSignatureRuleIpTypeExpression
  keyValueExpression: CustomSignatureRuleKeyValueExpression
  matchExpression: CustomSignatureRuleMatchExpression

  """Region expression applicable on a custom signature rule"""
  regionExpression: CustomSignatureRuleRegionExpression

  """Request scanner type expression applicable on a custom signature rule"""
  requestScannerTypeExpression: CustomSignatureRuleRequestScannerTypeExpression

  """User agent expression applicable on a custom signature rule"""
  userAgentExpression: CustomSignatureRuleUserAgentExpression

  """User ID expression applicable on a custom signature rule"""
  userIdExpression: CustomSignatureRuleUserIdExpression
}

enum CustomSignatureRuleClauseType {
  """MATCH_EXPRESSION"""
  MATCH_EXPRESSION

  """KEY_VALUE_EXPRESSION"""
  KEY_VALUE_EXPRESSION

  """ATTRIBUTE_KEY_VALUE_EXPRESSION"""
  ATTRIBUTE_KEY_VALUE_EXPRESSION

  """CUSTOM_SEC_RULE"""
  CUSTOM_SEC_RULE

  """IP_ADDRESS_EXPRESSION"""
  IP_ADDRESS_EXPRESSION

  """IP_TYPE_EXPRESSION"""
  IP_TYPE_EXPRESSION

  """IP_REPUTATION_EXPRESSION"""
  IP_REPUTATION_EXPRESSION

  """IP_CONNECTION_TYPE_EXPRESSION"""
  IP_CONNECTION_TYPE_EXPRESSION

  """IP_ORGANISATION_EXPRESSION"""
  IP_ORGANISATION_EXPRESSION

  """IP_ASN_EXPRESSION"""
  IP_ASN_EXPRESSION

  """IP_ABUSE_VELOCITY_EXPRESSION"""
  IP_ABUSE_VELOCITY_EXPRESSION

  """REGION_EXPRESSION"""
  REGION_EXPRESSION

  """USER_ID_EXPRESSION"""
  USER_ID_EXPRESSION

  """EMAIL_DOMAIN_EXPRESSION"""
  EMAIL_DOMAIN_EXPRESSION

  """USER_AGENT_EXPRESSION"""
  USER_AGENT_EXPRESSION

  """REQUEST_SCANNER_TYPE_EXPRESSION"""
  REQUEST_SCANNER_TYPE_EXPRESSION
}

type CustomSignatureRuleDefinition {
  clauseGroup: CustomSignatureRuleClauseGroup!
  labels: [CustomSignatureRuleLabel]
}

type CustomSignatureRuleEffect {
  effects: [CustomSignatureRuleEffectWithModification]
  eventSeverity: CustomSignatureRuleEventSeverity
  eventType: CustomSignatureRuleEventType!
}

enum CustomSignatureRuleEffectModificationType {
  """Modifications to be done on agent"""
  AGENT_EFFECT
}

type CustomSignatureRuleEffectWithModification {
  """Effects enforced for agent while inline processing of requests"""
  agentEffect: CustomSignatureRuleAgentEffect!
  ruleEffectType: CustomSignatureRuleEffectModificationType!
}

type CustomSignatureRuleEmailDomainExpression {
  """List of email domains"""
  emailDomains: [String]

  """List of email regexes"""
  emailRegexes: [String]

  """Boolean denoting exclude condition"""
  exclude: Boolean
}

enum CustomSignatureRuleEventSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

enum CustomSignatureRuleEventType {
  """Mark for Testing and Generate Events"""
  TESTING_DETECTION

  """Generate Events"""
  NORMAL_DETECTION

  """Block Requests and Generate Events"""
  DETECTION_AND_BLOCKING

  """Allow Requests"""
  ALLOW
}

type CustomSignatureRuleExpressionCombination {
  keyValueCombinations: [CustomSignatureRuleKeyValueCombination]!
  matchCategory: CustomSignatureRuleClauseEnumInfo!
  matchCombinations: [CustomSignatureRuleMatchCombination]!
}

type CustomSignatureRuleExpressionCombinations {
  """Attribute key value combinations"""
  attributeKeyValueCombination: CustomSignatureRuleAttributeKeyValueCombination
  expressionCombinations: [CustomSignatureRuleExpressionCombination]
  keyValueCombinations: [CustomSignatureRuleKeyValueCombination]! @deprecated(reason: "Deprecated")
  matchCombinations: [CustomSignatureRuleMatchCombination]! @deprecated(reason: "Deprecated")
}

type CustomSignatureRuleHeaderInjection {
  headerCategory: CustomSignatureRuleMatchCategory!
  key: String!
  value: String!
}

enum CustomSignatureRuleIpAbuseVelocity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH
}

type CustomSignatureRuleIpAbuseVelocityExpression {
  """Minimum IP abuse velocity applicable"""
  minIpAbuseVelocity: CustomSignatureRuleIpAbuseVelocity!
}

type CustomSignatureRuleIpAddressExpression {
  """List of CIDR IP ranges"""
  cidrIpRanges: [String]

  """Boolean denoting exclude condition"""
  exclude: Boolean

  """IP address expression type"""
  ipAddressExpressionType: CustomSignatureRuleIpAddressExpressionType

  """List of IP addresses"""
  ipAddresses: [String]

  """List of IP addresses and CIDR IP ranges"""
  rawInputIpData: [String]
}

enum CustomSignatureRuleIpAddressExpressionType {
  """ALL_INTERNAL"""
  ALL_INTERNAL

  """ALL_EXTERNAL"""
  ALL_EXTERNAL
}

type CustomSignatureRuleIpAsnExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP ASN regexes"""
  ipAsnRegexes: [String]!
}

enum CustomSignatureRuleIpConnectionType {
  """RESIDENTIAL"""
  RESIDENTIAL

  """MOBILE"""
  MOBILE

  """CORPORATE"""
  CORPORATE

  """DATA_CENTER"""
  DATA_CENTER

  """EDUCATION"""
  EDUCATION
}

type CustomSignatureRuleIpConnectionTypeExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP connection types"""
  ipConnectionTypes: [CustomSignatureRuleIpConnectionType]!
}

type CustomSignatureRuleIpOrganisationExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP organisation regexes"""
  ipOrganisationRegexes: [String]!
}

type CustomSignatureRuleIpReputationExpression {
  """Minimum IP reputation severity applicable"""
  minIpReputationSeverity: CustomSignatureRuleIpReputationSeverity!
}

enum CustomSignatureRuleIpReputationSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

enum CustomSignatureRuleIpType {
  """ANONYMOUS_VPN"""
  ANONYMOUS_VPN

  """HOSTING_PROVIDER"""
  HOSTING_PROVIDER

  """PUBLIC_PROXY"""
  PUBLIC_PROXY

  """TOR_EXIT_NODE"""
  TOR_EXIT_NODE

  """BOT"""
  BOT

  """SCANNER"""
  SCANNER
}

type CustomSignatureRuleIpTypeExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP types applicable"""
  ipTypes: [CustomSignatureRuleIpType]!
}

type CustomSignatureRuleKeyValueCombination {
  keyMatchOptions: [CustomSignatureRuleMatchOption]!
  keyValueTag: CustomSignatureRuleClauseEnumInfo!
  valueMatchOptions: [CustomSignatureRuleMatchOption]!
}

type CustomSignatureRuleKeyValueExpression {
  keyMatchOperator: CustomSignatureRuleMatchOperator!
  keyValueTag: CustomSignatureRuleKeyValueTag!
  matchCategory: CustomSignatureRuleMatchCategory
  matchKey: String!
  matchValue: String!
  valueMatchOperator: CustomSignatureRuleMatchOperator!
}

enum CustomSignatureRuleKeyValueTag {
  """HEADER"""
  HEADER

  """PARAMETER"""
  PARAMETER

  """COOKIE"""
  COOKIE
}

type CustomSignatureRuleLabel {
  key: String!
  value: String!
}

enum CustomSignatureRuleMatchCategory {
  """REQUEST"""
  REQUEST

  """RESPONSE"""
  RESPONSE
}

type CustomSignatureRuleMatchCombination {
  matchKey: CustomSignatureRuleClauseEnumInfo!
  matchOptions: [CustomSignatureRuleMatchOption]!
}

type CustomSignatureRuleMatchExpression {
  matchCategory: CustomSignatureRuleMatchCategory
  matchKey: CustomSignatureRuleMatchKey!
  matchOperator: CustomSignatureRuleMatchOperator!
  matchValue: String
}

enum CustomSignatureRuleMatchKey {
  """URL"""
  URL

  """HEADER_NAME"""
  HEADER_NAME

  """HEADER_VALUE"""
  HEADER_VALUE

  """PARAMETER_NAME"""
  PARAMETER_NAME

  """PARAMETER_VALUE"""
  PARAMETER_VALUE

  """HTTP_METHOD"""
  HTTP_METHOD

  """HOST"""
  HOST

  """USER_AGENT"""
  USER_AGENT

  """STATUS_CODE"""
  STATUS_CODE

  """BODY"""
  BODY

  """BODY_SIZE"""
  BODY_SIZE

  """COOKIE_NAME"""
  COOKIE_NAME

  """COOKIE_VALUE"""
  COOKIE_VALUE

  """QUERY_PARAMS_COUNT"""
  QUERY_PARAMS_COUNT

  """HEADERS_COUNT"""
  HEADERS_COUNT

  """COOKIES_COUNT"""
  COOKIES_COUNT
}

enum CustomSignatureRuleMatchOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUAL"""
  NOT_EQUAL

  """CONTAINS"""
  CONTAINS

  """NOT_CONTAIN"""
  NOT_CONTAIN

  """MATCHES_REGEX"""
  MATCHES_REGEX

  """NOT_MATCH_REGEX"""
  NOT_MATCH_REGEX

  """GREATER_THAN"""
  GREATER_THAN

  """LESS_THAN"""
  LESS_THAN
}

type CustomSignatureRuleMatchOption {
  matchOperator: CustomSignatureRuleClauseEnumInfo!
  matchValueValidationType: CustomSignatureRuleMatchValueValidationType!
}

enum CustomSignatureRuleMatchValueValidationType {
  """NONE"""
  NONE

  """INTEGER"""
  INTEGER

  """REGEX"""
  REGEX

  """STRING"""
  STRING
}

type CustomSignatureRuleRegionExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of region identifiers"""
  regionIdentifiers: [CustomSignatureRuleRegionIdentifier]!
}

type CustomSignatureRuleRegionIdentifier {
  """Country ISO code for region identifier"""
  countryIsoCode: String!
}

type CustomSignatureRuleRequestScannerTypeExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of scanner types"""
  scannerTypes: [String]!
}

type CustomSignatureRuleResultSet {
  count: Long!
  results: [CustomSignatureRule]!
  total: Long!
}

type CustomSignatureRuleScope {
  environmentScope: CustomSignatureEnvironmentScope
}

"""The source of the rule, or who created the rule"""
enum CustomSignatureRuleSource {
  """Rule created by the customer"""
  CUSTOMER

  """Rule created by a Traceable user"""
  TRACEABLE

  """Rule created by the Traceable system"""
  SYSTEM
}

type CustomSignatureRuleUserAgentExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of user agent regexes"""
  userAgentRegexes: [String]

  """List of user agents"""
  userAgents: [String]
}

type CustomSignatureRuleUserIdExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of user ID regexes"""
  userIdRegexes: [String]

  """List of user IDs"""
  userIds: [String]
}

type CustomSignatureSecRule {
  """Input sec rule string"""
  inputSecRuleString: String
}

type CustomSignatureStringMatchCondition {
  """Key match operator"""
  operator: CustomSignatureRuleMatchOperator!

  """Match key"""
  value: String!
}

type CustomTags {
  tagValues: [TagValue]!
}

type CustomTestPluginCodeSnippetDetails {
  codeSnippet: String!
  codeSnippetType: CustomTestPluginCodeSnippetType!
}

enum CustomTestPluginCodeSnippetType {
  """VULNERABILITY_METADATA_INCLUDED_PYTHON_SCRIPT"""
  VULNERABILITY_METADATA_INCLUDED_PYTHON_SCRIPT

  """YAML"""
  YAML
}

type CustomTestPluginDetails {
  description: String!
  pluginDetails: String!
  pluginSafetyType: AstTestPluginSafetyType!
  pluginType: AstTestPluginType!
  potentialGeneratedVulnerabilityTypes: [String]
  potentialGeneratedVulnerabilityTypesInfo: [PotentialGeneratedVulnerabilityTypeInfo]
  sampleData: CustomPluginTestSampleData
  supportedApiTypes: [CustomTestPluginSupportedApiType]
  tags: [TagValue]!
}

enum CustomTestPluginSupportedApiType {
  """GRAPHQL"""
  GRAPHQL

  """GRPC"""
  GRPC

  """HTTP"""
  HTTP
}

type CustomTokenData {
  authentication: Authentication!
  customTokenLocation: CustomTokenLocation!
  requestBodyLocation: DataLocation
  requestHeaderLocation: HeaderLocation
}

enum CustomTokenLocation {
  """REQUEST_HEADER"""
  REQUEST_HEADER

  """REQUEST_BODY"""
  REQUEST_BODY
}

type CustomUserAttributionData {
  yaml: String!
}

"""Custom vulnerability type details"""
type CustomVulnerabilityTypeDetails {
  """Yaml configuration for the custom vulnerability type"""
  yamlConfiguration: String!
}

type CustomWebhookChannelConfig {
  headers: [WebhookHeader]
  id: String
  url: String!
}

"""Daily schedule"""
type DailySchedule {
  """Scheduled time of day"""
  scheduledTime: OffsetTime
}

type Dashboard {
  """Dashboard Id"""
  id: String!

  """Dashboard author"""
  author: String!

  """Timestamp when dashboard was created"""
  createdTimestamp: DateTime!

  """Dashboard description"""
  description: String

  """Data in json to build dashboard"""
  json: String!

  """Dashboard name"""
  name: String!

  """Reference for the UI"""
  uiReference: String

  """Timestamp when dashboard was last updated"""
  lastUpdatedTimestamp: DateTime!
}

type DashboardResultSet {
  count: Long
  total: Long

  """List of dashboards"""
  results: [Dashboard]!
}

"""Describes some behavior to change for data classification"""
type DataClassificationBehaviorOverride {
  """When this override applies, use the described data suppression type"""
  dataSuppressionOverride: DataSuppression!
}

"""A rule describing an override in behavior for data classification"""
type DataClassificationOverrideRule {
  """Rule Identifier that can be used to update or delete an existing rule"""
  id: String!

  """The behavior change for this override"""
  behaviorOverride: DataClassificationBehaviorOverride!

  """Optional rule description"""
  description: String

  """
  Scope for which this rule is applicable. If unset, this rule applies in all environments
  """
  environmentScope: DataTypeEnvironmentScope

  """Name for the rule"""
  name: String!

  """
  If set, describes the subset of spans for which this override is applicable.
  If unset, the rule applies to all spans in scope
  """
  spanFilter: DataClassificationOverrideSpanFilter
}

"""A collection of Data Classification Override Rules"""
type DataClassificationOverrideRuleResultSet {
  count: Long
  total: Long
  results: [DataClassificationOverrideRule]!
}

"""
Describes criteria for which spans a DataClassificationOverrideRule applies to. Exactly one child filter must be set.
"""
type DataClassificationOverrideSpanFilter {
  """Describes a key value pair that must be present."""
  keyValueFilter: DataClassificationOverrideSpanKeyValueFilter

  """Negates another filter."""
  negatedFilter: DataClassificationOverrideSpanFilter
}

"""Describes a key-value pair to match in a span"""
type DataClassificationOverrideSpanKeyValueFilter {
  """Rule ID"""
  keyPattern: DataTypeStringPattern!

  """Value pattern to match for associated key. If unset, any value matches"""
  valuePattern: DataTypeStringPattern
}

"""Event type condition for data collection related configs"""
type DataCollectionChangeCondition {
  """ActivityType: New Deployment, Status Change"""
  agentActivityType: AgentActivityType

  """List of agent status value"""
  agentStatusChanges: [AgentActivityStatusChange]

  """Agent entity type"""
  agentType: String
}

type DataLocation {
  jsonPath: String!
  parsingTarget: ParsingTarget
  type: DataLocationType!
}

enum DataLocationType {
  """JSON_PATH"""
  JSON_PATH
}

"""Data protection config for enriching sensitive data"""
type DataProtectionConfig {
  """Flag to disable DataProtectionConfig"""
  disableDataProtection: Boolean!

  """
  Exclusion config list for enriching sensitive data. These are ORed across the list
  """
  exclusions: [DataProtectionExclusion]!

  """Minimum data sensitivity for enriching sensitive data"""
  minDataSensitivity: DataSensitivity!
}

"""Data classifier condition"""
type DataProtectionDataClassifierCondition {
  """
  Calls that include any of this list of Dataset will be excluded from Data Protection
  """
  datasetIds: [String]

  """
  Calls that include any of this list of Datatype will be excluded from Data Protection
  """
  datatypeIds: [String]
}

"""Entity condition"""
type DataProtectionEntityCondition {
  """Entity IDs for entity based exclusion condition"""
  entityIds: [String]!

  """Entity type for entity based exclusion condition"""
  entityType: String!
}

"""Exclusion configs for enriching sensitive data"""
type DataProtectionExclusion {
  """
  Exclusion conditions which needs to be satisfied for an exclusion rule to be
  applied, These are ANded across the conditions for an exclusion
  """
  conditions: [DataProtectionExclusionCondition]!
}

"""Exclusion condition"""
type DataProtectionExclusionCondition {
  """Exclusion condition type"""
  conditionType: DataProtectionExclusionConditionType!

  """Data classifier condition"""
  dataClassifierCondition: DataProtectionDataClassifierCondition

  """Entity condition"""
  entityCondition: DataProtectionEntityCondition

  """Parameter name condition"""
  paramNameCondition: DataProtectionParamNameCondition
}

"""Exclusion condition type"""
enum DataProtectionExclusionConditionType {
  """DATA_CLASSIFIER"""
  DATA_CLASSIFIER

  """ENTITY"""
  ENTITY

  """PARAM_NAME"""
  PARAM_NAME
}

"""Param name condition"""
type DataProtectionParamNameCondition {
  """A list of parameter name regexes to exclude"""
  paramNameRegexes: [String]

  """A list of parameter names to exclude"""
  paramNames: [String]
}

enum DataSensitivity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

type DataSet {
  color: String @deprecated(reason: "Deprecated")
  dataSuppression: DataSuppression @deprecated(reason: "Deprecated")
  dataTypes: [ResolvedDatatype] @deprecated(reason: "Deprecated")
  description: String
  enabled: Boolean! @deprecated(reason: "Deprecated")

  """An icon used to represent this Dataset visually"""
  iconType: String
  id: String!
  name: String!
  sensitivity: DataSensitivity @deprecated(reason: "Deprecated")
}

"""Data Set Config change details"""
type DataSetConfigChange {
  crudAction: CrudAction!
  dataSetColorChange: StringChange
  dataSetDescriptionChange: StringChange
  dataSetEnabledStatusChange: BoolChange
  dataSuppressionChange: DataSuppressionChange
  dataTypeIdsAdded: [String]
  dataTypeIdsRemoved: [String]
  identity: ActivityLogIdentity!
  previousDataSetName: String
  sensitivityChange: SensitivityChange
}

type DataSetResultSet {
  count: Long!
  results: [DataSet]!
  total: Long!
}

enum DataSuppression {
  """RAW"""
  RAW

  """REDACT"""
  REDACT

  """OBFUSCATE"""
  OBFUSCATE
}

type DataSuppressionChange {
  currentDataSuppressionMode: DataSuppression!
  oldDataSuppressionMode: DataSuppression!
}

type DataType {
  dataSuppression: DataSuppression
  datasetIds: [String]
  description: String
  enabled: Boolean
  id: String!
  name: String!
  scopedPatterns: [DataTypeScopedPattern]
  sensitivity: DataSensitivity
  suppressionPattern: String
}

type dataTypeAssignment {
  dataTypeId: String!
  paramNames: [String]
}

type dataTypeChange {
  dataTypeAssignment: dataTypeAssignment!
  dataTypeOperation: DataTypeOperation
}

"""Data Type Config change details"""
type DataTypeConfigChange {
  conditionsAdded: [DataTypeConfigChangeCondition]!
  conditionsRemoved: [DataTypeConfigChangeCondition]!
  conditionsUpdated: [DataTypeConfigChangeCondition]!
  crudAction: CrudAction!
  dataTypeDescriptionChange: StringChange
  identity: ActivityLogIdentity!
  previousDataTypeName: String
}

type DataTypeConfigChangeCondition {
  matchType: DataTypeMatchType!
  operator: DataTypeStringPatternOperator!
  value: String!
}

type DataTypeEnvironmentScope {
  environmentIds: [String]!
}

enum DataTypeLocation {
  """ANY"""
  ANY

  """QUERY"""
  QUERY

  """REQUEST_HEADER"""
  REQUEST_HEADER

  """REQUEST_BODY"""
  REQUEST_BODY

  """REQUEST_COOKIE"""
  REQUEST_COOKIE

  """RESPONSE_HEADER"""
  RESPONSE_HEADER

  """RESPONSE_BODY"""
  RESPONSE_BODY

  """RESPONSE_COOKIE"""
  RESPONSE_COOKIE
}

enum DataTypeMatchType {
  """MATCH"""
  MATCH

  """IGNORE"""
  IGNORE
}

enum DataTypeOperation {
  """ADD"""
  ADD

  """REMOVE"""
  REMOVE
}

enum DataTypePatternType {
  """KEY_PATTERN"""
  KEY_PATTERN

  """ADVANCED_PATTERN"""
  ADVANCED_PATTERN

  """KEY_VALUE_PATTERN"""
  KEY_VALUE_PATTERN

  """LEAF_KEY_VALUE_PATTERN"""
  LEAF_KEY_VALUE_PATTERN

  """LEAF_KEY_PATTERN"""
  LEAF_KEY_PATTERN
}

type DataTypeResultSet {
  count: Long!
  results: [ResolvedDatatype]!
  total: Long!
}

type DataTypeScope {
  environmentScope: DataTypeEnvironmentScope
  type: DataTypeScopeType
}

type DataTypeScopedPattern {
  keyPattern: DataTypeStringPattern
  locations: [DataTypeLocation]!
  matchType: DataTypeMatchType

  """An optional user defined name for the pattern"""
  name: String
  patternType: DataTypePatternType!
  scope: DataTypeScope

  """A list of url regex patterns to match. If empty, applies to all URLs"""
  urlMatchPatterns: [String]
  valuePattern: DataTypeStringPattern
}

enum DataTypeScopeType {
  """ENVIRONMENT"""
  ENVIRONMENT
}

type DataTypeStringPattern {
  operator: DataTypeStringPatternOperator!
  value: String!
}

enum DataTypeStringPatternOperator {
  """EQUALS"""
  EQUALS

  """MATCHES_REGEX"""
  MATCHES_REGEX
}

"""An ISO-8601 formatted DateTime Scalar"""
scalar DateTime

enum DayOfWeek {
  """MONDAY"""
  MONDAY

  """TUESDAY"""
  TUESDAY

  """WEDNESDAY"""
  WEDNESDAY

  """THURSDAY"""
  THURSDAY

  """FRIDAY"""
  FRIDAY

  """SATURDAY"""
  SATURDAY

  """SUNDAY"""
  SUNDAY
}

type DeleteApiSpecResponse {
  """Whether the delete operation was a success"""
  success: Boolean!
}

type DeleteCustomSignatureRuleResponse {
  success: Boolean!
}

"""Response for deleting detection exclusion rule"""
type DeleteDetectionExclusionRuleResponse {
  """Boolean denoting whether deletion of rule was successful or not"""
  success: Boolean!
}

type DeleteIpRangeRuleResponse {
  success: Boolean!
}

type DeleteJiraIntegrationResponse {
  success: Boolean!
}

type DeleteLocalProcessingRuleResponse {
  success: Boolean!
}

"""Delete response denoting success"""
type DeleteMaliciousSourcesRuleResponse {
  """Flag to check the success of a delete request"""
  success: Boolean!
}

type DeleteNotificationChannelResponse {
  success: Boolean!
}

type DeleteNotificationRuleResponse {
  success: Boolean!
}

type DeleteRateLimitingRuleResponse {
  success: Boolean!
}

type DeleteRedactionRuleResponse {
  success: Boolean!
}

type DeleteRegionRuleResponse {
  success: Boolean!
}

type DeleteScanPoliciesResponse {
  scanPolicyIds: [String]!
}

type DeleteScansResponse {
  scanIds: [String]!
}

type DeleteScopedAnomalyAggregationConfigResponse {
  success: Boolean!
}

type DeleteSpanProcessingRuleResponse {
  success: Boolean!
}

type DeleteTraceableSpanProcessingRuleResponse {
  success: Boolean!
}

type DeleteWafIntegrationResponse {
  success: Boolean!
}

type DemoApplicationAutomaticDetection {
  automaticDetectionStatus: AutomaticDetectionStatus!
}

type DemoApplicationConfig {
  keyValuePairs: [TrainingConfigKeyValuePair]
  name: DemoApplicationConfigName!
}

enum DemoApplicationConfigName {
  """DEMO_APPLICATION_DETECTION_CONFIG"""
  DEMO_APPLICATION_DETECTION_CONFIG

  """DEMO_APPLICATION_DEFINITION"""
  DEMO_APPLICATION_DEFINITION
}

type DemoApplicationDefinition {
  demoApplicationTypes: [DemoApplicationType]!
}

enum DemoApplicationType {
  """CRAPI"""
  CRAPI

  """VAMPI"""
  VAMPI

  """VAPI"""
  VAPI
}

"""Response code for requests in GCP when blocking is enabled"""
enum DenyActionResponseCode {
  """RESPONSE_CODE_403"""
  RESPONSE_CODE_403

  """RESPONSE_CODE_404"""
  RESPONSE_CODE_404

  """RESPONSE_CODE_502"""
  RESPONSE_CODE_502
}

type DetectedSecurityEventCondition {
  """List of security event confidence levels """
  confidenceLevels: [SecurityEventConfidenceLevel]

  """List of detected threat activities """
  detectedThreatActivityConditions: [DetectedThreatActivityCondition]
  eventTypes: [DetectedSecurityEventType]

  """List of security event impact levels """
  impactLevels: [SecurityEventImpactLevel]
  severities: [SecurityEventSeverity]
}

"""Available options for Detected Security Event Condition"""
type DetectedSecurityEventConditionOptions {
  """List of detected threat activity condition options"""
  detectedThreatActivityConditionOptions: [DetectedThreatActivityConditionOption]!
}

enum DetectedSecurityEventType {
  """XSS"""
  XSS

  """SCANNER_DETECTED"""
  SCANNER_DETECTED

  """SESSION_FIXATION"""
  SESSION_FIXATION

  """PATH_MANIPULATION"""
  PATH_MANIPULATION

  """KNOWN_VULNERABILITIES"""
  KNOWN_VULNERABILITIES

  """REQUEST_RESPONSE_METADATA_ANOMALIES"""
  REQUEST_RESPONSE_METADATA_ANOMALIES

  """INJECTIONS"""
  INJECTIONS

  """PARAMETER_ANOMALIES"""
  PARAMETER_ANOMALIES

  """AUTHORIZATION_VIOLATIONS"""
  AUTHORIZATION_VIOLATIONS

  """RATE_LIMITING"""
  RATE_LIMITING

  """SSRF"""
  SSRF

  """CUSTOM_SIGNATURE_RULES"""
  CUSTOM_SIGNATURE_RULES
}

"""Detected threat activity condition"""
type DetectedThreatActivityCondition {
  """Custom detection rule condition"""
  customDetectionCondition: CustomDetectionCondition

  """Detected threat activity condition type"""
  detectedThreatActivityConditionType: DetectedThreatActivityConditionType!

  """Pre defined detection rule condition"""
  preDefinedDetectionCondition: PreDefinedDetectionCondition
}

"""Detected threat activity condition option"""
type DetectedThreatActivityConditionOption {
  """Rule ID of pre defined anomaly rule"""
  anomalyRuleId: String

  """Custom detection type"""
  customDetectionType: CustomDetectionType

  """Detected threat activity condition type"""
  detectedThreatActivityConditionType: DetectedThreatActivityConditionType!

  """Display name for the threat activity condition option"""
  displayName: String!

  """Boolean for whether the anomaly rule is hidden from customers"""
  hidden: Boolean
}

enum DetectedThreatActivityConditionType {
  """PRE_DEFINED"""
  PRE_DEFINED

  """CUSTOM"""
  CUSTOM
}

"""Type of attribute value"""
enum DetectionExclusionAttributeValueType {
  """BOOLEAN"""
  BOOLEAN

  """INTEGER"""
  INTEGER

  """FLOAT"""
  FLOAT

  """CHAR"""
  CHAR

  """STRING"""
  STRING

  """OBJECT"""
  OBJECT

  """URL"""
  URL

  """EMAIL"""
  EMAIL

  """JSON"""
  JSON

  """CREDIT_CARD"""
  CREDIT_CARD

  """DATE"""
  DATE

  """ARRAY"""
  ARRAY

  """HTML"""
  HTML

  """RICH_TEXT_HTML"""
  RICH_TEXT_HTML

  """CLOB"""
  CLOB

  """FREE_TEXT"""
  FREE_TEXT
}

type detectionExclusionConditionOptions {
  anomalousAttributeConditionOptions: [DetectionExclusionRuleConditionOption]!
  requestResponseConditionOptions: [RequestResponseConditionOptions]!
  tagAttributeKeyValueConditionOptions: TagAttributeKeyValueConditionOptions!
}

"""Config for detection exclusion creation events"""
type DetectionExclusionCreationConfig {
  """detection exclusion enabling key"""
  enabled: Boolean!

  """detection exclusion rule expiration duration"""
  expirationDuration: Duration!
}

"""Region identifier schema for detection exclusion region condition"""
type DetectionExclusionRegionIdentifier {
  """Country ISO code for region identifier"""
  countryIsoCode: String!
}

"""Custom rule for excluding spans from detection"""
type DetectionExclusionRule {
  """Detection exclusion rule id"""
  id: String!

  """Detection exclusion rule info"""
  ruleInfo: DetectionExclusionRuleInfo!

  """Detection exclusion rule scope"""
  ruleScope: DetectionExclusionRuleScope
}

"""
Anomalous attribute condition applicable for a detection exclusion rule
"""
type DetectionExclusionRuleAnomalousAttributeCondition {
  """Key match condition"""
  keyMatchCondition: DetectionExclusionRuleMatchCondition

  """Learnt type list"""
  learntTypeList: [DetectionExclusionAttributeValueType]

  """Observed type list"""
  observedTypeList: [DetectionExclusionAttributeValueType]

  """Value match condition"""
  valueMatchCondition: DetectionExclusionRuleMatchCondition
}

"""Condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleCondition {
  """
  Anomalous attribute condition applicable for a detection exclusion rule
  """
  anomalousAttributeCondition: DetectionExclusionRuleAnomalousAttributeCondition

  """
  Span attribute match condition applicable for a detection exclusion rule
  """
  attributeMatchCondition: DetectionExclusionRuleSpanAttributeMatchCondition

  """Type of condition"""
  conditionType: DetectionExclusionRuleConditionType!

  """Email domain condition applicable for a detection exclusion rule"""
  emailDomainCondition: DetectionExclusionRuleEmailDomainCondition

  """Event condition applicable for a detection exclusion rule"""
  eventCondition: DetectionExclusionRuleEventCondition

  """IP abuse velocity condition applicable for a detection exclusion rule"""
  ipAbuseVelocityCondition: DetectionExclusionRuleIpAbuseVelocityCondition

  """IP address condition applicable for a detection exclusion rule"""
  ipAddressCondition: DetectionExclusionRuleIpAddressCondition

  """IP asn condition applicable for a detection exclusion rule"""
  ipAsnCondition: DetectionExclusionRuleIpAsnCondition

  """IP connection type condition applicable for a detection exclusion rule"""
  ipConnectionTypeCondition: DetectionExclusionRuleIpConnectionTypeCondition

  """IP location type condition applicable for a detection exclusion rule"""
  ipLocationTypeCondition: DetectionExclusionRuleIpLocationTypeCondition

  """IP organisation condition applicable for a detection exclusion rule"""
  ipOrganisationCondition: DetectionExclusionRuleIpOrganisationCondition

  """IP reputation condition applicable for a detection exclusion rule"""
  ipReputationCondition: DetectionExclusionRuleIpReputationCondition

  """Region condition applicable for a detection exclusion rule"""
  regionCondition: DetectionExclusionRuleRegionCondition

  """Scanner type condition applicable for a detection exclusion rule"""
  scannerTypeCondition: DetectionExclusionRuleScannerTypeCondition

  """Scope condition applicable for a detection exclusion rule"""
  scopeCondition: DetectionExclusionRuleScopeCondition

  """
  Source anomalous attribute condition applicable for a detection exclusion rule
  """
  sourceAnomalousAttributeCondition: DetectionExclusionRuleAnomalousAttributeCondition

  """Source scope condition applicable for a detection exclusion rule"""
  sourceScopeCondition: DetectionExclusionRuleScopeCondition

  """User agent condition applicable for a detection exclusion rule"""
  userAgentCondition: DetectionExclusionRuleUserAgentCondition

  """UserId condition applicable for a detection exclusion rule"""
  userIdCondition: DetectionExclusionRuleUserIdCondition
}

"""Info regarding an enum"""
type DetectionExclusionRuleConditionEnumInfo {
  """Display name of enum"""
  displayName: String!

  """Name of enum"""
  name: String!
}

"""Details regarding condition option applicable"""
type DetectionExclusionRuleConditionOption {
  """Info regarding operator of condition"""
  conditionOperator: DetectionExclusionRuleConditionEnumInfo!

  """Validation type of condition"""
  conditionValidationType: DetectionExclusionRuleMatchConditionValidationType!
}

"""Detection exclusion rule condition type"""
enum DetectionExclusionRuleConditionType {
  """SCOPE"""
  SCOPE

  """ATTRIBUTE_MATCH"""
  ATTRIBUTE_MATCH

  """IP_LOCATION_TYPE"""
  IP_LOCATION_TYPE

  """IP_REPUTATION"""
  IP_REPUTATION

  """USER_ID"""
  USER_ID

  """EVENT"""
  EVENT

  """ANOMALOUS_ATTRIBUTE"""
  ANOMALOUS_ATTRIBUTE

  """SOURCE_SCOPE"""
  SOURCE_SCOPE

  """SOURCE_ANOMALOUS_ATTRIBUTE"""
  SOURCE_ANOMALOUS_ATTRIBUTE

  """IP_ADDRESS"""
  IP_ADDRESS

  """IP_CONNECTION_TYPE"""
  IP_CONNECTION_TYPE

  """IP_ORGANISATION"""
  IP_ORGANISATION

  """IP_ASN"""
  IP_ASN

  """IP_ABUSE_VELOCITY"""
  IP_ABUSE_VELOCITY

  """REGION"""
  REGION

  """EMAIL_DOMAIN"""
  EMAIL_DOMAIN

  """USER_AGENT"""
  USER_AGENT

  """SCANNER_TYPE"""
  SCANNER_TYPE
}

"""Custom rule event condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleCustomRuleEvent {
  """Custom rule event family where rule should apply"""
  customRuleEventFamily: DetectionExclusionRuleCustomRuleEventFamily!

  """Custom ruleId applicable for the rule"""
  ruleId: String
}

"""Custom rule event family for a rule"""
enum DetectionExclusionRuleCustomRuleEventFamily {
  """CUSTOM_SIGNATURE"""
  CUSTOM_SIGNATURE

  """MALICIOUS_SOURCES"""
  MALICIOUS_SOURCES

  """RATE_LIMIT"""
  RATE_LIMIT

  """DATA_LOSS_PREVENTION"""
  DATA_LOSS_PREVENTION

  """ENUMERATION"""
  ENUMERATION
}

"""Email domain condition for detection exclusion rule"""
type DetectionExclusionRuleEmailDomainCondition {
  """List of email domains"""
  emailDomains: [String]

  """List of email regexes"""
  emailRegexes: [String]

  """boolean denoting exclude condition"""
  exclude: Boolean
}

"""Entity scope condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleEntityScope {
  """List of entity ids applicable"""
  entityIds: [String]!

  """Entity type"""
  entityType: DetectionExclusionRuleEntityScopeType!
}

"""Entity scope type type for a rule"""
enum DetectionExclusionRuleEntityScopeType {
  """API"""
  API

  """SERVICE"""
  SERVICE
}

"""Environment scope applicable for detection exclusion rule"""
type DetectionExclusionRuleEnvironmentScope {
  """List of environment ids applicable for detection exclusion rule"""
  environmentIds: [String]!
}

"""Event condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleEventCondition {
  """List of custom rule events"""
  customRuleEvents: [DetectionExclusionRuleCustomRuleEvent]

  """List of system defined events"""
  systemDefinedEvents: [DetectionExclusionRuleSystemDefinedEvent]

  """List of threat actor events"""
  threatActorEvents: [DetectionExclusionRuleThreatActorEvent]
}

"""Info regarding detection exclusion rule"""
type DetectionExclusionRuleInfo {
  """Detection exclusion rule conditions"""
  conditions: [DetectionExclusionRuleCondition]!

  """Detection exclusion rule description"""
  description: String

  """Detection exclusion rule exclusion targets"""
  exclusionTargets: [DetectionExclusionTarget]

  """Detection exclusion rule name"""
  name: String!

  """Detection exclusion rule status"""
  ruleStatus: DetectionExclusionRuleStatus!
}

enum DetectionExclusionRuleIpAbuseVelocity {
  """Ip abuse velocity low"""
  LOW

  """Ip abuse velocity medium"""
  MEDIUM

  """Ip abuse velocity high"""
  HIGH
}

"""Ip abuse velocity condition applicable on a detection exclusion rule"""
type DetectionExclusionRuleIpAbuseVelocityCondition {
  """Maximum Ip abuse velocity applicable"""
  maxIpAbuseVelocity: DetectionExclusionRuleIpAbuseVelocity!
}

"""IP address condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleIpAddressCondition {
  """List of IP ranges following CIDR syntax"""
  cidrIpRanges: [String]

  """Boolean denoting exclude condition"""
  exclude: Boolean

  """Ip address condition type"""
  ipAddressConditionType: DetectionExclusionRuleIpAddressConditionType

  """List of IP addresses"""
  ipAddresses: [String]

  """List of IP addresses and CIDR IP ranges"""
  rawInputIpData: [String]
}

"""Ip address condition type"""
enum DetectionExclusionRuleIpAddressConditionType {
  """All internal ip address condition type"""
  ALL_INTERNAL

  """All external ip address condition type"""
  ALL_EXTERNAL
}

"""Ip asn condition for a detection exclusion rule"""
type DetectionExclusionRuleIpAsnCondition {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip asn regexes"""
  ipAsnRegexes: [String]!
}

"""
IP connection types for detection exclusion rule IP connection type condition
"""
enum DetectionExclusionRuleIpConnectionType {
  """RESIDENTIAL"""
  RESIDENTIAL

  """MOBILE"""
  MOBILE

  """CORPORATE"""
  CORPORATE

  """DATA_CENTER"""
  DATA_CENTER

  """EDUCATION"""
  EDUCATION
}

"""IP connection type condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleIpConnectionTypeCondition {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip connection types"""
  ipConnectionTypes: [DetectionExclusionRuleIpConnectionType]!
}

"""IP location type for a rule"""
enum DetectionExclusionRuleIpLocationType {
  """ANONYMOUS_VPN"""
  ANONYMOUS_VPN

  """HOSTING_PROVIDER"""
  HOSTING_PROVIDER

  """PUBLIC_PROXY"""
  PUBLIC_PROXY

  """TOR_EXIT_NODE"""
  TOR_EXIT_NODE

  """BOT"""
  BOT

  """SCANNER"""
  SCANNER
}

"""IP location type condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleIpLocationTypeCondition {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP location types"""
  ipLocationTypes: [DetectionExclusionRuleIpLocationType]!
}

"""Ip organisation condition for a detection exclusion rule"""
type DetectionExclusionRuleIpOrganisationCondition {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip organisation regexes"""
  ipOrganisationRegexes: [String]!
}

"""IP reputation condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleIpReputationCondition {
  """IP reputation condition type"""
  ipReputationConditionType: DetectionExclusionRuleIpReputationConditionType!

  """Maximum IP reputation score applicable"""
  maxIpReputationScore: Int

  """Maximum IP reputation severity applicable"""
  maxIpReputationSeverity: DetectionExclusionRuleIpReputationSeverity
}

"""IP reputation condition type for a rule"""
enum DetectionExclusionRuleIpReputationConditionType {
  """MAX_SEVERITY"""
  MAX_SEVERITY

  """MAX_SCORE"""
  MAX_SCORE
}

"""IP reputation severity for a rule"""
enum DetectionExclusionRuleIpReputationSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

enum DetectionExclusionRuleKeyMetadata {
  """URL"""
  URL

  """HOST"""
  HOST

  """HTTP_METHOD"""
  HTTP_METHOD

  """USER_AGENT"""
  USER_AGENT

  """QUERY_PARAMETER"""
  QUERY_PARAMETER

  """STATUS_CODE"""
  STATUS_CODE

  """REQUEST_BODY"""
  REQUEST_BODY

  """RESPONSE_BODY"""
  RESPONSE_BODY

  """REQUEST_HEADER"""
  REQUEST_HEADER

  """RESPONSE_HEADER"""
  RESPONSE_HEADER

  """REQUEST_COOKIE"""
  REQUEST_COOKIE

  """RESPONSE_COOKIE"""
  RESPONSE_COOKIE

  """REQUEST_BODY_PARAMETER"""
  REQUEST_BODY_PARAMETER

  """RESPONSE_BODY_PARAMETER"""
  RESPONSE_BODY_PARAMETER

  """REQUEST_BODY_SIZE"""
  REQUEST_BODY_SIZE

  """RESPONSE_BODY_SIZE"""
  RESPONSE_BODY_SIZE

  """QUERY_PARAMS_COUNT"""
  QUERY_PARAMS_COUNT

  """REQUEST_HEADERS_COUNT"""
  REQUEST_HEADERS_COUNT

  """RESPONSE_HEADERS_COUNT"""
  RESPONSE_HEADERS_COUNT

  """REQUEST_COOKIES_COUNT"""
  REQUEST_COOKIES_COUNT

  """RESPONSE_COOKIES_COUNT"""
  RESPONSE_COOKIES_COUNT

  """TAG"""
  TAG
}

"""Key metadata match condition for a span attribute"""
type DetectionExclusionRuleKeyMetadataMatchCondition {
  """Key metadata of condition"""
  keyMetadata: DetectionExclusionRuleKeyMetadata!

  """Match condition of the key metadata"""
  matchCondition: DetectionExclusionRuleMatchCondition
}

"""Combination which supports operation on only value"""
type DetectionExclusionRuleKeyNullConditionCombination {
  """Info regarding metadata type of combination"""
  metadataType: DetectionExclusionRuleConditionEnumInfo!

  """List of conditions applicable on value"""
  valueConditionOptions: [DetectionExclusionRuleConditionOption]!
}

"""Combination which supports operation on both key and value"""
type DetectionExclusionRuleKeyValueConditionCombination {
  """List of conditions applicable on key"""
  keyConditionOptions: [DetectionExclusionRuleConditionOption]!

  """Info regarding metadata type of combination"""
  metadataType: DetectionExclusionRuleConditionEnumInfo!

  """List of conditions applicable on value"""
  valueConditionOptions: [DetectionExclusionRuleConditionOption]!
}

"""Label scope condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleLabelScope {
  """List of label ids applicable"""
  labelIds: [String]!

  """Label type"""
  labelType: DetectionExclusionRuleLabelScopeType!
}

"""Label scope type for a rule"""
enum DetectionExclusionRuleLabelScopeType {
  """SERVICE"""
  SERVICE

  """API"""
  API
}

"""Condition which matches a value using the specified operator"""
type DetectionExclusionRuleMatchCondition {
  """Operator to be used to match the value"""
  operator: DetectionExclusionRuleMatchConditionOperator!

  """Value to be matched"""
  value: Unknown!
}

enum DetectionExclusionRuleMatchConditionOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUAL"""
  NOT_EQUAL

  """MATCHES_REGEX"""
  MATCHES_REGEX

  """NOT_MATCH_REGEX"""
  NOT_MATCH_REGEX

  """GREATER_THAN"""
  GREATER_THAN

  """LESS_THAN"""
  LESS_THAN
}

enum DetectionExclusionRuleMatchConditionValidationType {
  """NONE"""
  NONE

  """REGEX"""
  REGEX

  """STRING"""
  STRING

  """INTEGER"""
  INTEGER
}

"""Region condition applicable on a detection exclusion rule"""
type DetectionExclusionRuleRegionCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of region identifiers"""
  regionIdentifiers: [DetectionExclusionRegionIdentifier]
}

"""Result set of detection exclusion rules"""
type DetectionExclusionRuleResultSet {
  """Count of detection exclusion rules"""
  count: Long!

  """Total of detection exclusion rules"""
  total: Long!

  """List of detection exclusion rules"""
  results: [DetectionExclusionRule]!
}

"""Scanner type condition for a rate limit rule"""
type DetectionExclusionRuleScannerTypeCondition {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of scanner types"""
  scannerTypes: [String]!
}

"""Detection exclusion rule scope"""
type DetectionExclusionRuleScope {
  """Environment scope applicable for detection exclusion rule"""
  environmentScope: DetectionExclusionRuleEnvironmentScope
}

"""Scope condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleScopeCondition {
  """Entity scope condition"""
  entityScope: DetectionExclusionRuleEntityScope

  """Boolean denoting exclude condition"""
  exclude: Boolean

  """Label scope condition"""
  labelScope: DetectionExclusionRuleLabelScope

  """Scope condition type"""
  scopeType: DetectionExclusionRuleScopeConditionType!

  """Url scope condition"""
  urlScope: DetectionExclusionRuleUrlScope
}

"""Scope condition type for a rule"""
enum DetectionExclusionRuleScopeConditionType {
  """ENTITY"""
  ENTITY

  """LABEL"""
  LABEL

  """URL"""
  URL
}

"""Rule creation source"""
enum DetectionExclusionRuleSource {
  """DEFAULT"""
  DEFAULT

  """CUSTOMER"""
  CUSTOMER

  """TRACEABLE"""
  TRACEABLE

  """OLD_API"""
  OLD_API

  """SYSTEM"""
  SYSTEM

  """COUNT_THRESHOLD_EXCEEDED"""
  COUNT_THRESHOLD_EXCEEDED
}

"""
Span attribute match condition applicable for a detection exclusion rule
"""
type DetectionExclusionRuleSpanAttributeMatchCondition {
  """Key match condition"""
  keyMatchCondition: DetectionExclusionRuleKeyMetadataMatchCondition!

  """Value match condition"""
  valueMatchCondition: DetectionExclusionRuleMatchCondition
}

"""Status of a detection exclusion rule"""
type DetectionExclusionRuleStatus {
  """Boolean denoting if the rule is disabled"""
  disabled: Boolean!

  """Boolean denoting if the rule should generate internal events"""
  generateInternalEvents: Boolean

  """Boolean denoting if the rule is hidden"""
  hidden: Boolean

  """Rule creation source"""
  ruleCreationSource: DetectionExclusionRuleSource
}

"""
System defined event condition applicable for a detection exclusion rule
"""
type DetectionExclusionRuleSystemDefinedEvent {
  """Description match condition"""
  descriptionMatchCondition: DetectionExclusionRuleMatchCondition

  """System defined event family where rule should apply"""
  systemDefinedEventFamily: DetectionExclusionRuleSystemDefinedEventFamily!

  """System defined event typeId applicable for the rule"""
  typeId: DetectionExclusionRuleSystemDefinedEventTypeId
}

"""System defined event family for a rule"""
enum DetectionExclusionRuleSystemDefinedEventFamily {
  """API_DEF"""
  API_DEF

  """MODSEC"""
  MODSEC

  """SESSION"""
  SESSION

  """VOLUMETRIC"""
  VOLUMETRIC

  """CREDENTIAL_STUFFING"""
  CREDENTIAL_STUFFING

  """ALL"""
  ALL
}

"""TypeId for a system defined event"""
type DetectionExclusionRuleSystemDefinedEventTypeId {
  """Event sub typeId for system defined event"""
  eventSubTypeId: String

  """Event typeId for system defined event"""
  eventTypeId: String

  """Type of typeId for system defined event"""
  typeIdType: DetectionExclusionRuleSystemDefinedEventTypeIdType!
}

"""Type of typeId for system defined event"""
enum DetectionExclusionRuleSystemDefinedEventTypeIdType {
  """TYPE"""
  TYPE

  """SUB_TYPE"""
  SUB_TYPE
}

"""Threat actor event condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleThreatActorEvent {
  """Actor entity ID"""
  actorEntityId: String

  """Threat actor event identifier"""
  threatActorEventIdentifier: DetectionExclusionRuleThreatActorEventIdentifier!
}

"""Threat actor event identifier for detection exclusion rule"""
enum DetectionExclusionRuleThreatActorEventIdentifier {
  """ENTITY_ID"""
  ENTITY_ID
}

"""Url scope condition applicable on a detection exclusion rule"""
type DetectionExclusionRuleUrlScope {
  """List of url regex"""
  urlRegexes: [String]!
}

"""User agent condition for a detection exclusion rule"""
type DetectionExclusionRuleUserAgentCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of user agent regexes"""
  userAgentRegexes: [String]

  """List of user agents"""
  userAgents: [String]
}

"""UserId condition applicable for a detection exclusion rule"""
type DetectionExclusionRuleUserIdCondition {
  """List of actor IDs"""
  actorEntityIds: [String]

  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of user ID regexes"""
  userIdRegexes: [String]

  """List of user IDs"""
  userIds: [String]
}

"""Exclusion target for a detection exclusion rule"""
enum DetectionExclusionTarget {
  """BLOCK"""
  BLOCK

  """ALLOW"""
  ALLOW

  """ALERT"""
  ALERT
}

type DetectionScopeConfig {
  endpointIds: [String]!
  endpointLabels: [String]!
  urlRegexes: [String]!
}

type DetectionUserIdDataConfig {
  """User attribution extracted ID"""
  userAttributionExtractedId: Boolean

  """User attribution extracted ID from JWT"""
  userAttributionExtractedIdFromJwt: Boolean

  """User ID custom attribute"""
  userIdCustomAttribute: String

  """User ID source type"""
  userIdSourceType: DetectionUserIdSourceType!
}

"""User ID source type"""
enum DetectionUserIdSourceType {
  """USER_ATTRIBUTION_EXTRACTED_ID"""
  USER_ATTRIBUTION_EXTRACTED_ID

  """USER_ATTRIBUTION_EXTRACTED_ID_FROM_JWT"""
  USER_ATTRIBUTION_EXTRACTED_ID_FROM_JWT

  """USER_ID_CUSTOM_ATTRIBUTE"""
  USER_ID_CUSTOM_ATTRIBUTE
}

"""Fingerprint of the device from which the fraud activity was initiated"""
type DeviceFingerprint {
  """IP address from which the fraud activity was initiated"""
  ipAddress: String!

  """
  Metadata associated with the IP address from which the fraud activity was initiated
  """
  ipMetadata: IpMetadata

  """User agent from which the fraud activity was initiated"""
  userAgent: String!

  """User device from which the fraud activity was initiated"""
  userDevice: String
}

"""
Initiator Attributes for the fraud detected based on device fingerprint
"""
type DeviceFingerprintBasedInitiatorAttributes {
  """IP address from which the incident was initiated"""
  ipAddress: String!

  """User agent from which the incident was initiated"""
  userAgent: String!

  """User device from which the incident was initiated"""
  userDevice: String
}

"""Domain Entity change details"""
type DomainEntityChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

"""An ISO-8601 formatted Duration Scalar"""
scalar Duration

type DurationScope {
  """Maximum duration of vulnerability since last seen"""
  maximumVulnerabilityDuration: MaxVulnerabilityDuration!
}

enum DynamicField {
  """DYNAMIC_FIELD_LOGGED_IN_USER"""
  DYNAMIC_FIELD_LOGGED_IN_USER
}

type DynamicJwt {
  """All jwt claims"""
  claims: [ClaimsKeyValue]!

  """Key Gen algo"""
  keyGenAlgo: KeyGenAlgo!

  """Secret Key Field"""
  secretKey: String!

  """Token expiry in mins"""
  tokenExpiryMins: Long
}

type DynamicLabel {
  """
  Expression definition to generate dynamic labels. Ex: "${token1}_${token2}"
  """
  expression: String!

  """
  Rules to extract token from attribute values. These values will replace tokens in the expression.
  """
  tokenExtractionRules: [TokenExtractionRule]!
}

"""
Threshold config which specifies percentage allowed exceeding a mean countwhich
is calculated over the specified duration for the given time range
"""
type DynamicThresholdConfig {
  """Time range over which mean and counts are calculated"""
  duration: Duration!

  """Duration for calculating mean over the specified time range"""
  meanCalculationDuration: Duration!

  """Allowed percentage exceeding mean"""
  percentageExceedingMeanAllowed: Int!
}

type Edge {
  attribute(key: String, expression: InputAttributeExpression): Unknown
  metric(key: String, expression: InputAttributeExpression): BaselinedMetricAggregationContainer!
  neighbor: Entity!
}

type EdgeResultSet {
  count: Long!
  results: [Edge]!
  total: Long!
}

"""Initiator Attributes for the fraud detected based on email"""
type EmailBasedInitiatorAttributes {
  """Email using which the incident was initiated"""
  email: String!
}

type EmailChannelConfig {
  address: String!
}

type EmailDomainAnomalyConfig {
  """Minimum threshold for critical email fraud score"""
  criticalEmailFraudScoreMinThreshold: Int!

  """Is disabled or not"""
  disabled: Boolean!

  """Minimum threshold for high email fraud score"""
  highEmailFraudScoreMinThreshold: Int!
}

"""Attributes related to email domain"""
type EmailDomainAttributes {
  """First seen timestamp corresponding to the email domain"""
  firstSeenTimestamp: DateTime

  """Fraud score corresponding to the email domain"""
  fraudScore: Int

  """Indicates if the email domain is disposable"""
  isDisposable: Boolean

  """Indicates if abuse was done recently using this email domain"""
  recentAbuse: Boolean
}

"""Info related to email domain"""
type EmailDomainInfo {
  """Email domain"""
  emailDomain: String!

  """Attributes corresponding to the email domain"""
  emailDomainAttributes: EmailDomainAttributes!

  """Emails corresponding to the email domain"""
  emails: [String]!
}

type Entitlement {
  booleanValue: Boolean
  limit: IntegerLimit
  name: String!
  type: EntitlementType!
}

enum EntitlementType {
  """BOOLEAN"""
  BOOLEAN

  """INTEGER"""
  INTEGER
}

type Entity {
  attribute(key: String, expression: InputAttributeExpression): Unknown
  id: String!
  incomingEdges(neighborType: EntityType, neighborScope: String, filterBy: [InputFilter], edgeType: String): EdgeResultSet!
  labels: LabelResultSet!
  metric(key: String, expression: InputAttributeExpression): MetricContainer!
  outgoingEdges(neighborType: EntityType, neighborScope: String, filterBy: [InputFilter], edgeType: String): EdgeResultSet!
  type: String!
}

enum EntityFilterOperator {
  """EQUALS"""
  EQUALS

  """IN"""
  IN
}

"""common entity identifier"""
type EntityIdentifier {
  id: String!
}

"""Entity additional info"""
enum EntityInfoType {
  """SONAR"""
  SONAR
}

enum EntityMutationType {
  """ACTOR"""
  ACTOR

  """API"""
  API

  """SERVICE"""
  SERVICE
}

type EntityResultSet {
  count: Long!
  results: [Entity]!
  total: Long!
}

type EntitySpanAttributeFilter {
  logicalFilter: EntitySpanAttributeLogicalFilter
  relationalFilter: EntitySpanAttributeRelationalFilter
}

type EntitySpanAttributeFilterConfig {
  filter: EntitySpanAttributeFilter!
}

type EntitySpanAttributeKeyFilter {
  keyLocation: EntitySpanAttributeKeyLocation!
  relationalOperator: EntitySpanAttributeRelationalOperator
  value: String
  values: [String]
}

enum EntitySpanAttributeKeyLocation {
  """REQUEST_HEADER"""
  REQUEST_HEADER

  """RESPONSE_HEADER"""
  RESPONSE_HEADER

  """REQUEST_BODY"""
  REQUEST_BODY

  """RESPONSE_BODY"""
  RESPONSE_BODY

  """ATTRIBUTES"""
  ATTRIBUTES

  """STATUS_CODE"""
  STATUS_CODE

  """URL_PATH"""
  URL_PATH

  """FULL_URL_PATH"""
  FULL_URL_PATH

  """REQUEST_BODY_SIZE"""
  REQUEST_BODY_SIZE

  """RESPONSE_BODY_SIZE"""
  RESPONSE_BODY_SIZE
}

type EntitySpanAttributeLogicalFilter {
  filters: [EntitySpanAttributeFilter]!
  logicalOperator: EntitySpanAttributeLogicalOperator!
}

enum EntitySpanAttributeLogicalOperator {
  """AND"""
  AND

  """OR"""
  OR

  """NOT"""
  NOT
}

type EntitySpanAttributeRelationalFilter {
  keyFilter: EntitySpanAttributeKeyFilter!
  valueFilter: EntitySpanAttributeValueFilter
}

enum EntitySpanAttributeRelationalOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS

  """CONTAINS"""
  CONTAINS

  """STARTS_WITH"""
  STARTS_WITH

  """ENDS_WITH"""
  ENDS_WITH

  """REGEX_MATCH"""
  REGEX_MATCH

  """IN"""
  IN

  """EXISTS"""
  EXISTS

  """NOT_IN"""
  NOT_IN

  """NOT_CONTAINS"""
  NOT_CONTAINS
}

type EntitySpanAttributeValueFilter {
  relationalOperator: EntitySpanAttributeRelationalOperator!
  value: String
  values: [String]
}

enum EntityType {
  """API"""
  API

  """SERVICE"""
  SERVICE

  """BACKEND"""
  BACKEND

  """DOMAIN"""
  DOMAIN

  """ACTOR"""
  ACTOR
}

"""Environment Entity change details"""
type EnvironmentEntityChange {
  """Environment Entity Change Type"""
  environmentEntityChangeType: EnvironmentEntityChangeType!

  """Environment Entity Status Change"""
  environmentEntityStatusChange: EnvironmentEntityStatusChange

  """Environment Activity Log Identity"""
  identity: ActivityLogIdentity!
}

enum EnvironmentEntityChangeType {
  """ENVIRONMENT_STATUS_CHANGE"""
  ENVIRONMENT_STATUS_CHANGE
}

enum EnvironmentEntityStatus {
  """ACTIVE"""
  ACTIVE

  """OFFLINE"""
  OFFLINE
}

type EnvironmentEntityStatusChange {
  """Current Environment Entity Status"""
  currentStatus: EnvironmentEntityStatus!

  """Previous Environment Entity Status"""
  previousStatus: EnvironmentEntityStatus!
}

type EnvironmentIdentity {
  id: String!
  name: String!
}

"""Environment scope applicable for rate limit rule"""
type EnvironmentScope {
  """List of environment ids applicable for rate limit rule"""
  environmentIds: [String]!
}

"""Count of APIs stored for an environment."""
type EnvironmentStoredApiCount {
  """Count of APIs stored for this environment."""
  apiCount: Long!

  """Environment ID for which traces are stored."""
  environmentId: String!
}

type Event {
  attribute(key: String, expression: InputAttributeExpression): Unknown
  entity(type: String!): Entity
  id: String!
}

type EventAggregationConfig {
  eventAggregationFamilyConfigs: [EventAggregationFamilyConfig]
  eventAggregationGlobalConfig: EventAggregationGlobalConfig
}

type EventAggregationConfigValues {
  maxEventsWithScorePerParamAcrossValues: Int
  maxEventsWithScorePerParamValue: Int
  maxEventsWithScorePerUserAcrossParams: Int
  maxEventsWithoutScorePerParamAcrossValues: Int
  maxEventsWithoutScorePerParamValue: Int
  maxEventsWithoutScorePerUserAcrossParams: Int
  maxUsersPerParam: Int

  """param name max duration for aggregation"""
  paramNameMaxDuration: Duration

  """param value max duration for aggregation"""
  paramValueMaxDuration: Duration

  """user max duration for aggregation"""
  userMaxDuration: Duration
}

type EventAggregationExcludeConfigValues {
  maxUsersPerParamExcludeEventTypeIds: [String]
}

type EventAggregationFamilyConfig {
  aggregationConfig: EventAggregationConfigValues
  aggregationExcludeConfig: EventAggregationExcludeConfigValues
  anomalyEventFamily: AnomalyEventFamily!
}

type EventAggregationGlobalConfig {
  """Config for detection exclusion creation events"""
  detectionExclusionCreationConfig: DetectionExclusionCreationConfig
  paramNameMaxDuration: Duration
  paramValueMaxDuration: Duration

  """Config for tagged events"""
  taggedEventsAggregationConfig: TaggedEventsAggregationConfig
  userMaxDuration: Duration
}

type EventConditions {
  actorSeverityStateChangeEventCondition: ActorSeverityStateChangeEventCondition
  apiFraudIncidentChangeEventCondition: ApiFraudIncidentChangeEventCondition
  apiNamingRuleConfigChangeEventCondition: ApiNamingRuleConfigChangeCondition
  apiSpecConfigChangeEventCondition: ApiSpecConfigChangeCondition
  blockedEventCondition: BlockedEventCondition
  dataCollectionChangeCondition: DataCollectionChangeCondition
  detectedSecurityEventCondition: DetectedSecurityEventCondition
  excludeSpanRuleConfigChangeEventCondition: ExcludeSpanRuleConfigChangeCondition
  fraudDetectionEventCondition: FraudDetectionEventCondition

  """Integration change event condition"""
  integrationChangeEventCondition: IntegrationChangeEventCondition
  labelConfigChangeEventCondition: LabelConfigChangeCondition
  notificationConfigChangeCondition: NotificationConfigChangeCondition
  postureEventCondition: PostureEventCondition
  riskScoringConfigChangeEventCondition: RiskScoringConfigChangeCondition
  securityConfigChangeEventCondition: SecurityConfigChangeEventCondition
  sensitiveDataConfigChangeCondition: SensitiveDataConfigChangeCondition
  threatActorStateChangeEventCondition: ThreatActorStateChangeEventCondition

  """Threat scoring config change event condition"""
  threatScoringConfigChangeEventCondition: ThreatScoringConfigChangeEventCondition
  userChangeEventCondition: UserChangeEventCondition
}

type EventResultSet {
  count: Long!
  results: [Event]!
  total: Long!
}

type EventScoreContributions {
  criticalScore: Int
  defaultCriticalScore: Int!
  defaultHighScore: Int!
  defaultLowScore: Int!
  defaultMediumScore: Int!
  highScore: Int!
  lowScore: Int!
  mediumScore: Int!
}

type EventTypeContribution {
  kind: EventTypeContributionKind!
}

enum EventTypeContributionKind {
  """ALL"""
  ALL

  """HIGH_RISK_APIS"""
  HIGH_RISK_APIS
}

type EvidenceMetadata {
  """Count"""
  count: Long!

  """Last seen time"""
  lastSeenTimestamp: Long!

  """Evidence Spans"""
  spans: [String]!

  """Value"""
  value: String!
}

"""Exclude config for auto blocking."""
type ExcludeAutoBlockingConfig {
  """List of regexes to exclude from auto blocking."""
  userIdRegexes: [String]!
}

"""Config for excluding events"""
type ExcludedEventsGenerationConfig {
  """Boolean denoting excluding all events"""
  enabledForAll: Boolean

  """List of ruleIds to exclude"""
  exclusionRuleIds: [String]

  """Type of events exclusion config"""
  name: ExcludedEventsGenerationConfigName!
}

"""Type of events exclusion config"""
enum ExcludedEventsGenerationConfigName {
  """ENABLED_FOR_ALL"""
  ENABLED_FOR_ALL

  """EXCLUSION_RULE_IDS"""
  EXCLUSION_RULE_IDS
}

type ExcludeSpanRule {
  creationTime: DateTime!
  disabled: Boolean!
  id: String!
  lastUpdatedTime: DateTime!
  name: String!
  ruleType: ExcludeSpanRuleRuleType
  spanFilter: SpanProcessingRuleFilter!
}

"""Event type condition for Exclude Span Rule"""
type ExcludeSpanRuleConfigChangeCondition {
  """Represents operation on Exclude Span Rule i.e Create/Update/Delete """
  excludeSpanRuleConfigChangeTypes: [ExcludeSpanRuleConfigChangeType]!
}

"""Represents operation of config """
enum ExcludeSpanRuleConfigChangeType {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE

  """DELETE"""
  DELETE
}

"""Exclude Span Rule Configuration change details"""
type ExcludeSpanRuleConfigurationChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

type ExcludeSpanRuleResultSet {
  count: Long!
  results: [ExcludeSpanRule]!
  total: Long!
}

enum ExcludeSpanRuleRuleType {
  """SYSTEM"""
  SYSTEM

  """USER"""
  USER
}

type Exfiltration {
  entities(type: String!): [Entity]
  selection(key: ExfiltrationSelectionField!, aggregation: ExfiltrationSelectionAggregationType): ExfiltrationSelection!
}

type ExfiltrationDetectionRule {
  enabled: Boolean!
  id: String!
  name: String!
  scopes: [ExfiltrationScope]!
}

type ExfiltrationDetectionRulesResultSet {
  count: Long!
  total: Long!
  results: [ExfiltrationDetectionRule]!
}

enum ExfiltrationDetectionScopeType {
  """IDENTITY_SCOPE"""
  IDENTITY_SCOPE

  """LABEL_SCOPE"""
  LABEL_SCOPE
}

type ExfiltrationIdentityScope {
  identityType: ExfiltrationIdentityType!
  value: String!
}

enum ExfiltrationIdentityType {
  """ENVIRONMENT"""
  ENVIRONMENT

  """API"""
  API

  """SERVICE"""
  SERVICE

  """DATASET"""
  DATASET

  """DATA_TYPE"""
  DATA_TYPE
}

type ExfiltrationLabelScope {
  labelType: ExfiltrationLabelType!
  value: String!
}

enum ExfiltrationLabelType {
  """API"""
  API

  """SERVICE"""
  SERVICE
}

enum ExfiltrationOrderAggregationType {
  """MIN"""
  MIN

  """MAX"""
  MAX

  """SUM"""
  SUM

  """COUNT"""
  COUNT

  """DISTINCT_COUNT"""
  DISTINCT_COUNT

  """DISTINCT"""
  DISTINCT
}

type ExfiltrationResultSet {
  count: Long!
  total: Long!
  results: [Exfiltration]!
}

type ExfiltrationScope {
  identityScope: ExfiltrationIdentityScope
  labelScope: ExfiltrationLabelScope
  scopeType: ExfiltrationDetectionScopeType!
}

type ExfiltrationSelection {
  value: Unknown
}

enum ExfiltrationSelectionAggregationType {
  """AVG"""
  AVG

  """MIN"""
  MIN

  """MAX"""
  MAX

  """SUM"""
  SUM

  """COUNT"""
  COUNT

  """DISTINCT_COUNT"""
  DISTINCT_COUNT

  """DISTINCT"""
  DISTINCT
}

enum ExfiltrationSelectionField {
  """USER_ID"""
  USER_ID

  """USER_TYPE"""
  USER_TYPE

  """THREAT_SCORE"""
  THREAT_SCORE

  """SESSION_LENGTH"""
  SESSION_LENGTH

  """API_ID"""
  API_ID

  """SERVICE_ID"""
  SERVICE_ID

  """ENVIRONMENT"""
  ENVIRONMENT

  """IP"""
  IP

  """LOCATION_TYPE"""
  LOCATION_TYPE

  """REPUTATION_SCORE"""
  REPUTATION_SCORE

  """COUNTRY"""
  COUNTRY

  """DATA_TYPE_ID"""
  DATA_TYPE_ID

  """DATA_SET_CLASS"""
  DATA_SET_CLASS

  """TIMESTAMP"""
  TIMESTAMP

  """LATITUDE"""
  LATITUDE

  """LONGITUDE"""
  LONGITUDE

  """CITY"""
  CITY

  """DATA_VALUES"""
  DATA_VALUES

  """API_CALL_COUNT"""
  API_CALL_COUNT

  """API_LAST_CALL_TIMESTAMP"""
  API_LAST_CALL_TIMESTAMP

  """DATA_SET_IDS"""
  DATA_SET_IDS

  """COUNTRY_ISO_CODE"""
  COUNTRY_ISO_CODE

  """STATE"""
  STATE

  """SENSITIVITY_LEVEL"""
  SENSITIVITY_LEVEL

  """HOUR_OF_THE_DAY"""
  HOUR_OF_THE_DAY

  """DAY_OF_THE_MONTH"""
  DAY_OF_THE_MONTH

  """RISK_LEVEL"""
  RISK_LEVEL

  """SENSITIVITY_LEVEL_REASONS"""
  SENSITIVITY_LEVEL_REASONS

  """RISK_LEVEL_REASONS"""
  RISK_LEVEL_REASONS

  """BATCH_START_TIME"""
  BATCH_START_TIME

  """BATCH_END_TIME"""
  BATCH_END_TIME

  """RISK_SCORE"""
  RISK_SCORE

  """IS_PAST_VALUE"""
  IS_PAST_VALUE

  """IP_REPUTATION_LEVEL"""
  IP_REPUTATION_LEVEL

  """INCLUDE_INTERNAL"""
  INCLUDE_INTERNAL
}

enum ExplorerContext {
  """TRACE"""
  TRACE

  """API_TRACE"""
  API_TRACE

  """SPAN"""
  SPAN

  """DOMAIN_EVENT"""
  DOMAIN_EVENT

  """API"""
  API

  """SERVICE"""
  SERVICE
}

type ExploreResult {
  intervalStart: DateTime
  selection(key: String, expression: InputAttributeExpression, aggregation: MetricAggregationType, size: Int, units: TimeUnit): Selection!
}

type ExploreResultSet {
  count: Long!
  results: [ExploreResult]!
  total: Long!
}

type ExportSpanResult {
  result: String!
}

type ExternalApiParamCard {
  numApisWithRequestBody: Long!
  numApisWithResponseBody: Long!
  numRequestHeaders: Long!
  numResponseHeaders: Long!
  totalApis: Long!
}

"""F5 auth credentials"""
type F5AuthCredentials {
  """F5 password for auth token"""
  password: String!

  """F5 Username for auth token """
  userName: String!
}

"""F5 integration details"""
type F5IntegrationDetails {
  """F5 auth credentials"""
  authCredentials: F5AuthCredentials!

  """F5 security policy name on which custom rules will be created"""
  securityPolicyName: String!

  """F5 URL on which F5 server is running"""
  url: String!
}

"""F5 integration params"""
type F5IntegrationParams {
  """F5 integration details"""
  f5IntegrationDetails: F5IntegrationDetails!
}

type FeatureFlag {
  key: String!
  type: AttributeType!
  value: Unknown
}

type Filter {
  idScope: String
  idType: AttributeScope @deprecated(reason: "Deprecated")
  key: String @deprecated(reason: "Deprecated")
  keyExpression: AttributeExpression
  operator: FilterOperatorType!

  """Transformation function"""
  transformationFunction: TransformationFunction
  type: FilterType!
  value: Unknown!
}

enum FilterOperatorType {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS

  """LESS_THAN"""
  LESS_THAN

  """LESS_THAN_OR_EQUAL_TO"""
  LESS_THAN_OR_EQUAL_TO

  """GREATER_THAN"""
  GREATER_THAN

  """GREATER_THAN_OR_EQUAL_TO"""
  GREATER_THAN_OR_EQUAL_TO

  """LIKE"""
  LIKE

  """IN"""
  IN

  """NOT_IN"""
  NOT_IN

  """CONTAINS_KEY"""
  CONTAINS_KEY

  """CONTAINS_KEY_VALUE"""
  CONTAINS_KEY_VALUE

  """CONTAINS_KEY_LIKE"""
  CONTAINS_KEY_LIKE

  """NOT_CONTAINS_KEY"""
  NOT_CONTAINS_KEY
}

enum FilterType {
  """ATTRIBUTE"""
  ATTRIBUTE

  """ID"""
  ID
}

"""Force learn action configuration"""
type ForceLearnActionConfig {
  """Threshold family"""
  thresholdFamily: ThresholdFamily!
}

enum Format {
  """OPEN_API_JSON"""
  OPEN_API_JSON

  """OPEN_API_YAML"""
  OPEN_API_YAML

  """WSDL"""
  WSDL
}

"""Fortinet auth credentials"""
type FortinetAuthCredentials {
  """Fortinet api key"""
  apiKey: String!
}

"""Fortinet integration details"""
type FortinetIntegrationDetails {
  """Fortinet auth credentials"""
  fortinetAuthCredentials: FortinetAuthCredentials!

  """Fortinet rule details"""
  fortinetRuleDetails: FortinetRuleDetails!
}

"""Fortinet integration params"""
type FortinetIntegrationParams {
  """Fortinet integration details"""
  fortinetIntegrationDetails: FortinetIntegrationDetails!
}

"""Fortinet rule scope id"""
type FortinetRule {
  """ID of rule scope"""
  id: String!
}

"""Fortinet rule details"""
type FortinetRuleDetails {
  """Fortinet rule scope details"""
  fortinetRule: FortinetRule!

  """Scope type of Fortinet rule"""
  fortinetRuleScopeType: FortinetRuleScopeType!
}

"""Describes the scope at which Fortinet rule is defined"""
enum FortinetRuleScopeType {
  """APPLICATION"""
  APPLICATION

  """TEMPLATE"""
  TEMPLATE
}

"""Attributes associated with the Fraud module"""
type FraudAttributes {
  """
  A score between 0 and 100 indicating the confidence that there is fraudulent
  activity associated with this user. Higher the score, higher is the confidence.
  """
  confidenceScore: Int!

  """
  A score between 0 and 100 indicating the impact created by the user's
  fraudulent activity. Higher the score, higher is the impact.
  """
  impactScore: Int!
}

"""Metadata for a fraud category"""
type FraudCategoryMetadata {
  """Dynamic attributes belonging to this category of fraud metadata"""
  attributes: [FraudDynamicAttribute]!

  """Name of the fraud category"""
  name: String!
}

type FraudDetectionEventCondition {
  severities: [FraudDetectionEventSeverity]!
}

enum FraudDetectionEventSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

"""A dynamic attribute belonging to a certain fraud category"""
type FraudDynamicAttribute {
  """Display name of the attribute"""
  displayName: String!

  """Indicates whether filtering is supported for this attribute or not"""
  filteringSupported: Boolean!

  """ID of the attribute"""
  id: String!

  """
  Indicates whether the aggregated value of this attribute has to be shown in the incident card or not
  """
  showAggregateInIncidentsCard: Boolean!

  """
  Indicates whether the aggregated value of this attribute has to be shown in the summary view or not
  """
  showAggregateInSummary: Boolean!

  """
  Indicates whether this attribute has to be shown in the detections page or not
  """
  showInDetections: Boolean!

  """Indicates whether sorting is supported for this attribute or not"""
  sortingSupported: Boolean!
}

"""Fraud Incident"""
type FraudIncident {
  """A list of accounts from which the fraud incident was initiated"""
  accounts: [String]!

  """Actions taken on the fraud incident"""
  actions: [FraudIncidentAction]!

  """Category of the fraud incident"""
  category: String!

  """Confidence level of the detected fraud incident"""
  confidenceLevel: IncidentDetectionConfidenceLevel!

  """A list of factors contributing to the confidence score"""
  confidenceScoreContributingFactors: [ApiFraudContributingFactor]!

  """
  A list of device fingerprints from which the fraud incident was initiated
  """
  deviceFingerprints: [DeviceFingerprint]!

  """
  A list of email domains along with the emails and attributes for that domain
  """
  emailDomainInfo: [EmailDomainInfo]!

  """A list of emails from which the fraud incident was initiated"""
  emails: [String]!

  """ID of the environment in which the incident was detected"""
  environmentId: String!

  """
  Timestamp of the first incident component that was detected as part of the fraud incident
  """
  firstIncidentComponentDetectedTimestamp: DateTime!
  id: String!

  """A list of factors contributing to the impact score"""
  impactScoreContributingFactors: [ApiFraudContributingFactor]!

  """
  A list of common attributes scraped from the source incident components
  """
  incidentAttributes: [KeyValuePair]!

  """Attributes of the entity that initiated the fraud incident"""
  initiatorAttributes: FraudInitiatorAttributes!

  """Labels of the fraud incident"""
  labels: [String]!

  """
  Timestamp of the latest incident component that was detected as part of the fraud incident
  """
  lastIncidentComponentDetectedTimestamp: DateTime!

  """
  The maximum duration for which a user belonging to this incident was active
  """
  maxUserActiveTime: Duration

  """
  Number of incident components that were detected as part of the fraud incident
  """
  numIncidentComponents: Long!

  """Severity level of the detected fraud incident"""
  severityLevel: IncidentDetectionSeverityLevel!

  """Score indicating the severity of the fraud incident"""
  severityScore: Long! @deprecated(reason: "Severity level should be used instead of using the score directly")

  """Status of the fraud incident"""
  status: FraudIncidentStatus!
}

"""Action taken on a fraud incident"""
type FraudIncidentAction {
  """Metadata of the action taken on the fraud incident"""
  actionMetadata: FraudIncidentActionMetadata

  """Status of the action taken on the fraud incident"""
  actionStatus: FraudIncidentActionStatus
}

"""
Metadata of the custom signature policy corresponding to the fraud incident
"""
type FraudIncidentActionCustomSignatureMetadata {
  """Identifier of the custom signature policy"""
  ruleId: String!
}

"""Metadata of the action taken on the fraud incident"""
type FraudIncidentActionMetadata {
  """Status of the action taken on the fraud incident"""
  customSignatureMetadata: FraudIncidentActionCustomSignatureMetadata!
}

"""Status of the action taken on the fraud incident"""
enum FraudIncidentActionStatus {
  """ALERTING"""
  ALERTING

  """BLOCKED"""
  BLOCKED
}

"""The type of action to be taken on the fraud incident"""
enum FraudIncidentActionType {
  """CUSTOM_SIGNATURE_BLOCK"""
  CUSTOM_SIGNATURE_BLOCK

  """CUSTOM_SIGNATURE_UNBLOCK"""
  CUSTOM_SIGNATURE_UNBLOCK

  """CUSTOM_SIGNATURE_ALERT"""
  CUSTOM_SIGNATURE_ALERT

  """NO_ACTION"""
  NO_ACTION
}

"""Fraud IncidentComponent"""
type FraudIncidentComponent {
  """
  Account from which the incident component was initiated. If 'email' is null, this field will be non-null, and vice versa
  """
  account: String

  """Email from which the incident component was initiated"""
  email: String

  """Email domain associated with the incident component"""
  emailDomain: String

  """Attributes corresponding to the email domain"""
  emailDomainAttributes: EmailDomainAttributes
  entity(type: String!): Entity

  """ID of the environment in which the incident component was detected"""
  environmentId: String!
  id: String!

  """A list of attributes scraped from the source incident component"""
  incidentComponentAttributes: [KeyValuePair]!

  """IP address from which the incident component was initiated"""
  ipAddress: String

  """Metadata associated with the IP address"""
  ipMetadata: IpMetadata

  """Status of the fraud incident component"""
  status: FraudIncidentComponentStatus!

  """Timestamp at which the incident component took place"""
  timestamp: DateTime!

  """User agent from which the incident component was initiated"""
  userAgent: String

  """User device from which the incident component was initiated"""
  userDevice: String
}

"""Fields for the Fraud IncidentComponent on which filters can be applied"""
enum FraudIncidentComponentField {
  """ENVIRONMENT_ID"""
  ENVIRONMENT_ID

  """INCIDENT_ID"""
  INCIDENT_ID

  """INCIDENT_COMPONENT_ID"""
  INCIDENT_COMPONENT_ID

  """STATUS"""
  STATUS

  """TIMESTAMP"""
  TIMESTAMP

  """EMAIL"""
  EMAIL

  """IP_ADDRESS"""
  IP_ADDRESS

  """USER_AGENT"""
  USER_AGENT

  """USER_DEVICE"""
  USER_DEVICE

  """ENDPOINT_ID"""
  ENDPOINT_ID

  """SERVICE_ID"""
  SERVICE_ID

  """COUNTRY"""
  COUNTRY

  """IP_LOCATION_TYPES"""
  IP_LOCATION_TYPES

  """IP_REPUTATION_LEVEL"""
  IP_REPUTATION_LEVEL

  """IP_ABUSE_VELOCITY"""
  IP_ABUSE_VELOCITY

  """IP_CONNECTION_TYPE"""
  IP_CONNECTION_TYPE

  """IP_ASN"""
  IP_ASN

  """USER_ACTIVE_TIME"""
  USER_ACTIVE_TIME

  """PRODUCED_RESOURCE_COUNT"""
  PRODUCED_RESOURCE_COUNT

  """COUNTRY_ISO_CODE"""
  COUNTRY_ISO_CODE

  """LATITUDE"""
  LATITUDE

  """LONGITUDE"""
  LONGITUDE

  """STATE"""
  STATE

  """CITY"""
  CITY

  """EMAIL_DOMAIN"""
  EMAIL_DOMAIN

  """EMAIL_DOMAIN_FRAUD_SCORE"""
  EMAIL_DOMAIN_FRAUD_SCORE

  """EMAIL_DOMAIN_FIRST_SEEN_TIMESTAMP"""
  EMAIL_DOMAIN_FIRST_SEEN_TIMESTAMP

  """EMAIL_DOMAIN_IS_DISPOSABLE"""
  EMAIL_DOMAIN_IS_DISPOSABLE

  """EMAIL_DOMAIN_RECENT_ABUSE"""
  EMAIL_DOMAIN_RECENT_ABUSE

  """IP_ORGANIZATION"""
  IP_ORGANIZATION

  """COMPONENT_ATTRIBUTES"""
  COMPONENT_ATTRIBUTES
}

"""Fraud Incident Component Insight"""
type FraudIncidentComponentInsight {
  entity(type: String!): Entity

  """
  Selection of an incident component field, on which an optional aggregation can
  be performed. Exactly one field out of 'key', 'dynamicKey', and 'enumValue'
  should be non-null
  """
  selection(key: FraudIncidentComponentField, dynamicKey: String, enumValue: InputFraudIncidentComponentEnumValue, aggregation: SelectionAggregationType, aliasForSorting: String): IncidentComponentSelection!
}

"""Result set of the fraud incident components"""
type FraudIncidentComponentResultSet {
  count: Long!

  """List of the fraud incident components"""
  results: [FraudIncidentComponent]!
  total: Long!
}

"""Status of the fraud incident component"""
enum FraudIncidentComponentStatus {
  """OPEN"""
  OPEN

  """RESOLVED"""
  RESOLVED

  """RESOLVED_ACCEPTED_FRAUD"""
  RESOLVED_ACCEPTED_FRAUD

  """RESOLVED_NOT_A_FRAUD"""
  RESOLVED_NOT_A_FRAUD
}

"""Fields for the Fraud Incident on which filters can be applied"""
enum FraudIncidentField {
  """ENVIRONMENT_ID"""
  ENVIRONMENT_ID

  """INCIDENT_ID"""
  INCIDENT_ID

  """STATUS"""
  STATUS

  """SEVERITY_SCORE"""
  SEVERITY_SCORE

  """NUM_INCIDENT_COMPONENTS"""
  NUM_INCIDENT_COMPONENTS

  """FIRST_INCIDENT_COMPONENT_DETECTED_TIMESTAMP"""
  FIRST_INCIDENT_COMPONENT_DETECTED_TIMESTAMP

  """LAST_INCIDENT_COMPONENT_DETECTED_TIMESTAMP"""
  LAST_INCIDENT_COMPONENT_DETECTED_TIMESTAMP

  """DETECTION_TIMESTAMP"""
  DETECTION_TIMESTAMP

  """SEVERITY_LEVEL"""
  SEVERITY_LEVEL

  """CONFIDENCE_LEVEL"""
  CONFIDENCE_LEVEL

  """COUNTRIES"""
  COUNTRIES

  """IP_LOCATION_TYPES"""
  IP_LOCATION_TYPES

  """CATEGORY"""
  CATEGORY

  """LABELS"""
  LABELS

  """IP_ABUSE_VELOCITIES"""
  IP_ABUSE_VELOCITIES

  """IP_REPUTATION_LEVELS"""
  IP_REPUTATION_LEVELS

  """IP_CONNECTION_TYPES"""
  IP_CONNECTION_TYPES

  """MAX_USER_ACTIVE_TIME"""
  MAX_USER_ACTIVE_TIME

  """COUNTRIES_ISO_CODES"""
  COUNTRIES_ISO_CODES

  """IP_ADDRESS"""
  IP_ADDRESS

  """EMAIL_DOMAIN"""
  EMAIL_DOMAIN

  """EMAIL_DOMAIN_FRAUD_SCORE"""
  EMAIL_DOMAIN_FRAUD_SCORE

  """EMAIL_DOMAIN_FIRST_SEEN_TIMESTAMP"""
  EMAIL_DOMAIN_FIRST_SEEN_TIMESTAMP

  """EMAIL_DOMAIN_IS_DISPOSABLE"""
  EMAIL_DOMAIN_IS_DISPOSABLE

  """EMAIL_DOMAIN_RECENT_ABUSE"""
  EMAIL_DOMAIN_RECENT_ABUSE

  """SUMMARY_COUNTRY_ISO_CODE"""
  SUMMARY_COUNTRY_ISO_CODE

  """SUMMARY_NUM_ACCOUNTS"""
  SUMMARY_NUM_ACCOUNTS

  """SUMMARY_RESOURCE_COUNT"""
  SUMMARY_RESOURCE_COUNT

  """SUMMARY_NUM_IPS"""
  SUMMARY_NUM_IPS

  """SUMMARY_NUM_BOTS"""
  SUMMARY_NUM_BOTS

  """SUMMARY_NUM_TORS"""
  SUMMARY_NUM_TORS

  """SUMMARY_NUM_VPNS"""
  SUMMARY_NUM_VPNS

  """SUMMARY_LAT_LONG"""
  SUMMARY_LAT_LONG

  """INCIDENT_ATTRIBUTES"""
  INCIDENT_ATTRIBUTES

  """ACTION_STATUS"""
  ACTION_STATUS
}

"""Fraud Incident Insight"""
type FraudIncidentInsight {
  """
  Selection of an incident field, on which an optional aggregation can be
  performed. Exactly one field out of 'key' and 'dynamicKey' should be non-null
  """
  selection(key: FraudIncidentField, dynamicKey: String, aggregation: SelectionAggregationType, aliasForSorting: String): IncidentSelection!
}

"""Result set of the fraud incidents"""
type FraudIncidentResultSet {
  count: Long!

  """List of the fraud incidents"""
  results: [FraudIncident]!
  total: Long!
}

"""Status of the detected fraud incident"""
enum FraudIncidentStatus {
  """OPEN"""
  OPEN

  """RESOLVED"""
  RESOLVED

  """IN_PROGRESS"""
  IN_PROGRESS
}

"""Attributes of the entity that initiated the fraud incident"""
type FraudInitiatorAttributes {
  """Initiator Attributes for the fraud detected based on custom attributes"""
  customAttributesBasedInitiatorAttributes: CustomAttributesBasedInitiatorAttributes

  """Detection type of the fraud initiator"""
  detectionType: FraudInitiatorDetectionType!

  """
  Initiator Attributes for the fraud detected based on device fingerprint
  """
  deviceFingerprintBasedInitiatorAttributes: DeviceFingerprintBasedInitiatorAttributes

  """Initiator Attributes for the fraud detected based on email"""
  emailBasedInitiatorAttributes: EmailBasedInitiatorAttributes

  """
  Initiator Attributes for the fraud detected based on mobile phone fingerprint
  """
  mobilePhoneFingerprintBasedInitiatorAttributes: MobilePhoneFingerprintBasedInitiatorAttributes

  """Initiator Attributes for the SIM Box Fraud"""
  simBoxFraudInitiatorAttributes: SimBoxFraudInitiatorAttributes
}

"""Detection type of the fraud initiator"""
enum FraudInitiatorDetectionType {
  """EMAIL"""
  EMAIL

  """DEVICE_FINGERPRINT"""
  DEVICE_FINGERPRINT

  """FRAUD_RING"""
  FRAUD_RING

  """SIM_BOX"""
  SIM_BOX

  """MOBILE_PHONE_FINGERPRINT"""
  MOBILE_PHONE_FINGERPRINT

  """CUSTOM_ATTRIBUTES"""
  CUSTOM_ATTRIBUTES
}

"""Metadata required by the UI to render API Fraud screen"""
type FraudMetadata {
  """List of metadata for all the fraud categories"""
  categoryMetadata: [FraudCategoryMetadata]!
}

"""Full Privacy Mode Configuration change details"""
type FullPrivacyModeConfigurationChange {
  toggleAction: ToggleAction!
}

type FullPrivacyModeResponse {
  enabled: Boolean!
}

"""Gcp auth credentials"""
type GcpAuthCredentials {
  """Gcp service account key"""
  serviceAccountKey: String!
}

"""Gcp integration details"""
type GcpIntegrationDetails {
  """Gcp auth credentials"""
  authCredentials: GcpAuthCredentials!

  """Deny action response code in case of blocking"""
  denyActionResponseCode: DenyActionResponseCode

  """Gcp Project ID"""
  projectId: String!

  """Gcp security policy details"""
  securityPolicyDetails: GcpSecurityPolicyDetails!

  """Gcp security policy name on which custom rules will be applied"""
  securityPolicyName: String!
}

"""Gcp integration params"""
type GcpIntegrationParams {
  """Gcp integration details"""
  gcpIntegrationDetails: GcpIntegrationDetails!
}

"""Region security policy details"""
type GcpRegionSecurityPolicyScope {
  """Region name"""
  region: String!
}

"""Gcp Security policy details"""
type GcpSecurityPolicyDetails {
  """Region security policy scope details"""
  gcpRegionSecurityPolicyScope: GcpRegionSecurityPolicyScope

  """Scope at which gcp security policy defined"""
  gcpSecurityPolicyScopeType: GcpSecurityPolicyScopeType!
}

"""Describes the scope at which Security policy is defined"""
enum GcpSecurityPolicyScopeType {
  """GLOBAL"""
  GLOBAL

  """REGION"""
  REGION
}

type GenerateCardUpdateSecretResponse {
  clientSecret: String!
}

type GeneratedTrafficDetails {
  generatedTrafficSourceType: GeneratedTrafficSourceType!
  graphqlDetails: GraphqlDetails
  openApiSpecIds: [String]
  postmanSpecsDetails: PostmanSpecsDetails
}

enum GeneratedTrafficSourceType {
  """OPEN_API_SPEC"""
  OPEN_API_SPEC

  """POSTMAN"""
  POSTMAN

  """GRAPHQL"""
  GRAPHQL

  """WEB_CRAWLER_DISCOVERY"""
  WEB_CRAWLER_DISCOVERY
}

enum GenerationTrafficType {
  """LIVE_TRAFFIC"""
  LIVE_TRAFFIC

  """GENERATED_TRAFFIC"""
  GENERATED_TRAFFIC

  """REPLAY_TRAFFIC"""
  REPLAY_TRAFFIC

  """TRAFFIC_TYPE_NOT_SET"""
  TRAFFIC_TYPE_NOT_SET
}

type GenericFilter {
  id: String

  """Defines filter criteria for the assets."""
  filterCriteria: SavedFilterCriteria
}

"""Geolocation derived from the IP address"""
type Geolocation {
  """City name"""
  city: String

  """Country name"""
  country: String

  """Country ISO code"""
  countryIsoCode: String

  """Latitude"""
  latitude: Float

  """Longitude"""
  longitude: Float

  """State name"""
  state: String
}

type GetAwsWafIntegrationResponse {
  """Aws waf rules for integration"""
  awsWafRules: [AwsWafRule]!
}

"""Imperva Websites"""
type GetImpervaWafWebsitesResponse {
  """Imperva Website Domains"""
  websiteDomainEntries: [WebsiteDomainEntry]!
}

type GetRunnerTaskResultResponse {
  runnerLogMessages: [RunnerLogMessage]
  runnerTaskStatus: RunnerTaskStatus!
}

type GetUpcomingInvoiceResponse {
  apiEndpoints: Long
  currency: Currency
  edgeCalls: Long
  invoiceDetails: InvoiceDetails
}

type GibberishConfig {
  disabled: Boolean!
  threshold: Int!
}

type GithubIntegration {
  id: String
  githubInstallationTargetName: String
  githubInstallationUrl: String
  status: GithubIntegrationStatus!
}

type GithubIntegrationCreationDetails {
  id: String
  githubUrl: String!
}

type GithubIntegrationsResultSet {
  count: Long
  total: Long
  results: [GithubIntegration]!
}

enum GithubIntegrationStatus {
  """READY"""
  READY

  """SUSPENDED"""
  SUSPENDED

  """AWAITING_APPROVAL"""
  AWAITING_APPROVAL
}

type GoogleAuth {
  domainBasedProvisioningEnabled: Boolean!
  domains: [String]!
  enabled: Boolean!
}

type GraphqlDetails {
  graphqlSchemaDetails: [GraphqlSchemaDetails]!
}

"""
Graphql Schema Details. Only one of graphqlSchemaId or introspectionUrl can be
present. introspectionUrl is required if introspectionEnabled is True
"""
type GraphqlSchemaDetails {
  """This flag is for enabling introspection for GraphQL DAST scan"""
  graphqlIntrospectionEnabled: Boolean

  """The graphql schema ID for which to run the DAST scan."""
  graphqlSchemaId: String

  """Specifies the URL for graphql introspection"""
  introspectionUrl: String
}

type GroupByArgument {
  expressions: [AttributeExpression]
  groupLimit: Int
  includeRest: Boolean
  keys: [String] @deprecated(reason: "Deprecated")
}

type HeaderLocation {
  cookieName: String
  headerName: String
  parsingTarget: ParsingTarget
  type: HeaderLocationType!
}

enum HeaderLocationType {
  """HEADER"""
  HEADER

  """COOKIE"""
  COOKIE
}

type HelpOptionWithDetail {
  detail: String!
  option: String!
}

type Histogram {
  key: String
  value: Int
}

"""Hmac auth config"""
type Hmac {
  """access key"""
  accessKey: String!

  """optional advanced options"""
  advancedOptions: HmacAdvancedOptions

  """Key Generation algo type"""
  hmacKeyGenAlgo: HmacHashAlgo!

  """secret key"""
  secretKey: String!

  """signature header"""
  signatureHeader: String!
}

"""AST hook to be used by runner/cli for scan runs"""
type HmacAdvancedOptions {
  """allowed time skew"""
  allowedTimeSkew: Long

  """canonical request format"""
  canonicalRequestFormat: String

  """timestamp header"""
  timestampHeader: String
}

enum HmacHashAlgo {
  """HMAC_SHA1"""
  HMAC_SHA1

  """HMAC_SHA256"""
  HMAC_SHA256

  """HMAC_SHA512"""
  HMAC_SHA512
}

"""AST hook to be used by runner/cli for scan runs"""
type HookConfig {
  apiAccessKey: ApiAccessKey
  authEndpoint: String @deprecated(reason: "Deprecated")
  awsSignatureV4: AwsSignature

  """Basic Auth config"""
  basicAuth: BasicAuth
  bearerConfig: Bearer
  contentSignature: ContentSignature
  hmacConfig: Hmac
  jwtConfig: JwtConfig
  mutualTls: MutualTls
  oauth: Oauth
  popTokenSignature: PopTokenSignature
}

enum HookMode {
  """ADVANCED"""
  ADVANCED

  """NORMAL"""
  NORMAL
}

enum HttpMessagePart {
  """REQUEST_HEADER"""
  REQUEST_HEADER

  """RESPONSE_HEADER"""
  RESPONSE_HEADER

  """RPC_REQUEST_METADATA"""
  RPC_REQUEST_METADATA

  """RPC_RESPONSE_METADATA"""
  RPC_RESPONSE_METADATA
}

type Identifiable {
  id: String!
}

type IdpGroupMappingMetadata {
  id: String
  groupAttributeName: String!
  groupToRolesCollection: [IdpGroupToRoles]
}

type IdpGroupMappingMetadataResultSet {
  count: Long
  total: Long
  results: [IdpGroupMappingMetadata]!
}

type IdpGroupToRoles {
  assignedRoles: [RoleInput]
  groupName: String!
}

type ImpactScoreLevel {
  """Minimum threshold Value for high score"""
  highMinScore: Int! @deprecated(reason: "Deprecated")

  """Minimum threshold Value for medium score"""
  mediumMinScore: Int! @deprecated(reason: "Deprecated")
}

type ImpactScoringConfig {
  """Default impact score level"""
  defaultImpactScoreLevel: ImpactScoreLevel! @deprecated(reason: "Deprecated")

  """Configured impact score level"""
  impactScoreLevel: ImpactScoreLevel! @deprecated(reason: "Deprecated")
}

"""Imperva WAF Integration Details"""
type ImpervaIntegrationParams {
  """Imperva Account ID is an optional field"""
  accountId: String

  """Imperva API ID"""
  apiId: String!

  """Imperva API Key"""
  apiKey: String!

  """The parameter websiteIDs can be left out if websiteNames is provided."""
  websiteIds: [String]

  """The parameter websiteNames can be left out if websiteIds is provided."""
  websiteNames: [String]
}

"""Result set of the fraud incident component insights"""
type IncidentComponentInsightsResultSet {
  count: Long!

  """List of the fraud incident component insights"""
  results: [FraudIncidentComponentInsight]!
  total: Long!
}

"""The selected incident component field"""
type IncidentComponentSelection {
  """Value of the selected incident component field"""
  value: Unknown
}

"""Confidence level of the detected fraud incident"""
enum IncidentDetectionConfidenceLevel {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH
}

"""Severity level of the detected fraud incident"""
enum IncidentDetectionSeverityLevel {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH
}

"""Result set of the fraud incident insights"""
type IncidentInsightsResultSet {
  count: Long!

  """List of the fraud incident insights"""
  results: [FraudIncidentInsight]!
  total: Long!
}

"""The selected incident field"""
type IncidentSelection {
  """Value of the selected incident field"""
  value: Unknown
}

type IncompleteOpenApiSpecReference {
  """Open API spec reference specId"""
  specId: String!
}

type IncrementalScanConfiguration {
  """Boolean flag whether the config is enabled or not."""
  isEnabled: Boolean!

  """Look back duration for running scan in incremental mode."""
  lookBackDuration: Duration!
}

input InputAccountTakeoverAnomalyDetectionConfig {
  keyValuePairs: [InputAnomalyDetectionConfigKeyValuePair]
  name: AccountTakeoverAnomalyDetectionConfigName!
  ruleId: String
}

"""
Activity log filter which supports combining filters using logical operators
"""
input InputActivityLogCompositeFilter {
  """Activity log logical filter"""
  activityLogLogicalFilter: InputActivityLogLogicalFilter

  """Activity log relational filter"""
  activityLogRelationalFilter: InputActivityLogFilter
}

"""Activity log relational filter argument"""
input InputActivityLogFilter {
  """Activity log field on which the filter is to be applied"""
  key: ActivityLogField

  """Relational operator to be applied to match the key with the value"""
  operator: FilterOperatorType

  """
  Field specific to an activity log type on which the filter is to be applied
  """
  typeSpecificKey: TypeSpecificField

  """Value or the RHS to be used in the relational filter"""
  value: Unknown
}

"""Activity log logical filter"""
input InputActivityLogLogicalFilter {
  """
  The individual activity log filters which have to be combined using the specified logical operator
  """
  activityLogFilters: [InputActivityLogCompositeFilter]

  """Logical operator to use to combine the specified filters"""
  logicalOperator: LogicalOperator
}

"""Activity log order argument"""
input InputActivityLogOrder {
  """Direction in which the activity logs should be ordered"""
  direction: OrderDirection

  """Enum key on which the ordering is to be performed"""
  key: ActivityLogField!
}

input InputActorEventsFilter {
  excluding: [InputFilter]
  matching: [InputFilter]
  timeRange: InputTimeRange!
}

input InputActorForeignFilter {
  eventsFilter: InputActorEventsFilter!
}

input InputActorSeverityStateChangeEventCondition {
  """Actor ip reputation level list"""
  actorIpReputationLevels: [IpReputationLevel]
  actorSeverities: [ActorSeverity]
}

input InputActorStatusUpdate {
  expiration: DateTime
  id: String
  ids: [String]
  status: ActorStatusMutationType!
  statusChangeReason: String
}

"""Advance mode fields"""
input InputAdvancedMode {
  """Hook code snippet"""
  hookScript: String!
}

input InputAdvanceScanSuiteConfiguration {
  delayDurationBetweenRequests: Duration
  idleTimeoutDuration: Duration
  scanTimeoutDuration: Duration
  totalTestExecutionThreads: Int
}

"""Affected Entity"""
input InputAffectedEntity {
  """Entity type in vulnerability"""
  affectedEntityType: AffectedEntityType!

  """Entity type info in vulnerability"""
  entityInfo: InputEntityInfo!

  """Entity id"""
  id: String!

  """Entity name"""
  name: String!
}

input InputAggregatableOrder {
  aggregation: MetricAggregationType
  direction: OrderDirection
  key: String
  keyExpression: InputAttributeExpression
  size: Int

  """Time Units used for this orderBy argument"""
  units: TimeUnit
}

"""Akamai auth credentials"""
input InputAkamaiAuthCredentials {
  """Akamai access token credentials"""
  accessToken: String!

  """Akamai client secret credentials"""
  clientSecret: String!

  """Akamai client token credentials"""
  clientToken: String!
}

"""Akamai integration details"""
input InputAkamaiIntegrationDetails {
  """Akamai auth credentials"""
  authCredentials: InputAkamaiAuthCredentials!

  """Akamai security policy configuration id"""
  configurationId: String!

  """Akamai security policy id on which custom rules will be created"""
  securityPolicyId: String!
}

"""Akamai integration params"""
input InputAkamaiIntegrationParams {
  """Akamai integration details"""
  akamaiIntegrationDetails: InputAkamaiIntegrationDetails!

  """Host"""
  host: String!
}

"""Akamai integration update params"""
input InputAkamaiIntegrationUpdateParams {
  """Updated akamai integration details"""
  akamaiIntegrationDetails: InputUpdatedAkamaiIntegrationDetails!

  """Host"""
  host: String!
}

"""Required arguments to validate Akamai WAF Connection"""
input InputAkamaiWafValidationInput {
  """
  The credentials for this Akamai WAF integration. Either of authCredentials or integrationConfigId  must be present.
  """
  authCredentials: InputAkamaiAuthCredentials

  """Host endpoint for Akamai WAF api calls."""
  host: String!

  """
  The integration-config Id of this Akamai WAF integration. Overridden by AkamaiAuthCredentials if present.
  """
  integrationConfigId: String

  """Akamai security policy configuration id"""
  configurationId: String!

  """Akamai security policy id on which custom rules will be created"""
  securityPolicyId: String!
}

input InputAllowedRunners {
  """Allowed runner ids for testing"""
  allowedRunnerIds: [String]

  """Pick any runner for testing"""
  anyRunner: Boolean
}

"""Analytics query"""
input InputAnalyticsQuery {
  """Time range to be used for this analytics query"""
  between: InputTimeRange!

  """Filters to be used for this analytics query"""
  filterBy: [InputFilter]

  """Group by clause to be used for this analytics query"""
  groupBy: InputGroupByArgument

  """Interval to be used for this analytics query"""
  interval: InputIntervalArgument

  """Limit to be used for this analytics query"""
  limit: Int!

  """Name provided for this analytics query"""
  name: String!

  """Offset to be used for this analytics query"""
  offset: Int

  """Order by clause to be used for this analytics query"""
  orderBy: [InputAggregatableOrder]

  """Scope to be used for this analytics query"""
  scope: String!

  """The list of selections for this analytics query"""
  selections: [InputAnalyticsQuerySelectionArgument]!
}

"""Analytics query batch request"""
input InputAnalyticsQueryBatchCreateRequest {
  """Scope associated with this analytics request batch"""
  batchScope: String!

  """Execute this analytics request batch in async mode"""
  executeAsync: Boolean

  """Metadata associated with this analytics request batch"""
  metadata: String

  """Named queries in this analytics request batch"""
  queries: [InputAnalyticsQuery]!

  """Skip materialized view creation for this analytics request batch"""
  skipView: Boolean
}

"""Analytics query batches detail request"""
input InputAnalyticsQueryBatchesDetailRequest {
  """List for authors to fetch"""
  authorEmails: [String]

  """Specific batchId to be queried"""
  batchId: String

  """Scope associated with this analytics request batch"""
  batchScope: String

  """Limit of batches to be fetched"""
  limit: Int

  """Offset of batches to be fetched"""
  offset: Int

  """List of batch states"""
  states: [AnalyticsQueryBatchState]
}

"""Selection"""
input InputAnalyticsQuerySelectionArgument {
  """Metric aggregation type argument to be used for this analytics query"""
  aggregation: MetricAggregationType

  """Attribute selection argument for this analytics query"""
  expression: InputAttributeExpression!

  """Size argument for this analytics query"""
  size: Int

  """Units argument be used for this analytics query"""
  units: TimeUnit
}

input InputAnomalyActorExclusionInfo {
  actorExclusionType: AnomalyActorExclusionType!
  actorId: String
}

input InputAnomalyAggregationConfigDelete {
  anomalyScope: InputAnomalyScope!
}

input InputAnomalyAggregationConfigUpdate {
  anomalyEventAggregationConfig: InputEventAggregationConfig!
  anomalyScope: InputAnomalyScope!
}

"""API Param scope for anomaly configs"""
input InputAnomalyApiParamScope {
  """API Scope"""
  apiScope: InputAnomalyApiScope

  """Param Info"""
  paramInfo: InputAnomalyParamInfo

  """Parameter Name"""
  paramName: String

  """Param Info Scope"""
  scope: InputAnomalyParamInfoScope
}

"""API scope for anomaly configs"""
input InputAnomalyApiScope {
  """API Identifier"""
  id: String!

  """Service Scope"""
  serviceScope: InputAnomalyServiceScope!
}

"""Backend API scope for anomaly configs"""
input InputAnomalyBackendApiScope {
  """Backend Scope"""
  backendScope: InputAnomalyBackendScope!

  """Backend API Identifier"""
  id: String!
}

"""Backend scope for anomaly configs"""
input InputAnomalyBackendScope {
  """Environment Scope"""
  environmentScope: InputAnomalyEnvironmentScope

  """Backend Identifier"""
  id: String!
}

input InputAnomalyCategoryConfig {
  eventScoreCategory: AnomalyEventScoreCategory
  securityEventCategory: AnomalySecurityEventCategory
}

input InputAnomalyConfigStatus {
  disabled: Boolean!
  internal: Boolean!
}

input InputAnomalyConfigStatusChange {
  disabled: Boolean
  internal: Boolean
}

input InputAnomalyDetectionConfig {
  """AnomalyDetectionConfig for Account Takeover Anomaly Detection"""
  accountTakeoverAnomalyDetectionConfig: InputAccountTakeoverAnomalyDetectionConfig

  """AnomalyDetectionConfig for API Definition Metadata"""
  apiDefinitionMetadataAnomalyDetectionConfig: InputApiDefinitionMetadataAnomalyDetectionConfig

  """AnomalyDetectionConfig for API State Based detections"""
  apiStateBasedAnomalyDetectionConfig: InputApiStateBasedAnomalyDetectionConfig

  """AnomalyDetectionConfig for Blocking Metadata"""
  blockingMetadataAnomalyDetectionConfig: InputBlockingMetadataAnomalyDetectionConfig

  """Anomaly Config Category"""
  category: InputAnomalyCategoryConfig

  """Type for AnomalyDetectionConfig"""
  configType: AnomalyDetectionConfigType!

  """AnomalyDetectionConfig for Credential Stuffing Anomaly Detection"""
  credentialStuffingAnomalyDetectionConfig: InputCredentialStuffingAnomalyDetectionConfig

  """AnomalyDetectionConfig for Custom Rules"""
  customRulesAnomalyDetectionConfig: InputCustomRulesAnomalyDetectionConfig

  """AnomalyDetectionConfig for modsecurity"""
  modSecurityAnomalyDetectionConfig: InputModsecurityAnomalyDetectionConfig

  """AnomalyDetectionConfig for Session Definition Metadata"""
  sessionDefinitionMetadataAnomalyDetectionConfig: InputSessionDefinitionMetadataAnomalyDetectionConfig

  """Anomaly Config status"""
  status: InputAnomalyConfigStatusChange

  """AnomalyDetectionConfig for Volumetric Anomaly Detection"""
  volumetricAnomalyDetectionConfig: InputVolumetricAnomalyDetectionConfig
}

input InputAnomalyDetectionConfigDelete {
  anomalyDetectionConfigs: [InputAnomalyDetectionConfig]

  """anomaly detection type"""
  anomalyDetectionType: AnomalyDetectionType
  anomalyScope: InputAnomalyScope!
}

input InputAnomalyDetectionConfigKeyValuePair {
  configKey: String!
  configValue: InputAnomalyDetectionConfigValue!
}

input InputAnomalyDetectionConfigUpdate {
  anomalyDetectionConfigs: [InputAnomalyDetectionConfig]!
  anomalyScope: InputAnomalyScope!
}

input InputAnomalyDetectionConfigValue {
  """API Call Spike tuning config list"""
  apiCallSpikeTuningConfigList: [InputApiCallSpikeTuningConfig]

  """Credential Stuffing tuning config list"""
  credentialStuffingTuningConfigList: [InputCredentialStuffingTuningConfig]

  """Anomaly Config for Email Domain"""
  emailDomainAnomalyConfig: InputEmailDomainAnomalyConfig

  """Anomaly Config for Ip Type"""
  ipTypeAnomalyConfig: InputIpTypeAnomalyConfig

  """Anomaly Config for Land Speed Violation"""
  landSpeedViolationConfig: InputLandSpeedViolationConfig

  """Multi valued string param rule list"""
  multiValuedStringParamRuleList: [InputMultiValuedStringParamRule]

  """Param value type excluded by modsec"""
  paramValueTypeModsecExcludes: [InputParamValueTypeModsecExclude]

  """Config for predecessor successor API sequence"""
  predecessorSuccessorApiSequenceConfig: InputPredecessorSuccessorApiSequenceConfig

  """Anomaly Config for Session Expiry"""
  sessionExpiryConfig: InputSessionExpiryConfig

  """Anomaly Detection Config value as string list"""
  stringList: [String]

  """Sub rule config list"""
  subRuleConfigList: [InputAnomalyDetectionSubRuleConfig]

  """User ID data config list"""
  userIdDataConfigList: [InputDetectionUserIdDataConfig]

  """Anomaly Detection Config string value"""
  value: String
}

input InputAnomalyDetectionSubRuleConfig {
  blockingEnabled: Boolean
  category: InputAnomalyCategoryConfig
  status: InputAnomalyConfigStatusChange
  subRuleId: String!
}

"""Environment scope for anomaly configs"""
input InputAnomalyEnvironmentScope {
  """Environment Identifier"""
  id: String!
}

input InputAnomalyEventExclusionInfo {
  eventExclusionType: AnomalyEventExclusionType!
  eventFamily: AnomalyEventFamily
  eventTypeId: String
  eventTypeName: String
}

input InputAnomalyExclusionApplicableOptionsRequest {
  eventCategory: AnomalyEventCategory!
  eventFamily: AnomalyEventFamily!
  paramName: String
}

input InputAnomalyExclusionRuleData {
  actorExclusionInfo: InputAnomalyActorExclusionInfo!
  anomalyScope: InputAnomalyScope!
  description: String!
  eventExclusionInfo: InputAnomalyEventExclusionInfo!
  name: String!
  sourceScope: InputAnomalyScope
}

input InputAnomalyExclusionRuleDelete {
  id: String!
}

input InputAnomalyExclusionRuleUpdate {
  id: String!
  configStatus: InputAnomalyConfigStatus!
  description: String!
  name: String!
}

input InputAnomalyGlobalConfigStatusUpdate {
  anomalyScope: InputAnomalyScope!
  configStatusChange: InputAnomalyConfigStatusChange!
  excludedEventsGenerationConfig: InputExcludedEventsGenerationConfig
}

input InputAnomalyParamInfo {
  paramInfoType: AnomalyParamInfoType!
  paramName: String
  paramRegex: String
}

input InputAnomalyParamInfoScope {
  apiScope: InputAnomalyApiScope
  scopeType: AnomalyScopeType!
  serviceScope: InputAnomalyServiceScope
}

input InputAnomalyRuleConfigUpdate {
  configStatus: InputAnomalyConfigStatusChange
  configType: AnomalyDetectionConfigType!
  ruleId: String!
  subRuleConfigs: [InputAnomalySubRuleConfigUpdate]
}

"""Scope for anomaly configs"""
input InputAnomalyScope {
  """API Param Scope populated when scopeType = AnomalyScopeType.API_PARAM"""
  apiParamScope: InputAnomalyApiParamScope

  """API Scope populated when scopeType = AnomalyScopeType.API"""
  apiScope: InputAnomalyApiScope

  """
  Backend API Scope populated when scopeType = AnomalyScopeType.BACKEND_API
  """
  backendApiScope: InputAnomalyBackendApiScope

  """Backend Scope populated when scopeType = AnomalyScopeType.BACKEND"""
  backendScope: InputAnomalyBackendScope

  """
  Environment Scope populated when scopeType = AnomalyScopeType.ENVIRONMENT
  """
  environmentScope: InputAnomalyEnvironmentScope

  """Scope Type"""
  scopeType: AnomalyScopeType!

  """Service Scope populated when scopeType = AnomalyScopeType.SERVICE"""
  serviceScope: InputAnomalyServiceScope
}

"""Service scope for anomaly configs"""
input InputAnomalyServiceScope {
  """Environment Scope"""
  environmentScope: InputAnomalyEnvironmentScope

  """Service Identifier"""
  id: String!
}

input InputAnomalySubRuleConfigUpdate {
  """Action for the anomaly sub rule"""
  anomalySubRuleAction: AnomalySubRuleAction
  blockingEnabled: Boolean
  configStatus: InputAnomalyConfigStatusChange
  subRuleId: String!
}

input InputApiAccessKey {
  """Access key"""
  apiAuthKey: String!

  """Info of where to place apikey in request"""
  requestTokenInfo: InputRequestTokenInfo
}

input InputApiCallSpikeTrainingConfig {
  """
  It specifies that the PX value (percentile value like P95) for the span count
  within the training data samples should be greater than 0. For example, if the
  value = 0.25, that means the P25(training data samples) > 0 or we should have
  at least 75% legitimate training data points.
  """
  endpointSpanCountPercentileThreshold: Float!

  """
  It specifies that we should have seen these many spans for the endpoint within the training window at least once
  """
  endpointSpanCountThreshold: Long!

  """
  It specifies what the maximum permissible time duration between the first and
  last time sorted data points should be as a fraction of the training data window.
  """
  timeFractionTrainingWindowThreshold: Float!

  """
  The training config would be applied on the endpoints identified by this config
  """
  trainingScopeConfig: InputTrainingScopeConfig!
}

input InputApiCallSpikeTuningConfig {
  """
  The detection config would be applied on the endpoints identified by this config
  """
  detectionScopeConfig: InputDetectionScopeConfig!

  """
  Minimum span count for the API to be present during the detection run for the
  API data to be qualified to be run through the detector
  """
  endpointSpanCountDetectionThreshold: Long!
}

input InputApiDefinitionInput {
  """The API definition formats"""
  formats: [ApiDefinitionFormat]!

  """The API definition pagination information"""
  pagination: InputApiDefinitionPaginationInput!
}

input InputApiDefinitionLinePaginationInput {
  """The maximum number of lines to include"""
  limit: Long!

  """The number of lines to skip in the beginning"""
  offset: Long!
}

input InputApiDefinitionMetadataAnomalyDetectionConfig {
  keyValuePairs: [InputAnomalyDetectionConfigKeyValuePair]
  name: ApiDefinitionMetadataAnomalyDetectionConfigName!
  ruleId: String
}

input InputApiDefinitionPaginationInput {
  """The pagination input for the paginationType 'LINE'"""
  linePagination: InputApiDefinitionLinePaginationInput

  """The type of pagination used"""
  paginationType: ApiDefinitionPaginationUnit!
}

input InputApiDefinitionSpec {
  domainId: String
  environment: String
  format: Format!

  """
  The API definition generated will contain the API endpoints having any (one or more) of these label names
  """
  labels: [String]
  learningEndpointStrategy: LearningEndpointStrategy

  """The id of the service whose API definition is to be downloaded"""
  serviceId: String
}

input InputApiDiscoveryConfig {
  """Key-Value Pairs in API Discovery Config"""
  keyValuePairs: [InputTrainingConfigKeyValuePair]

  """API Discovery Config Name"""
  name: ApiDiscoveryConfigName!
}

input InputApiEndpoint {
  id: String!
  name: String!
}

input InputApiEnvironmentScope {
  """The environment id"""
  environmentId: String
}

input InputApiExternalOverride {
  isExternal: Boolean!
}

"""Event type condition for API Fraud Incident"""
input InputApiFraudIncidentChangeEventCondition {
  changeTypes: [ApiFraudIncidentChangeType]!
  confidenceLevels: [ApiFraudIncidentConfidenceLevel]!
  severities: [ApiFraudIncidentSeverity]!
}

"""Global config related to api"""
input InputApiGlobalConfig {
  """API default config type"""
  defaultConfigsType: ApiDefaultConfigsType

  """Boolean denoting status for api global config"""
  disabled: Boolean

  """Boolean denoting if detection is enabled for exit spans or not"""
  enabledForExitSpans: Boolean

  """List of scopes whose config is overriding this scope config"""
  overriddenParentScopes: [InputAnomalyScope]

  """List of scopes whose config is getting overridden by this scope config"""
  overridingChildrenScopes: [InputAnomalyScope]
}

input InputApiInsightUpdate {
  accessType: ApiAccessType
  apiId: String!
}

input InputApiInspectorFilterArgument {
  aggregation: ApiInspectorAggregationType
  key: ApiInspectorField!
  operator: FilterOperatorType!
  value: Unknown!
}

input InputApiInspectorGroupByArgument {
  key: ApiInspectorField!
}

input InputApiInspectorJobFilterArgument {
  key: ApiInspectorJobField!
  operator: FilterOperatorType!
  value: Unknown!
}

input InputApiInspectorJobOrderArgument {
  direction: OrderDirection
  key: ApiInspectorJobField!
}

input InputApiInspectorOrderArgument {
  direction: OrderDirection
  key: ApiInspectorField!
}

"""
Api naming rule config. There may be multiple configs, but only the one
corresponding to the api naming rule config type would be non null
"""
input InputApiNamingRuleConfig {
  """Specifies the api naming rule config type"""
  apiNamingRuleConfigType: ApiNamingRuleConfigType!

  """Segment matching based api naming rule config"""
  segmentMatchingBasedRuleConfig: InputSegmentMatchingBasedRuleConfig
}

"""Event type condition for Api naming Rule"""
input InputApiNamingRuleConfigChangeCondition {
  """Represents operation on Api Naming Rule i.e Create/Update/Delete """
  apiNamingRuleConfigChangeTypes: [ApiNamingRuleConfigChangeType]!
}

"""Input to create api naming rule"""
input InputApiNamingRuleCreate {
  """Api naming rule config"""
  apiNamingRuleConfig: InputApiNamingRuleConfig!

  """Says if api naming rule is disabled"""
  disabled: Boolean!

  """Name of the api naming rule"""
  name: String!

  """Filter to match the spans to apply the api naming rule"""
  spanFilter: InputTraceableSpanProcessingRuleFilter!
}

"""Input to delete api naming rule"""
input InputApiNamingRuleDelete {
  id: String!
}

"""
Specifies which Api Naming Rules to consider. Filter fields may be omitted, but
any fields specified must be satisfied by each rule.
"""
input InputApiNamingRuleFilter {
  """Rules must match the specified api spec ids"""
  apiSpecIds: [String]
}

"""Input to update api naming rule"""
input InputApiNamingRuleUpdate {
  apiNamingRuleConfig: InputApiNamingRuleConfig!
  disabled: Boolean!
  id: String!
  name: String!
  spanFilter: InputTraceableSpanProcessingRuleFilter!
}

input InputApiNamingTrainingConfig {
  keyValuePairs: [InputTrainingConfigKeyValuePair]
  name: ApiNamingTrainingConfigName!
}

input InputApiRiskConfigScope {
  """The scope level"""
  apiRiskConfigScopeLevel: ApiRiskConfigScopeLevel

  """The environment scope"""
  environmentScope: InputApiEnvironmentScope
}

input InputApiRiskConfigScopeFilter {
  """The config scope"""
  apiRiskConfigScope: InputApiRiskConfigScope!
}

input InputApiRiskElementUpdateDetails {
  """Whether application of this element is disabled"""
  disabled: Boolean

  """The element id"""
  id: String!

  """The integer score value"""
  score: Int!
}

input InputApiRiskFactorConfigsResetFilter {
  """The config scope filter"""
  apiRiskConfigScopeFilter: InputApiRiskConfigScopeFilter!

  """The list of risk categories"""
  apiRiskFactorCategories: [ApiRiskFactorCategory]!
}

input InputApiRiskFactorConfigsUpdate {
  """The config scope filter"""
  apiRiskConfigScopeFilter: InputApiRiskConfigScopeFilter!

  """The list of risk risk factor updates"""
  apiRiskFactorUpdateDetails: [InputApiRiskFactorUpdateDetails]!
}

input InputApiRiskFactorUpdateDetails {
  """The list of risk element update details"""
  apiRiskElementUpdateDetails: [InputApiRiskElementUpdateDetails]

  """The risk factor category"""
  apiRiskFactorCategory: ApiRiskFactorCategory!

  """The risk factor update type"""
  apiRiskFactorUpdateType: ApiRiskFactorUpdateType!

  """Whether application of this config is disabled"""
  disabled: Boolean
}

input InputApiRiskScoringGridCell {
  """The impact axis"""
  apiRiskImpactScoreCategory: ScopedApiRiskScoreCategory!

  """The likelihood axis"""
  apiRiskLikelihoodScoreCategory: ScopedApiRiskScoreCategory!

  """The integer score value"""
  score: Int!
}

input InputApiRiskScoringGridUpdate {
  """The risk config scope filter"""
  apiRiskConfigScopeFilter: InputApiRiskConfigScopeFilter!

  """The list of grid cells"""
  apiRiskScoringGridCells: [InputApiRiskScoringGridCell]!
}

input InputApiScope {
  id: String!
  serviceScope: InputServiceScope!
}

"""Event type condition for Api Spec Config"""
input InputApiSpecConfigChangeCondition {
  """Represents operation on Api Spec Config i.e Create/Update/Delete """
  apiSpecConfigChangeTypes: [ApiSpecConfigChangeType]!
}

input InputApiSpecConformanceFilterArgument {
  aggregation: ApiSpecConformanceAggregationType
  key: ApiSpecConformanceField!
  operator: FilterOperatorType!
  value: Unknown!
}

input InputApiSpecConformanceGroupByArgument {
  key: ApiSpecConformanceField!
}

input InputApiSpecConformanceJobFilterArgument {
  key: ApiSpecConformanceJobField!
  operator: FilterOperatorType!
  value: Unknown!
}

input InputApiSpecConformanceJobOrder {
  direction: OrderDirection
  key: ApiSpecConformanceJobField!
}

input InputApiSpecConformanceJobSpecInput {
  apiCharacteristicType: ApiSpecConformanceApiCharacteristicType!

  """List of API endpoints used for conformance analysis"""
  apiEndpoints: [InputApiEndpoint]

  """API endpoints matching this filter are used for conformance analysis"""
  apiEndpointsFilter: InputGenericFilter
  apiSpecIds: [String]
  environment: String!
  fileNames: [String]
  serviceIds: [String]
  serviceNames: [String]
  specId: String

  """Type of spec documentations used for conformance analysis"""
  specType: SpecType
}

input InputApiSpecConformanceOrder {
  direction: OrderDirection
  key: ApiSpecConformanceField!
}

"""
Specifies which Api Specs to select based on a filter. Filters may be omitted in which case no filter is applied.
"""
input InputApiSpecFilter {
  """List of SHA256 hashes by which the ApiSpecs need to be matched with"""
  fileContentSha256Hashes: [String]

  """List of ids by which the ApiSpecs need to be matched with"""
  ids: [String]

  """
  List of open api spec resolution states for which the ApiSpecs need to be
  fetched. Note this filter is valid only for open api specs
  """
  openApiSpecResolutionStates: [OpenApiSpecResolutionState]

  """List of reference types for which the ApiSpecs need to be fetched"""
  referenceTypes: [ReferenceType]

  """List of spec names by which the ApiSpecs need to be matched with"""
  names: [String]

  """List of spec paths by which the ApiSpecs need to be matched with"""
  specPaths: [String]

  """List of spec types for which the ApiSpecs need to be fetched"""
  specTypes: [ApiSpecType]

  """List of spec statuses for which the ApiSpecs need to be fetched"""
  statuses: [ApiSpecStatus]
}

input InputApiStateBasedAnomalyDetectionConfig {
  keyValuePairs: [InputAnomalyDetectionConfigKeyValuePair]
  name: ApiStateBasedAnomalyDetectionConfigName!
}

input InputApiTagUpdate {
  id: String!
  tags: [AssetTag]!
}

input InputAssetNameToAssetTypePair {
  key: String
  value: String
}

input InputAssetSelection {
  domain: InputSelectedDomainAsset
  endpoint: InputSelectedEndpointAsset
  selectedAsset: SelectedAsset!

  """Asset filter that will be used while running suite"""
  selectedAssetFilter: [InputFilter]
  selectionMode: SelectionMode!
  service: InputSelectedServiceAsset
}

"""AST Assertion Override config. Only one of the below must be set."""
input InputAstAssertionOverride {
  """System defined Assertion Override"""
  systemDefinedAssertionOverride: InputTestAssertion

  """User defined Assertion Override"""
  userDefinedAssertionOverride: InputTestAssertion
}

"""
Specifies which custom test plugins are to be fetched. Only one of the filter types possible is expected to be set
"""
input InputAstCustomTestPluginFilterArgument {
  """List of ids to be filtered upon"""
  ids: [String]!
}

"""
This Configuration if non-null implies AST is enabled in this environment and
also contains configs for other AST features. By default, AST is enabled.
"""
input InputAstEnabledConfig {
  """
  The replay configuration describes the AST replay features in this environment. By default, replay is disabled.
  """
  replayConfig: InputAstReplayConfig!
}

"""Filter provided to query and get the AST feature configs."""
input InputAstFeatureConfigFilterArgument {
  """
  List of environment ids filter for which to query and get AST feature configs.
  If list is empty, all the AST feature configs for this tenant are fetched.
  """
  environmentIds: [String]!
}

"""Ast Request filter Argument"""
input InputastFilter {
  key: AstFilterField!
  operator: FilterOperatorType!
  value: Unknown!
}

input InputAstFilterValue {
  suiteIdentifier: [InputScanSuiteIdentifier]
  value: Unknown
}

input InputAstGroupByArgument {
  key: AstGroupByField!
}

input InputAstMapData {
  key: String!
  value: String!
}

"""AST Mutation Override config"""
input InputAstMutationOverride {
  """System defined Mutation Override"""
  systemDefinedMutationOverride: InputTestMutation

  """User defined Mutation Override"""
  userDefinedMutationOverride: InputTestMutation
}

"""Ast Order Argument"""
input InputAstOrderArgument {
  direction: OrderDirection!
  key: AstOrder!
}

"""AST Override config. Exactly one of the fields must be set"""
input InputAstOverrideConfig {
  """Assertion Override"""
  assertionOverride: InputAstAssertionOverride

  """Mutation Override"""
  mutationOverride: InputAstMutationOverride
}

input InputAstOverrideInfo {
  """Description for the override"""
  description: String!

  """Name of the override"""
  name: String!

  """Override config"""
  overrideConfig: InputAstOverrideConfig!

  """Override scopes"""
  overrideScopes: [InputAstOverrideScope]!
}

"""
Defined the scope for the override. Exactly one of the fields must be set
"""
input InputAstOverrideScope {
  """
  Fixed test id of the test scope in which this override is to be applied
  """
  fixedTestId: String!
}

"""
Specifies which overrides are to be fetched. Only one of the filter types possible is expected to be set
"""
input InputAstOverridesFilterArgument {
  """List of ids to be filtered upon"""
  ids: [String]!
}

input InputAstPoliciesV2FilterArgument {
  key: AstPolicyV2FilterKey!
  operator: AstFilterOperatorType!
  value: Unknown!
}

input InputAstPolicyV2Configuration {
  attackCoverage: AstAttackCoverage!
  attackImpact: AstAttackImpact
  attackMethods: [AstAttackMethod]!
  attacksSelection: [InputAttackSelection]!
}

input InputAstReferencedScanScope {
  """The type of the reference to the scan scope"""
  referencedScanScopeType: ReferencedScanScopeType!

  """The test level scope details for the referenced scan"""
  testLevelScope: InputTestLevelScope!
}

"""
Describes AST replay configurations for this environment. By default, AST replay is disabled.
"""
input InputAstReplayConfig {
  """
  Fetch APIs in a replay scan with last called timestamp not less than this duration.
  """
  apiInactivityDuration: Duration

  """
  Tells if AST replay is enabled/disabled for this environment. By default, is false i.e. disabled.
  """
  enabled: Boolean!

  """Max number of APIs to fetch in a replay scan"""
  maxApiLimit: Int

  """Flag to control if to skip unlearnt APIs in a replay scan"""
  skipNonLearntApis: Boolean

  """Flag to control if to skip under discovery APIs in a replay scan"""
  skipUnderDiscoveryApis: Boolean

  """Filters Spans based on location and key-value predicate"""
  spanFilters: InputReplayConfigSpanFilters
}

input InputAstScanJobSpec {
  """Scope of the referenced scan"""
  referencedScanScope: InputAstReferencedScanScope

  """Allowed runner ids to run the scheduled scan"""
  runnerIds: [String]

  """Allowed runner names to run the scheduled scan"""
  runnerNames: [String]

  """Scan id using which scheduled scan will be cloned"""
  scanId: String

  """Scan suite id using which scheduled scan will be initiated"""
  scanInfoSource: ScanInfoSource

  """Scan policy id using which scheduled scan will be initiated"""
  scanPolicyId: String

  """Scan suite id using which scheduled scan will be initiated"""
  scanSuiteId: String
}

"""Update request for updating AST scan runner logs persistence config"""
input InputAstScanLogsPersistenceConfigUpdate {
  """
  Max log lines to be persisted. It is considered unlimited in case this is set to null
  """
  maxPersistLogLines: Int
}

"""Update request for updating AST scan runner logs purge config"""
input InputAstScanLogsPurgeConfigUpdate {
  """Says if ast scan logs purging is enabled"""
  enabled: Boolean!

  """Duration for which scan logs are to be persisted"""
  retentionDuration: Duration!
}

"""Filter provided to query and get the stored API metadata."""
input InputAstStoredApiMetadataFilterArgument {
  """API IDs for which to get stored metadata."""
  apiIds: [String]

  """
  API name substring using which to search on API names and get corresponding stored API metadata.
  """
  apiNameSubstring: String

  """Environment IDs for which to get stored API metadata."""
  environmentIds: [String]
}

"""
Sorting options for the stored API metadata, by default sorted based on last stored timestamp.
"""
input InputAstStoredApiMetadataSortBy {
  sortField: AstStoredApiMetadataSortField
  sortOrder: AstSortOrder
}

input InputAttackSelection {
  attackSelectionLevel: AttackSelectionLevel!
  plugin: InputSelectedLevelPlugin
  pluginCategory: InputSelectedLevelPluginCategory
  pluginSelectionGroup: SelectedLevelPluginSelectionGroup

  """Attack selection rule"""
  rule: InputAttackSelectionRule
  selectionMode: SelectionMode!

  """Vulnerability type name"""
  vulnerabilityType: InputSelectedLevelVulnerabilityType
}

input InputAttackSelectionRule {
  attackField: AttackField!
  operatorType: AstFilterOperatorType!
  value: Unknown!
}

input InputAttributeExpression {
  key: String!
  subpath: String
}

input InputAttributeFilter {
  """The attribute key for filtering"""
  key: String!

  """The filter operator"""
  operator: EntityFilterOperator!

  """The attribute value for filtering"""
  value: Unknown!
}

input InputAttributeIdentifierInput {
  """The attribute key that is unique within a scope"""
  key: String!

  """The scope of the attribute"""
  scope: String!
}

input InputAttributeMetadataInput {
  """The display name for rendering"""
  displayName: String!

  """The attribute identifier"""
  identifier: InputAttributeIdentifierInput!

  """Datatype of the attribute values"""
  type: AttributeType!
}

input InputAttributeOverride {
  apiExternalOverride: InputApiExternalOverride
  attributeOverrideType: AttributeOverrideType!
  paramTypeOverride: InputParamTypeOverride
}

input InputAttributeOverrideIdentifier {
  attributeOverrideType: AttributeOverrideType!
  paramTypeOverrideIdentifier: InputParamTypeOverrideIdentifier
}

input InputAttributeUpdateInput {
  """The new display name to be set"""
  displayName: String

  """The attribute identifier"""
  identifier: InputAttributeIdentifierInput!
}

"""
A complex predicate representing one or more children combined with a logical operator
"""
input InputAuthDetectionRuleCompositePredicate {
  """Child predicates"""
  children: [InputAuthDetectionRulePredicate]!

  """Operator to used for combining child predicates"""
  operator: LogicalOperator!
}

"""Data to use to create an auth detection rule"""
input InputAuthDetectionRuleCreateInput {
  """
  Type of auth the rule identifies. If auth type is unset the specific auth type is not assigned
  """
  authType: String

  """Predicate used to match against a request"""
  predicate: InputAuthDetectionRulePredicate!

  """
  Scope for which the rule applies. If scope is unset, a rule is always applicable
  """
  scope: InputAuthDetectionRuleScope
}

"""Data to use to delete an auth detection rule"""
input InputAuthDetectionRuleDeleteInput {
  """Rule ID to delete"""
  id: String!
}

"""
Specifies which Auth Detection Rules to use. Filter fields may be omitted, but
any fields specified must be satisfied by each rule.
"""
input InputAuthDetectionRuleFilter {
  """Rules must match the specified scope"""
  scope: InputAuthDetectionRuleScope
}

"""A predicate that compares against a key-value pair"""
input InputAuthDetectionRuleKeyValuePredicate {
  """A predicate to compare against the key of a key-value pair"""
  keyPredicate: InputAuthDetectionRuleStringPredicate!

  """
  A predicate to compare against the value of a key-value pair. Optional.
  """
  valuePredicate: InputAuthDetectionRuleStringPredicate
}

"""Predicate used to detect auth on a request"""
input InputAuthDetectionRulePredicate {
  """Composite predicate representing a complex condition."""
  compositePredicate: InputAuthDetectionRuleCompositePredicate

  """Key Value predicate representing a match against a key-value pair"""
  keyValuePredicate: InputAuthDetectionRuleKeyValuePredicate

  """
  The type of predicate populated. Only one predicate field should be assigned corresponding to this type
  """
  predicateType: AuthDetectionRulePredicateType!
}

"""Scope for which an Auth Detection Rule applies"""
input InputAuthDetectionRuleScope {
  """A list of environment names where the rule is applicable"""
  environmentNames: [String]!
}

"""A predicate that compares against a string value"""
input InputAuthDetectionRuleStringPredicate {
  """Operator to use for comparison"""
  operator: AuthDetectionRuleRelationalOperator!

  """Value to compare against"""
  value: String!
}

"""Data to use to update an auth detection rule"""
input InputAuthDetectionRuleUpdateInput {
  """Rule ID"""
  id: String!

  """
  Type of auth the rule identifies. If auth type is unset the specific auth type is not assigned
  """
  authType: String

  """Predicate used to match against a request"""
  predicate: InputAuthDetectionRulePredicate!

  """
  Scope for which the rule applies. If scope is unset, a rule is always applicable
  """
  scope: InputAuthDetectionRuleScope
}

input InputAuthentication {
  type: String!
}

input InputAuthorizationLinkRequest {
  consumerKey: String!
  loginUrl: String!
}

"""AWS WAF authentication using Id and secret"""
input InputAwsAuthenticationCredentials {
  """AWS Access Key"""
  accessKey: String

  """AWS Access Key ID"""
  accessKeyId: String!
}

input InputAwsBootstrapWafIntegrationInput {
  id: String!
}

"""AWS WAF Integration Details"""
input InputAwsIntegrationParams {
  """AWS Access Key"""
  accessKey: String

  """AWS Access Key ID"""
  accessKeyId: String

  """Type of authentication used for Aws integration"""
  awsIntegrationAuthType: AwsIntegrationAuthType

  """AWS client id and secret to authenticate"""
  awsAuthCredentials: InputAwsAuthenticationCredentials

  """Aws action type for all the rules defined at integration scope"""
  awsIntegrationActionType: AwsIntegrationActionType!

  """List of AWS resources"""
  resources: [InputAwsResource]!

  """Rule group capacity for Aws waf"""
  ruleGroupCapacity: Long

  """web identity credentials to authenticate"""
  webIdentityAuthCredentials: InputWebIdentityAuthenticationCredentials
}

"""AWS WAF Integration Update Details"""
input InputAwsIntegrationUpdateParams {
  """AWS Access Key"""
  accessKey: String

  """AWS Access Key ID"""
  accessKeyId: String

  """Type of authentication used for Aws integration"""
  awsIntegrationAuthType: AwsIntegrationAuthType

  """AWS auth credentials, access id and access key"""
  awsAuthCredentials: InputAwsAuthenticationCredentials

  """Aws action type for all the rules defined at integration scope"""
  awsIntegrationActionType: AwsIntegrationActionType!

  """List of AWS resources"""
  resources: [InputAwsResource]!

  """AWS WAF rule group capacity"""
  ruleGroupCapacity: Long

  """Web Identity Credentials, roleArn"""
  webIdentityAuthCredentials: InputWebIdentityAuthenticationCredentials
}

"""AWS resource detail"""
input InputAwsResource {
  """Resource ARN"""
  arn: String!

  """Resource region"""
  region: String!
}

input InputAwsSignature {
  """Access Id key"""
  accessIdKey: String!

  """Aws region"""
  awsRegion: String!

  """Secret access key"""
  secretAccessKey: String!

  """aws service name"""
  serviceName: String!
}

input InputAwsWafConnectionValidationInput {
  """AWS client id and secret to authenticate"""
  awsAuthCredentials: InputAwsAuthenticationCredentials!

  """Aws waf integration id"""
  id: String

  """List of AWS resources"""
  resources: [InputAwsResource]!
}

"""Azure application gateway waf details"""
input InputAzureApplicationGatewayWafDetails {
  """Managed rule definition"""
  managedRuleDefinition: InputAzureManagedRuleDefinition!
}

"""Azure auth credentials"""
input InputAzureAuthCredentials {
  """Azure client ID"""
  clientId: String!

  """Azure client secret"""
  clientSecret: String!
}

"""input for creating a azure devops integration"""
input InputAzureDevopsIntegrationCreateIntegrationInput {
  """A suitable description about this integration"""
  description: String!

  """The set of environments (as IDs) to be associated to this integration"""
  environmentIds: [String]!

  """The name of this Azure Devops integration"""
  name: String!

  """Organization URL of the Azure Devops Account"""
  organizationUrl: String!

  """Azure Devops PAT token for authorization"""
  personalAccessToken: String!
}

"""input for creating a azure devops work item"""
input InputAzureDevopsIntegrationCreateWorkItemInput {
  """
  The environment corresponding to the associated entity for which a azure devops work item needs to be created.
  """
  environmentId: String!

  """The project in which work item is to be created."""
  projectId: String!

  """A list of all the references of the associated entities."""
  references: [InputAzureDevopsIntegrationWorkItemReference]!

  """A list of fields to populate in the work item."""
  workItemFields: [InputAzureDevopsIntegrationWorkItemField]!

  """Describes the type of azure devops work item to be created."""
  workItemType: String!
}

"""Input for deleting a azure devops integration"""
input InputAzureDevopsIntegrationDeleteIntegrationInput {
  """The ID of the Azure Devops integration which is to be deleted"""
  integrationConfigId: String!
}

"""input for fetching all azure devops projects"""
input InputAzureDevopsIntegrationGetAllAzureDevopsProjectsInput {
  """
  The environment ID of the target for which work item is to be created. This
  fetches all the azure devops projects associated with that environment.
  """
  environmentId: String!

  """Pagination limit, must be greater than 0. Default is 50."""
  limit: Int

  """Pagination offset, default is 0."""
  offset: Int
}

"""input for fetching azure devops assignees"""
input InputAzureDevopsIntegrationGetAssigneesInput {
  """
  The ID of the environment of the target for which the azure devops work item
  is to be created. This will fetch the assignees suitable for that environment.
  """
  environmentId: String!

  """Pagination limit, must be greater than 0. Default is 50."""
  limit: Int

  """Pagination offset, default is 0."""
  offset: Int

  """
  The project id of the azure devops project where work item is to be created.
  """
  projectId: String!
}

"""Input to fetch all work item type field details for a project"""
input InputAzureDevopsIntegrationGetAzureProjectWorkItemTypeFieldDetailsInput {
  """
  The environment ID of the target for which work item type field details needs to be fetched.
  """
  environmentId: String!

  """The project ID of the azure devops project"""
  projectId: String!

  """The work item type for which field details needs to be fetched."""
  workItemType: String!
}

"""Input to fetch all work item types for a project"""
input InputAzureDevopsIntegrationGetAzureProjectWorkItemTypesInput {
  """
  The environment ID of the target for which work item type needs to be fetched.
  """
  environmentId: String!

  """The project ID of the azure devops project"""
  projectId: String!
}

"""input for fetching configured azure devops integrations"""
input InputAzureDevopsIntegrationGetIntegrationsInput {
  """Filters the azure devops integrations on environments before returning"""
  environmentIds: [String]
}

"""input for fetching azure devops work items"""
input InputAzureDevopsIntegrationGetWorkItemsInput {
  """
  A list of references for which the corresponding work items need to be fetched
  """
  workItemReferences: [InputAzureDevopsIntegrationWorkItemReference]!
}

"""input for unlinking a azure devops work item"""
input InputAzureDevopsIntegrationUnlinkWorkItemInput {
  """
  A list of references corresponding to the entities for which the associated work item has to be unlinked.
  """
  workItemReferences: [InputAzureDevopsIntegrationWorkItemReference]!
}

"""input for updating a azure devops integration"""
input InputAzureDevopsIntegrationUpdateIntegrationInput {
  """A suitable description about this integration"""
  description: String!

  """
  The updated set of environments (as IDs) to be associated to this integration
  """
  environmentIds: [String]!

  """The ID of the Azure Devops integration which is to be updated"""
  integrationConfigId: String!

  """The updated name of this Azure Devops integration"""
  name: String!

  """The updated organization url of the Azure Devops instance"""
  organizationUrl: String!

  """Updated PAT for authorization"""
  personalAccessToken: String
}

"""input for validating azure devops connection"""
input InputAzureDevopsIntegrationValidateConnectionInput {
  """
  The ID of the Azure Devops integration. At least one of personalAccessToken or integrationConfigId needs to provided
  """
  integrationConfigId: String

  """The URL of the azure devops organization instance"""
  organizationUrl: String!

  """Azure Devops Personal Access Token(PAT) which grants authorization"""
  personalAccessToken: String
}

"""A mapping to field paths for field values"""
input InputAzureDevopsIntegrationWorkItemField {
  """The azure devops source path for move/copy operation."""
  fieldFrom: String

  """The azure devops defined field paths to work item fields."""
  fieldPath: String!

  """The intended value that we want to populate in the field."""
  fieldValue: String!
}

"""A link to the entity associated to a azure devops work item"""
input InputAzureDevopsIntegrationWorkItemReference {
  """The ID of entity for associated with this azure devops work item"""
  referenceId: String!

  """The type of entity for associated with this azure devops work item"""
  referenceType: AzureDevopsIntegrationWorkItemReferenceType!
}

"""Azure front door waf details"""
input InputAzureFrontDoorWafDetails {
  """Front door names"""
  frontDoorNames: [String]!
}

"""Azure integration details"""
input InputAzureIntegrationDetails {
  """Azure auth credentials"""
  azureAuthCredentials: InputAzureAuthCredentials!

  """Azure environment"""
  azureEnvironment: AzureEnvironment!

  """Azure resource group details"""
  azureResourceGroupDetails: [InputAzureResourceGroupDetails]

  """Azure tenant ID"""
  azureTenantId: String!

  """Azure waf details"""
  azureWafDetails: InputAzureWafDetails

  """Azure waf policy details"""
  azureWafPolicyDetails: InputAzureWafPolicyDetails!

  """Azure integration detail id"""
  id: String

  """Azure subscription ID"""
  subscriptionId: String!
}

"""Azure integration params"""
input InputAzureIntegrationParams {
  """Azure integration details"""
  azureIntegrationDetails: [InputAzureIntegrationDetails]!
}

"""Updated Azure integration params"""
input InputAzureIntegrationUpdateParams {
  """Azure integration details"""
  azureIntegrationDetails: [InputUpdatedAzureIntegrationDetails]!
}

"""Azure managed rule definition"""
input InputAzureManagedRuleDefinition {
  """Managed rule set type"""
  ruleSetType: String!

  """Managed rule set version"""
  ruleSetVersion: String!
}

"""Azure resource group details"""
input InputAzureResourceGroupDetails {
  """Azure resource group name"""
  name: String!

  """Azure resource group region"""
  region: String!
}

"""Azure auth credentials for validation"""
input InputAzureValidationAuthCredentials {
  """Azure client ID"""
  clientId: String!

  """Azure client secret"""
  clientSecret: String
}

"""Azure integration details for validation"""
input InputAzureValidationIntegrationDetails {
  """Azure auth credentials"""
  azureAuthCredentials: InputAzureValidationAuthCredentials!

  """Azure environment"""
  azureEnvironment: AzureEnvironment!

  """Azure tenant ID"""
  azureTenantId: String!

  """Azure waf policy name"""
  azureWafPolicyName: String!

  """Azure waf policy resource group name"""
  azureWafPolicyResourceGroupName: String!

  """Azure waf type"""
  azureWafType: AzureWafType!

  """Azure integration details id"""
  id: String

  """Azure subscription ID"""
  subscriptionId: String!
}

"""Azure integration params for validation"""
input InputAzureValidationIntegrationParams {
  """Azure integration details"""
  azureIntegrationDetails: [InputAzureValidationIntegrationDetails]!
}

"""Required Inputs to validate an azure waf connection"""
input InputAzureWafConnectionValidationInput {
  """
  The parameter authCredentials can be left out if azureConfigId is provided.
  """
  authCredentials: InputAzureAuthCredentials

  """
  The config id of the azure integration can be left out if authCredentials is provided.
  """
  azureIntegrationConfigId: String

  """AZURE details required for validating connection"""
  azureWafValidationIntegrationDetails: InputAzureWafValidationIntegrationDetails!
}

"""Azure waf details"""
input InputAzureWafDetails {
  """Azure application gateway waf details"""
  azureApplicationGatewayWafDetails: InputAzureApplicationGatewayWafDetails

  """Azure front door waf details"""
  azureFrontDoorWafDetails: InputAzureFrontDoorWafDetails

  """Azure waf type"""
  azureWafType: AzureWafType!
}

"""Azure Waf integration details"""
input InputAzureWafIntegrationDetails {
  """Azure environment"""
  azureEnvironment: AzureEnvironment!

  """Azure tenant ID"""
  azureTenantId: String!

  """Azure waf integration policy details"""
  azureWafIntegrationPolicyDetails: InputAzureWafIntegrationPolicyDetails!

  """Azure subscription ID"""
  subscriptionId: String!
}

"""Azure integration params"""
input InputAzureWafIntegrationParams {
  """Azure waf integration details"""
  azureWafIntegrationDetails: InputAzureWafIntegrationDetails!
}

"""
Azure integration waf policy details on which custom rules will be applied
"""
input InputAzureWafIntegrationPolicyDetails {
  """Type of azure waf policy"""
  azureWafPolicyType: AzureWafPolicyType!

  """Waf policy name"""
  wafPolicyName: String!

  """Resource group name of the waf policy"""
  wafPolicyResourceGroupName: String!
}

"""Azure waf policy details on which custom rules will be applied"""
input InputAzureWafPolicyDetails {
  """Type of azure waf policy"""
  azureWafType: AzureWafType!

  """Waf policy name"""
  wafPolicyName: String!

  """Resource group name of the waf policy"""
  wafPolicyResourceGroupName: String!
}

"""Azure waf integration details for validation"""
input InputAzureWafValidationIntegrationDetails {
  """Azure WAF integration details for validation"""
  azureWafIntegrationParams: InputAzureWafIntegrationParams!
}

input InputBasicAuth {
  """password"""
  password: String!

  """username"""
  username: String!

  """value format"""
  valueFormat: String
}

input InputBearer {
  """Explicit token"""
  explicitToken: String

  """request token info"""
  requestTokenInfo: InputRequestTokenInfo!
}

input InputBlockedEventCondition {
  blockedEventTypes: [BlockedEventType]

  """List of blocked threat activities """
  blockedThreatActivityConditions: [InputBlockedThreatActivityCondition]
}

"""Blocked threat activity condition"""
input InputBlockedThreatActivityCondition {
  """Blocking threat activity condition type"""
  blockedThreatActivityConditionType: BlockedThreatActivityConditionType!

  """Custom blocking rule condition"""
  customBlockingCondition: InputCustomBlockingCondition

  """Pre defined blocking rule condition"""
  preDefinedBlockingCondition: InputPreDefinedBlockingCondition
}

input InputBlockingMetadataAnomalyDetectionConfig {
  keyValuePairs: [InputAnomalyDetectionConfigKeyValuePair]
  name: BlockingMetadataAnomalyDetectionConfigName!
}

input InputBulkUpdateEntities {
  """Indicates the type of the filter applied for updating"""
  filterType: FilterType!

  """
  The attribute filters for updating entities when the `filterType` is 'ATTRIBUTE'
  """
  filters: [InputAttributeFilter]

  """The ids of the entities to be updated when the `filterType` is 'ID'"""
  ids: [String]

  """
  The attribute operation to be performed on the entities matching the ids or filters
  """
  operation: InputBulkUpdateEntitiesOperation!

  """The type of the entities to be updated"""
  type: String!
}

input InputBulkUpdateEntitiesOperation {
  """
  Operation to be performed on a multi-valued attribute like list when the
  `operationType` is 'MULTI_VALUED_ATTRIBUTE_OPERATION'
  """
  multiValuedAttributeOperation: InputMultiValuedAttributeOperation

  """The type of operation to be performed"""
  operationType: BulkUpdateOperationType!

  """
  The value-set operation to be performed on a single-valued attribute when the
  `operationType` is 'SINGLE_VALUED_ATTRIBUTE_SET_OPERATION'
  """
  singleValuedAttributeSetOperation: InputEntityUpdateSetAttribute

  """
  The unset operation to be performed on an attribute when the `operationType` is 'ATTRIBUTE_UNSET_OPERATION'
  """
  attributeUnsetOperation: InputEntityUpdateUnsetAttribute
}

input InputClaimsKeyValue {
  key: String
  value: String
}

input InputCloneAndRunScanRequest {
  pluginNames: [String]!
  scanName: String
  scanTags: [InputScanTag]!
  sourceScanId: String!
}

input InputCloudflareIntegrationParams {
  apiToken: String!
  email: String!
  zone: String!
}

"""Required Inputs to validate a cloudflare waf connection"""
input InputCloudflareWafValidationInput {
  """Cloudflare specific integration params"""
  cloudflareIntegrationParams: InputCloudflareIntegrationParams!

  """
  Optional id of the integration which we are trying to validate (comes in play during update integration)
  """
  id: String
}

"""Describes an execution of code analysis"""
input InputCodeAnalysisParameters {
  """The list of repository URLs to analyze"""
  repositoryUrls: [String]
}

input InputCodePlaceholderKeyValue {
  key: String
  value: String
}

input InputConfidenceScoreLevel {
  """Minimum threshold Value for high score"""
  highMinScore: Int!

  """Minimum threshold Value for medium score"""
  mediumMinScore: Int!
}

"""Content signature authentication mechanism"""
input InputContentSignature {
  """Header key used for content signature authentication"""
  contentSignatureHeaderKey: String!

  """Private key used for content signature authentication"""
  contentSignaturePrivateKey: String
}

input InputCreateAgentTokenInput {
  name: String!
}

input InputCreateApiSpec {
  """Whether the APIs should be discovered from the uploaded spec"""
  apiDiscoveryEnabled: Boolean

  """Whether the API inspector is disabled for the uploaded spec"""
  apiInspectorDisabled: Boolean

  """Whether the discovered APIs should be named as per the uploaded spec"""
  apiNamingEnabled: Boolean!

  """Spec type of the associated file. Default: SPEC_TYPE_OPEN_API_SPEC"""
  apiSpecType: ApiSpecType

  """The SHA256 hash of the Open API spec file contents"""
  fileContentSha256: String

  """Name of the Open API spec"""
  name: String!

  """The path of the spec in repository"""
  specPath: String
}

input InputCreateApiSpecConformanceJob {
  apiSpecConformanceJobSpec: InputApiSpecConformanceJobSpecInput!
  executionMode: JobExecutionMode
  name: String!
  source: JobSource
}

input InputCreateApiSpecConformanceScheduledJob {
  """Spec conformance input spec"""
  apiSpecConformanceJobSpec: InputApiSpecConformanceJobSpecInput!

  """Schedule configuration of conformance in case of daily schedule"""
  dailySchedule: InputDailySchedule

  """Spec conformance schedule name"""
  name: String!

  """Schedule configuration of conformance in case of weekly schedule"""
  weeklySchedule: InputWeeklySchedule
}

"""AST hook to be used by runner/cli for scan runs"""
input InputCreateAstHook {
  """Hook type"""
  hookType: AstHookType!

  """Auth mechanism type"""
  authMechanism: AuthMechanism

  """Hook description"""
  description: String

  """Hook code snippet"""
  hookScript: String!

  """Hook name"""
  name: String!

  """
  list key value pairs to be replaced in code snippet based on matching key
  """
  placeholderKeyValues: [InputCodePlaceholderKeyValue]

  """
  list key value secrets to be replaced in code snippet based on matching key
  """
  secrets: [InputCodePlaceholderKeyValue]
}

"""AST hook test to be used by runner"""
input InputCreateAstHookTest {
  """Auth mechanism type"""
  advancedMode: InputAdvancedMode

  """Allowed runner ids for hook testing"""
  allowedRunnerIdsList: [String]

  """Pick any runner for hook testing"""
  anyRunner: Boolean

  """Hook id for hook getting updated"""
  astHookId: String

  """Auth mechanism type v2"""
  authMechanismV2: AuthMechanismV2!

  """Hook config for normal mode"""
  hookConfig: InputHookConfig

  """Hook mode"""
  hookMode: HookMode!

  """Role of the user of the hook"""
  role: AstHookUserRole!
}

"""AST hook to be used by runner/cli for scan runs"""
input InputCreateAstHookV2 {
  """Auth mechanism type"""
  advancedMode: InputAdvancedMode

  """Auth mechanism type v2"""
  authMechanismV2: AuthMechanismV2!

  """Hook description"""
  description: String

  """Hook config for normal mode"""
  hookConfig: InputHookConfig

  """Hook mode"""
  hookMode: HookMode!

  """Id of the related hook test"""
  astHookTestId: String

  """is the hook a draft"""
  isDraft: Boolean

  """Hook name"""
  name: String!

  """Role of the user of the hook"""
  role: AstHookUserRole!
}

input InputcreateAstInstantScan {
  """AST scan job spec"""
  astScanJobSpec: InputAstScanJobSpec!

  """Job Name"""
  name: String!
}

"""Request to create ast override"""
input InputCreateAstOverrideRequest {
  """Ast override info"""
  astOverrideInfo: InputAstOverrideInfo!
}

input InputCreateAstPolicyV2Request {
  configuration: InputAstPolicyV2Configuration!
  description: String
  name: String!
}

input InputCreateAstScanJob {
  """AST scan job spec"""
  astScanScheduleJobSpec: InputAstScanJobSpec!

  """Schedule configuration of scan in case of daily schedule"""
  dailySchedule: InputDailySchedule

  """Schedule env"""
  environmentId: String

  """Schedule configuration of scan in case of monthly schedule"""
  monthlySchedule: InputMonthlySchedule

  """Scan schedule job"""
  name: String!

  """Schedule configuration level, defines frequency"""
  scheduleFrequencyType: ScheduleFrequencyType

  """Schedule configuration of scan in case of weekly schedule"""
  weeklySchedule: InputWeeklySchedule
}

"""Request to create custom test plugin"""
input InputCreateCustomTestPluginRequest {
  codeSnippetDetails: InputCustomTestPluginCodeSnippetDetails!
  customTestPluginDetails: InputCustomTestPluginDetails!
  name: String!
}

"""Create custom vulnerability type request"""
input InputCreateCustomVulnerabilityTypeRequest {
  """Yaml configuration for the custom vulnerability type"""
  yamlConfiguration: String!
}

"""Create request of a detection exclusion rules"""
input InputCreateDetectionExclusionRuleRequest {
  """Detection exclusion rule info"""
  ruleInfo: InputDetectionExclusionRuleInfo!

  """Detection exclusion rule scope"""
  ruleScope: InputDetectionExclusionRuleScope
}

input InputCreateJiraIntegrationInput {
  consumerKey: String
  description: String!

  """The integration will be scoped to these environments"""
  environmentIds: [String]

  """Params specific to the type of jira integration"""
  jiraIntegrationParams: InputJiraIntegrationParams

  """The url to jira, for example https://xyz.atlassian.net"""
  loginUrl: String!
  name: String!

  """The temporary request token from generateJiraAuthorizationLink"""
  requestToken: String

  """Verification code to allow access to jira"""
  verificationCode: String
}

input InputCreateJiraIssueInput {
  description: InputJiraIssueDescription!

  """Optionally specify the environment of the jira integration"""
  environmentId: String
  fields: [InputJiraIssueField]!
  jiraIssueType: String!
  projectId: Int!
  references: [InputJiraIssueReference]!
  summary: String!
}

input InputCreateLabel {
  color: String
  description: String
  key: String!
}

input InputCreatePolicyRequest {
  """Actions to be performed when the policy criteria matches"""
  actions: [InputPolicyAction]!

  """
  Whether to create the policy in disabled mode (create-only without evaluating)
  """
  disabled: Boolean!

  """Filter conditions on the source"""
  filter: InputPolicyFilter!

  """name for the policy"""
  name: String!

  """
  The scope can represent different entities such as 'environment'. Provide
  relevant IDs based on the specific scope.If unset then it is applicable to all
  the environments
  """
  policyScope: InputPolicyScope

  """Source event on which the policy is defined"""
  source: InputPolicySource!
}

input InputCreateProjectIssueConfigurationDetail {
  fieldConfigurations: [InputJiraFieldConfiguration]
  issueType: String!

  """Indicates whether JIRA bidirectional sync is enabled"""
  jiraBidirectionalSyncIsEnabled: Boolean!
  jiraStatusMappingConfiguration: InputJiraStatusMappingConfiguration!
  projectId: String!
}

input InputCreateProjectIssueConfigurationsInput {
  createProjectIssueConfigurationDetails: [InputCreateProjectIssueConfigurationDetail]!
  integrationId: String!
}

input InputCreateQuickScanRequest {
  quickScanDetails: InputQuickScanDetails!
}

input InputCreateRoleInput {
  """Description of the role"""
  description: String!

  """Name of the role"""
  name: String!

  """Permissions granted by the role"""
  permissions: [String]!
}

"""Create Scan Evaluation Criteria Request"""
input InputCreateScanEvaluationCriteriaRequest {
  """Description of Scan Evaluation Criteria"""
  description: String

  """Evaluation Expression of Scan Evaluation Criteria"""
  expression: InputScanEvaluationCriteriaEvaluationExpression!

  """Name of Scan Evaluation Criteria"""
  name: String!

  """List of Rules of Scan Evaluation Criteria"""
  rules: [InputScanEvaluationCriteriaRule]!
}

input InputCreateScanPolicyRequest {
  integrationDetails: InputIntegrationDetails
  policyConfiguration: InputPolicyConfiguration!
  scanPolicyName: String!
}

input InputCreateScanSuiteRequest {
  advanceConfiguration: InputAdvanceScanSuiteConfiguration
  configuration: InputScanSuiteConfiguration!
  description: String
  environment: String!
  hookConfiguration: InputScanSuiteHookConfiguration
  integrationDetails: [InputIntegrationDetails]
  name: String!
  scanEvaluationCriteriaConfiguration: InputScanSuiteScanEvaluationCriteriaConfiguration!
  scheduleJobConfiguration: InputScanSuiteScheduleJobConfiguration
}

"""Create security scheme role and relationships"""
input InputCreateSecuritySchemeRoleInput {
  """The security scheme role relationships to be created"""
  applicableEndpoints: [InputEntityIdentifier]

  """List of environment ids to which the security scheme role applies"""
  environmentIds: [String]

  """The security scheme role name"""
  name: String!

  """The security scheme role's parent role IDs"""
  parentRoleIds: [String]
}

input InputCreateSecuritySchemeRoleRelationshipsInput {
  """A list of api ids"""
  apiIds: [String]!

  """A list of role ids"""
  roleIds: [String]!
}

"""Create security scheme scope and relationships"""
input InputCreateSecuritySchemeScopeInput {
  """The security scheme scope relationships to be created"""
  applicableEndpoints: [InputEntityIdentifier]

  """List of environment ids to which the security scheme scope applies"""
  environmentIds: [String]

  """The security scheme scope name"""
  name: String!

  """The security scheme scope's parent scope IDs"""
  parentScopeIds: [String]
}

input InputCreateSecuritySchemeScopeRelationshipsInput {
  """A list of api ids"""
  apiIds: [String]!

  """A list of scope ids"""
  scopeIds: [String]!
}

"""Input to create Session Identification rule"""
input InputCreateSessionIdentificationRule {
  """Description for the Session Identification rule"""
  description: String

  """Session Identification rule name"""
  name: String!

  """Scopes of the Session Identification rule"""
  scope: InputSessionIdentificationRuleScope

  """List of session token rules for the session identification rule"""
  sessionTokenRules: [InputSessionTokenRule]!
}

"""Request to create sonar scan"""
input InputCreateSonarScanRequest {
  """asset selection"""
  assetSelection: [InputSonarAssetSelection]

  """environment name"""
  environment: String

  """Plugins to include"""
  includePlugins: [String]

  """scan name"""
  scanName: String!

  """To be set if scan is of type discovery"""
  sonarDiscoveryScanConfig: InputSonarDiscoveryScanConfig

  """Sonar scan type"""
  sonarScanType: SonarScanType!

  """To be set if scan is of type vulnerability"""
  sonarVulnerabilityScanConfig: InputSonarVulnerabilityScanConfig
}

"""Request to create sonar scan"""
input InputCreateSonarScanV2Request {
  """Sonar asset selections"""
  assetSelectionType: SonarAssetV2SelectionType!

  """Sonar custom included plugins"""
  customIncludedPlugins: [InputSonarV2Plugin]

  """Existing assets excluded in scan"""
  excludedExistingAssets: [InputSonarV2ExistingAsset]

  """Sonar scan excluded assets"""
  excludedNewAssets: [InputSonarV2NewAsset]

  """Sonar excluded plugins"""
  excludedPlugins: [String]

  """Existing assets included in scan"""
  existingAssets: [InputSonarV2ExistingAsset]

  """Sonar scan included assets"""
  newAssets: [InputSonarV2NewAsset]

  """Parent scan id"""
  parentScanId: String

  """Sonar plugin mode"""
  pluginMode: SonarPluginV2Mode

  """Sonar plugin selections"""
  pluginSelectionType: SonarPluginV2SelectionType!

  """Sonar scan modes"""
  scanModes: [SonarScanV2Mode]

  """Scan name"""
  scanName: String!
}

input InputCreateSplunkIntegrationInput {
  """API access token to be used to authorize the Splunk integration"""
  apiToken: String

  """Description of the Splunk integration"""
  description: String

  """HEC URL of the Splunk integration"""
  httpEventCollectorUrl: String!

  """Name of the Splunk integration"""
  name: String!
}

input InputCreateSyslogServerIntegrationInput {
  """Description of the Syslog server integration"""
  description: String

  """Name of the Syslog server integration"""
  name: String!

  """Syslog log format"""
  syslogLogFormat: SyslogLogFormat!

  """Syslog server connection details"""
  syslogServerConnectionDetails: InputSyslogServerConnectionDetails!
}

"""Input to create User Attribution rule"""
input InputCreateUserAttributionRule {
  """Rule to extract authentication type"""
  authTypeRule: InputUserAttributionTokenRule

  """List of custom token rules"""
  customTokenRules: [InputUserAttributionCustomTokenRule]!

  """Description for the User Attribution rule"""
  description: String

  """User Attribution rule name"""
  name: String!

  """Root token rule to extract root token in cases like JWT"""
  rootTokenRule: InputUserAttributionRootTokenRule

  """Scope of the User Attribution rule"""
  scope: InputUserAttributionRuleScopeV2

  """To determine if rule is user created or automatically created"""
  source: UserAttributionRuleSource

  """Status of the User Attribution rule"""
  status: InputUserAttributionRuleStatus!

  """Template used for the User Attribution rule"""
  template: UserAttributionRuleTemplate!

  """Rule to extract user id"""
  userIdRule: InputUserAttributionTokenRule

  """Rule to extract user role"""
  userRoleRule: InputUserAttributionTokenRule

  """Rule to extract user scope"""
  userScopeRule: InputUserAttributionTokenRule
}

"""Update vulnerability request"""
input InputCreateVulnerabilitiesRequest {
  """Vulnerabilities to upload"""
  vulnerabilities: [InputnewVulnerability]!
}

"""Create vulnerability status change config request"""
input InputCreateVulnerabilityStatusChangeConfigRequest {
  """Vulnerability status change criteria"""
  vulnerabilityStatusChangeCriteria: InputVulnerabilityStatusChangeCriteria!
}

input InputCreateWafIntegrationInput {
  wafIntegrationDetails: InputWafIntegrationDetails!
}

input InputCredentialStuffingAnomalyDetectionConfig {
  keyValuePairs: [InputAnomalyDetectionConfigKeyValuePair]
  name: CredentialStuffingAnomalyDetectionConfigName!
  ruleId: String
}

input InputCredentialStuffingTuningConfig {
  """
  The detection config would be applied on the endpoints identified by this config
  """
  detectionScopeConfig: InputDetectionScopeConfig!

  """
  Percentage threshold for the failed attempts to be considered as credntial stuffing attack
  """
  failedLoginPercentageThreshold: Long!

  """Look back duration for the detector"""
  lookBackDuration: Duration!

  """
  Threshold for the number of user accounts attacked per IP to be considered as credential stuffing attack
  """
  uniqueUsersThreshold: Long!

  """Config for extracting the username from the API"""
  usernameExtractionConfig: InputParameterExtractionConfig!
}

"""Custom blocking rule condition"""
input InputCustomBlockingCondition {
  """Types of custom blocking"""
  customBlockingType: CustomBlockingType!
}

input InputCustomComplianceIssueConfig {
  enabled: Boolean

  """Identifier for the custom compliance"""
  id: String!
  scopeOfDetection: InputPolicyScope

  """Description for the custom compliance"""
  description: String

  """Detection conditions for custom compliance."""
  filterConditions: InputPolicyFilter!
}

"""Custom detection rule condition"""
input InputCustomDetectionCondition {
  """Types of custom detection"""
  customDetectionType: CustomDetectionType!
}

"""User attribution rule data in JSON format"""
input InputCustomJsonUserAttributionData {
  """JSON rule data for authentication type"""
  authTypeJson: String

  """JSON rule data for user ID"""
  userIdJson: String

  """JSON rule data for user role"""
  userRoleJson: String
}

input InputCustomPluginTestHttpRequestHeader {
  key: String!
  value: String!
}

input InputCustomPluginTestHttpRestApiDetails {
  """endpoint id extracted from the trace"""
  endpointId: String

  """http method type to test the plugin"""
  httpMethod: CustomPluginTestHttpRequestMethod!

  """http request headers to test the plugin"""
  httpHeaders: [InputCustomPluginTestHttpRequestHeader]

  """request body or payload to test the plugin"""
  requestBody: String

  """target url to test the plugin"""
  targetUrl: String!
}

input InputCustomPluginTestSampleData {
  """rest api details to test the plugin"""
  httpRestApiDetails: InputCustomPluginTestHttpRestApiDetails
}

input InputCustomPluginTestTask {
  codeSnippetDetails: InputCustomTestPluginCodeSnippetDetails!

  """rest api details to test the plugin"""
  httpRestApiDetails: InputCustomPluginTestHttpRestApiDetails
}

input InputCustomRuleConfig {
  regex: String!
  urlPattern: String!
}

"""AnomalyDetectionConfig for Custom Rules"""
input InputCustomRulesAnomalyDetectionConfig {
  """AnomalyDetectionConfig key value pair list"""
  keyValuePairs: [InputAnomalyDetectionConfigKeyValuePair]

  """CustomRulesAnomalyDetectionConfig name"""
  name: CustomRulesAnomalyDetectionConfigName!
}

input InputCustomSelection {
  assetsSelection: [InputAssetSelection]!
  attacksSelection: [InputAttackSelection]!
}

input InputCustomSignatureEnvironmentScope {
  environmentIds: [String]!
}

input InputCustomSignatureRuleAgentEffect {
  agentModifications: [InputCustomSignatureRuleAgentModification]!
}

input InputCustomSignatureRuleAgentModification {
  agentModificationType: CustomSignatureRuleAgentModificationType!
  headerInjection: InputCustomSignatureRuleHeaderInjection!
}

input InputCustomSignatureRuleAttributeKeyValueExpression {
  """Key condition"""
  keyCondition: InputCustomSignatureStringMatchCondition

  """Key match operator"""
  keyMatchOperator: CustomSignatureRuleMatchOperator

  """Match key"""
  matchKey: String

  """Match value"""
  matchValue: String

  """Value condition"""
  valueCondition: InputCustomSignatureStringMatchCondition

  """Value match operator"""
  valueMatchOperator: CustomSignatureRuleMatchOperator
}

input InputCustomSignatureRuleClauseGroup {
  clauseOperator: CustomSignatureRuleClauseOperator!
  clauses: [InputCustomSignatureRuleClauseRequest]!
}

input InputCustomSignatureRuleClauseRequest {
  attributeKeyValueExpression: InputCustomSignatureRuleAttributeKeyValueExpression
  clauseType: CustomSignatureRuleClauseType!

  """Custom sec rule"""
  customSecRule: InputCustomSignatureSecRule

  """Email domain expression applicable on a custom signature rule"""
  emailDomainExpression: InputCustomSignatureRuleEmailDomainExpression

  """Ip abuse velocity expression applicable on a custom signature rule"""
  ipAbuseVelocityExpression: InputCustomSignatureRuleIpAbuseVelocityExpression

  """IP address expression applicable on a custom signature rule"""
  ipAddressExpression: InputCustomSignatureRuleIpAddressExpression

  """Ip asn expression applicable on a custom signature rule"""
  ipAsnExpression: InputCustomSignatureRuleIpAsnExpression

  """IP connection type expression applicable on a custom signature rule"""
  ipConnectionTypeExpression: InputCustomSignatureRuleIpConnectionTypeExpression

  """Ip organisation expression applicable on a custom signature rule"""
  ipOrganisationExpression: InputCustomSignatureRuleIpOrganisationExpression

  """IP reputation expression applicable on a custom signature rule"""
  ipReputationExpression: InputCustomSignatureRuleIpReputationExpression

  """IP type expression applicable on a custom signature rule"""
  ipTypeExpression: InputCustomSignatureRuleIpTypeExpression
  keyValueExpression: InputCustomSignatureRuleKeyValueExpression
  matchExpression: InputCustomSignatureRuleMatchExpression

  """Region expression applicable on a custom signature rule"""
  regionExpression: InputCustomSignatureRuleRegionExpression

  """Request scanner type expression applicable on a custom signature rule"""
  requestScannerTypeExpression: InputCustomSignatureRuleRequestScannerTypeExpression

  """User agent expression applicable on a custom signature rule"""
  userAgentExpression: InputCustomSignatureRuleUserAgentExpression

  """User ID expression applicable on a custom signature rule"""
  userIdExpression: InputCustomSignatureRuleUserIdExpression
}

input InputCustomSignatureRuleDefinition {
  clauseGroup: InputCustomSignatureRuleClauseGroup!
  labels: [InputCustomSignatureRuleLabel]
}

input InputCustomSignatureRuleDelete {
  id: String!
}

input InputCustomSignatureRuleDescriptor {
  blockingExpirationDuration: Duration
  description: String!
  disabled: Boolean
  internal: Boolean
  name: String!
  ruleDefinition: InputCustomSignatureRuleDefinition!
  ruleEffect: InputCustomSignatureRuleEffect!
  ruleScope: InputCustomSignatureRuleScope
  ruleSource: CustomSignatureRuleSource
}

input InputCustomSignatureRuleEffect {
  effects: [InputCustomSignatureRuleEffectWithModification]
  eventSeverity: CustomSignatureRuleEventSeverity
  eventType: CustomSignatureRuleEventType!
}

input InputCustomSignatureRuleEffectWithModification {
  """Effects enforced for agent while inline processing of requests"""
  agentEffect: InputCustomSignatureRuleAgentEffect!
  ruleEffectType: CustomSignatureRuleEffectModificationType!
}

input InputCustomSignatureRuleEmailDomainExpression {
  """List of email domains"""
  emailDomains: [String]

  """List of email regexes"""
  emailRegexes: [String]

  """Boolean denoting exclude condition"""
  exclude: Boolean
}

input InputCustomSignatureRuleHeaderInjection {
  headerCategory: CustomSignatureRuleMatchCategory!
  key: String!
  value: String!
}

input InputCustomSignatureRuleIpAbuseVelocityExpression {
  """Minimum IP abuse velocity applicable"""
  minIpAbuseVelocity: CustomSignatureRuleIpAbuseVelocity!
}

input InputCustomSignatureRuleIpAddressExpression {
  """List of CIDR IP ranges"""
  cidrIpRanges: [String]

  """Boolean denoting exclude condition"""
  exclude: Boolean

  """IP address expression type"""
  ipAddressExpressionType: CustomSignatureRuleIpAddressExpressionType

  """List of IP addresses"""
  ipAddresses: [String]

  """List of IP addresses and CIDR IP ranges"""
  rawInputIpData: [String]
}

input InputCustomSignatureRuleIpAsnExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP ASN regexes"""
  ipAsnRegexes: [String]!
}

input InputCustomSignatureRuleIpConnectionTypeExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP connection types"""
  ipConnectionTypes: [CustomSignatureRuleIpConnectionType]!
}

input InputCustomSignatureRuleIpOrganisationExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP organisation regexes"""
  ipOrganisationRegexes: [String]!
}

input InputCustomSignatureRuleIpReputationExpression {
  """Minimum IP reputation severity applicable"""
  minIpReputationSeverity: CustomSignatureRuleIpReputationSeverity!
}

input InputCustomSignatureRuleIpTypeExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP types applicable"""
  ipTypes: [CustomSignatureRuleIpType]!
}

input InputCustomSignatureRuleKeyValueExpression {
  keyMatchOperator: CustomSignatureRuleMatchOperator!
  keyValueTag: CustomSignatureRuleKeyValueTag!
  matchCategory: CustomSignatureRuleMatchCategory
  matchKey: String!
  matchValue: String!
  valueMatchOperator: CustomSignatureRuleMatchOperator!
}

input InputCustomSignatureRuleLabel {
  key: String!
  value: String!
}

input InputCustomSignatureRuleMatchExpression {
  matchCategory: CustomSignatureRuleMatchCategory
  matchKey: CustomSignatureRuleMatchKey!
  matchOperator: CustomSignatureRuleMatchOperator!
  matchValue: String
}

input InputCustomSignatureRuleRegionExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of region identifiers"""
  regionIdentifiers: [InputCustomSignatureRuleRegionIdentifier]!
}

input InputCustomSignatureRuleRegionIdentifier {
  """Country ISO code for region identifier"""
  countryIsoCode: String!
}

input InputCustomSignatureRuleRequestScannerTypeExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of scanner types"""
  scannerTypes: [String]!
}

input InputCustomSignatureRuleScope {
  environmentScope: InputCustomSignatureEnvironmentScope
}

input InputCustomSignatureRulesFilter {
  ruleScope: InputCustomSignatureRuleScope!
}

input InputCustomSignatureRuleUpdate {
  blockingExpirationDuration: Duration
  description: String!
  disabled: Boolean
  id: String!
  internal: Boolean
  name: String!
  ruleDefinition: InputCustomSignatureRuleDefinition!
  ruleEffect: InputCustomSignatureRuleEffect!
  ruleScope: InputCustomSignatureRuleScope
  ruleSource: CustomSignatureRuleSource
}

input InputCustomSignatureRuleUserAgentExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of user agent regexes"""
  userAgentRegexes: [String]

  """List of user agents"""
  userAgents: [String]
}

input InputCustomSignatureRuleUserIdExpression {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of user ID regexes"""
  userIdRegexes: [String]

  """List of user IDs"""
  userIds: [String]
}

input InputCustomSignatureSecRule {
  """Input sec rule string"""
  inputSecRuleString: String
}

input InputCustomSignatureStringMatchCondition {
  """Key match operator"""
  operator: CustomSignatureRuleMatchOperator!

  """Match key"""
  value: String!
}

input InputCustomTags {
  tagValues: [InputTagValue]!
}

input InputCustomTestPluginCodeSnippetDetails {
  codeSnippet: String!
  codeSnippetType: CustomTestPluginCodeSnippetType!
}

input InputCustomTestPluginDetails {
  description: String!
  pluginDetails: String!
  pluginSafetyType: AstTestPluginSafetyType!
  pluginType: AstTestPluginType!
  potentialGeneratedVulnerabilityTypes: [String]
  potentialGeneratedVulnerabilityTypesInfo: [InputPotentialGeneratedVulnerabilityTypeInfo]
  sampleData: InputCustomPluginTestSampleData
  supportedApiTypes: [CustomTestPluginSupportedApiType]
  tags: [InputTagValue]!
}

input InputCustomTokenData {
  authentication: InputAuthentication!
  customTokenLocation: CustomTokenLocation!
  requestBodyLocation: InputDataLocation
  requestHeaderLocation: InputHeaderLocation
}

input InputCustomUserAttributionData {
  yaml: String!
}

input InputCustomWebhookChannelConfig {
  headers: [InputWebhookHeader]
  id: String
  url: String!
}

"""Daily schedule"""
input InputDailySchedule {
  """Scheduled time of day"""
  scheduledTime: OffsetTime
}

input InputDashboardCreateInput {
  """Dashboard description"""
  description: String

  """Data in json to build dashboard"""
  json: String!

  """Dashboard name"""
  name: String!

  """Reference for the UI"""
  uiReference: String
}

input InputDashboardDeleteInput {
  """Id of the dashboard to delete"""
  id: String!
}

input InputDashboardFilter {
  """Unique id of the dashboard"""
  id: String

  """UI reference for the dashboard"""
  uiReference: String
}

input InputDashboardUpdateInput {
  """Id of the dashboard to update"""
  id: String!

  """Dashboard description"""
  description: String

  """Data in json to build dashboard"""
  json: String!

  """Dashboard name"""
  name: String!

  """
  The previous update timestamp of the dashboard must be provided and is used to
  ensure the dashboard has not been updated since the caller last fetched it
  """
  previousUpdateTimestamp: DateTime
}

"""Describes some behavior to change for data classification"""
input InputDataClassificationBehaviorOverride {
  """When this override applies, use the described data suppression type"""
  dataSuppressionOverride: DataSuppression!
}

"""Describes a new Data classification override rule to create"""
input InputDataClassificationOverrideRuleCreateInput {
  """The behavior change for this override"""
  behaviorOverride: InputDataClassificationBehaviorOverride!

  """Optional rule description"""
  description: String

  """
  Scope for which this rule is applicable. If unset, this rule applies in all environments
  """
  environmentScope: InputDataTypeEnvironmentScope

  """Name for the rule"""
  name: String!

  """
  If set, describes the subset of spans for which this override is applicable.
  If unset, the rule applies to all spans in scope
  """
  spanFilter: InputDataClassificationOverrideSpanFilter
}

"""Describes a data classification override rule to delete"""
input InputDataClassificationOverrideRuleDeleteInput {
  """Rule ID to delete"""
  id: String!
}

"""
Describes an to update to an existing Data classification override rule
"""
input InputDataClassificationOverrideRuleUpdateInput {
  """Rule ID"""
  id: String!

  """The behavior change for this override"""
  behaviorOverride: InputDataClassificationBehaviorOverride!

  """Optional rule description"""
  description: String

  """
  Scope for which this rule is applicable. If unset, this rule applies in all environments
  """
  environmentScope: InputDataTypeEnvironmentScope

  """Name for the rule"""
  name: String!

  """
  If set, describes the subset of spans for which this override is applicable.
  If unset, the rule applies to all spans in scope
  """
  spanFilter: InputDataClassificationOverrideSpanFilter
}

"""
Describes criteria for which spans a DataClassificationOverrideRule applies to. Exactly one child filter must be set.
"""
input InputDataClassificationOverrideSpanFilter {
  """Describes a key value pair that must be present."""
  keyValueFilter: InputDataClassificationOverrideSpanKeyValueFilter

  """Negates another filter."""
  negatedFilter: InputDataClassificationOverrideSpanFilter
}

"""Describes a key-value pair to match in a span"""
input InputDataClassificationOverrideSpanKeyValueFilter {
  """Rule ID"""
  keyPattern: InputDataTypeStringPattern!

  """Value pattern to match for associated key. If unset, any value matches"""
  valuePattern: InputDataTypeStringPattern
}

"""Event type condition for data collection related configs"""
input InputDataCollectionChangeCondition {
  """ActivityType: New Deployment, Status Change"""
  agentActivityType: AgentActivityType

  """List of agent status value"""
  agentStatusChanges: [AgentActivityStatusChange]

  """Agent entity type"""
  agentType: String
}

input InputDataLocation {
  jsonPath: String!
  parsingTarget: InputParsingTarget
  type: DataLocationType!
}

"""Data protection config for enriching sensitive data"""
input InputDataProtectionConfig {
  """Flag to disable DataProtectionConfig"""
  disableDataProtection: Boolean!

  """
  Exclusion config list for enriching sensitive data. These are ORed across the list
  """
  exclusions: [InputDataProtectionExclusion]!

  """Minimum data sensitivity for enriching sensitive data"""
  minDataSensitivity: DataSensitivity!
}

"""Data classifier condition"""
input InputDataProtectionDataClassifierCondition {
  """
  Calls that include any of this list of Dataset will be excluded from Data Protection
  """
  datasetIds: [String]

  """
  Calls that include any of this list of Datatype will be excluded from Data Protection
  """
  datatypeIds: [String]
}

"""Entity condition"""
input InputDataProtectionEntityCondition {
  """Entity IDs for entity based exclusion condition"""
  entityIds: [String]!

  """Entity type for entity based exclusion condition"""
  entityType: String!
}

"""Exclusion configs for enriching sensitive data"""
input InputDataProtectionExclusion {
  """
  Exclusion conditions which needs to be satisfied for an exclusion rule to be
  applied, These are ANded across the conditions for an exclusion
  """
  conditions: [InputDataProtectionExclusionCondition]!
}

"""Exclusion condition"""
input InputDataProtectionExclusionCondition {
  """Exclusion condition type"""
  conditionType: DataProtectionExclusionConditionType!

  """Data classifier condition"""
  dataClassifierCondition: InputDataProtectionDataClassifierCondition

  """Entity condition"""
  entityCondition: InputDataProtectionEntityCondition

  """Parameter name condition"""
  paramNameCondition: InputDataProtectionParamNameCondition
}

"""Param name condition"""
input InputDataProtectionParamNameCondition {
  """A list of parameter name regexes to exclude"""
  paramNameRegexes: [String]

  """A list of parameter names to exclude"""
  paramNames: [String]
}

"""Scope of the data protection config"""
input InputDataProtectionScope {
  """Environment ID of the data protection config"""
  environmentName: String!
}

input InputDataSetCreate {
  color: String
  dataSuppression: DataSuppression
  dataTypeIds: [String]
  description: String
  enabled: Boolean
  iconType: String
  name: String!
  sensitivity: DataSensitivity
}

input InputDataSetUpdate {
  color: String
  dataSuppression: DataSuppression
  dataTypeIds: [String]
  description: String
  enabled: Boolean
  iconType: String
  id: String!
  name: String!
  sensitivity: DataSensitivity
}

input InputDataType {
  dataSuppression: DataSuppression
  datasetIds: [String]
  description: String
  enabled: Boolean
  id: String!
  name: String!
  scopedPatterns: [InputDataTypeScopedPattern]
  sensitivity: DataSensitivity
  suppressionPattern: String
}

input InputDataTypeEnvironmentScope {
  environmentIds: [String]!
}

input InputDataTypeRule {
  dataSuppression: DataSuppression
  datasetIds: [String]
  description: String
  enabled: Boolean
  name: String!
  scopedPatterns: [InputDataTypeScopedPattern]
  sensitivity: DataSensitivity
  suppressionPattern: String
}

input InputDataTypeScope {
  environmentScope: InputDataTypeEnvironmentScope
  type: DataTypeScopeType
}

input InputDataTypeScopedPattern {
  keyPattern: InputDataTypeStringPattern
  locations: [DataTypeLocation]!
  matchType: DataTypeMatchType

  """An optional user defined name for the pattern"""
  name: String
  patternType: DataTypePatternType!
  scope: InputDataTypeScope

  """A list of url regex patterns to match. If empty, applies to all URLs"""
  urlMatchPatterns: [String]
  valuePattern: InputDataTypeStringPattern
}

input InputDataTypeStringPattern {
  operator: DataTypeStringPatternOperator!
  value: String!
}

input InputDefaultProtectionModeUpdate {
  defaultProtectionMode: ProtectionMode!
}

input InputDeleteAgentTokenInput {
  forceDelete: Boolean
  id: String!
}

input InputDeleteApiSpec {
  id: String!
}

input InputDeleteApiTokenInput {
  id: String!
}

"""Delete AST hooks V2"""
input InputDeleteAstHookV2 {
  """Ast hook ids to delete"""
  hooksIds: [String]!
}

"""Request to delete ast overrides"""
input InputDeleteAstOverridesRequest {
  """List of ids of overrides to be deleted"""
  ids: [String]!
}

"""Request to delete custom test plugin"""
input InputDeleteCustomTestPluginRequest {
  id: String!
}

"""Request to delete custom vulnerability type"""
input InputDeleteCustomVulnerabilityTypeRequest {
  """Id of the custom vulnerability type to delete"""
  id: String!
}

input InputDeletePoliciesRequest {
  policyIds: [String]!
}

input InputDeleteProjectIssueConfigurationInput {
  configurationIds: [String]!
}

"""Input to delete data protection config"""
input InputDeleteScopedDataProtectionConfigRequest {
  """Scope of the data protection config"""
  scope: InputDataProtectionScope
}

input InputDeleteSecuritySchemeRoleRelationshipsInput {
  """A list of relationships to be deleted in bulk"""
  relationships: [InputSecuritySchemeRoleRelationship]!
}

"""Bulk Delete security scheme role"""
input InputDeleteSecuritySchemeRolesInput {
  """A list of role IDs to be deleted in bulk"""
  roleIds: [String]!
}

input InputDeleteSecuritySchemeScopeRelationshipsInput {
  """A list of relationships to be deleted in bulk"""
  relationships: [InputSecuritySchemeScopeRelationship]!
}

"""Bulk Delete security scheme scope"""
input InputDeleteSecuritySchemeScopesInput {
  """A list of scope IDs to be deleted in bulk"""
  scopeIds: [String]!
}

"""Input to delete session identification rule"""
input InputDeleteSessionIdentificationRule {
  """Session Identification rule ID"""
  id: String!
}

"""Request to delete sonar scans"""
input InputDeleteSonarScanRequest {
  """List of scan ids to delete"""
  scanIds: [String]!
}

input InputDeleteSplunkIntegrationInput {
  """Splunk Integration ID"""
  id: String!
}

input InputDeleteSyslogServerIntegrationInput {
  """Syslog server integration ID"""
  id: String!
}

"""Input to delete user attribution rule"""
input InputDeleteUserAttributionRule {
  """User Attribution rule ID"""
  id: String!
}

"""Input for delete user request"""
input InputDeleteUserInput {
  """email of the user"""
  email: String!
}

"""Delete vulnerability status change config request"""
input InputDeleteVulnerabilityStatusChangeConfigsRequest {
  """List of vulnerability status change config ids"""
  ids: [String]!
}

input InputDeleteWafIntegrationInput {
  id: String!
}

input InputDemoApplicationAutomaticDetection {
  automaticDetectionStatus: AutomaticDetectionStatus!
}

input InputDemoApplicationConfig {
  keyValuePairs: [InputTrainingConfigKeyValuePair]
  name: DemoApplicationConfigName!
}

input InputDemoApplicationDefinition {
  demoApplicationTypes: [DemoApplicationType]!
}

input InputDetectedSecurityEventCondition {
  """List of security event confidence levels """
  confidenceLevels: [SecurityEventConfidenceLevel]

  """List of detected threat activities """
  detectedThreatActivityConditions: [InputDetectedThreatActivityCondition]
  eventTypes: [DetectedSecurityEventType]

  """List of security event impact levels """
  impactLevels: [SecurityEventImpactLevel]
  severities: [SecurityEventSeverity]
}

"""Detected threat activity condition"""
input InputDetectedThreatActivityCondition {
  """Custom detection rule condition"""
  customDetectionCondition: InputCustomDetectionCondition

  """Detected threat activity condition type"""
  detectedThreatActivityConditionType: DetectedThreatActivityConditionType!

  """Pre defined detection rule condition"""
  preDefinedDetectionCondition: InputPreDefinedDetectionCondition
}

"""Config for detection exclusion creation events"""
input InputDetectionExclusionCreationConfig {
  """detection exclusion enabling key"""
  enabled: Boolean!

  """detection exclusion rule expiration duration"""
  expirationDuration: Duration!
}

"""Region identifier schema for detection exclusion region condition"""
input InputDetectionExclusionRegionIdentifier {
  """Country ISO code for region identifier"""
  countryIsoCode: String!
}

"""Custom rule for excluding spans from detection"""
input InputDetectionExclusionRule {
  """Detection exclusion rule id"""
  id: String!

  """Detection exclusion rule info"""
  ruleInfo: InputDetectionExclusionRuleInfo!

  """Detection exclusion rule scope"""
  ruleScope: InputDetectionExclusionRuleScope
}

"""
Anomalous attribute condition applicable for a detection exclusion rule
"""
input InputDetectionExclusionRuleAnomalousAttributeCondition {
  """Key match condition"""
  keyMatchCondition: InputDetectionExclusionRuleMatchCondition

  """Learnt type list"""
  learntTypeList: [DetectionExclusionAttributeValueType]

  """Observed type list"""
  observedTypeList: [DetectionExclusionAttributeValueType]

  """Value match condition"""
  valueMatchCondition: InputDetectionExclusionRuleMatchCondition
}

"""Condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleCondition {
  """
  Anomalous attribute condition applicable for a detection exclusion rule
  """
  anomalousAttributeCondition: InputDetectionExclusionRuleAnomalousAttributeCondition

  """
  Span attribute match condition applicable for a detection exclusion rule
  """
  attributeMatchCondition: InputDetectionExclusionRuleSpanAttributeMatchCondition

  """Type of condition"""
  conditionType: DetectionExclusionRuleConditionType!

  """Email domain condition applicable for a detection exclusion rule"""
  emailDomainCondition: InputDetectionExclusionRuleEmailDomainCondition

  """Event condition applicable for a detection exclusion rule"""
  eventCondition: InputDetectionExclusionRuleEventCondition

  """IP abuse velocity condition applicable for a detection exclusion rule"""
  ipAbuseVelocityCondition: InputDetectionExclusionRuleIpAbuseVelocityCondition

  """IP address condition applicable for a detection exclusion rule"""
  ipAddressCondition: InputDetectionExclusionRuleIpAddressCondition

  """IP asn condition applicable for a detection exclusion rule"""
  ipAsnCondition: InputDetectionExclusionRuleIpAsnCondition

  """IP connection type condition applicable for a detection exclusion rule"""
  ipConnectionTypeCondition: InputDetectionExclusionRuleIpConnectionTypeCondition

  """IP location type condition applicable for a detection exclusion rule"""
  ipLocationTypeCondition: InputDetectionExclusionRuleIpLocationTypeCondition

  """IP organisation condition applicable for a detection exclusion rule"""
  ipOrganisationCondition: InputDetectionExclusionRuleIpOrganisationCondition

  """IP reputation condition applicable for a detection exclusion rule"""
  ipReputationCondition: InputDetectionExclusionRuleIpReputationCondition

  """Region condition applicable for a detection exclusion rule"""
  regionCondition: InputDetectionExclusionRuleRegionCondition

  """Scanner type condition applicable for a detection exclusion rule"""
  scannerTypeCondition: InputDetectionExclusionRuleScannerTypeCondition

  """Scope condition applicable for a detection exclusion rule"""
  scopeCondition: InputDetectionExclusionRuleScopeCondition

  """
  Source anomalous attribute condition applicable for a detection exclusion rule
  """
  sourceAnomalousAttributeCondition: InputDetectionExclusionRuleAnomalousAttributeCondition

  """Source scope condition applicable for a detection exclusion rule"""
  sourceScopeCondition: InputDetectionExclusionRuleScopeCondition

  """User agent condition applicable for a detection exclusion rule"""
  userAgentCondition: InputDetectionExclusionRuleUserAgentCondition

  """UserId condition applicable for a detection exclusion rule"""
  userIdCondition: InputDetectionExclusionRuleUserIdCondition
}

"""Custom rule event condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleCustomRuleEvent {
  """Custom rule event family where rule should apply"""
  customRuleEventFamily: DetectionExclusionRuleCustomRuleEventFamily!

  """Custom ruleId applicable for the rule"""
  ruleId: String
}

"""Email domain condition for detection exclusion rule"""
input InputDetectionExclusionRuleEmailDomainCondition {
  """List of email domains"""
  emailDomains: [String]

  """List of email regexes"""
  emailRegexes: [String]

  """boolean denoting exclude condition"""
  exclude: Boolean
}

"""Entity scope condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleEntityScope {
  """List of entity ids applicable"""
  entityIds: [String]!

  """Entity type"""
  entityType: DetectionExclusionRuleEntityScopeType!
}

"""Environment scope applicable for detection exclusion rule"""
input InputDetectionExclusionRuleEnvironmentScope {
  """List of environment ids applicable for detection exclusion rule"""
  environmentIds: [String]!
}

"""Event condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleEventCondition {
  """List of custom rule events"""
  customRuleEvents: [InputDetectionExclusionRuleCustomRuleEvent]

  """List of system defined events"""
  systemDefinedEvents: [InputDetectionExclusionRuleSystemDefinedEvent]

  """List of threat actor events"""
  threatActorEvents: [InputDetectionExclusionRuleThreatActorEvent]
}

"""Info regarding detection exclusion rule"""
input InputDetectionExclusionRuleInfo {
  """Detection exclusion rule conditions"""
  conditions: [InputDetectionExclusionRuleCondition]!

  """Detection exclusion rule description"""
  description: String

  """Detection exclusion rule exclusion targets"""
  exclusionTargets: [DetectionExclusionTarget]

  """Detection exclusion rule name"""
  name: String!

  """Detection exclusion rule status"""
  ruleStatus: InputDetectionExclusionRuleStatus!
}

"""Ip abuse velocity condition applicable on a detection exclusion rule"""
input InputDetectionExclusionRuleIpAbuseVelocityCondition {
  """Maximum Ip abuse velocity applicable"""
  maxIpAbuseVelocity: DetectionExclusionRuleIpAbuseVelocity!
}

"""IP address condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleIpAddressCondition {
  """List of IP ranges following CIDR syntax"""
  cidrIpRanges: [String]

  """Boolean denoting exclude condition"""
  exclude: Boolean

  """Ip address condition type"""
  ipAddressConditionType: DetectionExclusionRuleIpAddressConditionType

  """List of IP addresses"""
  ipAddresses: [String]

  """List of IP addresses and CIDR IP ranges"""
  rawInputIpData: [String]
}

"""Ip asn condition for a detection exclusion rule"""
input InputDetectionExclusionRuleIpAsnCondition {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip asn regexes"""
  ipAsnRegexes: [String]!
}

"""IP connection type condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleIpConnectionTypeCondition {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip connection types"""
  ipConnectionTypes: [DetectionExclusionRuleIpConnectionType]!
}

"""IP location type condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleIpLocationTypeCondition {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP location types"""
  ipLocationTypes: [DetectionExclusionRuleIpLocationType]!
}

"""Ip organisation condition for a detection exclusion rule"""
input InputDetectionExclusionRuleIpOrganisationCondition {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip organisation regexes"""
  ipOrganisationRegexes: [String]!
}

"""IP reputation condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleIpReputationCondition {
  """IP reputation condition type"""
  ipReputationConditionType: DetectionExclusionRuleIpReputationConditionType!

  """Maximum IP reputation score applicable"""
  maxIpReputationScore: Int

  """Maximum IP reputation severity applicable"""
  maxIpReputationSeverity: DetectionExclusionRuleIpReputationSeverity
}

"""Key metadata match condition for a span attribute"""
input InputDetectionExclusionRuleKeyMetadataMatchCondition {
  """Key metadata of condition"""
  keyMetadata: DetectionExclusionRuleKeyMetadata!

  """Match condition of the key metadata"""
  matchCondition: InputDetectionExclusionRuleMatchCondition
}

"""Label scope condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleLabelScope {
  """List of label ids applicable"""
  labelIds: [String]!

  """Label type"""
  labelType: DetectionExclusionRuleLabelScopeType!
}

"""Condition which matches a value using the specified operator"""
input InputDetectionExclusionRuleMatchCondition {
  """Operator to be used to match the value"""
  operator: DetectionExclusionRuleMatchConditionOperator!

  """Value to be matched"""
  value: Unknown!
}

"""Region condition applicable on a detection exclusion rule"""
input InputDetectionExclusionRuleRegionCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of region identifiers"""
  regionIdentifiers: [InputDetectionExclusionRegionIdentifier]
}

"""Scanner type condition for a rate limit rule"""
input InputDetectionExclusionRuleScannerTypeCondition {
  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of scanner types"""
  scannerTypes: [String]!
}

"""Detection exclusion rule scope"""
input InputDetectionExclusionRuleScope {
  """Environment scope applicable for detection exclusion rule"""
  environmentScope: InputDetectionExclusionRuleEnvironmentScope
}

"""Scope condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleScopeCondition {
  """Entity scope condition"""
  entityScope: InputDetectionExclusionRuleEntityScope

  """Boolean denoting exclude condition"""
  exclude: Boolean

  """Label scope condition"""
  labelScope: InputDetectionExclusionRuleLabelScope

  """Scope condition type"""
  scopeType: DetectionExclusionRuleScopeConditionType!

  """Url scope condition"""
  urlScope: InputDetectionExclusionRuleUrlScope
}

"""Filter for fetching detection exclusion rules"""
input InputDetectionExclusionRulesFilter {
  """Rule disabled status to filter on"""
  disabled: Boolean

  """Rule hidden status to filter on"""
  hidden: Boolean

  """Rule creation sources to filter on"""
  ruleCreationSources: [DetectionExclusionRuleSource]

  """RuleIds to filter on"""
  ruleIds: [String]

  """Rule scope to filter on"""
  ruleScope: InputDetectionExclusionRuleScope
}

"""
Span attribute match condition applicable for a detection exclusion rule
"""
input InputDetectionExclusionRuleSpanAttributeMatchCondition {
  """Key match condition"""
  keyMatchCondition: InputDetectionExclusionRuleKeyMetadataMatchCondition!

  """Value match condition"""
  valueMatchCondition: InputDetectionExclusionRuleMatchCondition
}

"""Status of a detection exclusion rule"""
input InputDetectionExclusionRuleStatus {
  """Boolean denoting if the rule is disabled"""
  disabled: Boolean!

  """Boolean denoting if the rule should generate internal events"""
  generateInternalEvents: Boolean

  """Boolean denoting if the rule is hidden"""
  hidden: Boolean

  """Rule creation source"""
  ruleCreationSource: DetectionExclusionRuleSource
}

"""
System defined event condition applicable for a detection exclusion rule
"""
input InputDetectionExclusionRuleSystemDefinedEvent {
  """Description match condition"""
  descriptionMatchCondition: InputDetectionExclusionRuleMatchCondition

  """System defined event family where rule should apply"""
  systemDefinedEventFamily: DetectionExclusionRuleSystemDefinedEventFamily!

  """System defined event typeId applicable for the rule"""
  typeId: InputDetectionExclusionRuleSystemDefinedEventTypeId
}

"""TypeId for a system defined event"""
input InputDetectionExclusionRuleSystemDefinedEventTypeId {
  """Event sub typeId for system defined event"""
  eventSubTypeId: String

  """Event typeId for system defined event"""
  eventTypeId: String

  """Type of typeId for system defined event"""
  typeIdType: DetectionExclusionRuleSystemDefinedEventTypeIdType!
}

"""Threat actor event condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleThreatActorEvent {
  """Actor entity ID"""
  actorEntityId: String

  """Threat actor event identifier"""
  threatActorEventIdentifier: DetectionExclusionRuleThreatActorEventIdentifier!
}

"""Url scope condition applicable on a detection exclusion rule"""
input InputDetectionExclusionRuleUrlScope {
  """List of url regex"""
  urlRegexes: [String]!
}

"""User agent condition for a detection exclusion rule"""
input InputDetectionExclusionRuleUserAgentCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of user agent regexes"""
  userAgentRegexes: [String]

  """List of user agents"""
  userAgents: [String]
}

"""UserId condition applicable for a detection exclusion rule"""
input InputDetectionExclusionRuleUserIdCondition {
  """List of actor IDs"""
  actorEntityIds: [String]

  """Boolean denoting exclude condition"""
  exclude: Boolean

  """List of user ID regexes"""
  userIdRegexes: [String]

  """List of user IDs"""
  userIds: [String]
}

input InputDetectionScopeConfig {
  endpointIds: [String]!
  endpointLabels: [String]!
  urlRegexes: [String]!
}

input InputDetectionUserIdDataConfig {
  """User attribution extracted ID"""
  userAttributionExtractedId: Boolean

  """User attribution extracted ID from JWT"""
  userAttributionExtractedIdFromJwt: Boolean

  """User ID custom attribute"""
  userIdCustomAttribute: String

  """User ID source type"""
  userIdSourceType: DetectionUserIdSourceType!
}

input InputDurationScope {
  """Maximum duration of vulnerability since last seen"""
  maximumVulnerabilityDuration: InputMaxVulnerabilityDuration!
}

input InputDynamicJwt {
  """All jwt claims"""
  claims: [InputClaimsKeyValue]!

  """Key Gen algo"""
  keyGenAlgo: KeyGenAlgo!

  """Secret Key Field"""
  secretKey: String!

  """Token expiry in mins"""
  tokenExpiryMins: Long
}

input InputDynamicLabel {
  """
  Expression definition to generate dynamic labels. Ex: "${token1}_${token2}"
  """
  expression: String!

  """
  Rules to extract token from attribute values. These values will replace tokens in the expression.
  """
  tokenExtractionRules: [InputTokenExtractionRule]!
}

"""
Threshold config which specifies percentage allowed exceeding a mean countwhich
is calculated over the specified duration for the given time range
"""
input InputDynamicThresholdConfig {
  """Time range over which mean and counts are calculated"""
  duration: Duration!

  """Duration for calculating mean over the specified time range"""
  meanCalculationDuration: Duration!

  """Allowed percentage exceeding mean"""
  percentageExceedingMeanAllowed: Int!
}

input InputEmailChannelConfig {
  address: String!
}

input InputEmailDomainAnomalyConfig {
  """Minimum threshold for critical email fraud score"""
  criticalEmailFraudScoreMinThreshold: Int!

  """Is disabled or not"""
  disabled: Boolean!

  """Minimum threshold for high email fraud score"""
  highEmailFraudScoreMinThreshold: Int!
}

input InputEntityContextOptions {
  includeNonLiveEntities: Boolean!
}

"""common entity identifier"""
input InputEntityIdentifier {
  id: String!
}

"""Entity additional information"""
input InputEntityInfo {
  """Entity info type"""
  entityInfoType: EntityInfoType!

  """Sonar affected entity info"""
  sonarEntityInfo: InputSonarEntity
}

input InputEntitySpanAttributeFilter {
  logicalFilter: InputEntitySpanAttributeLogicalFilter
  relationalFilter: InputEntitySpanAttributeRelationalFilter
}

input InputEntitySpanAttributeFilterConfig {
  filter: InputEntitySpanAttributeFilter!
}

input InputEntitySpanAttributeKeyFilter {
  keyLocation: EntitySpanAttributeKeyLocation!
  relationalOperator: EntitySpanAttributeRelationalOperator
  value: String
  values: [String]
}

input InputEntitySpanAttributeLogicalFilter {
  filters: [InputEntitySpanAttributeFilter]!
  logicalOperator: EntitySpanAttributeLogicalOperator!
}

input InputEntitySpanAttributeRelationalFilter {
  keyFilter: InputEntitySpanAttributeKeyFilter!
  valueFilter: InputEntitySpanAttributeValueFilter
}

input InputEntitySpanAttributeValueFilter {
  relationalOperator: EntitySpanAttributeRelationalOperator!
  value: String
  values: [String]
}

input InputEntityUpdate {
  id: String!
  operation: InputEntityUpdateOperation!
  type: EntityMutationType
  typeString: String
}

input InputEntityUpdateOperation {
  setAttribute: InputEntityUpdateSetAttribute!
}

input InputEntityUpdateSetAttribute {
  key: String!
  value: Unknown!
}

input InputEntityUpdateUnsetAttribute {
  key: String!
}

"""Environment scope applicable for rate limit rule"""
input InputEnvironmentScope {
  """List of environment ids applicable for rate limit rule"""
  environmentIds: [String]!
}

input InputEventAggregationConfig {
  eventAggregationFamilyConfigs: [InputEventAggregationFamilyConfig]
  eventAggregationGlobalConfig: InputEventAggregationGlobalConfig
}

input InputEventAggregationConfigValues {
  maxEventsWithScorePerParamAcrossValues: Int
  maxEventsWithScorePerParamValue: Int
  maxEventsWithScorePerUserAcrossParams: Int
  maxEventsWithoutScorePerParamAcrossValues: Int
  maxEventsWithoutScorePerParamValue: Int
  maxEventsWithoutScorePerUserAcrossParams: Int
  maxUsersPerParam: Int

  """param name max duration for aggregation"""
  paramNameMaxDuration: Duration

  """param value max duration for aggregation"""
  paramValueMaxDuration: Duration

  """user max duration for aggregation"""
  userMaxDuration: Duration
}

input InputEventAggregationExcludeConfigValues {
  maxUsersPerParamExcludeEventTypeIds: [String]
}

input InputEventAggregationFamilyConfig {
  aggregationConfig: InputEventAggregationConfigValues
  aggregationExcludeConfig: InputEventAggregationExcludeConfigValues
  anomalyEventFamily: AnomalyEventFamily!
}

input InputEventAggregationGlobalConfig {
  """Config for detection exclusion creation events"""
  detectionExclusionCreationConfig: InputDetectionExclusionCreationConfig
  paramNameMaxDuration: Duration
  paramValueMaxDuration: Duration

  """Config for tagged events"""
  taggedEventsAggregationConfig: InputTaggedEventsAggregationConfig
  userMaxDuration: Duration
}

input InputEventConditions {
  actorSeverityStateChangeEventCondition: InputActorSeverityStateChangeEventCondition
  apiFraudIncidentChangeEventCondition: InputApiFraudIncidentChangeEventCondition
  apiNamingRuleConfigChangeEventCondition: InputApiNamingRuleConfigChangeCondition
  apiSpecConfigChangeEventCondition: InputApiSpecConfigChangeCondition
  blockedEventCondition: InputBlockedEventCondition
  dataCollectionChangeCondition: InputDataCollectionChangeCondition
  detectedSecurityEventCondition: InputDetectedSecurityEventCondition
  excludeSpanRuleConfigChangeEventCondition: InputExcludeSpanRuleConfigChangeCondition
  fraudDetectionEventCondition: InputFraudDetectionEventCondition

  """Integration change event condition"""
  integrationChangeEventCondition: InputIntegrationChangeEventCondition
  labelConfigChangeEventCondition: InputLabelConfigChangeCondition
  notificationConfigChangeCondition: InputNotificationConfigChangeCondition
  postureEventCondition: InputPostureEventCondition
  riskScoringConfigChangeEventCondition: InputRiskScoringConfigChangeCondition
  securityConfigChangeEventCondition: InputSecurityConfigChangeEventCondition
  sensitiveDataConfigChangeCondition: InputSensitiveDataConfigChangeCondition
  threatActorStateChangeEventCondition: InputThreatActorStateChangeEventCondition

  """Threat scoring config change event condition"""
  threatScoringConfigChangeEventCondition: InputThreatScoringConfigChangeEventCondition
  userChangeEventCondition: InputUserChangeEventCondition
}

"""Exclude config for auto blocking."""
input InputExcludeAutoBlockingConfig {
  """List of regexes to exclude from auto blocking."""
  userIdRegexes: [String]!
}

"""Config for excluding events"""
input InputExcludedEventsGenerationConfig {
  """Boolean denoting excluding all events"""
  enabledForAll: Boolean

  """List of ruleIds to exclude"""
  exclusionRuleIds: [String]

  """Type of events exclusion config"""
  name: ExcludedEventsGenerationConfigName!
}

"""Event type condition for Exclude Span Rule"""
input InputExcludeSpanRuleConfigChangeCondition {
  """Represents operation on Exclude Span Rule i.e Create/Update/Delete """
  excludeSpanRuleConfigChangeTypes: [ExcludeSpanRuleConfigChangeType]!
}

input InputExcludeSpanRuleCreate {
  disabled: Boolean!
  name: String!
  ruleType: ExcludeSpanRuleRuleType
  spanFilter: InputSpanProcessingRuleFilter!
}

input InputExcludeSpanRuleDelete {
  id: String!
}

input InputExcludeSpanRuleUpdate {
  disabled: Boolean!
  id: String!
  name: String!
  spanFilter: InputSpanProcessingRuleFilter!
}

input InputExfiltrationDetectionRule {
  enabled: Boolean!
  id: String!
  name: String!
  scopes: [InputExfiltrationScope]!
}

input InputExfiltrationDetectionRuleData {
  enabled: Boolean!
  name: String!
  scopes: [InputExfiltrationScope]!
}

input InputExfiltrationFilterArgument {
  key: ExfiltrationSelectionField!
  operator: FilterOperatorType!
  value: Unknown!
}

input InputExfiltrationGroupByArgument {
  key: ExfiltrationSelectionField!
}

input InputExfiltrationIdentityScope {
  identityType: ExfiltrationIdentityType!
  value: String!
}

input InputExfiltrationLabelScope {
  labelType: ExfiltrationLabelType!
  value: String!
}

input InputExfiltrationOrderByArgument {
  aggregation: ExfiltrationOrderAggregationType
  direction: OrderDirection!
  key: ExfiltrationSelectionField!
}

input InputExfiltrationScope {
  identityScope: InputExfiltrationIdentityScope
  labelScope: InputExfiltrationLabelScope
  scopeType: ExfiltrationDetectionScopeType!
}

input InputExpiredRuleFilter {
  """Filter for expired rules in the result set"""
  isRuleExpired: Boolean!
}

"""F5 auth credentials"""
input InputF5AuthCredentials {
  """F5 password for auth token"""
  password: String!

  """F5 Username for auth token """
  userName: String!
}

"""F5 integration details"""
input InputF5IntegrationDetails {
  """F5 auth credentials"""
  authCredentials: InputF5AuthCredentials!

  """F5 security policy name on which custom rules will be created"""
  securityPolicyName: String!

  """F5 URL on which F5 server is running"""
  url: String!
}

"""F5 integration params"""
input InputF5IntegrationParams {
  """F5 integration details"""
  f5IntegrationDetails: InputF5IntegrationDetails!
}

"""F5 integration update params"""
input InputF5IntegrationUpdateParams {
  """Updated f5 integration details"""
  f5IntegrationDetails: InputUpdatedF5IntegrationDetails!
}

"""Required arguments to validate F5 WAF Connection"""
input InputF5WafValidationInput {
  """
  The credentials for this F5 WAF integration. Either of authCredentials or integrationConfigId  must be present.
  """
  authCredentials: InputF5AuthCredentials

  """
  The integration-config Id of this F5 WAF integration. Overridden by F5AuthCredentials if present.
  """
  integrationConfigId: String

  """F5 security policy name on which custom rules will be created"""
  securityPolicyName: String!

  """
  Either hostname:port or ipaddress:port. The url of the F5 instance. Optional if integrationConfigId is provided.
  """
  url: String
}

input InputFilter {
  idScope: String
  idType: AttributeScope
  key: String
  keyExpression: InputAttributeExpression
  operator: FilterOperatorType!

  """Transformation function"""
  transformationFunction: InputTransformationFunction
  type: FilterType!
  value: Unknown!
}

"""Force learn action configuration"""
input InputForceLearnActionConfig {
  """Threshold family"""
  thresholdFamily: ThresholdFamily!
}

"""Fortinet auth credentials"""
input InputFortinetAuthCredentials {
  """Fortinet api key"""
  apiKey: String!
}

"""Fortinet integration details"""
input InputFortinetIntegrationDetails {
  """Fortinet auth credentials"""
  fortinetAuthCredentials: InputFortinetAuthCredentials!

  """Fortinet rule details"""
  fortinetRuleDetails: InputFortinetRuleDetails!
}

"""Fortinet integration params"""
input InputFortinetIntegrationParams {
  """Fortinet integration details"""
  fortinetIntegrationDetails: InputFortinetIntegrationDetails!
}

"""Fortinet integration update params"""
input InputFortinetIntegrationUpdateParams {
  """Updated Fortinet integration details"""
  fortinetIntegrationDetails: InputUpdatedFortinetIntegrationDetails!
}

"""Fortinet rule scope id"""
input InputFortinetRule {
  """ID of rule scope"""
  id: String!
}

"""Fortinet rule details"""
input InputFortinetRuleDetails {
  """Fortinet rule scope details"""
  fortinetRule: InputFortinetRule!

  """Scope type of Fortinet rule"""
  fortinetRuleScopeType: FortinetRuleScopeType!
}

"""Fortinet integration details to be validated"""
input InputFortinetValidationIntegrationDetails {
  """Fortinet rule details"""
  fortinetRuleDetails: InputFortinetRuleDetails!
}

"""Fortinet integration params to be validated"""
input InputFortinetValidationIntegrationParams {
  """Fortinet integration details validation"""
  fortinetValidationIntegrationDetails: InputFortinetValidationIntegrationDetails!
}

"""Arugments required to validate a Fortinet WAF connection"""
input InputFortinetWafConnectionValidationInput {
  """
  The parameter authCredentials can be left out if fortinetIntegrationConfigId is provided.
  """
  fortinetAuthCredentials: InputFortinetAuthCredentials

  """
  The config ID of the fortinet integration can be left out if authCredentials is provided.
  """
  fortinetIntegrationConfigId: String

  """Fortinet details required for validating connection"""
  fortinetValidationIntegrationParams: InputFortinetValidationIntegrationParams!
}

input InputFraudDetectionEventCondition {
  severities: [FraudDetectionEventSeverity]!
}

"""Input for taking an action on fraud incident"""
input InputFraudIncidentActionUpdate {
  """The type of action to take"""
  actionType: FraudIncidentActionType!

  """Identifier of the fraud incident"""
  id: String
}

"""Enum Value"""
input InputFraudIncidentComponentEnumValue {
  """An optional target field on which aggregation is to be performed on"""
  aggregationTarget: FraudIncidentComponentField

  """IP Location Type"""
  ipLocationType: IpLocationType
}

"""Filter for the Fraud IncidentComponent"""
input InputFraudIncidentComponentFilter {
  """
  Dynamic key on which the filter is to be applied. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  dynamicKey: String

  """
  Enum key on which the filter is to be applied. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  key: FraudIncidentComponentField

  """Type of the operator to be applied"""
  operator: FilterOperatorType!

  """Value on which the filter is to be applied"""
  value: Unknown
}

"""Input for updating the status of the fraud incident component"""
input InputFraudIncidentComponentStatusUpdate {
  """
  Status of only those components will be updated which match the list of the
  supplied filters. All the individual relational filters are ANDed
  """
  filterComponents: [InputFraudIncidentComponentFilter]

  """Identifier of the fraud incident component"""
  id: String

  """
  List of the identifiers of the fraud incident components on which the status change is to be applied
  """
  incidentComponentIds: [String]

  """Status of the fraud incident component to which it should be updated"""
  status: FraudIncidentComponentStatus!
}

"""Filter for the Fraud Incident"""
input InputFraudIncidentFilter {
  """
  Dynamic key on which the filter is to be applied. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  dynamicKey: String

  """
  Enum key on which the filter is to be applied. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  key: FraudIncidentField

  """Type of the operator to be applied"""
  operator: FilterOperatorType!

  """Value on which the filter is to be applied"""
  value: Unknown
}

"""Input for updating the status of the fraud incident"""
input InputFraudIncidentStatusUpdate {
  """Identifier of the fraud incident"""
  id: String

  """Status of the fraud incident to which it should be updated"""
  status: FraudIncidentStatus!
}

"""Environment scope applicable for fraud metadata"""
input InputFraudMetadataEnvironmentScope {
  """List of environment ids applicable for fraud metadata"""
  environmentIds: [String]!
}

"""Filter for getting the fraud metadata"""
input InputFraudMetadataFilter {
  environmentScope: InputFraudMetadataEnvironmentScope
}

"""Gcp auth credentials"""
input InputGcpAuthCredentials {
  """Gcp service account key"""
  serviceAccountKey: String!
}

"""Gcp integration details"""
input InputGcpIntegrationDetails {
  """Gcp auth credentials"""
  authCredentials: InputGcpAuthCredentials!

  """Deny action response code in case of blocking"""
  denyActionResponseCode: DenyActionResponseCode

  """Gcp Project ID"""
  projectId: String!

  """Gcp security policy details"""
  securityPolicyDetails: InputGcpSecurityPolicyDetails!

  """Gcp security policy name on which custom rules will be applied"""
  securityPolicyName: String!
}

"""Gcp integration params"""
input InputGcpIntegrationParams {
  """Gcp integration details"""
  gcpIntegrationDetails: InputGcpIntegrationDetails!
}

"""Gcp integration update params"""
input InputGcpIntegrationUpdateParams {
  """Updated Gcp integration details"""
  gcpIntegrationDetails: InputUpdatedGcpIntegrationDetails!
}

"""Region security policy details"""
input InputGcpRegionSecurityPolicyScope {
  """Region name"""
  region: String!
}

"""Gcp Security policy details"""
input InputGcpSecurityPolicyDetails {
  """Region security policy scope details"""
  gcpRegionSecurityPolicyScope: InputGcpRegionSecurityPolicyScope

  """Scope at which gcp security policy defined"""
  gcpSecurityPolicyScopeType: GcpSecurityPolicyScopeType!
}

"""GCP integration details to be validated"""
input InputGcpValidationIntegrationDetails {
  """Gcp Project ID"""
  projectId: String!

  """Gcp security policy details"""
  securityPolicyDetails: InputGcpSecurityPolicyDetails!

  """Gcp security policy name on which custom rules will be applied"""
  securityPolicyName: String!
}

"""Required Inputs to validate a gcp waf connection"""
input InputGcpWafConnectionValidationInput {
  """Gcp auth credentials. Can be left out if gcpConfigId is provided."""
  authCredentials: InputGcpAuthCredentials

  """
  The Id of the gcp integration. Can be left out if authCredentials is provided.
  """
  gcpConfigId: String

  """GCP details required for validating connection"""
  gcpValidationIntegrationDetails: InputGcpValidationIntegrationDetails!
}

input InputGenericFilter {
  id: String

  """Defines filter criteria for the assets."""
  filterCriteria: InputSavedFilterCriteria
}

"""input for getJiraIssueTemplates"""
input InputGetAllDescriptionTemplatesInput {
  """
  choose the type of jira issue, different issue types have different templates
  """
  referenceType: JiraIssueReferenceType!

  """the required format of the templates"""
  templateFormat: JiraIssueTemplateFormat!
}

"""input for getAllProjects"""
input InputGetAllProjectsInput {
  """entityId of the entity on which ticket is being created"""
  entityId: String

  """environmentId of the jira integration for which to fetch projects"""
  environmentId: String!

  """maxResults to be returned for this query"""
  limit: Int

  """prefix of the projects name to be returned"""
  prefix: String
}

input InputGetAstScanJob {
  environments: [String]
}

input InputGetAwsWafRulesInput {
  id: String!
}

input InputGetImpervaWafWebsitesInput {
  """
  The config ID of the Imperva WAF can be left out if ImpervaIntegrationParamsInput is provided.
  """
  id: String

  """
  The ImpervaIntegrationParamsInput can be left out if config id of the Imperva WAF is provided.
  """
  impervaIntegrationParamsInput: InputImpervaIntegrationParamsInput
}

"""Request to retrieve configuration details for issues"""
input InputGetIssueConfigsRequest {
  """List of issues to retrieve configuration details for"""
  issueIdentifier: InputIssueIdentifier

  """Source type of the issue to retrieve configuration details for"""
  issueSourceType: String
}

"""Input for jiraIssueAssignableUsers API"""
input InputGetJiraIssueAssignableUsersInput {
  """
  The environment-id of the jira integration for which users are required
  """
  environmentId: String

  """Max number of results to be returned, defaults to 100"""
  limit: Int

  """Id of the project for which the assignable user is being searched"""
  projectId: String!

  """Prefix of the username/email to be searched"""
  userPrefix: String
}

input InputGetJiraIssueInput {
  id: String!
  referenceType: JiraIssueReferenceType!
}

input InputGetJiraProjectIssueConfigurationInput {
  integrationId: String!
  issueType: String
  projectId: String
  traceableEntityType: [JiraIssueReferenceType]
}

"""input for getJiraProjectStatuses"""
input InputGetJiraProjectStatusesInput {
  """Environment ID in which Jira configuration is set"""
  environmentId: String

  """Project ID for which Jira Statuses are to be fetched"""
  projectId: String
}

input InputGetRunnerTaskRequest {
  id: String!
}

"""Data to fetch corresponding snyk issues"""
input InputGetSnykIssuesInput {
  """Snyk issue identifiers"""
  issueIdentifiers: [InputSnykIssueIdentifier]!
}

input InputGetSnykIssuesSummaryRequestInput {
  """List of snyk code issue summary requests"""
  snykIssueSummaryRequests: [InputSnykIssueSummaryRequest]!
}

"""Data to use to get snyk projects"""
input InputGetSnykProjectsInput {
  """Organization for which projects are to be fetched"""
  organizationId: String!
}

"""Request to fetch sonar scans"""
input InputGetSonarScansRequest {
  """List of environments"""
  environments: [String]

  """List of scan ids to fetch"""
  scanIds: [String]
}

"""Request to fetch sonar scans"""
input InputGetSonarScansV2Request {
  """List of scan ids to fetch"""
  scanIds: [String]

  """Sonar scan state to filter"""
  scanState: SonarScanV2State
}

input InputGetWafIntegrationInput {
  id: String!
}

input InputGetWafIntegrationsFilter {
  ids: [String]

  """Waf integration scope"""
  wafIntegrationScope: InputWafIntegrationScope
  wafProviderTypes: [WafProviderType]
}

input InputGetWafIntegrationsInput {
  filter: InputGetWafIntegrationsFilter
}

"""wiz issues query input"""
input InputGetWizIssuesInput {
  """filter for wiz issues"""
  filterBy: InputWizIssueInputFilter

  """limit for wiz issue"""
  limit: Int!

  """offset for wiz issues"""
  offset: Int!

  """service id"""
  serviceId: String!
}

input InputGibberishConfig {
  disabled: Boolean!
  threshold: Int!
}

input InputGoogleAuth {
  domainBasedProvisioningEnabled: Boolean!
  domains: [String]!
  enabled: Boolean!
}

"""
Graphql Schema Details. Only one of graphqlSchemaId or introspectionUrl can be
present. introspectionUrl is required if introspectionEnabled is True
"""
input InputGraphqlSchemaDetails {
  """This flag is for enabling introspection for GraphQL DAST scan"""
  graphqlIntrospectionEnabled: Boolean

  """The graphql schema ID for which to run the DAST scan."""
  graphqlSchemaId: String

  """Specifies the URL for graphql introspection"""
  introspectionUrl: String
}

input InputGroupByArgument {
  expressions: [InputAttributeExpression]
  groupLimit: Int
  includeRest: Boolean
  keys: [String]
}

input InputHeaderLocation {
  cookieName: String
  headerName: String
  parsingTarget: InputParsingTarget
  type: HeaderLocationType!
}

"""Hmac auth config"""
input InputHmac {
  """access key"""
  accessKey: String!

  """optional advanced options"""
  advancedOptions: InputHmacAdvancedOptions

  """Key Generation algo type"""
  hmacKeyGenAlgo: HmacHashAlgo!

  """secret key"""
  secretKey: String!

  """signature header"""
  signatureHeader: String!
}

"""AST hook to be used by runner/cli for scan runs"""
input InputHmacAdvancedOptions {
  """allowed time skew"""
  allowedTimeSkew: Long

  """canonical request format"""
  canonicalRequestFormat: String

  """timestamp header"""
  timestampHeader: String
}

"""AST hook to be used by runner/cli for scan runs"""
input InputHookConfig {
  apiAccessKey: InputApiAccessKey
  authEndpoint: String
  awsSignatureV4: InputAwsSignature

  """Basic Auth config"""
  basicAuth: InputBasicAuth
  bearerConfig: InputBearer
  contentSignature: InputContentSignature
  hmacConfig: InputHmac
  jwtConfig: InputJwtConfig
  mutualTls: InputMutualTls
  oauth: InputOauth
  popTokenSignature: InputPopTokenSignature
}

input InputIdpGroupMappingCreate {
  groupAttributeName: String!
  groupToRolesCollection: [InputIdpGroupToRoles]!
}

input InputIdpGroupMappingMetadata {
  id: String
  groupAttributeName: String!
  groupToRolesCollection: [InputIdpGroupToRoles]
}

input InputIdpGroupToRoles {
  assignedRoles: [InputRoleInput]
  groupName: String!
}

input InputImpactScoreLevel {
  """Minimum threshold Value for high score"""
  highMinScore: Int!

  """Minimum threshold Value for medium score"""
  mediumMinScore: Int!
}

"""Imperva WAF Integration Details"""
input InputImpervaIntegrationParams {
  """Imperva Account ID is an optional field"""
  accountId: String

  """Imperva API ID"""
  apiId: String!

  """Imperva API Key"""
  apiKey: String!

  """The parameter websiteIDs can be left out if websiteNames is provided."""
  websiteIds: [String]

  """The parameter websiteNames can be left out if websiteIds is provided."""
  websiteNames: [String]
}

input InputImpervaIntegrationParamsInput {
  """Imperva Account ID is an optional field"""
  accountId: String

  """Imperva API ID"""
  apiId: String!

  """Imperva API Key"""
  apiKey: String!
}

"""Imperva WAF Integration Update Details"""
input InputImpervaIntegrationUpdateParams {
  """Imperva Account ID"""
  accountId: String

  """Imperva API ID"""
  apiId: String

  """Imperva API Key"""
  apiKey: String

  """Imperva website IDs"""
  websiteIds: [String]

  """Imperva website names"""
  websiteNames: [String]
}

"""Argument for performing a grouping operation on the incident component"""
input InputIncidentComponentGroupByArgument {
  """
  Dynamic key on which the grouping is to be done. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  dynamicKey: String

  """
  Enum key on which the grouping is to be done. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  key: FraudIncidentComponentField
}

"""Argument for ordering the incident components"""
input InputIncidentComponentOrderByArgument {
  """Direction in which the incident components should be ordered"""
  direction: OrderDirection!

  """
  Dynamic key on which the ordering is to be performed. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  dynamicKey: String

  """
  Enum key on which the ordering is to be performed. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  key: FraudIncidentComponentField

  """The alias for the key on which the ordering is to be performed"""
  keyAlias: String
}

"""Argument for performing a grouping operation on the incidents"""
input InputIncidentGroupByArgument {
  """
  Dynamic key on which the grouping is to be done. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  dynamicKey: String

  """
  Enum key on which the grouping is to be done. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  key: FraudIncidentField
}

"""Argument for ordering the incidents"""
input InputIncidentOrderByArgument {
  """Direction in which the incidents should be ordered"""
  direction: OrderDirection!

  """
  Dynamic key on which the ordering is to be performed. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  dynamicKey: String

  """
  Enum key on which the ordering is to be performed. Exactly one out of 'key' and 'dynamicKey' should be non-null
  """
  key: FraudIncidentField

  """The alias for the key on which the ordering is to be performed"""
  keyAlias: String
}

input InputIncrementalScanConfiguration {
  """Boolean flag whether the config is enabled or not."""
  isEnabled: Boolean!

  """Look back duration for running scan in incremental mode."""
  lookBackDuration: Duration!
}

input InputInstantReportCreation {
  channelIds: [String]
  emailAddresses: [String]
  reportTemplate: ReportTemplate!
}

"""Integration change event condition"""
input InputIntegrationChangeEventCondition {
  """List of integration notification event type"""
  integrationNotificationEventTypes: [IntegrationNotificationEventType]!

  """List of integration notification types"""
  integrationNotificationTypes: [IntegrationNotificationType]!
}

input InputIntegrationDetails {
  snykIntegrationDetails: InputSnykIntegrationDetails
}

input InputIntegrationNotificationTarget {
  """The ID of the corresponding integration"""
  integrationId: String!

  """
  The type of integration for which the notification rule is being created
  """
  type: IntegrationNotificationTargetType!
}

input InputIntervalArgument {
  size: Int!
  units: TimeUnit!
}

"""Interval schedule"""
input InputIntervalSchedule {
  """End time of day"""
  endTime: OffsetTime

  """Repeat period"""
  repeatPeriodHours: Int!

  """Start time of day"""
  startTime: OffsetTime
}

input InputIntRangeFilterConfig {
  exclusions: [Int]
  high: Int!
  low: Int!
}

input InputIpRangeEnvironmentScope {
  environmentIds: [String]!
}

"""Ip range rule agent effect"""
input InputIpRangeRuleAgentEffect {
  """Ip range rule agent modification"""
  agentModifications: [InputIpRangeRuleAgentModification]!
}

"""Malicious sources rule agent modification"""
input InputIpRangeRuleAgentModification {
  """Ip range rule agent modification type"""
  agentModificationType: IpRangeRuleAgentModificationType!

  """Ip range rule header injection"""
  headerInjection: InputIpRangeRuleHeaderInjection!
}

input InputIpRangeRuleCreate {
  ruleDetails: InputIpRangeRuleDetailsRequest!
  ruleScope: InputIpRangeRuleScope
}

input InputIpRangeRuleDelete {
  id: String
}

input InputIpRangeRuleDetailsRequest {
  description: String
  effects: [InputIpRangeRuleEffectWithModification]
  eventSeverity: IpRangeEventSeverity
  expirationDuration: Duration
  name: String!
  rawIpRangeData: [String]!
  ruleAction: IpRangeRuleActionType!
}

"""Ip range rule effect with modification"""
input InputIpRangeRuleEffectWithModification {
  """Effects enforced for agent while inline processing of requests"""
  agentEffect: InputIpRangeRuleAgentEffect!

  """Ip range rule effect modification type"""
  ruleEffectType: IpRangeRuleEffectModificationType!
}

"""Actions associated with the rule"""
input InputIpRangeRuleHeaderInjection {
  """Header category"""
  headerCategory: IpRangeRuleHeaderCategory!

  """Header key"""
  key: String!

  """Header value"""
  value: String!
}

input InputIpRangeRuleScope {
  environmentScope: InputIpRangeEnvironmentScope
}

input InputIpRangeRulesFilter {
  ruleScope: InputIpRangeRuleScope!
}

input InputIpRangeRuleUpdate {
  id: String
  disabled: Boolean
  internal: Boolean
  ruleDetails: InputIpRangeRuleDetailsRequest!
  ruleScope: InputIpRangeRuleScope
}

input InputIpTypeAnomalyConfig {
  """Minimum threshold for Abuse Velocity score for generating events"""
  abuseVelocityMinThreshold: AnomalyConfigAbuseVelocity!

  """Minimum threshold for Ip reputation score for generating events"""
  ipReputationScoreMinThreshold: Int!
}

input InputIssueConfig {
  """Configuration details for detecting for this custom compliance issue"""
  customCompliance: InputCustomComplianceIssueConfig

  """
  The default severity level for the issue, used when no specific severity rules apply.
  """
  fallbackSeverity: VulnerabilitySeverity!

  """Indicates if issue detection is globally enabled across all sources."""
  globalEnableStatus: Boolean!

  """
  Mapping of conditions (predicates) to assigned severity levels for this issue
  type.The severity of the first-matching-rule will be used
  """
  issueSeverityRules: [InputIssueSeverityRule]

  """Configuration details for detecting this issue in live traffic source."""
  liveTraffic: InputLiveTrafficIssueConfig

  """Configuration details for detecting this system compliance issue"""
  systemCompliance: InputSystemComplianceIssueConfig
}

input InputIssueDetectionParameter {
  """current value for the parameter"""
  currentValue: Unknown!

  """Datatype of the parameter"""
  datatype: InputIssueDetectionParameterDatatype!

  """Parameter description"""
  description: String!

  """Display name for parameter"""
  displayName: String!

  """parameter key"""
  key: String!
}

input InputIssueDetectionParameterDatatype {
  """Enum datatype"""
  enumeration: InputIssueDetectionParameterEnumType

  """Integer datatype"""
  integer: InputIssueDetectionParameterIntegerType

  """Referenced datatype"""
  referenced: InputIssueDetectionParameterReferencedType

  """Timestamp datatype"""
  timestamp: InputIssueDetectionParameterTimestampType

  """Datatype of the detection parameter"""
  type: IssueDetectionParameterValueType!
}

input InputIssueDetectionParameterEnumType {
  """Possible values of the enum"""
  possibleEnumValues: [InputIssueDetectionParameterEnumTypePossibleValue]!
}

input InputIssueDetectionParameterEnumTypePossibleValue {
  """Display name enum"""
  displayName: String!

  """Enum name"""
  enumName: String!
}

input InputIssueDetectionParameterIntegerType {
  """Maximum possible value of the detection parameter"""
  maxValue: Int

  """Minimum possible value of the detection parameter"""
  minValue: Int
}

input InputIssueDetectionParameterReferencedType {
  """Possible values of the referenced field"""
  possibleValues: [InputIssueDetectionParameterReferenceTypePossibleValue]!
}

input InputIssueDetectionParameterReferenceTypePossibleValue {
  """Display name for the attribute"""
  displayName: String!

  """Attribute key"""
  key: String!
}

input InputIssueDetectionParameterTimestampType {
  """Format of the timestamp"""
  format: IssueDetectionParameterTimestampTypeFormat!
}

input InputIssueIdentifier {
  """Category of the issue"""
  issueCategory: String

  """Type of the issue"""
  issueType: String
}

input InputIssueSeverityRule {
  """The filter condition to be matched for assigning the severity."""
  filter: InputGenericFilter!

  """
  Once the filter condition is matched this severity will be assigned to the issue.
  """
  severity: VulnerabilitySeverity!
}

input InputJiraCloudIntegrationParams {
  consumerKey: String!

  """The temporary request token from generateJiraAuthorizationLink"""
  requestToken: String!

  """Verification code to allow access to jira"""
  verificationCode: String!
}

input InputJiraDataCenterConnectionValidationInput {
  """params to allow access to jira data center"""
  jiraDataCenterIntegrationParams: InputJiraDataCenterIntegrationParams!

  """The url to jira, for example https://xyz.atlassian.net"""
  loginUrl: String!
}

input InputJiraDataCenterIntegrationParams {
  """Flag to enable mutual TLS"""
  isMtlsEnabled: Boolean

  """Personal Access Token (PAT) obtained from the jira data center"""
  personalAccessToken: String!

  """Server certificate to establish mutual TLS connection"""
  sslCaCertificate: String
}

input InputJiraDataSyncJobSpec {
  """Optionally specify the environment of the jira integration"""
  environmentIds: [String]
}

input InputJiraDescriptionTableRowEntry {
  key: String!
  value: String!
}

input InputJiraExistingConnectionValidationInput {
  """The id of the integration to validate"""
  environmentId: String!

  """The url to jira, for example https://xyz.atlassian.net"""
  loginUrl: String!
}

input InputJiraFieldConfiguration {
  fieldKey: String!
  overriddenDefaultValueJsonString: String
  overriddenDynamicValue: DynamicField
  traceableEntityType: JiraIssueReferenceType!
}

input InputJiraIntegrationParams {
  """params to allow access to jira cloud"""
  jiraCloudIntegrationParams: InputJiraCloudIntegrationParams

  """params to allow access to jira data center"""
  jiraDataCenterIntegrationParams: InputJiraDataCenterIntegrationParams

  """The type of jira integration (like DATA_SERVICE or CLOUD)"""
  jiraIntegrationType: JiraIntegrationType!
}

input InputJiraIssueDescription {
  additionalInfo: String
  table: [InputJiraDescriptionTableRowEntry]
  templateId: String
}

input InputJiraIssueField {
  key: String!
  value: Unknown!
}

input InputJiraIssueReference {
  id: String!
  type: JiraIssueReferenceType!
}

input InputJiraStatusMappingConfiguration {
  """List of Traceable to Jira Status Mappings"""
  statusMappings: [InputStatusMapping]!
}

input InputJobFilterArgument {
  """Field to filter by"""
  key: JobField!

  """Operator to filter by"""
  operator: FilterOperatorType!

  """Value to filter by"""
  value: Unknown!
}

input InputJobOrderArgument {
  """Direction to order by (ASC or DESC)"""
  direction: OrderDirection!

  """Field to order by"""
  key: JobField!
}

input InputJsonExtractTransformationFunction {
  """Attribute expression"""
  attribute: InputAttributeExpression!

  """Json path"""
  jsonPath: String!
}

input InputJwtConfig {
  """Dynamically extract jwt"""
  dynamicJwt: InputDynamicJwt

  """Explicit Jwt token"""
  jwtToken: String

  """Jwt token extraction type"""
  jwtType: JwtType!

  """Info of where to place token in request"""
  requestTokenInfo: InputRequestTokenInfo!
}

input InputJwtExtractionRuleAction {
  actionType: JwtExtractionRuleActionType!
  addNewAttribute: String
}

"""Capture details from jwt field"""
input InputJwtExtractionRuleCapture {
  """Type of capture from jwt field"""
  captureType: JwtExtractionRuleCaptureType!

  """Regex with single capture group for capturing value"""
  regexCaptureGroup: String
}

"""
A complex predicate representing one or more children combined with a logical operator
"""
input InputJwtExtractionRuleCompositePredicate {
  """Child predicates"""
  children: [InputJwtExtractionRulePredicate]!

  """Operator to used for combining child predicates"""
  operator: LogicalOperator!
}

"""Data to use to create a jwt extraction rule"""
input InputJwtExtractionRuleCreateInput {
  """Extraction instructions from jwt"""
  instructions: [InputJwtExtractionRuleProcessingInstruction]!

  """Locations to search for jwt in span"""
  locations: [InputJwtExtractionRuleLocation]!

  """Rule Name"""
  name: String!

  """Predicate used to match against a request"""
  predicate: InputJwtExtractionRulePredicate

  """
  Scope for which the rule applies. If scope is unset, a rule is always applicable
  """
  scope: InputJwtExtractionRuleScope
}

"""Data to use to delete a jwt extraction rule"""
input InputJwtExtractionRuleDeleteInput {
  """Rule ID to delete"""
  id: String!
}

input InputJwtExtractionRuleEnvironmentScope {
  """A list of environment names where the rule is applicable"""
  environmentNames: [String]!
}

"""
Specifies which Jwt Extraction Rules to use. Filter fields may be omitted, but
any fields specified must be satisfied by each rule.
"""
input InputJwtExtractionRuleFilter {
  """Rules must match the specified scope"""
  scope: InputJwtExtractionRuleScope
}

input InputJwtExtractionRuleLocation {
  """Location in span from which we try to extract jwt"""
  locationType: JwtExtractionRuleLocationType!

  """Path predicate representing a match against a jwt extraction rule"""
  pathPredicate: InputJwtExtractionRulePathPredicate

  """Regex with single capture group which extracts jwt from a value"""
  regexCaptureGroup: String

  """String predicate representing a match against a jwt extraction rule"""
  stringPredicate: InputJwtExtractionRuleStringPredicate
}

input InputJwtExtractionRulePathPredicate {
  predicateType: JwtExtractionRulePathPredicateType!
  stringPredicate: InputJwtExtractionRuleStringPredicate
}

"""Predicate used to extract jwt on a request"""
input InputJwtExtractionRulePredicate {
  """Composite predicate representing a complex condition."""
  compositePredicate: InputJwtExtractionRuleCompositePredicate

  """
  The type of predicate populated. Only one predicate field should be assigned corresponding to this type
  """
  predicateType: JwtExtractionRulePredicateType!

  """String predicate representing a match against a jwt extraction rule"""
  stringPredicate: InputJwtExtractionRuleStringPredicate
}

input InputJwtExtractionRuleProcessingInstruction {
  """Action to be performed after jwt extraction"""
  action: InputJwtExtractionRuleAction!

  """Parameters for extracting value from jwt"""
  valueExtraction: InputJwtExtractionRuleValueExtraction!
}

"""Scope for which an Jwt Extraction Rule applies"""
input InputJwtExtractionRuleScope {
  """Scope of the rule"""
  environmentScope: InputJwtExtractionRuleEnvironmentScope!
}

"""Source details inside jwt where we capture from"""
input InputJwtExtractionRuleSource {
  """Header key in jwt to extract from"""
  headerKey: String

  """Payload claim in jwt to extract from"""
  payloadClaimName: String

  """Location inside jwt where we capture from"""
  sourceType: JwtExtractionRuleSourceType!
}

"""A predicate that compares against a string value"""
input InputJwtExtractionRuleStringPredicate {
  """Operator to use for comparison"""
  operator: JwtExtractionRuleRelationalOperator!

  """Value to compare against"""
  value: String!
}

"""Data to use to update a jwt extraction rule"""
input InputJwtExtractionRuleUpdateInput {
  """Rule ID"""
  id: String!

  """Activate or deactivate the rule"""
  default: Boolean

  """Extraction instructions from jwt"""
  instructions: [InputJwtExtractionRuleProcessingInstruction]!

  """Locations to search for jwt in span"""
  locations: [InputJwtExtractionRuleLocation]!

  """Rule Name"""
  name: String!

  """Predicate used to match against a request"""
  predicate: InputJwtExtractionRulePredicate

  """
  Scope for which the rule applies. If scope is unset, a rule is always applicable
  """
  scope: InputJwtExtractionRuleScope
}

input InputJwtExtractionRuleValueExtraction {
  """Source details inside jwt where we capture from"""
  capture: InputJwtExtractionRuleCapture!

  """Capture details from jwt field"""
  source: InputJwtExtractionRuleSource!
}

input InputJwtUserAttributionData {
  authentication: InputAuthentication
  location: InputHeaderLocation!
  roleClaim: String
  roleLocation: InputDataLocation
  userIdClaim: String!
  userIdLocation: InputDataLocation
}

input InputKeyValueRetentionRuleData {
  """Expiration for the rule"""
  expiration: DateTime

  """
  Provide a predicate to specify which data to act on. If no predicate is set, this rule will apply to all data
  """
  predicate: InputKeyValueRetentionRulePredicate

  """Define the type of retention action for the rule"""
  retentionAction: KeyValueRetentionRuleRetentionAction!

  """Describes the scope for which the rule applies. Unscoped if unset."""
  scope: InputKeyValueRetentionRuleScope
}

input InputKeyValueRetentionRulePredicate {
  """Describes a key to match"""
  targetKeyPredicate: InputKeyValueRetentionRuleStringPredicate
}

input InputKeyValueRetentionRuleScope {
  """A list of environment IDs for which this rule applies"""
  environmentIds: [String]
}

input InputKeyValueRetentionRuleStringPredicate {
  """
  If any value in conjunction with the operator matches, return true. Exactly one value or anyOfValues must be set.
  """
  anyOfValues: [String]

  """Operator for key match rule"""
  operator: SpanIngestionRuleKeyMatchOperator!

  """
  Value to match for key match rule. Exactly one value or anyOfValues must be set.
  """
  value: String
}

input InputLabelApplicationAction {
  """Definition to generate dynamic labels"""
  dynamicLabel: InputDynamicLabel
  dynamicLabelKey: String
  entityTypes: [String]!
  operation: LabelApplicationActionOperator!
  staticLabels: InputLabelApplicationStaticLabels
  type: LabelApplicationActionType!
}

input InputLabelApplicationCondition {
  leafCondition: InputLabelApplicationLeafCondition!
}

input InputLabelApplicationLeafCondition {
  keyCondition: InputLabelApplicationStringCondition!
  valueCondition: InputLabelApplicationValueCondition!
}

input InputLabelApplicationRule {
  id: String!
  labelApplicationRuleData: InputLabelApplicationRuleData!
}

input InputLabelApplicationRuleData {
  action: InputLabelApplicationAction!
  conditionList: [InputLabelApplicationCondition]!
  description: String
  enabled: Boolean!
  name: String!
}

input InputLabelApplicationStaticLabels {
  ids: [String]!
}

input InputLabelApplicationStringCondition {
  operator: StringConditionOperator!
  stringConditionValueType: StringConditionValueType
  value: String
  values: [String]
}

input InputLabelApplicationUnaryCondition {
  operator: UnaryConditionOperator!
}

input InputLabelApplicationValueCondition {
  stringCondition: InputLabelApplicationStringCondition
  unaryCondition: InputLabelApplicationUnaryCondition
  valueConditionType: ValueConditionType!
}

"""Event type condition for Label Config"""
input InputLabelConfigChangeCondition {
  """Represents operation on Label Config i.e Create/Update/Delete """
  labelConfigChangeTypes: [LabelConfigChangeType]!

  """Represents type of Label Config """
  labelConfigTypes: [LabelConfigType]!
}

input InputLandSpeedViolationConfig {
  """List of IpTypes (AND) to belong to for an ip to be considered"""
  ipTypes: [AnomalyConfigIpType]

  """Minimum threshold for Abuse Velocity for ips to be considered"""
  minIpAbuseVelocity: AnomalyConfigAbuseVelocity

  """Minimum threshold for Ip reputation score for ips to be considered"""
  minIpReputationScore: Int

  """Minimum threshold for external ip addresses for generating events"""
  uniqueExternalIpAddressesMinCount: Int

  """Minimum threshold for unique user cities for generating events"""
  uniqueUserCitiesMinCount: Int
}

"""Last seen between time range argument"""
input InputLastSeenTimeRange {
  endTime: DateTime!
  startTime: DateTime!
}

input InputLevelThresholdConfig {
  gibberishThreshold: Int!
  highCardinalityThreshold: Int!
  idsThreshold: Int!
  level: Int!
  lowCardinalityThreshold: Int!
  mediumCardinalityThreshold: Int!
}

input InputLiveTrafficIssueConfig {
  enabled: Boolean
  scopeOfDetection: InputPolicyScope

  """
  Parameters that control how issue detection is performed for live traffic source.
  """
  issueDetectionParameters: [InputIssueDetectionParameter]!
}

input InputLocalProcessingRuleCreation {
  hostHeader: String
  protectionMode: ProtectionMode!
  urlPattern: String!
}

input InputLocalProcessingRuleDeletion {
  id: String!
}

input InputLocalProcessingRuleUpdate {
  hostHeader: String
  id: String!
  protectionMode: ProtectionMode!
  urlPattern: String!
}

input InputLocalTrainingConfig {
  keyValuePairs: [InputTrainingConfigKeyValuePair]
  name: LocalTrainingConfigName!
}

"""
Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
"""
input InputMaliciousSourcesRule {
  """Rule ID"""
  id: String!

  """Malicious Sources rule information"""
  info: InputMaliciousSourcesRuleInfo!

  """Malicious Sources rule scope"""
  scope: InputMaliciousSourcesRuleScope

  """Malicious Sources rule status"""
  status: InputMaliciousSourcesRuleStatus!
}

"""Actions associated with the rule"""
input InputMaliciousSourcesRuleAction {
  """List of malicious sources rule effect with modification"""
  effects: [InputMaliciousSourcesRuleEffectWithModification]

  """Severity of events generated by the rule"""
  eventSeverity: MaliciousSourcesRuleEventSeverity

  """Expiration details of the rule"""
  expirationDetails: InputMaliciousSourcesRuleExpirationDetails

  """Rule Action"""
  ruleActionType: MaliciousSourcesRuleActionType!
}

"""Malicious sources rule agent effect"""
input InputMaliciousSourcesRuleAgentEffect {
  """Malicious sources rule agent modification"""
  agentModifications: [InputMaliciousSourcesRuleAgentModification]!
}

"""Malicious sources rule agent modification"""
input InputMaliciousSourcesRuleAgentModification {
  """Malicious sources rule agent modification type"""
  agentModificationType: MaliciousSourcesRuleAgentModificationType!

  """Malicious sources rule header injection"""
  headerInjection: InputMaliciousSourcesRuleHeaderInjection!
}

"""Condition for the malicious sources rule to be applied"""
input InputMaliciousSourcesRuleCondition {
  """Condition Type for a rule"""
  conditionType: MaliciousSourcesRuleConditionType!

  """Email domain conditions for the rule to be applied"""
  emailDomainCondition: InputMaliciousSourcesRuleEmailDomainCondition

  """IP address conditions for the rule to be applied"""
  ipAddressCondition: InputMaliciousSourcesRuleIpAddressCondition

  """IP location type conditions for the rule to be applied"""
  ipLocationTypeCondition: InputMaliciousSourcesRuleIpLocationTypeCondition

  """IP reputation conditions for the rule to be applied"""
  ipReputationCondition: InputMaliciousSourcesRuleIpReputationCondition

  """Region conditions for the rule to be applied"""
  regionCondition: InputMaliciousSourcesRuleRegionCondition
}

"""Input to create malicious source rule"""
input InputMaliciousSourcesRuleCreate {
  """Malicious Sources rule information"""
  ruleInfo: InputMaliciousSourcesRuleInfo!

  """Malicious Sources rule scope"""
  ruleScope: InputMaliciousSourcesRuleScope
}

"""Input to delete malicious source rule"""
input InputMaliciousSourcesRuleDelete {
  """Rule ID to be deleted"""
  id: String!
}

"""Malicious sources rule effect with modification"""
input InputMaliciousSourcesRuleEffectWithModification {
  """Effects enforced for agent while inline processing of requests"""
  agentEffect: InputMaliciousSourcesRuleAgentEffect!

  """Malicious sources rule effect modification type"""
  ruleEffectType: MaliciousSourcesRuleEffectModificationType!
}

"""Email domain conditions for the rule to be applied"""
input InputMaliciousSourcesRuleEmailDomainCondition {
  """boolean denoting whether the rule should apply to data leaked email"""
  dataLeakedEmail: Boolean

  """
  boolean denoting whether the rule should apply to disposable email domains
  """
  disposableEmailDomain: Boolean

  """list of email domain where rule should apply"""
  emailDomains: [String]

  """email fraud score where rule should apply"""
  emailFraudScore: InputMaliciousSourcesRuleEmailFraudScore

  """list of email regexes where rule should apply"""
  emailRegexes: [String]
}

"""email fraud score where rule should apply"""
input InputMaliciousSourcesRuleEmailFraudScore {
  """Email Fraud Score type for a rule"""
  emailFraudScoreType: MaliciousSourcesRuleEmailFraudScoreType!

  """Minimum Email Fraud Score"""
  minEmailFraudScore: Int

  """Minimum Email Fraud Score Level"""
  minEmailFraudScoreLevel: MaliciousSourcesRuleEmailFraudScoreLevel
}

"""Environment Scope on which the rule will apply"""
input InputMaliciousSourcesRuleEnvironmentScope {
  """List of environments on which the rule should apply"""
  environmentIds: [String]!
}

"""Expiration details of the rule"""
input InputMaliciousSourcesRuleExpirationDetails {
  """Requested expiration duration for the rule"""
  expirationDuration: Duration!

  """Requested expiration timestamp for the rule"""
  expirationTimestamp: DateTime
}

"""Actions associated with the rule"""
input InputMaliciousSourcesRuleHeaderInjection {
  """Header category"""
  headerCategory: MaliciousSourcesRuleHeaderCategory!

  """Header key"""
  key: String!

  """Header value"""
  value: String!
}

"""Malicious Sources rule information"""
input InputMaliciousSourcesRuleInfo {
  """Actions associated with the rule"""
  action: InputMaliciousSourcesRuleAction!

  """Condition for the malicious sources rule to be applied"""
  conditions: [InputMaliciousSourcesRuleCondition]!

  """Rule description"""
  description: String

  """Rule name"""
  name: String!
}

"""IP address conditions for the rule to be applied"""
input InputMaliciousSourcesRuleIpAddressCondition {
  """List of IP ranges following CIDR syntax"""
  cidrIpRanges: [String]

  """List of IP addresses"""
  ipAddresses: [String]
}

"""IP location type conditions for the rule to be applied"""
input InputMaliciousSourcesRuleIpLocationTypeCondition {
  """IP location types where rule should apply"""
  ipLocationTypes: [MaliciousSourcesRuleIpLocationType]!
}

"""IP reputation conditions for the rule to be applied"""
input InputMaliciousSourcesRuleIpReputationCondition {
  """IP reputation type for a rule"""
  ipReputationConditionType: MaliciousSourcesRuleIpReputationConditionType!

  """Minimum IP Reputation Score"""
  minIpReputationScore: Int

  """Minimum IP Reputation Severity Level"""
  minIpReputationSeverity: MaliciousSourcesRuleIpReputationSeverity
}

"""Region on which rule should apply"""
input InputMaliciousSourcesRuleRegion {
  """Country ISO code """
  countryIsoCode: String

  """Region Type for a rule"""
  regionType: MaliciousSourcesRuleRegionType!
}

"""Region conditions for the rule to be applied"""
input InputMaliciousSourcesRuleRegionCondition {
  """Regions on which rule should apply"""
  regions: [InputMaliciousSourcesRuleRegion]!
}

"""Malicious Sources rule scope"""
input InputMaliciousSourcesRuleScope {
  """Environment Scope on which the rule will apply"""
  environmentScope: InputMaliciousSourcesRuleEnvironmentScope
}

"""Filter to fetch malicious source rule"""
input InputMaliciousSourcesRulesFilter {
  """Rule Scope"""
  ruleScope: InputMaliciousSourcesRuleScope!
}

"""Malicious Sources rule status"""
input InputMaliciousSourcesRuleStatus {
  """Disables rule"""
  disabled: Boolean!

  """
  Sets rule as internal, visible only to traceable users. Consumed only if disabled is set to true
  """
  internal: Boolean
}

"""Input to update malicious source rule"""
input InputMaliciousSourcesRuleUpdate {
  """Updated Malicious Sources rule"""
  rule: InputMaliciousSourcesRule!
}

input InputManageProjectIssueConfigurationsInput {
  createProjectIssueConfigurationDetails: [InputCreateProjectIssueConfigurationDetail]
  deleteProjectIssueConfigurationIds: [String]
  integrationId: String!
  updateProjectIssueConfigurationDetails: [InputUpdateProjectIssueConfigurationDetail]
}

input InputMaxVulnerabilityDuration {
  """vulnerability open duration"""
  vulnerabilityOpenDuration: Duration!
}

input InputMetadataTrainingConfig {
  keyValuePairs: [InputTrainingConfigKeyValuePair]
  name: MetadataTrainingConfigName!
}

input InputMinOccurrenceConfig {
  minPercent: Int
  minTotalOccurrences: Int
}

input InputModelScope {
  apiScope: InputApiScope
  scopeType: ModelScopeType!
  serviceScope: InputServiceScope
}

"""Modsec Evaluation Config"""
input InputModsecEvaluationEngineConfig {
  """Coraza Version to be used in the Detector"""
  corazaEngineVersion: CorazaEngineVersion
}

input InputModsecFilterConfig {
  modsecStrategies: [ModsecStrategy]!
}

"""Global config related to modsec"""
input InputModsecGlobalConfig {
  """
  Boolean denoting whether to make aggressive rules available for blocking or not
  """
  blockingAvailableForAggressiveRules: Boolean

  """Modsec default config type"""
  defaultConfigsType: ModsecDefaultConfigsType

  """Boolean denoting status for modsec global config"""
  disabled: Boolean

  """Boolean denoting if detection is enabled for exit spans or not"""
  enabledForExitSpans: Boolean

  """Minimum anomaly confidence level"""
  minConfidenceLevel: AnomalyConfidenceLevel

  """Modsec Evaluation Engine Config"""
  modsecEvaluationEngineConfig: InputModsecEvaluationEngineConfig

  """List of scopes whose config is overriding this scope config"""
  overriddenParentScopes: [InputAnomalyScope]

  """List of scopes whose config is getting overridden by this scope config"""
  overridingChildrenScopes: [InputAnomalyScope]

  """Boolean denoting whether to use test modsec rules or not"""
  useTestRules: Boolean
}

input InputModsecurityAnomalyDetectionConfig {
  keyValuePairs: [InputAnomalyDetectionConfigKeyValuePair]
  name: ModsecurityAnomalyDetectionConfigName!
  ruleId: String
}

"""Monthly schedule"""
input InputMonthDays {
  """List of scheduled days numbers of month, from 1-31"""
  scheduledDayNumbers: [Int]
}

"""Monthly schedule"""
input InputMonthlySchedule {
  """Scheduled days numbers of month"""
  scheduledMonthDays: InputMonthDays

  """Scheduled time of day"""
  scheduledTime: OffsetTime
}

input InputMultiValuedAttributeOperation {
  key: String!
  type: MultiValuedAttributeOperationType!
  values: [Unknown]!
}

input InputMultiValuedStringParamRule {
  keyRegex: String!
  valueDelimiter: String!
  valueRegex: String
}

input InputMutualTls {
  """Auth endpoint"""
  authEndpoint: String

  """Cert authority"""
  certAuthorityCert: String

  """Client certificate"""
  clientCert: String!

  """Client key"""
  clientKey: String!

  """Client key passphrase"""
  clientKeyPassphrase: String
}

"""New vulnerability creation object"""
input InputnewVulnerability {
  """Affected entity info"""
  affectedEntity: InputAffectedEntity!

  """Environment id"""
  environmentId: String!

  """New vulnerability metadata"""
  newVulnerabilityMetadata: InputNewVulnerabilityMetadata

  """plugin name"""
  subCategory: String!

  """Vulnerability source"""
  vulnerabilitySource: InputVulnerabilitySource!
}

"""New vulnerability metadata creation object"""
input InputNewVulnerabilityMetadata {
  """Vulnerability category"""
  category: String!

  """Vulnerability cvss score"""
  cvssScore: Float!

  """Cvss vector string"""
  cvssVectorString: String

  """Vulnerability description"""
  description: String!

  """Estimated bounty value"""
  estimatedBountyValue: Long

  """Estimated fix duration"""
  estimatedFixTime: Duration

  """Vulnerability impact"""
  impact: String

  """Vulnerability mitigation"""
  mitigation: String!

  """Vulnerability reference"""
  reference: String

  """Vulnerability severity"""
  vulnerabilitySeverity: VulnerabilitySeverity!

  """tags"""
  tags: [InputVulnerabilityMetadataTagsKeyValue]

  """Vulnerability title"""
  title: String!
}

input InputNotificationChannelConfig {
  customWebhookChannelConfigs: [InputCustomWebhookChannelConfig]
  emailChannelConfigs: [InputEmailChannelConfig]
  s3BucketChannelConfigs: [InputS3BucketChannelConfig]
  slackWebhookChannelConfigs: [InputSlackWebhookChannelConfig]

  """List of splunk integration configs for notification channel"""
  splunkIntegrationChannelConfigs: [InputSplunkIntegrationChannelConfig]

  """List of syslog integration configs for notification channel"""
  syslogIntegrationChannelConfigs: [InputSyslogIntegrationChannelConfig]
  webhookChannelConfigs: [InputWebhookChannelConfig]
}

input InputNotificationChannelCreation {
  channelName: String!
  notificationChannelConfig: InputNotificationChannelConfig!
}

input InputNotificationChannelDeletion {
  channelId: String!
}

input InputNotificationChannelUpdate {
  channelId: String!
  channelName: String!
  notificationChannelConfig: InputNotificationChannelConfig!
}

"""Event type for notification configs"""
input InputNotificationConfigChangeCondition {
  """Represents operation on Notification i.e Create/Update/Delete """
  notificationConfigChangeTypes: [NotificationConfigChangeType]!

  """Represents type of notification"""
  notificationTypes: [NotificationConfigType]!
}

input InputNotificationRuleCreation {
  category: Category!
  channelId: String
  description: String
  disabled: Boolean
  environment: String

  """Multiple environments that the rule applies to"""
  environmentScope: InputNotificationRuleEnvironmentScope
  eventConditions: InputEventConditions!

  """For notifications relying on an integration"""
  integrationTarget: InputIntegrationNotificationTarget
  rateLimitIntervalDuration: Duration
  ruleName: String!
}

input InputNotificationRuleDeletion {
  ruleId: String!
}

input InputNotificationRuleEnvironmentScope {
  """Environments that the scope applies to"""
  environments: [String]!
}

input InputNotificationRuleUpdate {
  category: Category!
  channelId: String
  description: String
  disabled: Boolean
  environment: String

  """Multiple environments that the rule applies to"""
  environmentScope: InputNotificationRuleEnvironmentScope
  eventConditions: InputEventConditions!

  """For notifications relying on an integration"""
  integrationTarget: InputIntegrationNotificationTarget
  rateLimitIntervalDuration: Duration
  ruleId: String!
  ruleName: String!
}

input InputOauth {
  accessTokenUrl: String
  authEndpoint: String
  oauthAuthorizationCodeFlow: InputOauthAuthorizationCodeFlow
  oauthClientCredentialsFlow: InputOauthClientCredentialsFlow
  clientId: String!
  oauthFlowType: OauthFlowType!
  oauthImplicitFlow: InputOauthImplicitFlow
  oauthPasswordFlow: InputOauthPasswordFlow
  oauthPkceFlow: InputOauthPkceFlow

  """Dynamically extract jwt"""
  requestTokenInfo: InputRequestTokenInfo

  """scope of the grant"""
  scopes: [String]

  """Dynamically extract jwt"""
  token: String
}

input InputOauthAuthorizationCodeFlow {
  clientAuthenticationType: OauthClientAuthenticationType!
  clientSecret: String!
  state: String!
}

input InputOauthClientCredentialsFlow {
  clientSecret: String!
}

input InputOauthImplicitFlow {
  state: String!
}

input InputOauthPasswordFlow {
  clientSecret: String!
  oauthPassword: String!
  oauthUsername: String!
}

input InputOauthPkceFlow {
  clientSecret: String!
  codeVerifier: String!
  state: String!
}

"""Api name filter"""
input InputOpenApiSpecDependencyGraphApiNameFilter {
  """Regex filter"""
  regexFilter: InputOpenApiSpecDependencyGraphRegexFilter!
}

"""
Regex filter. At least one of include and exclude regexes is expected to be set always
"""
input InputOpenApiSpecDependencyGraphRegexFilter {
  """Exclude regex"""
  excludeRegex: String

  """Include regex"""
  includeRegex: String
}

input InputOrder {
  direction: OrderDirection
  key: String
  keyExpression: InputAttributeExpression
}

input InputParameter {
  fullyQualifiedParamName: String
  id: String
  type: InsightsParameterType!
}

input InputParameterExtractionConfig {
  """
  Extract the parameter labelled with one of the specified data type ids as per
  the data classification rules. Priority will be given to the data type id
  appearing first in the list.
  """
  dataTypeIds: [String]!

  """
  The logic to extract the parameter. Example: "get_json_object(request_body,
  '$.email')". This doesn't have any checks - whether the syntax is correct, the
  function is supported, etc.
  """
  extractionLogic: String!
}

input InputParameterFilter {
  key: ParameterField!
  operator: FilterOperatorType!
  value: Unknown!
}

input InputParameterGroupByArgument {
  key: ParameterGroupByField!
}

input InputParameterOrder {
  direction: OrderDirection
  key: ParameterField!
}

input InputParamSusceptibilityConfig {
  prefixesNotAllowedInRequestParamKey: [String]
  regexesNotAllowedInRequestParamKey: [String]
  requestParamKeys: [String]
  requestParamValueRegex: String
  suffixesNotAllowedInRequestParamKey: [String]
}

input InputParamTypeOverride {
  paramName: String!
  paramTypeActionName: AttributeOverrideParamTypeAction!
  paramValueType: AttributeOverrideParamValueType!
}

input InputParamTypeOverrideIdentifier {
  paramName: String!
}

input InputParamValueTypeModsecExclude {
  excludedModsecRuleIds: [String]!
  paramValueType: ParamValueType!
}

input InputParsingTarget {
  regexCaptureGroup: String!
  type: ParsingTargetType!
}

"""Pause entity learn action configuration"""
input InputPauseEntityLearnActionConfig {
  """Disable all entities for learning"""
  disabledAll: Boolean

  """List of entities to disable for learning"""
  disabledEntitiesForLearning: [String]

  """Action for pause entity learning"""
  pauseEntityLearnAction: PauseEntityLearnAction!
}

input InputPluginConfig {
  key: String
  value: String
}

input InputPolicy {
  """Id of the Policy"""
  id: String!

  """List of Actions To be performed when conditions matches"""
  actions: [InputPolicyAction]!

  """flag to check if the policy is disabled or not"""
  disabled: Boolean!

  """Filter conditions on the source"""
  filter: InputPolicyFilter!

  """Name for the Policy"""
  name: String!

  """List of labels available for the policy"""
  policyLabels: [InputPolicyLabel]

  """referenced field pool for the policy"""
  policyReferencedFieldPool: InputPolicyReferencedFieldPool

  """
  This field represents the scope for which the policy applies, such as 'environment' or another relevant type
  """
  policyScope: InputPolicyScope

  """The event source to apply the policy"""
  source: InputPolicySource!
}

input InputPolicyAction {
  """Compliance violation action to create violation"""
  complianceViolation: InputPolicyActionComplianceViolation

  """
  Notification configs to perform notification actions (destinations and format)
  """
  notificationConfig: InputPolicyActionNotificationConfig

  """transformation to be performed on the results"""
  transformation: InputPolicyActionInputTransformation

  """Type of the action to be performed"""
  type: PolicyActionType!
}

input InputPolicyActionComplianceViolation {
  """Description of the violation"""
  description: String!

  """Violation label"""
  label: String!

  """Name of the violation"""
  name: String!

  """Severity of the violation"""
  severity: ViolationSeverity!
}

input InputPolicyActionInputTransformation {
  """
  Join the source with a target and perform the actions per joined result
  """
  policyJoin: InputPolicyJoin

  """Type of the transformation to be performed"""
  type: PolicyActionInputTransformationType!
}

input InputPolicyActionNotificationConfig {
  """List of destinations to be notified"""
  destinations: [InputPolicyNotificationDestination]!
}

input InputPolicyAggregateByTime {
  """The time duration for which the aggregation is to be applied"""
  duration: Duration!

  """
  The aggregation will be applied per unique combination of the expressions
  specified here. If this is an empty list, the aggregation will be applied globally.
  """
  expressions: [InputPolicyExpression]!
}

input InputPolicyAggregationFunction {
  """Perform aggregation by time"""
  aggregateByFixedTime: InputPolicyAggregateByTime

  """Operator of the aggregation function"""
  operation: InputPolicyAggregationOperation!

  """Type of aggregation to be performed"""
  type: PolicyAggregationFunctionType!

  """The condition to be met for this aggregation operation to be applied"""
  updateCriteria: InputPolicyFilter!
}

input InputPolicyAggregationOperation {
  """Aggregation operation type"""
  type: PolicyAggregationOperationType!
}

input InputPolicyArrayDatatype {
  """Containing primitive datatype"""
  primitive: InputPolicyPrimitiveDatatype

  """Containing datatype"""
  valueType: PolicyArrayValueType!
}

input InputPolicyArrayFilter {
  """The array operator to be applied for the filter"""
  arrayOperator: PolicyArrayOperator!

  """The join containing the target fields in the LHS of relational filters"""
  policyJoinFilter: InputPolicyJoin

  """The relational filter with an array LHS"""
  policyRelationalFilter: InputPolicyRelationalFilter

  """The type in the array filter"""
  type: PolicyArrayFilterType!
}

input InputPolicyConfiguration {
  customSelection: InputCustomSelection!
  hookIds: [String]
  policySelectionSource: PolicySelectionSource!
  referenceScanProfileName: String
  scanTimeoutMinutes: Long
  targetUrlPrefix: String
  trafficConfiguration: InputTrafficConfiguration!
  trafficEnvironment: String!
}

input InputPolicyDatatype {
  """Array datatype definition """
  array: InputPolicyArrayDatatype

  """Map datatype definition"""
  map: InputPolicyMapDatatype

  """Primitive datatype definition"""
  primitive: InputPolicyPrimitiveDatatype

  """Datatype"""
  type: PolicyDatatypeType!
}

input InputPolicyExpression {
  """Policy aggregation function expression"""
  aggregationFunction: InputPolicyAggregationFunction

  """Policy constant expression"""
  constant: Unknown

  """Policy field expression"""
  field: InputPolicyField

  """Policy field reference expression"""
  fieldReference: InputPolicyFieldReference

  """Policy function expression"""
  function: InputPolicyFunction

  """Type of expression"""
  type: PolicyExpressionType!
}

input InputPolicyField {
  """
  This key should be present in the schema for which this filter is intended
  (Note: For joins, prefix the key with the target alias separated by a dot)
  """
  key: String!

  """LOCATION of the key"""
  location: PolicyFieldLocation!
}

input InputPolicyFieldReference {
  """The location for the field."""
  location: PolicyFieldLocation!

  """
  The unique identifier for the policy field, used to reference its corresponding value in policy conditions.
  """
  referenceKey: String!
}

input InputPolicyFilter {
  """Array filter"""
  policyArrayFilter: InputPolicyArrayFilter

  """Logical filter"""
  policyLogicalFilter: InputPolicyLogicalFilter

  """Relational filter"""
  policyRelationalFilter: InputPolicyRelationalFilter

  """Unary filter"""
  policyUnaryFilter: InputPolicyUnaryFilter

  """Possible types of filter"""
  type: PolicyFilterType!
}

input InputPolicyFunction {
  """List of expressions on which the function will be applied"""
  expressions: [InputPolicyExpression]!

  """Name for the function to be applied on"""
  name: PolicyFunctionName!
}

input InputPolicyJoin {
  """Filter conditions for the join target"""
  filter: InputPolicyFilter!

  """Location of the source event"""
  sourceLocation: PolicyFieldLocation!

  """Target to join the source on"""
  target: PolicyJoinTarget!

  """Alias for the target which will be referred in the join filter"""
  targetAlias: String!
}

input InputPolicyLabel {
  """The datatype of the value assigned to the policy label"""
  datatype: InputPolicyDatatype!

  """
  A brief explanation or summary of the purpose or meaning of this policy label.
  """
  description: String!

  """The display name for this policy label."""
  displayName: String!

  """
  The unique identifier for the label, used to reference its corresponding value in policy conditions.
  """
  key: String!

  """
  The value associated with the policy label, which is used in policy conditions.
  """
  value: Unknown
}

input InputPolicyLabelUpdate {
  """
  The unique identifier for the label, used to reference its corresponding value in policy conditions.
  """
  key: String!

  """
  The new value associated with the policy label, which is used in policy conditions.
  """
  value: Unknown!
}

input InputPolicyLabelValue {
  """
  The unique identifier for the label, used to reference its corresponding value in policy conditions.
  """
  key: String!
}

input InputPolicyLogicalFilter {
  """Logical operator"""
  logicalOperator: LogicalOperator!

  """Filters"""
  policyFilters: [InputPolicyFilter]!
}

input InputPolicyMapDatatype {
  """Key type in map"""
  keyType: PolicyMapKeyType!

  """Primitive key type"""
  primitiveKey: InputPolicyPrimitiveDatatype

  """Primitive value type"""
  primitiveValue: InputPolicyPrimitiveDatatype

  """Value type in map"""
  valueType: PolicyMapValueType!
}

input InputPolicyNotificationDestination {
  """channel id"""
  channelId: String

  """Format in which the notification should be sent"""
  format: InputPolicyNotificationFormat!

  """Destination type"""
  type: PolicyNotificationDestinationType!
}

input InputPolicyNotificationFormat {
  """
  The custom format provided by user. For example: owner is changed from ${new.owner}
  """
  customFormat: String

  """Type of the format can be custom or default"""
  type: PolicyNotificationFormatType!
}

input InputPolicyPrimitiveDatatype {
  """Enum primitive"""
  enumeration: InputPolicyPrimitiveEnumDatatype

  """Timestamp primitive"""
  timestamp: InputPolicyPrimitiveTimestampDatatype

  """Type for the primitive datatype"""
  type: PolicyPrimitiveValueType!
}

input InputPolicyPrimitiveEnumDatatype {
  """All possible values for the enum"""
  possibleValues: [InputPolicyPrimitiveEnumPossibleValue]!
}

input InputPolicyPrimitiveEnumPossibleValue {
  """Display name enum"""
  displayName: String!

  """The enum name"""
  enumName: String!
}

input InputPolicyPrimitiveTimestampDatatype {
  """Format of the timestamp"""
  format: PolicyPrimitiveTimestampFormat!
}

input InputPolicyReferencedField {
  """Group to which this attribute belongs"""
  attributeGroup: String!

  """Attribute key which is referred"""
  attributeKey: String!

  """Description of the attribute"""
  description: String!

  """Display name for the attribute"""
  displayName: String!

  """Reference key for the field"""
  referenceKey: String!
}

input InputPolicyReferencedFieldPool {
  """List of referenced fields available for the policy"""
  referencedFields: [InputPolicyReferencedField]!
}

input InputPolicyReferencedFieldUpdate {
  """The key for new attribute, which is used in policy conditions."""
  attributeKey: String!

  """
  The unique identifier for the referenced field, used to reference its corresponding value in policy conditions.
  """
  referenceKey: String!
}

input InputPolicyRelationalFilter {
  """The RHS label value"""
  labelValue: InputPolicyLabelValue

  """The LHS expression"""
  lhsExpression: InputPolicyExpression

  """Type of LHS in the relational filter"""
  lhsType: PolicyRelationalFilterLhsType!

  """Relational Operator"""
  operator: PolicyRelationalOperator!

  """The RHS value"""
  rhsConstant: Unknown

  """The RHS field"""
  rhsField: InputPolicyField

  """Type of RHS in the relational filter"""
  rhsType: PolicyRelationalFilterRhsType!
}

input InputPolicyRequestFilter {
  """Type of action which can be associated with a policy"""
  policyActionTypes: [PolicyActionType]

  """The IDs of the policies to be fetched"""
  policyIds: [String]

  """
  The scope can represent different entities such as 'environment'. Specify if
  you want to fetch only those policies that are applicable for the given scope.
  If this field is unspecified, all the policies matching the other filter
  criteria will be fetched.
  """
  policyScope: InputPolicyScope

  """
  List of sources defining the top-level events for the policy. When multiple
  sources are specified, all the policies matching any of the sources will be fetched
  """
  sources: [InputPolicySource]
}

input InputPolicyScope {
  """
  Environment IDs to which this policy should apply. If this is empty then the policy applies to all the environments
  """
  environmentIds: [String]

  """Generic scope filter for detection"""
  genericFilter: InputGenericFilter

  """
  Type of scope for the policy. This field represents the category or nature of
  the policy scope, such as 'environment' or another relevant type.
  """
  scopeType: PolicyScopeType!
}

input InputPolicySource {
  """Applicable api event types"""
  apiEventTypes: [PolicySourceApiEventType]

  """Applicable AST scan event types"""
  astScanEventTypes: [PolicySourceAstScanEventType]

  """Applicable span event types"""
  spanEventTypes: [PolicySourceSpanEventType]

  """The source on which the policy conditions are to be checked"""
  type: PolicySourceType!

  """Applicable vulnerability event types"""
  vulnerabilityEventTypes: [PolicySourceVulnerabilityEventType]
}

input InputPolicyUnaryFilter {
  """Type of argument in the unary filter"""
  argumentType: PolicyUnaryFilterArgumentType!

  """The argument expression"""
  argumentExpression: InputPolicyExpression

  """Unary Operator"""
  operator: PolicyUnaryOperator!
}

input InputPolicyUpdate {
  """The unique identifier for the policy to be updated."""
  id: String!

  """The list of updates to be performed on the specified policies"""
  operations: [InputPolicyUpdateOperation]!
}

input InputPolicyUpdateOperation {
  """Set the disabled value for the policy when field = DISABLED"""
  disabled: Boolean

  """The field to be updated"""
  field: PolicyUpdateFieldType!

  """Set the labels value for the policy when field = LABELS"""
  policyLabelUpdate: InputPolicyLabelUpdate

  """
  Set the referenced field value for the policy when field = REFERENCED_FIELD
  """
  policyReferencedFieldUpdate: InputPolicyReferencedFieldUpdate

  """Set the scope value for the policy when field = SCOPE"""
  scope: InputPolicyScope
}

input InputPopTokenSignature {
  externalHeadersToSign: [String]!
  popHeaderKey: String!
  popHeaderPrefix: String!
  popPrivateKey: String!
}

input InputPostmanCollectionDetails {
  """The environment document ID related to the postman collection."""
  environmentDocumentId: String

  """The postman collection ID for which to run the DAST scan."""
  postmanCollectionId: String!
}

input InputPostureEventCondition {
  postureEvents: [PostureEvents]
  riskDeltas: [RiskChange]
}

input InputPotentialGeneratedVulnerabilityTypeInfo {
  id: String!
  name: String
}

input InputPredecessorSuccessorApiConfig {
  predecessorApiIds: [String]!
  successorApiId: String!
}

input InputPredecessorSuccessorApiSequenceConfig {
  predecessorSuccessorApiConfigs: [InputPredecessorSuccessorApiConfig]!
}

"""Pre defined blocking rule condition"""
input InputPreDefinedBlockingCondition {
  """Rule ID of pre defined anomaly rule"""
  anomalyRuleId: String!
}

"""Pre defined detection rule condition"""
input InputPreDefinedDetectionCondition {
  """Rule ID of pre defined anomaly rule"""
  anomalyRuleId: String!
}

input InputProjectionFilterArgument {
  key: ProjectionFilterField!
  operator: AstFilterOperatorType!
  type: ProjectionType!
  value: Unknown!
}

"""Input to create protection span rule"""
input InputProtectionSpanRuleCreate {
  """Says if protection span rule is disabled"""
  disabled: Boolean!

  """Name of the protection span rule"""
  name: String!

  """Filter to match the spans to apply the protection span rule"""
  spanFilter: InputTraceableSpanProcessingRuleFilter!
}

"""Input to delete protection span rule"""
input InputProtectionSpanRuleDelete {
  id: String!
}

"""Input to update protection span rule"""
input InputProtectionSpanRuleUpdate {
  disabled: Boolean!
  id: String!
  name: String!
  spanFilter: InputTraceableSpanProcessingRuleFilter!
}

"""
Queue AST scan request. Only one of scanSuiteId and sourceScanId is expected to be set.
"""
input InputQueueAstScanRequest {
  """
  Ids of the runners preferred to run the scan on. If not provided or empty,any
  of the available runners is used to run the scan
  """
  allowedRunnerIds: [String]

  """Desired name of the scan to be initiated"""
  name: String!

  """
  Scan suite id using which scan will be initiated. Only one of scanSuiteId,
  scanSuiteName and sourceScanId is expected to be set.
  """
  scanSuiteId: String

  """
  Scan suite name using which scan will be initiated. Only one of scanSuiteId,
  scanSuiteName and sourceScanId is expected to be set.
  """
  scanSuiteName: String

  """
  Scan id using which the newly initiated scan will be cloned. Only one of
  scanSuiteId, scanSuiteName and sourceScanId is expected to be set.
  """
  sourceScanId: String
}

input InputQuickScanAttackConfiguration {
  customAttackConfiguration: InputQuickScanCustomAttackConfiguration
  policyConfiguration: InputQuickScanPolicyAttackConfiguration
}

input InputQuickScanCommandDetails {
  environment: String!
  hookConfiguration: InputScanSuiteHookConfiguration
  name: String!
  quickScanConfiguration: InputQuickScanConfiguration!
}

input InputQuickScanCommandRequest {
  quickScanCommandDetails: InputQuickScanCommandDetails!
}

input InputQuickScanConfiguration {
  assetSelections: [InputAssetSelection]!
  attackConfiguration: InputQuickScanAttackConfiguration!
  targetUrl: String
  trafficConfiguration: InputTrafficConfiguration!
  trafficEnvironment: String!
}

input InputQuickScanCustomAttackConfiguration {
  attackSelections: [InputAttackSelection]!
}

input InputQuickScanDetails {
  environment: String!
  hookConfiguration: InputScanSuiteHookConfiguration
  name: String!
  quickScanConfiguration: InputQuickScanConfiguration!
  runnerConfiguration: InputQuickScanRunnerConfiguration
}

input InputQuickScanPolicyAttackConfiguration {
  policyName: String!
}

"""Either one of allowedRunnerIds or allowedRunnerNames should be present"""
input InputQuickScanRunnerConfiguration {
  allowedRunnerIds: [String]
  allowedRunnerNames: [String]
}

"""Input to rank user attribution rules"""
input InputRankUserAttributionRule {
  """User Attribution rule ID"""
  id: String!

  """Preceding User Attribution rule ID"""
  precedingRuleId: String
}

"""Region identifier schema for rate limit region condition"""
input InputRateLimitingRegionIdentifier {
  """Country ISO code for region identifier"""
  countryIsoCode: String!
}

"""
Custom rule to protect endpoints and other services from brute-force attacks
"""
input InputRateLimitingRule {
  """Rate limit rule ID"""
  id: String!

  """Rate limit rule category"""
  category: RateLimitingRuleCategory!

  """List of rate limit rule conditions"""
  conditions: [InputRateLimitingRuleCondition]

  """Rate limit rule description"""
  description: String

  """Rate limit rule enabled status"""
  enabled: Boolean!

  """Rate limit rule custom labels"""
  labels: [InputRateLimitingRuleLabel]

  """Rate limit rule name"""
  name: String!

  """Rate limit rule condition"""
  rateLimitingRuleCondition: InputRateLimitingRuleCondition

  """Rate limit rule scope"""
  ruleConfigScope: InputRuleConfigScope

  """Rate limit rule status"""
  ruleStatus: InputRateLimitingRuleStatus

  """
  List of configs containing thresholds and actions for a rate limit rule
  """
  thresholdActionConfigs: [InputRateLimitingRuleThresholdActionConfig]

  """Transaction action config for DLP rule"""
  transactionActionConfigs: InputRateLimitingTransactionActionConfig
}

"""Action to take if a rate limit rule is applicable"""
input InputRateLimitingRuleAction {
  """Type of action"""
  actionType: RateLimitingRuleActionType!

  """Details regarding alert action"""
  alert: InputRateLimitingRuleAlertAction

  """Details regarding allow action"""
  allow: InputRateLimitingRuleAllowAction

  """Details regarding block action"""
  block: InputRateLimitingRuleBlockAction

  """Details regarding mark for testing action"""
  markForTesting: InputRateLimitingRuleMarkForTestingAction
}

"""Details regarding agent effect applicable on a rate limit rule"""
input InputRateLimitingRuleAgentEffect {
  """
  List of agent modifications to be done as part of rate limiting rule action
  """
  agentModifications: [InputRateLimitingRuleAgentModification]!
}

"""Details regarding agent modification applicable on a rate limit rule"""
input InputRateLimitingRuleAgentModification {
  """Type of agent modification to be performed"""
  agentModificationType: RateLimitingRuleAgentModificationType!

  """Details of header injection action"""
  headerInjection: InputRateLimitingRuleHeaderInjection!
}

"""Details regarding alert action applicable on a rate limit rule"""
input InputRateLimitingRuleAlertAction {
  """Agent effect associated with this action"""
  agentEffect: InputRateLimitingRuleAgentEffect

  """Severity of alert to be generated"""
  eventSeverity: RateLimitingRuleEventSeverity!
}

"""Details regarding allow action applicable on a rate limit rule"""
input InputRateLimitingRuleAllowAction {
  """Duration to allow the malicious actor"""
  duration: Duration
}

"""Details regarding block action applicable on a rate limit rule"""
input InputRateLimitingRuleBlockAction {
  """Duration to block the malicious actor"""
  duration: Duration

  """Severity of blocked event to be generated"""
  eventSeverity: RateLimitingRuleEventSeverity!

  """Use duration in threshold config"""
  useThresholdDuration: Boolean
}

"""Condition applicable for a rate limit rule"""
input InputRateLimitingRuleCondition {
  """RateLimitingRuleCondition type"""
  conditionType: RateLimitingRuleConditionType

  """Rate limit rule leaf condition"""
  leafCondition: InputRateLimitingRuleLeafCondition

  """Rate limit rule logical condition"""
  logicalCondition: InputRateLimitingRuleLogicalCondition
}

"""Details regarding rate limit rule"""
input InputRateLimitingRuleData {
  """Rate limit rule category"""
  category: RateLimitingRuleCategory!

  """List of rate limit rule conditions"""
  conditions: [InputRateLimitingRuleCondition]

  """Rate limit rule description"""
  description: String

  """Rate limit rule enabled status"""
  enabled: Boolean!

  """Rate limit rule custom labels"""
  labels: [InputRateLimitingRuleLabel]

  """Rate limit rule name"""
  name: String!

  """Rate limit rule condition"""
  rateLimitingRuleCondition: InputRateLimitingRuleCondition

  """Rate limit rule scope"""
  ruleConfigScope: InputRuleConfigScope

  """Rate limit rule status"""
  ruleStatus: InputRateLimitingRuleStatus

  """
  List of configs containing thresholds and actions for a rate limit rule
  """
  thresholdActionConfigs: [InputRateLimitingRuleThresholdActionConfig]

  """Transaction action config for a rate limit rule"""
  transactionActionConfigs: InputRateLimitingTransactionActionConfig
}

"""Dataset and datatype condition for a rate limit rule"""
input InputRateLimitingRuleDatatypeCondition {
  """data location type"""
  dataLocation: RateLimitingRuleDataLocation

  """List of data sensitivity levels"""
  dataSensitivityLevels: [RateLimitingRuleDataSensitivityLevel]

  """List of dataset ids applicable"""
  datasetIds: [String]

  """List of datatype ids applicable"""
  datatypeIds: [String]

  """datatype matching"""
  datatypeMatching: InputRateLimitingRuleDatatypeMatching
}

"""Rate limiting datatype matching"""
input InputRateLimitingRuleDatatypeMatching {
  """datatype matching type"""
  datatypeMatchingType: RateLimitingRuleDatatypeMatchingType

  """regex based matching"""
  regexBasedMatching: InputRateLimitingRuleRegexBasedMatching
}

"""Email domain condition for a rate limit rule"""
input InputRateLimitingRuleEmailDomainCondition {
  """List of email domains"""
  emailDomains: [String]

  """List of email regexes"""
  emailRegexes: [String]

  """boolean denoting exclude condition"""
  exclude: Boolean
}

"""Entity scope condition applicable on a rate limit rule"""
input InputRateLimitingRuleEntityScope {
  """List of entity ids applicable"""
  entityIds: [String]!

  """Entity type"""
  entityType: RateLimitingRuleEntityType!
}

"""Details regarding header injection applicable on a rate limit rule"""
input InputRateLimitingRuleHeaderInjection {
  """Category defining where the header needs to be injected"""
  headerCategory: RateLimitingRuleMatchCategory!

  """Header name to be injected"""
  key: String!

  """Header value to be injected"""
  value: String!
}

"""Ip abuse velocity condition applicable on a rate limit rule"""
input InputRateLimitingRuleIpAbuseVelocityCondition {
  """Minimum Ip abuse velocity applicable"""
  minIpAbuseVelocity: RateLimitingRuleIpAbuseVelocity!
}

"""IP address condition applicable on a rate limit rule"""
input InputRateLimitingRuleIpAddressCondition {
  """List of CIDR IP ranges"""
  cidrIpRanges: [String]

  """boolean denoting exclude condition"""
  exclude: Boolean

  """ip address condition type"""
  ipAddressConditionType: RateLimitingRuleIpAddressConditionType

  """List of IP addresses"""
  ipAddresses: [String]

  """List of IP addresses and CIDR IP ranges"""
  rawInputIpData: [String]
}

"""Ip asn condition for a rate limit rule"""
input InputRateLimitingRuleIpAsnCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip asn regexes"""
  ipAsnRegexes: [String]!
}

"""IP connection type condition for a rate limit rule"""
input InputRateLimitingRuleIpConnectionTypeCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip connection types"""
  ipConnectionTypes: [RateLimitingRuleIpConnectionType]!
}

"""IP location type condition applicable on a rate limit rule"""
input InputRateLimitingRuleIpLocationTypeCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP locations types applicable"""
  ipLocationTypes: [RateLimitingRuleIpLocationType]
}

"""Ip organisation condition for a rate limit rule"""
input InputRateLimitingRuleIpOrganisationCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip organisation regexes"""
  ipOrganisationRegexes: [String]!
}

"""IP reputation condition applicable on a rate limit rule"""
input InputRateLimitingRuleIpReputationCondition {
  """Minimum IP reputation severity applicable"""
  minIpReputationSeverity: RateLimitingRuleIpReputationSeverity!
}

"""Key value condition applicable on a rate limit rule"""
input InputRateLimitingRuleKeyValueCondition {
  """Key condition"""
  keyCondition: InputRateLimitingRuleStringCondition

  """Key value condition metadata type"""
  metadataType: RateLimitingRuleKeyValueConditionMetadataType!

  """Value condition"""
  valueCondition: InputRateLimitingRuleStringCondition
}

"""Key-value pair for labels"""
input InputRateLimitingRuleLabel {
  """Key"""
  key: String!

  """Value"""
  value: String!
}

"""Label scope condition applicable on a rate limit rule"""
input InputRateLimitingRuleLabelScope {
  """List of label ids applicable"""
  labelIds: [String]!

  """Label type"""
  labelType: RateLimitingRuleLabelType!
}

"""Leaf condition applicable on a rate limit rule"""
input InputRateLimitingRuleLeafCondition {
  """Leaf condition type"""
  conditionType: RateLimitingRuleLeafConditionType!

  """Dataset and datatype condition applicable on a rate limit rule"""
  datatypeCondition: InputRateLimitingRuleDatatypeCondition

  """Email domain condition applicable on a rate limit rule"""
  emailDomainCondition: InputRateLimitingRuleEmailDomainCondition

  """Ip abuse velocity condition applicable on a rate limit rule"""
  ipAbuseVelocityCondition: InputRateLimitingRuleIpAbuseVelocityCondition

  """IP address condition applicable on a rate limit rule"""
  ipAddressCondition: InputRateLimitingRuleIpAddressCondition

  """Ip asn condition applicable on a rate limit rule"""
  ipAsnCondition: InputRateLimitingRuleIpAsnCondition

  """IP connection type condition applicable on a rate limit rule"""
  ipConnectionTypeCondition: InputRateLimitingRuleIpConnectionTypeCondition

  """IP location type condition applicable on a rate limit rule"""
  ipLocationTypeCondition: InputRateLimitingRuleIpLocationTypeCondition

  """Ip organisation condition applicable on a rate limit rule"""
  ipOrganisationCondition: InputRateLimitingRuleIpOrganisationCondition

  """IP reputation condition applicable on a rate limit rule"""
  ipReputationCondition: InputRateLimitingRuleIpReputationCondition

  """Key value condition applicable on a rate limit rule"""
  keyValueCondition: InputRateLimitingRuleKeyValueCondition

  """Region condition applicable on a rate limit rule"""
  regionCondition: InputRateLimitingRuleRegionCondition

  """Request scanner type condition applicable on a rate limit rule"""
  requestScannerTypeCondition: InputRateLimitingRuleRequestScannerTypeCondition

  """Scope condition applicable on a rate limit rule"""
  scopeCondition: InputRateLimitingRuleScopeCondition

  """User agent condition applicable on a rate limit rule"""
  userAgentCondition: InputRateLimitingRuleUserAgentCondition

  """User ID condition applicable on a rate limit rule"""
  userIdCondition: InputRateLimitingRuleUserIdCondition
}

"""Logical condition for a rate limited rule"""
input InputRateLimitingRuleLogicalCondition {
  """Child conditions of rate limit rule logical condition"""
  childRateLimitingRuleConditions: [InputRateLimitingRuleCondition]!

  """Rate limit rule logical condition operator"""
  logicalOperator: LogicalOperator!
}

"""
Details regarding mark for testing action applicable on a rate limit rule
"""
input InputRateLimitingRuleMarkForTestingAction {
  """Agent effect associated with this action"""
  agentEffect: InputRateLimitingRuleAgentEffect

  """Severity of blocked event to be generated"""
  eventSeverity: RateLimitingRuleEventSeverity!
}

"""Rate limiting rule regex based matching"""
input InputRateLimitingRuleRegexBasedMatching {
  """custom matching location key value condition"""
  customMatchingLocation: InputRateLimitingRuleKeyValueCondition
}

"""Region condition applicable on a rate limit rule"""
input InputRateLimitingRuleRegionCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of region identifiers"""
  regionIdentifiers: [InputRateLimitingRegionIdentifier]

  """List of regions"""
  regions: [String]
}

"""Request scanner type condition for a rate limit rule"""
input InputRateLimitingRuleRequestScannerTypeCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of scanner types"""
  scannerTypes: [String]!
}

"""Scope condition applicable on a rate limit rule"""
input InputRateLimitingRuleScopeCondition {
  """Entity scope condition"""
  entityScope: InputRateLimitingRuleEntityScope

  """Label scope condition"""
  labelScope: InputRateLimitingRuleLabelScope

  """Scope condition type"""
  scopeType: RateLimitingRuleScopeConditionType!

  """Url scope condition"""
  urlScope: InputRateLimitingRuleUrlScope
}

input InputRateLimitingRulesFilter {
  categories: [RateLimitingRuleCategory]
  scope: InputRuleConfigScope
}

"""Status of rate limit rule"""
input InputRateLimitingRuleStatus {
  """Boolean denoting if rule should generate internal events"""
  generateInternalEvents: Boolean

  """Boolean denoting if rule should be hidden"""
  hidden: Boolean

  """
  Boolean denoting if rule should be internal and generate internal events
  """
  internal: Boolean

  """Source of rule creation"""
  ruleCreationSource: RateLimitingRuleSource
}

"""
String condition which matches a string value using the specified operator
"""
input InputRateLimitingRuleStringCondition {
  """Operator to be used to match the string value"""
  operator: RateLimitingRuleKeyValueMatchOperator!

  """String value to be matched"""
  value: String!
}

"""Config for thresholds and actions applicable on a rate limit rule"""
input InputRateLimitingRuleThresholdActionConfig {
  """List of rate limit rule actions"""
  actions: [InputRateLimitingRuleAction]!

  """List of rate limit rule threshold configs"""
  thresholdConfigs: [InputRateLimitingRuleThresholdConfig]!
}

"""Threshold config for rate limit rule"""
input InputRateLimitingRuleThresholdConfig {
  """API aggregation type"""
  apiAggregateType: RateLimitingRuleApiAggregateType!

  """Dynamic threshold config"""
  dynamicThresholdConfig: InputDynamicThresholdConfig

  """Rolling window threshold config"""
  rollingWindowThresholdConfig: InputRollingWindowThresholdConfig

  """Threshold config type"""
  thresholdConfigType: RateLimitingRuleThresholdConfigType!

  """User aggregation type"""
  userAggregateType: RateLimitingRuleUserAggregateType!

  """Value based threshold config"""
  valueBasedThresholdConfig: InputValueBasedThresholdConfig
}

"""Url scope condition applicable on a rate limit rule"""
input InputRateLimitingRuleUrlScope {
  """List of url regex"""
  urlRegexes: [String]!
}

"""User agent condition for a rate limit rule"""
input InputRateLimitingRuleUserAgentCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of user agent regexes"""
  userAgentRegexes: [String]

  """List of user agents"""
  userAgents: [String]
}

"""User ID condition for a rate limit rule"""
input InputRateLimitingRuleUserIdCondition {
  """List of actor entity IDs"""
  actorEntityIds: [String]

  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of user ID regexes"""
  userIdRegexes: [String]

  """List of user IDs"""
  userIds: [String]
}

"""Rate limit rule transaction action config"""
input InputRateLimitingTransactionActionConfig {
  """Rate limit rule action"""
  action: InputRateLimitingRuleAction!

  """Requested expiration timestamp for the rule"""
  expirationTimestamp: DateTime
}

input InputRedactionRuleCreation {
  category: String!
  complexDataKey: ComplexDataKey
  description: String!
  isSessionIdentifier: Boolean
  matchType: MatchType!
  name: String!
  redactionStrategy: RedactionStrategy!
  regex: String!
}

input InputRedactionRuleDelete {
  id: String!
}

input InputRedactionRuleUpdate {
  category: String!
  complexDataKey: ComplexDataKey
  description: String!
  id: String!
  isSessionIdentifier: Boolean
  matchType: MatchType!
  name: String!
  redactionStrategy: RedactionStrategy!
  regex: String!
}

input InputRegionEnvironmentScope {
  environmentIds: [String]!
}

input InputRegionRuleAgentEffect {
  agentModifications: [InputRegionRuleAgentModification]!
}

input InputRegionRuleAgentModification {
  agentModificationType: RegionRuleAgentModificationType!
  headerInjection: InputRegionRuleHeaderInjection!
}

input InputRegionRuleCreate {
  description: String
  duration: Duration
  effects: [InputRegionRuleEffectWithModification]
  eventSeverity: RegionRuleEventSeverity
  name: String!
  regionIds: [String]!
  ruleScope: InputRegionRuleScope
  type: RegionRuleActionType!
}

input InputRegionRuleDelete {
  id: String!
}

input InputRegionRuleEffectWithModification {
  """Effects enforced for agent while inline processing of requests"""
  agentEffect: InputRegionRuleAgentEffect!
  ruleEffectType: RegionRuleEffectModificationType!
}

input InputRegionRuleHeaderInjection {
  headerCategory: RegionRuleHeaderCategory!
  key: String!
  value: String!
}

input InputRegionRuleScope {
  environmentScope: InputRegionEnvironmentScope
}

input InputRegionRulesFilter {
  ruleScope: InputRegionRuleScope!
}

input InputRegionRuleUpdate {
  description: String
  disabled: Boolean
  duration: Duration
  effects: [InputRegionRuleEffectWithModification]
  eventSeverity: RegionRuleEventSeverity
  id: String!
  internal: Boolean
  name: String!
  regionIds: [String]!
  ruleScope: InputRegionRuleScope
  type: RegionRuleActionType!
}

input InputRemoveApiAttributeOverridesRequest {
  ApiId: String!
  attributeOverrideIdentifiers: [InputAttributeOverrideIdentifier]!
}

input InputReplayConfigSpanFilterKeyValuePredicate {
  """Key Pattern"""
  keyPredicate: InputReplayConfigSpanFilterStringPredicate!

  """Value Pattern"""
  valuePredicate: InputReplayConfigSpanFilterStringPredicate
}

input InputReplayConfigSpanFilterKeyValuePredicateWithLocation {
  """Key - Value String Predicate"""
  keyValuePredicate: InputReplayConfigSpanFilterKeyValuePredicate!

  """Enum for locations(attribute, request cookie and header)"""
  location: ReplayConfigSpanFilterLocation!
}

input InputReplayConfigSpanFilters {
  """List of conditions each consisting of location and key-value predicate"""
  conditions: [InputReplayConfigSpanFilterKeyValuePredicateWithLocation]!
}

input InputReplayConfigSpanFilterStringPredicate {
  relationalOperator: ReplayConfigSpanFilterRelationalOperator!
  value: String!
}

input InputReplayTraffic {
  """The time duration over which the replay traffic is considered"""
  trafficDuration: Duration
}

input InputReportCreation {
  channelIds: [String]
  enabled: Boolean!
  reportFrequency: ReportFrequency!
  scheduledDay: DayOfWeek
  scheduledTime: OffsetTime
}

input InputReportUpdate {
  channelIds: [String]
  enabled: Boolean!
  id: String!
  reportFrequency: ReportFrequency!
  scheduledDay: DayOfWeek
  scheduledTime: OffsetTime
}

input InputRequestHeaderSessionIdentificationData {
  location: InputSessionHeaderLocation!
}

input InputRequestHeaderUserAttributionRuleData {
  authentication: InputAuthentication
  roleLocation: InputHeaderLocation
  userIdLocation: InputHeaderLocation!
}

input InputRequestTokenInfo {
  tokenKey: String!
  tokenPlacement: TokenPlacement!
  tokenValueTemplate: String
}

input InputResetIncrementalScan {
  """reset incremental scan timestamp"""
  resetTimestamp: DateTime
}

input InputResetScanSuiteOperation {
  """Reset incremental scan configuration"""
  resetIncrementalScan: InputResetIncrementalScan!

  """Reset type for scan suite"""
  scanSuiteResetType: ScanSuiteResetType!
}

input InputResetScanSuiteRequest {
  """reset scan suite operation list"""
  resetOperationList: [InputResetScanSuiteOperation]!
  scanSuiteId: String!
}

input InputResetVulnerabilityMetadataRequest {
  id: String!
}

input InputResponseBodySessionIdentificationData {
  sessionJsonPath: String!
  urlRegex: String!
}

input InputResponseBodyUserAttributionData {
  authentication: InputAuthentication
  condition: InputUserAttributionRuleCondition
  roleLocation: InputDataLocation
  userIdLocation: InputDataLocation!
}

"""Event type condition for Risk Scoring Config"""
input InputRiskScoringConfigChangeCondition {
  """Represents operation on Risk Scoring Config i.e Create/Update/Delete """
  riskScoringConfigChangeTypes: [RiskScoringConfigChangeType]!
}

input InputRoleEntityScope {
  """List of entity ids"""
  ids: [String]!

  """Entity type"""
  type: String!
}

input InputRoleInput {
  id: String
  scope: InputRoleScope
}

input InputRoleScope {
  """List of entity scopes"""
  entityScopes: [InputRoleEntityScope]
}

"""
Threshold config which specifies count allowed over the given time range
"""
input InputRollingWindowThresholdConfig {
  """Count allowed for specified time range"""
  countAllowed: Long!

  """Time range during which counts are calculated"""
  duration: Duration!
}

"""Rate limit rule scope"""
input InputRuleConfigScope {
  """Environment scope applicable on rate limit rule"""
  environmentScope: InputEnvironmentScope
}

input InputRunnerCommandsRequest {
  """Denotes if token needs to be part of runner command"""
  hasToken: Boolean

  """Runner name optional field"""
  runnerName: String
}

"""Runner log head filter specification"""
input InputRunnerLogHeadFilter {
  """Head line count"""
  lineCount: Int!
}

"""
Specifies which runner log messages are to be fetched. Both the fields are expected
"""
input InputRunnerLogMessageFilterArgument {
  """Log range filter"""
  logRangeFilter: InputRunnerLogRangeFilter!

  """Log type filter"""
  logTypeFilter: InputRunnerLogTypeFilter!
}

"""
Log range filter. Only one of the filter types possible is expected to be set
"""
input InputRunnerLogRangeFilter {
  """Log head filter"""
  logHeadFilter: InputRunnerLogHeadFilter

  """Log tail filter"""
  logTailFilter: InputRunnerLogTailFilter
}

input InputRunnerLogsAstScanLogType {
  """AST scan id"""
  scanId: String!
}

"""Runner log tail filter specification"""
input InputRunnerLogTailFilter {
  """Tail line count"""
  lineCount: Int!
}

"""
Log type for the requested logs. Only one of the possible types fields is expected to be set
"""
input InputRunnerLogTypeFilter {
  """AST scan log type"""
  astScanLogType: InputRunnerLogsAstScanLogType!
}

"""S3 Bucket Channel Config"""
input InputS3BucketChannelConfig {
  """S3 authentication credential type"""
  authenticationCredentialType: S3AuthenticationCredentialType!

  """S3 bucket name"""
  bucketName: String!

  """S3 bucket region"""
  region: String!

  """Web Identity Authentication Credential"""
  webIdentityAuthenticationCredential: InputS3WebIdentityAuthenticationCredential
}

"""Web Identity Authentication Credential for S3 Bucket"""
input InputS3WebIdentityAuthenticationCredential {
  """ARN of the role to be assumed to upload to S3 bucket"""
  roleArn: String!
}

input InputSamlAuth {
  enabled: Boolean!
  samlConnectionIds: [String]
  ssoBasedProvisioningEnabled: Boolean!
}

input InputSamplingConfigCreate {
  rateLimitConfig: InputSpanProcessingRateLimitConfig!
  spanFilter: InputTraceableSpanProcessingRuleFilter!
}

input InputSamplingConfigDelete {
  id: String!
}

input InputSamplingConfigUpdate {
  id: String!
  rateLimitConfig: InputSpanProcessingRateLimitConfig!
  spanFilter: InputTraceableSpanProcessingRuleFilter!
}

"""Array Filter condition in filter criteria"""
input InputSavedArrayFilterCondition {
  """The array operator to be applied for the filter"""
  operator: SavedFilterArrayOperator!

  """The relational filter with an array LHS"""
  relationalFilterWithExpressionCondition: InputSavedRelationalFilterWithExpressionCondition

  """The type in the array filter"""
  type: SavedArrayFilterType!
}

"""Input to create saved filter"""
input InputSavedFilterCreate {
  """Criteria for filter to match"""
  filterCriteria: InputSavedFilterCriteria!

  """Name of the Saved Filter"""
  name: String!

  """Scope of the Saved Filter"""
  scope: String!

  """Field describing visibility scope of a filter"""
  visibility: InputSavedFilterVisibility!
}

"""Filter criteria present in saved filter"""
input InputSavedFilterCriteria {
  """Array Filter Condition inside saved filter criteria"""
  arrayFilterCondition: InputSavedArrayFilterCondition

  """
  The type of Filter condition populated. Only one filter condition field should be assigned corresponding to this type.
  """
  criteriaType: SavedFilterCriteriaType!

  """
  Relational Filter Condition with expression inside saved filter criteria
  """
  relationalFilterWithExpressionCondition: InputSavedRelationalFilterWithExpressionCondition

  """Logical Filter Condition inside saved filter criteria"""
  logicalFilterCondition: InputSavedFilterLogicalFilterCondition

  """Relational Filter Condition inside saved filter criteria"""
  relationalFilterCondition: InputSavedFilterRelationalFilterCondition
}

"""Input to delete saved filter"""
input InputSavedFilterDelete {
  """Saved Filter ID to be deleted"""
  id: String!
}

"""Logical Filter condition in filter criteria"""
input InputSavedFilterLogicalFilterCondition {
  """
  These are child filters that will be evaluated and combined with the designated operator
  """
  filterCriteria: [InputSavedFilterCriteria]!

  """Logical operator applied amongst child filters"""
  operator: LogicalOperator!
}

"""Relational Filter condition in filter criteria"""
input InputSavedFilterRelationalFilterCondition {
  """Name of the field to match against"""
  fieldName: String!

  """Value of the field"""
  fieldValue: Unknown!

  """Filter Condition Operator"""
  operator: SavedFilterRelationalOperator!
}

"""Condition to filter and fetch the saved filters"""
input InputSavedFiltersQueryFilter {
  """The (optional) id of the saved filter"""
  id: String

  """Saved Filter Scope"""
  savedFilterScope: String!
}

"""Update Saved Filter mutation fields"""
input InputSavedFilterUpdate {
  """ID of Saved Filter to be updated"""
  id: String!

  """Criteria for filter to match"""
  filterCriteria: InputSavedFilterCriteria!

  """Name of the Saved Filter"""
  name: String!

  """Field describing visibility of a filter"""
  visibility: InputSavedFilterVisibility!
}

"""Visibility scope of saved filter"""
input InputSavedFilterVisibility {
  """Filter Visibility Type"""
  visibilityType: SavedFilterVisibilityType!
}

"""Saved query clauses"""
input InputSavedQueryClauses {
  """Saved query filtering criteria"""
  filter: [String]

  """Saved query group by clause"""
  groupBy: [String]

  """Saved query number of groups limit"""
  groupLimit: String

  """Includes the remaining ungrouped data as "others" group"""
  includeOtherGroups: String

  """Time interval across which metrics are calculated"""
  interval: String

  """Saved query order by clause"""
  orderBy: [String]

  """Saved query selection clause"""
  selection: [String]!

  """Time range for the query"""
  timeRange: String
}

"""Input to create a saved query"""
input InputSavedQueryCreate {
  """Comments around query"""
  comments: String

  """Name of the saved query"""
  name: String!

  """Saved query clauses"""
  queryClauses: InputSavedQueryClauses!

  """The category against which the saved query is associated with"""
  scope: String!
}

"""Input to delete an existing saved query"""
input InputSavedQueryDelete {
  """ID of the saved query to be deleted"""
  id: String!
}

"""Condition to filter and fetch the saved queries"""
input InputSavedQueryFilter {
  """User ids list to fetch for"""
  authorIds: [String]

  """Scope of the saved query"""
  savedQueryScope: String
}

"""Input to update an existing saved query"""
input InputSavedQueryUpdate {
  """ID of the saved query to be updated"""
  id: String!

  """Comments around query"""
  comments: String

  """Name of the saved query"""
  name: String!

  """Saved query clauses"""
  queryClauses: InputSavedQueryClauses!
}

input InputSavedRelationalFilterExpression {
  """Saved filter constant expression"""
  constant: Unknown

  """Saved filter field expression"""
  field: InputSavedRelationalFilterExpressionField

  """Type of expression"""
  type: SavedFilterExpressionType!
}

input InputSavedRelationalFilterExpressionField {
  """Name of the key to match against"""
  key: String!

  """Scope of the key"""
  scope: String
}

"""Relational Filter condition in filter criteria"""
input InputSavedRelationalFilterWithExpressionCondition {
  """LHS expression"""
  lhsExpression: InputSavedRelationalFilterExpression!

  """Filter Condition Operator"""
  operator: SavedFilterRelationalOperator!

  """RHS expression"""
  rhsExpression: InputSavedRelationalFilterExpression!
}

input InputScanCommandRequest {
  includePluginNames: [String]!
  name: String!
  openApiSpecIds: [String]
  policy: String
  trafficEnvironmentName: String!
}

input InputScanEvaluationCriteriaAssetScope {
  """Asset Selection ( Select all / Select new )"""
  assetSelection: InputScanEvaluationCriteriaAssetSelection!

  """Asset Type of Scan Evaluation Criteria"""
  assetType: ScanEvaluationCriteriaAssetType!
}

input InputScanEvaluationCriteriaAssetSelection {
  """Select all assets"""
  selectAllAssets: InputScanEvaluationCriteriaSelectAllAssets

  """Select new assets"""
  selectNewAssets: InputScanEvaluationCriteriaSelectNewAssets
}

input InputScanEvaluationCriteriaEvaluationExpression {
  """Takes logical AND of all rules if true"""
  allEvaluateTrue: Boolean
}

input InputScanEvaluationCriteriaFilterArgument {
  """Filter key of Scan Evaluation Criteria (Owner / Criteria ID)"""
  key: ScanEvaluationCriteriaFilterKey!

  """Filter Operator Type of Scan Evaluation Criteria"""
  operator: AstFilterOperatorType!

  """Value of Scan Evaluation Criteria"""
  value: Unknown!
}

"""Rule of Scan Evaluation Criteria"""
input InputScanEvaluationCriteriaRule {
  """Asset Scope of Scan Evaluation Criteria"""
  assetScope: InputScanEvaluationCriteriaAssetScope!

  """Vulnerability Scope and Evaluation of Scan Evaluation Criteria"""
  vulnerabilityScopeAndEvaluation: InputScanEvaluationCriteriaVulnerabilityScopeAndEvaluation!
}

input InputScanEvaluationCriteriaSelectAllAssets {
  """Whether select all is enabled"""
  isEnabled: Boolean!
}

input InputScanEvaluationCriteriaSelectAnyVulnerability {
  """Whether select any is enabled"""
  isEnabled: Boolean!
}

input InputScanEvaluationCriteriaSelectNewAssets {
  """Whether select new assets is enabled"""
  isEnabled: Boolean!
}

input InputScanEvaluationCriteriaSelectNewVulnerabilities {
  """Whether select new is enabled"""
  isEnabled: Boolean!
}

input InputScanEvaluationCriteriaVulnerabilityScopeAndEvaluation {
  """Vulnerability duration scope"""
  vulnerabilityDurationScope: InputDurationScope

  """Scan Evaluation Criteria Operator Type"""
  operator: ScanEvaluationCriteriaOperator!

  """Vulnerability Severity level"""
  severity: VulnerabilityV2Severity!

  """Threshold value"""
  threshold: Int!

  """Vulnerability Selection (Select all / Select any)"""
  vulnerabilitySelection: InputScanEvaluationCriteriaVulnerabilitySelection!
}

input InputScanEvaluationCriteriaVulnerabilitySelection {
  """Select any Vulnerability"""
  selectAnyVulnerability: InputScanEvaluationCriteriaSelectAnyVulnerability

  """Select new Vulnerabilities"""
  selectNewVulnerabilities: InputScanEvaluationCriteriaSelectNewVulnerabilities
}

input InputScanFilterArgument {
  key: ScanFilterField!
  operator: AstFilterOperatorType!
  value: Unknown!
}

input InputScanInfoFilterArgument {
  filterValue: InputAstFilterValue
  key: ScanInfoFilterField!
  operator: AstFilterOperatorType!
  value: Unknown
}

input InputScannedApiStatFilterArgument {
  key: ScannedApiStatFilterKey!
  operator: AstFilterOperatorType!
  value: Unknown!
}

input InputScannedApiStatOrderArgument {
  sortField: ScannedApiStatSortField!
  sortOrder: AstSortOrder!
}

input InputScanPolicyFilterArgument {
  key: ScanPolicyFilterField!
  value: Unknown!
}

input InputScanPolicySortBy {
  sortField: PolicySortField
  sortOrder: AstSortOrder
}

"""Scan purge config"""
input InputScanPurgeConfig {
  """Duration before which scans should be purged"""
  createdBeforeDuration: Duration!
}

input InputScanSuiteConfiguration {
  assetSelections: [InputAssetSelection]!
  baseScanId: String

  """Config to run scans in incremental mode"""
  incrementalScanConfiguration: InputIncrementalScanConfiguration
  policyId: String!

  """Filters Spans based on location and key-value predicate"""
  spanFilters: InputScanSuiteSpanFilters
  targetUrl: String
  trafficConfiguration: InputTrafficConfiguration!
  trafficEnvironment: String!
}

input InputScanSuiteHookConfiguration {
  hookDetails: [InputScanSuiteHookDetails]!
}

input InputScanSuiteHookDetails {
  hookId: String!
  hookName: String
}

input InputScanSuiteIdentifier {
  suiteId: String
  suiteType: ScanSuiteType!
}

input InputScanSuitePriorityDetails {
  priority: Int!
}

input InputScanSuiteScanEvaluationCriteriaConfiguration {
  scanEvaluationCriteriaDetails: [InputScanSuiteScanEvaluationCriteriaDetails]!
}

input InputScanSuiteScanEvaluationCriteriaDetails {
  scanEvaluationCriteriaId: String!
}

input InputScanSuiteScheduleJobConfiguration {
  dailySchedule: InputDailySchedule
  monthlySchedule: InputMonthlySchedule
  name: String
  runnerIds: [String]
  runnerNames: [String]
  status: ScanSuiteScheduleJobStatus
  weeklySchedule: InputWeeklySchedule
}

input InputScanSuitesFilterArgument {
  key: ScanSuitesFilterKey!
  operator: AstFilterOperatorType!
  value: Unknown!
}

input InputScanSuiteSpanFilterKeyValuePredicate {
  """Key Pattern"""
  keyPredicate: InputStringPredicate!

  """Value Pattern"""
  valuePredicate: InputStringPredicate
}

input InputScanSuiteSpanFilterKeyValuePredicateWithLocation {
  """Key - Value String Predicate"""
  keyValuePredicate: InputScanSuiteSpanFilterKeyValuePredicate!

  """Enum for locations(attribute, request cookie and header)"""
  location: ScanSuiteSpanFilterLocation!
}

input InputScanSuiteSpanFilters {
  """List of conditions each consisting of location and key-value predicate"""
  conditions: [InputScanSuiteSpanFilterKeyValuePredicateWithLocation]!
}

input InputScanSuitesStatsFilterArgument {
  key: ScanSuitesStatsFilterKey!
  operator: AstFilterOperatorType!
  value: Unknown!
}

input InputScanTag {
  ScanTagKey: String!
  ScanTagValue: String!
}

input InputScheduledJobFilterArgument {
  key: ScheduledJobField!
  operator: FilterOperatorType!
  value: Unknown!
}

input InputScheduledJobOrderArgument {
  direction: OrderDirection!
  key: ScheduledJobField!
}

"""Scoped config change for global anomaly detection"""
input InputScopedAnomalyGlobalConfigChange {
  """API config related to modsec"""
  apiGlobalConfig: InputApiGlobalConfig

  """Scope of the config"""
  anomalyScope: InputAnomalyScope!

  """Status change of the config"""
  configStatusChange: InputAnomalyConfigStatusChange

  """Boolean denoting if detection is enabled for exit spans or not"""
  enabledForExitSpans: Boolean

  """Config for excluding events"""
  excludedEventsGenerationConfig: InputExcludedEventsGenerationConfig

  """Minimum anomaly confidence level"""
  minConfidenceLevel: AnomalyConfidenceLevel

  """Global config related to modsec"""
  modsecGlobalConfig: InputModsecGlobalConfig
}

input InputScopedAnomalyRuleConfigUpdate {
  anomalyScope: InputAnomalyScope!
  ruleConfig: InputAnomalyRuleConfigUpdate!
}

input InputSecurityConfigChangeEventCondition {
  securityConfigurationTypes: [AlertingSecurityConfigurationType]!
}

input InputSecurityEventsInfoJobSpec {
  endTime: DateTime!
  environment: String
  eventRuleCategory: String
  limit: Int!
  startTime: DateTime!
}

input InputSecuritySchemeRoleRelationship {
  """The api ID"""
  apiId: String!

  """The user role ID"""
  roleId: String!
}

input InputSecuritySchemeScopeRelationship {
  """The api ID"""
  apiId: String!

  """The user scope ID"""
  scopeId: String!
}

"""Security testing vulnerability auto resolution criteria"""
input InputSecurityTestingVulnerabilityAutoResolutionCriteria {
  """Logical operator to apply to the rules"""
  logicalOperator: LogicalOperator!

  """Security testing vulnerability auto resolution criteria rules"""
  securityTestingVulnerabilityAutoResolutionCriteriaRules: [InputSecurityTestingVulnerabilityAutoResolutionCriteriaRule]!
}

"""
Security testing vulnerability auto resolution criteria rule. Set either
'unseenDurationRule' or 'consecutiveScanDetectionRule', but not both
"""
input InputSecurityTestingVulnerabilityAutoResolutionCriteriaRule {
  """Consecutive scan detection rule"""
  consecutiveScanDetectionRule: InputSecurityTestingVulnerabilityConsecutiveScanDetectionRule

  """Unseen duration rule"""
  unseenDurationRule: InputSecurityTestingVulnerabilityUnseenDurationRule
}

"""Security testing vulnerability consecutive scan detection rule"""
input InputSecurityTestingVulnerabilityConsecutiveScanDetectionRule {
  """Minimum consecutive not detected scan"""
  minimumConsecutiveNotDetectedScan: Int!
}

input InputSecurityTestingVulnerabilitySummarizeRequestContext {
  """Scan ID of the security testing scan"""
  scanId: String!

  """Test ID of the security testing scan"""
  testId: String!
}

"""Security testing vulnerability unseen duration rule"""
input InputSecurityTestingVulnerabilityUnseenDurationRule {
  """Max unseen duration"""
  maxUnseenDuration: Duration!
}

input InputSegmentFilterConfig {
  segmentLengthThreshold: Int!
  urlPartsThreshold: Int!
}

"""Segment matching based api naming rule config"""
input InputSegmentMatchingBasedRuleConfig {
  """Regex patterns to be matched against"""
  regexes: [String]!

  """Values with which the corresponding regexes are to be replaces with"""
  values: [String]!
}

input InputSegmentMergeConfig {
  disabled: Boolean!
  filterConfig: InputEntitySpanAttributeFilter
  levelThresholdConfigs: [InputLevelThresholdConfig]
  nonMergeableDepth: Int!
  segmentDepth: String!
}

input InputSelectedDomainAsset {
  idPredicates: [InputStringPredicate]
  namePredicates: [InputStringPredicate]
}

input InputSelectedEndpointAsset {
  apiTypePredicates: [InputStringPredicate]
  idPredicates: [InputStringPredicate]
  labelPredicates: [InputStringPredicate]
  methodTypePredicates: [InputStringPredicate]
  namePredicates: [InputStringPredicate]
  ownerPredicates: [InputStringPredicate]
  protocolTypePredicates: [InputStringPredicate]
  urlPredicates: [InputStringPredicate]
}

input InputSelectedLevelPlugin {
  idPredicates: [InputStringPredicate]
  labelPredicates: [InputStringPredicate]
  namePredicates: [InputStringPredicate]
}

input InputSelectedLevelPluginCategory {
  idPredicates: [InputStringPredicate]
  namePredicates: [InputStringPredicate]
}

input InputSelectedLevelVulnerabilityType {
  namePredicates: [InputStringPredicate]!
}

input InputSelectedServiceAsset {
  idPredicates: [InputStringPredicate]
  labelPredicates: [InputStringPredicate]
  namePredicates: [InputStringPredicate]
}

"""Event type condition for sensitive data"""
input InputSensitiveDataConfigChangeCondition {
  """Represents operation on Data configuration i.e Create/Update/Delete """
  sensitiveDataConfigChangeTypes: [SensitiveDataConfigChangeType]!

  """Represents type of data configuration"""
  sensitiveDataConfigTypes: [SensitiveDataConfigType]!
}

input InputSensitiveDataTrainingConfig {
  keyValuePairs: [InputTrainingConfigKeyValuePair]
  name: SensitiveDataTrainingConfigName!
}

"""Action to perform on rule match"""
input InputServiceNamingRuleAction {
  """
  Assign the service name using a value captured by regex from an attribute
  """
  regexCaptureGroupNaming: InputServiceNamingRuleRegexCaptureGroupNamingAction

  """Assign the service name using a static value"""
  staticNaming: InputServiceNamingRuleStaticNamingAction

  """
  The type of action populated. Only one action field should be assigned corresponding to this type
  """
  type: ServiceNamingRuleActionType!
}

"""A condition that matches a specific attribute's value"""
input InputServiceNamingRuleAttributeCondition {
  """Span Attribute Key"""
  attributeKey: String!

  """Operator"""
  operator: ServiceNamingRuleConditionOperator!

  """Value to match"""
  value: String!
}

"""Condition to match a span"""
input InputServiceNamingRuleCondition {
  """A condition matching an attribute value"""
  attributeCondition: InputServiceNamingRuleAttributeCondition

  """
  The type of condition populated. Only one condition field should be assigned corresponding to this type
  """
  predicateType: ServiceNamingRuleConditionType!
}

"""Used to create a service naming rule"""
input InputServiceNamingRuleCreateInput {
  """Naming action to take if satisfied"""
  action: InputServiceNamingRuleAction!

  """Conditions must all be satisfied for a naming rule to apply"""
  conditions: [InputServiceNamingRuleCondition]

  """Rule Description"""
  description: String

  """Indicates if the rule is enabled for processing"""
  enabled: Boolean

  """Rule Name"""
  name: String!

  """
  Scope for which the rule applies. If scope is unset, a rule is always applicable
  """
  scope: InputServiceNamingRuleScope
}

"""Data to use to delete a service naming rule"""
input InputServiceNamingRuleDeleteInput {
  """Rule ID to delete"""
  id: String!
}

"""
Specifies which Service Naming Rules to consider. Filter fields may be omitted,
but any fields specified must be satisfied by each rule.
"""
input InputServiceNamingRuleFilter {
  """Rules must match the specified scope"""
  scope: InputServiceNamingRuleScope
}

"""Assigns a service name based on a regex capture"""
input InputServiceNamingRuleRegexCaptureGroupNamingAction {
  """Attribute key to apply the regex capture against"""
  attributeKey: String!

  """
  Regex containing exactly one capture group to apply to the value of the attribute specified by provided key
  """
  regexCaptureGroup: String!
}

"""Scope for which a ServiceNamingRule applies"""
input InputServiceNamingRuleScope {
  """A list of environment names where the rule is applicable"""
  environmentNames: [String]!
}

"""Assigns a static service name"""
input InputServiceNamingRuleStaticNamingAction {
  """Service name to assign"""
  serviceName: String!
}

"""Used to update a service naming rule"""
input InputServiceNamingRuleUpdateInput {
  """Rule ID"""
  id: String!

  """Naming action to take if satisfied"""
  action: InputServiceNamingRuleAction!

  """Conditions must all be satisfied for a naming rule to apply"""
  conditions: [InputServiceNamingRuleCondition]

  """Rule Description"""
  description: String

  """Indicates if the rule is enabled for processing"""
  enabled: Boolean!

  """Rule Name"""
  name: String!

  """
  Scope for which the rule applies. If scope is unset, a rule is always applicable
  """
  scope: InputServiceNamingRuleScope
}

"""a set of servicenow itsm assignee groups"""
input InputServiceNowItsmIntegrationAssigneeGroup {
  """The name of the assignee group."""
  assigneeGroupDisplayName: String!

  """The user info of the default assignee for this assignee group."""
  defaultAssignee: InputServiceNowItsmIntegrationUserInfo

  """
  The "sys-id" of the assignee group. Servicenow identifies the assignee group by this ID
  """
  sysId: String!
}

"""input for creating a servicenow itsm incident"""
input InputServiceNowItsmIntegrationCreateIncidentInput {
  """
  A text giving more details about the incident, this will be appended below the descriptionDetailsFields
  """
  description: String

  """A list of fields that are intended to be populated as the description"""
  descriptionDetailsFields: [InputServiceNowItsmIntegrationIncidentDescriptionDetailsField]

  """
  The environment corresponding to the associated entity for which a servicenow itsm incident needs to be created.
  """
  environmentId: String!

  """A list of fields to populate in the incident"""
  incidentFields: [InputServiceNowItsmIntegrationIncidentField]

  """The reference of the associated entity"""
  reference: InputServiceNowItsmIntegrationIncidentReference

  """A list of references of the associated entities"""
  references: [InputServiceNowItsmIntegrationIncidentReference]

  """A short summary of the servicenow itsm incident"""
  shortDescription: String!

  """
  The ID of the configured table metadata corresponding to which the incident should be created.
  """
  tableMetadataId: String!
}

"""input for creating a servicenow itsm integration"""
input InputServiceNowItsmIntegrationCreateIntegrationInput {
  """
  OAuth credentials which uses password grant type for initial authorization
  """
  authCredentials: InputServiceNowItsmIntegrationPasswordBasedOAuthCredentials!

  """A suitable description about this integration"""
  description: String!

  """The set of environments (as IDs) to be associated to this integration"""
  environmentIds: [String]!

  """The name of this servicenow itsm integration"""
  name: String!

  """The url of the servicenow instance"""
  serverUrl: String!
}

"""Fields that correspond to enum mapping for servicenow"""
input InputServiceNowItsmIntegrationEnumeratedChoiceValue {
  """A human readable name for the value"""
  displayName: String!

  """The corresponding index number recognized by servicenow"""
  index: Int!
}

"""input for fetching the servicenow itsm assignee groups"""
input InputServiceNowItsmIntegrationGetAssigneeGroupsInput {
  """
  The assignee groups whose name starts with the given prefix will be filtered.
  """
  assigneeGroupNamePrefix: String

  """
  The ID of the environment of the target for which the servicenow incident is
  to be created. This will fetch the assignee groups suitable for that environment.
  """
  environmentId: String!

  """Pagination limit, must be greater than 0. Default is 50."""
  limit: Int

  """Pagination offset, default is 0."""
  offset: Int
}

"""input for fetching servicenow itsm assignees"""
input InputServiceNowItsmIntegrationGetAssigneesInput {
  """The sys-id of the assignee group"""
  assigneeGroupSysId: String!

  """
  The assignee groups whose name starts with the given prefix will be filtered.
  """
  assigneeNamePrefix: String

  """
  The ID of the environment of the target for which the servicenow incident is
  to be created. This will fetch the assignee groups suitable for that environment.
  """
  environmentId: String!

  """Pagination limit, must be greater than 0. Default is 50."""
  limit: Int

  """Pagination offset, default is 0."""
  offset: Int
}

"""input for fetching servicenow itsm callers"""
input InputServiceNowItsmIntegrationGetCallersInput {
  """
  The ID of the environment of the target for which the servicenow incident is
  to be created. This will fetch the callers suitable for that environment.
  """
  environmentId: String!

  """Pagination limit, must be greater than 0. Default is 50."""
  limit: Int

  """Pagination offset, default is 0."""
  offset: Int

  """The users whose name starts with the given prefix will be filtered."""
  userNamePrefix: String
}

"""input for fetching servicenow itsm incidents"""
input InputServiceNowItsmIntegrationGetIncidentsInput {
  """
  A list of references for which the corresponding incidents need to be fetched
  """
  incidentReferences: [InputServiceNowItsmIntegrationIncidentReference]!
}

"""input for fetching configured servicenow itsm integrations"""
input InputServiceNowItsmIntegrationGetIntegrationsInput {
  """
  Filters the servicenow itsm integrations on environments before returning
  """
  environmentIds: [String]
}

"""Inputs to fetch the reference values for a reference type table field."""
input InputServiceNowItsmIntegrationGetServiceNowReferenceValuesInput {
  """The values whose name starts with the given prefix will be filtered."""
  displayNamePrefix: String

  """
  The ID of the environment of the target. The corresponding servicenow integration will be used.
  """
  environmentId: String!

  """Pagination limit, must be greater than 0. Default is 50."""
  limit: Int

  """Pagination offset, default is 0."""
  offset: Int

  """The name of the table field for which references are to be fetched."""
  tableFieldName: String!

  """The ID of the table metadata to be used."""
  tableMetadataId: String!
}

"""A generic mapping from a string key to a json serializable value"""
input InputServiceNowItsmIntegrationIncidentDescriptionDetailsField {
  """The key corresponding to the value we want in the description"""
  key: String!

  """The intended value"""
  value: Unknown!
}

"""
A generic mapping from a servicenow table field to a json serializable value
"""
input InputServiceNowItsmIntegrationIncidentField {
  """
  The name of the field in the servicenow table as recognized by backend logic.
  """
  fieldName: String!

  """The intended value that we want to populate in the column."""
  value: InputServiceNowItsmIntegrationTableFieldValue!
}

"""A link to the entity associated to a servicenow itsm incident"""
input InputServiceNowItsmIntegrationIncidentReference {
  """The ID of entity for associated with this servicenow itsm incident"""
  referenceId: String!

  """The type of entity for associated with this servicenow itsm incident"""
  referenceType: ServiceNowItsmIntegrationIncidentReferenceType!
}

input InputServiceNowItsmIntegrationPasswordBasedOAuthCredentials {
  """
  The client ID corresponding to an OAuth client in ServiceNow Application Registry
  """
  clientId: String!

  """
  The client secret associated with the ServiceNow client ID for OAuth authentication.
  """
  clientSecret: String!

  """The username of the ServiceNow account for OAuth authentication."""
  userName: String!

  """
  The password associated with the ServiceNow account for OAuth authentication.
  """
  userPassword: String!
}

"""A configured servicenow reference value."""
input InputServiceNowItsmIntegrationServiceNowReferenceValue {
  """A human readable name of the reference."""
  displayName: String!

  """The "sysId" of the reference"""
  sysId: String!
}

"""A configured value corresponding to a servicenow table field"""
input InputServiceNowItsmIntegrationTableFieldValue {
  """A servicenow itsm assignee group value"""
  assigneeGroupValue: InputServiceNowItsmIntegrationAssigneeGroup

  """A servicenow itsm assignee value"""
  assigneeValue: InputServiceNowItsmIntegrationUserInfo

  """A servicenow itsm caller value"""
  callerValue: InputServiceNowItsmIntegrationUserInfo

  """An enum value"""
  enumeratedChoiceValue: InputServiceNowItsmIntegrationEnumeratedChoiceValue

  """A servicenow itsm reference value"""
  serviceNowReferenceValue: InputServiceNowItsmIntegrationServiceNowReferenceValue

  """A string value"""
  stringValue: String
}

"""input for unlinking a servicenow itsm incident"""
input InputServiceNowItsmIntegrationUnlinkIncidentInput {
  """
  The reference corresponding to the entity for which the associated incident has to be unlinked.
  """
  incidentReference: InputServiceNowItsmIntegrationIncidentReference

  """
  A list of references corresponding to the entities for which the associated incident has to be unlinked.
  """
  incidentReferences: [InputServiceNowItsmIntegrationIncidentReference]
}

"""input for updating a servicenow itsm integration"""
input InputServiceNowItsmIntegrationUpdateIntegrationInput {
  """
  Updated OAuth credentials which uses password grant type for initial authorization
  """
  authCredentials: InputServiceNowItsmIntegrationPasswordBasedOAuthCredentials

  """A suitable description about this integration"""
  description: String!

  """
  The updated set of environments (as IDs) to be associated to this integration
  """
  environmentIds: [String]!

  """The ID of the servicenow itsm integration which is to be updated"""
  integrationConfigId: String!

  """The updated name of this servicenow itsm integration"""
  name: String!

  """The updated url of the servicenow instance"""
  serverUrl: String!
}

"""The information corresponding to a servicenow itsm user"""
input InputServiceNowItsmIntegrationUserInfo {
  """The name of the user."""
  displayName: String!

  """The email of the user."""
  email: String

  """The "sys-id" of the user. Servicenow identifies the user by this ID"""
  sysId: String!
}

"""input for validating servicenow itsm connection"""
input InputServiceNowItsmIntegrationValidateConnectionInput {
  """
  OAuth credentials which uses password grant type for initial authorization
  """
  authCredentials: InputServiceNowItsmIntegrationPasswordBasedOAuthCredentials

  """
  the ID of the servicenow ITSM integration. At least one of authCredentials or integrationConfigId needs to provided
  """
  integrationConfigId: String

  """the url of the servicenow instance"""
  serverUrl: String!
}

input InputServiceScope {
  id: String!
}

"""Expiration Attribute to get expiration details"""
input InputSessionAttributeExpiration {
  """Expiration format for extracting expiration details"""
  expirationFormat: SessionExpirationFormat!

  """Root projection for extracting session identification attributes"""
  projectionRoot: InputSessionProjectionRoot!

  """
  Attribute key location in response for extracting Session identification attributes
  """
  responseAttributeKeyLocation: SessionResponseAttributeKeyLocation!
}

"""
Session token conditional predicate for matching against a request/response
"""
input InputSessionAttributePredicate {
  """Location type from which we try to extract session token"""
  attributeKeyLocationType: SessionAttributeKeyLocationType!

  """Attribute projection for extracting session identification attributes"""
  attributeProjection: InputSessionAttributeProjection!

  """Matching condition for the attribute projected"""
  matchCondition: InputSessionMatchCondition!

  """
  Attribute key location in request for extracting Session identification attributes
  """
  requestAttributeKeyLocation: SessionRequestAttributeKeyLocation

  """
  Attribute key location in response for extracting Session identification attributes
  """
  responseAttributeKeyLocation: SessionResponseAttributeKeyLocation
}

"""Attribute projection for extracting session identification attributes"""
input InputSessionAttributeProjection {
  """Matching condition for the attribute key"""
  matchCondition: InputSessionMatchCondition

  """List of value projections in order to extract value from session token"""
  valueProjections: [InputSessionValueProjection]
}

"""Custom attribute rule which would extract the value"""
input InputSessionCustomAttributeRule {
  """Custom attribute rule type from where value would be extracted"""
  customAttributeRuleType: SessionCustomAttributeRuleType!

  """JWT attribution rule from where values would be extracted"""
  jwtAttributionRule: InputSessionJwtAttributionRule

  """JWT attribute type from where value would be extracted"""
  jwtClaimAttribute: String
}

"""Custom projection for extracting session identification attributes"""
input InputSessionCustomProjection {
  """
  Custom json projection for extracting session identification attributes
  """
  customJson: String!
}

input InputSessionDefinitionMetadataAnomalyDetectionConfig {
  keyValuePairs: [InputAnomalyDetectionConfigKeyValuePair]
  name: SessionDefinitionMetadataAnomalyDetectionConfigName!
  ruleId: String
}

input InputSessionExpiryConfig {
  """Allowed buffer of time difference for session expiry"""
  timeDifferenceBufferMillis: Long
}

input InputSessionHeaderLocation {
  cookieName: String
  headerName: String
  type: SessionHeaderLocationType!
}

input InputSessionIdentificationCreateInput {
  name: String!
  obfuscated: Boolean!
  requestHeader: InputRequestHeaderSessionIdentificationData
  responseBody: InputResponseBodySessionIdentificationData
  type: SessionIdentificationRuleType!
}

input InputSessionIdentificationDeleteInput {
  id: String!
}

input InputSessionIdentificationRule {
  disabled: Boolean
  id: String!
  name: String!
  obfuscated: Boolean!
  requestHeader: InputRequestHeaderSessionIdentificationData
  responseBody: InputResponseBodySessionIdentificationData
  type: SessionIdentificationRuleType!
}

"""Scope of the Session Identification rule"""
input InputSessionIdentificationRuleScope {
  """List of environment names on which the rule should apply"""
  environmentNames: [String]

  """List of service name regexes on which the rule should apply"""
  serviceNameRegexes: [String]

  """List of service names on which the rule should apply"""
  serviceNames: [String]

  """List of url match regexes on which the rule should apply"""
  urlMatchRegexes: [String]
}

"""Filter to fetch session identification rule"""
input InputSessionIdentificationRulesFilter {
  """Disable filter for Session Identification Rule"""
  disabled: Boolean

  """List of environment names on which the rule should apply"""
  environmentNames: [String]
}

"""Status of the Session Identification rule"""
input InputSessionIdentificationRuleStatus {
  """Flag to disable Session Identification rule"""
  disabled: Boolean!
}

"""Json path projection for the attribute value"""
input InputSessionJsonPathProjection {
  """Json path for getting attribute value"""
  path: String!
}

"""JWT attribution Extraction details extracting values"""
input InputSessionJwtAttributeExtraction {
  """Header key in jwt to extract from"""
  header: String

  """Type of capture from jwt field"""
  jwtAttributionCaptureType: SessionJwtAttributionCaptureType!

  """JWT attribution source from where values would be extracted"""
  jwtAttributionSourceType: SessionJwtAttributionSourceType!

  """Payload claim in jwt to extract from"""
  payloadClaimName: String

  """Regex with single capture group for capturing value"""
  regexCaptureGroup: String
}

"""JWT attribution rule from where values would be extracted"""
input InputSessionJwtAttributionRule {
  """JWT attribute extraction list"""
  jwtAttributeExtractionList: [InputSessionJwtAttributeExtraction]!
}

"""Jwt payload claim projection for the attribute value"""
input InputSessionJwtPayloadClaimProjection {
  """key for getting attribute value from jwt"""
  claim: String!
}

"""Logical predicate for matching against a request/response"""
input InputSessionLogicalPredicate {
  """Child predicates for matching against a request/response"""
  children: [InputSessionPredicate]!

  """Logical operator for children"""
  operator: LogicalOperator!
}

"""Matching condition for the attribute projected"""
input InputSessionMatchCondition {
  """Matching operator for the value which needs to be matched"""
  matchOperator: SessionMatchOperator!

  """String value which will be matched against some attribute"""
  stringValue: String
}

"""
Session token conditional predicate for matching against a request/response
"""
input InputSessionPredicate {
  """Attribute predicate for matching against a request/response"""
  attributePredicate: InputSessionAttributePredicate

  """Custom projection predicate for matching against a request/response"""
  customProjection: InputSessionCustomProjection

  """Logical predicate for matching against a request/response"""
  logicalPredicate: InputSessionLogicalPredicate

  """Predicate type for Session token rule"""
  predicateType: SessionPredicateType!
}

"""Root projection for extracting session identification attributes"""
input InputSessionProjectionRoot {
  """Attribute projection for extracting session identification attributes"""
  attributeProjection: InputSessionAttributeProjection

  """Custom projection for extracting session identification attributes"""
  customProjection: InputSessionCustomProjection

  """Projection type for extracting session identification attributes"""
  projectionType: SessionProjectionType!
}

"""Regex capture group projection for the attribute value"""
input InputSessionRegexCaptureGroupProjection {
  """Regex capture group for getting attribute value"""
  regexCaptureGroup: String!
}

"""Request session token details for the session token rule"""
input InputSessionRequestSessionTokenDetails {
  """List of custom attributes rule which would extract the values"""
  customAttributeRule: [InputSessionCustomAttributeRule]

  """Expiration type from where we need to extract expiration details"""
  expirationType: SessionExpirationType

  """Attribute key location in request for extracting Session attributes"""
  requestAttributeKeyLocation: SessionRequestAttributeKeyLocation!
}

"""Response session token details for the session token rule"""
input InputSessionResponseSessionTokenDetails {
  """Expiration Attribute to get expiration details"""
  attributeExpiration: InputSessionAttributeExpiration

  """List of custom attributes rule which would extract the values"""
  customAttributeRule: [InputSessionCustomAttributeRule]

  """Expiration type from where we need to extract expiration details"""
  expirationType: SessionExpirationType

  """
  Attribute key location in response for extracting Session identifcation attributes
  """
  responseAttributeKeyLocation: SessionResponseAttributeKeyLocation!
}

"""Class to identify Session Identification rule"""
input InputSessionTokenRule {
  """Session token conditional predicate"""
  predicate: InputSessionPredicate

  """Request session token details for the session token rule"""
  requestSessionTokenDetails: InputSessionRequestSessionTokenDetails

  """Response session token details for the session token rule"""
  responseSessionTokenDetails: InputSessionResponseSessionTokenDetails

  """Rule for extracting session token value"""
  sessionTokenValueRule: InputSessionTokenValueRule!

  """Session token type for session identification rule"""
  tokenType: SessionTokenType!
}

"""Rule for extracting session token value"""
input InputSessionTokenValueRule {
  """Obfuscation strategy for the extracted session attribute"""
  obfuscationStrategy: SessionObfuscationStrategy

  """Root projection for extracting session attributes"""
  projectionRoot: InputSessionProjectionRoot!
}

input InputSessionTrainingConfig {
  keyValuePairs: [InputTrainingConfigKeyValuePair]
  name: SessionTrainingConfigName!
}

"""Value projection to extract value from session token"""
input InputSessionValueProjection {
  """Json path projection for the attribute value"""
  jsonPathProjection: InputSessionJsonPathProjection

  """Jwt payload claim projection for the attribute value"""
  jwtPayloadClaimProjection: InputSessionJwtPayloadClaimProjection

  """Regex capture group projection for the attribute value"""
  regexCaptureGroupProjection: InputSessionRegexCaptureGroupProjection

  """Projection type for the attribute value"""
  valueProjectionType: SessionValueProjectionType!
}

input InputSignMsaInput {
  """Name of the user who is signing the MSA"""
  signatoryName: String!

  """Title of the user who is signing the MSA"""
  signatoryTitle: String
}

input InputSkippedApisFilterArgument {
  key: SkippedApisFilterField!
  operator: AstFilterOperatorType!
  value: Unknown!
}

input InputSlackWebhookChannelConfig {
  url: String!
}

"""Data to use to validate snyk connection"""
input InputSnykConnectionValidationInput {
  """Api access token to be used to authorize the snyk integration"""
  apiToken: String!
}

"""Data to use to create snyk integration config"""
input InputSnykIntegrationCreateInput {
  """Api access token to be used to authorize the snyk integration"""
  apiToken: String!
}

input InputSnykIntegrationDetails {
  organizationId: String!
  projectIds: [String]!
}

"""Data to use to update snyk integration config"""
input InputSnykIntegrationUpdateInput {
  """
  Api access token to be used to authorize the snyk integration. Updated only if set
  """
  apiToken: String
}

"""Snyk issue identifiers"""
input InputSnykIssueIdentifier {
  """Snyk issue id"""
  issueId: String!

  """Snyk organization id"""
  organizationId: String!

  """Snyk project id"""
  projectId: String!
}

"""Snyk issue Summary Request"""
input InputSnykIssueSummaryRequest {
  """List of Snyk issue CWEs for filter"""
  cwes: [String]!

  """Snyk Organization id"""
  organizationId: String!

  """Snyk Project id"""
  projectId: String!
}

input InputSonarAssetSelection {
  """Asset id"""
  assetId: String!

  """include or exclude asset"""
  selectionMode: SonarSelectionMode!
}

input InputSonarAttackSelection {
  """Plugin Config"""
  pluginConfig: [InputPluginConfig]

  """plugin name"""
  plugin: String!

  """include or exclude plugin"""
  selectionMode: SonarSelectionMode!
}

input InputSonarDiscoveryScanConfig {
  """Root asset name and type pair to start asset discovery from"""
  assetNameToTypeList: [InputAssetNameToAssetTypePair]!
}

"""Sonar affected entity type info"""
input InputSonarEntity {
  """Asset entity type"""
  assetType: String!
}

"""Sonar vulnerability evidence"""
input InputSonarEvidence {
  """Sonar vulnerability evidences"""
  evidence: String!
}

input InputSonarScanSelectionConfig {
  """asset selection"""
  assetSelection: [InputSonarAssetSelection]!

  """Attack selection"""
  attackSelection: [InputSonarAttackSelection]
}

"""Sonar source"""
input InputSonarSource {
  """Sonar scan id"""
  scanId: String!

  """Sonar vulnerability evidences"""
  sonarEvidences: [InputSonarEvidence]!
}

input InputSonarV2ExistingAsset {
  """Sonar asset id"""
  id: String!
}

input InputSonarV2NewAsset {
  """Sonar asset name"""
  assetName: String!

  """Sonar asset type"""
  assetType: SonarV2AssetType
}

input InputSonarV2Plugin {
  """Sonar plugin mode"""
  pluginMode: SonarPluginV2Mode

  """Sonar plugin name"""
  pluginName: String
}

input InputSonarVulnerabilityScanConfig {
  """Selection configurations"""
  sonarScanSelectionConfig: InputSonarScanSelectionConfig
}

input InputSourceIdentity {
  astOverrideId: String
  originalSource: OriginalSource!
}

input InputSpanIngestionRuleCreateInput {
  """Rule targeting span attributes based on retention action and key match"""
  attributeRuleData: InputKeyValueRetentionRuleData

  """Provide ingestion stage for which rule is created"""
  ingestionStage: SpanIngestionRuleIngestionStage!

  """Rule targeting request headers based on retention action and key match"""
  requestHeaderRuleData: InputKeyValueRetentionRuleData

  """
  Rule targeting response headers based on retention action and key match
  """
  responseHeaderRuleData: InputKeyValueRetentionRuleData
}

input InputSpanIngestionRuleDeleteInput {
  """Id of the rule to delete"""
  id: String!
}

"""Input for span ingestion rules"""
input InputSpanIngestionRuleInput {
  """Filter to get results based on rule expiration"""
  expiredRuleFilter: InputExpiredRuleFilter

  """Return rules for the specified ingestion stage"""
  ingestionStage: SpanIngestionRuleIngestionStage!
}

input InputSpanIngestionRuleRankInput {
  """Id of the rule to rank"""
  id: String!

  """
  Id of the preceding rule after ranking. If not provided the rule will take the highest rank
  """
  precedingRuleId: String
}

input InputSpanIngestionRuleUpdateInput {
  """Id of the rule to update"""
  id: String!

  """Expiration for the rule"""
  expiration: DateTime

  """
  Provide a predicate to specify which data to act on. If no predicate is set, this rule will apply to all data
  """
  predicate: InputKeyValueRetentionRulePredicate

  """Define the type of retention action for the rule"""
  retentionAction: KeyValueRetentionRuleRetentionAction!

  """Describes the scope for which the rule applies. Unscoped if unset."""
  scope: InputKeyValueRetentionRuleScope
}

input InputSpanProcessingLogicalFilter {
  logicalOperator: LogicalOperator!
  spanFilters: [InputSpanProcessingRuleFilter]!
}

input InputSpanProcessingRateLimit {
  fixedWindowLimit: InputSpanProcessingWindowedRateLimit
  rateLimitType: SpanProcessingRateLimitType!
}

input InputSpanProcessingRateLimitConfig {
  apiEndpointCacheDuration: Duration!
  rateLimitStrategy: SpanProcessingRateLimitStrategy!
  traceLimitGlobal: InputSpanProcessingRateLimit!
  traceLimitPerEndpoint: InputSpanProcessingRateLimit!
}

input InputSpanProcessingRelationalFilter {
  field: SpanProcessingFilterField
  key: String
  relationalOperator: SpanProcessingRelationalOperator!
  value: Unknown!
}

input InputSpanProcessingRuleFilter {
  logicalSpanFilter: InputSpanProcessingLogicalFilter
  relationalSpanFilter: InputSpanProcessingRelationalFilter
}

input InputSpanProcessingWindowedRateLimit {
  quantityAllowed: Long!
  windowDuration: Duration!
}

"""Splunk integration config for notification channel"""
input InputSplunkIntegrationChannelConfig {
  """Splunk Integration ID"""
  splunkIntegrationId: String
}

input InputStatusCodeFilterConfig {
  rangeFilterConfigs: [InputIntRangeFilterConfig]!
}

input InputStatusCodeThreatScoreConfig {
  errorStatusCodeRegex: String!
  protocol: StatusCodeThreatScoreConfigProtocol!
  severityDowngradePolicy: StatusCodeThreatScoreConfigSeverityDowngradePolicy!
}

input InputStatusMapping {
  jiraStatus: String!
  traceableEntityStatus: TraceableEntityStatus!
}

input InputStringPredicate {
  relationalOperator: AstRelationalOperator!
  value: String!
}

input InputSubmitRunnerTaskRequest {
  """Allowed runners configuration"""
  allowedRunners: InputAllowedRunners!

  """Custom plugin test task details"""
  customPluginTestTask: InputCustomPluginTestTask!
}

input InputSubscription {
  apiEndpoints: Long!
  billingFrequency: BillingFrequency!
  edgeCalls: Long!
  subscriptionTier: SubscriptionTier!
}

input InputSubscriptionChangePreview {
  subscription: InputSubscription!
}

input InputSubscriptionInput {
  subscription: InputSubscription!
}

input InputSummarizeRequest {
  """Vulnerability summarize request given to the orchestrator"""
  vulnerabilitySummarizeRequest: InputVulnerabilitySummarizeRequest!
}

"""Syslog integration config for notification channel"""
input InputSyslogIntegrationChannelConfig {
  """Syslog Integration ID"""
  syslogIntegrationId: String!
}

input InputSyslogServerAccountTokenDetails {
  """Private Enterprise Number"""
  privateEnterpriseNumber: Long!

  """Token ID"""
  tokenId: String!
}

input InputSyslogServerConnectionDetails {
  """Syslog server connection host"""
  host: String!

  """Syslog server connection port"""
  port: Int!

  """Syslog server connection credential for authorization"""
  syslogServerCredential: InputSyslogServerCredentials
}

input InputSyslogServerCredentials {
  """Ssl ca credential for authorization"""
  sslCaCredential: String

  """syslog serve account details"""
  syslogServerAccountTokenDetails: InputSyslogServerAccountTokenDetails
}

input InputSystemComplianceIssueConfig {
  enabled: Boolean
  scopeOfDetection: InputPolicyScope

  """
  Parameters that control how issue detection is performed for system compliance.
  """
  issueDetectionParameters: [InputIssueDetectionParameter]!
}

"""Config for tagged events"""
input InputTaggedEventsAggregationConfig {
  """minimum tagged events to create actor"""
  minTaggedEventToCreateActor: Int!
}

input InputTagValue {
  key: String!
  values: [String]!
}

"""Input to create template based report"""
input InputTemplatedReportCreation {
  """Notification channels to which report output should be sent"""
  channelIds: [String]

  """Schedule configuration of report in case of daily schedule"""
  dailySchedule: InputDailySchedule

  """Email addresses to which report output should be sent"""
  emailAddresses: [String]

  """Whether scheduling is enabled for report"""
  enabled: Boolean!

  """Environment to which report belongs"""
  environmentId: String

  """Environments to which report belongs"""
  environmentIds: [String]

  """Report output format"""
  format: ReportFormat!

  """Schedule configuration of report in case of interval schedule"""
  intervalSchedule: InputIntervalSchedule

  """Timestamp when the report schedule was last executed"""
  lastExecutionTimestamp: DateTime

  """Report name"""
  name: String!

  """Configuration of various widget templates within the report"""
  templatesConfiguration: String!

  """Schedule configuration of report in case of weekly schedule"""
  weeklySchedule: InputWeeklySchedule
}

"""Filter to fetch templated reports"""
input InputTemplatedReportsFilter {
  """report creators"""
  creators: [String]

  """whether scheduling is enabled for report"""
  enabled: Boolean

  """Environment ID that the report belongs to"""
  environmentId: String

  """report schedule frequency"""
  frequency: ReportFrequency

  """Report ID"""
  id: String

  """report names"""
  names: [String]
}

"""Input to update template based report"""
input InputTemplatedReportUpdate {
  """Notification channels to which report output should be sent"""
  channelIds: [String]

  """Schedule configuration of report in case of daily schedule"""
  dailySchedule: InputDailySchedule

  """Email addresses to which report output should be sent"""
  emailAddresses: [String]

  """Whether scheduling is enabled for report"""
  enabled: Boolean!

  """Environment to which report belongs"""
  environmentId: String

  """Environments to which report belongs"""
  environmentIds: [String]

  """Report output format"""
  format: ReportFormat!
  id: String!

  """Schedule configuration of report in case of interval schedule"""
  intervalSchedule: InputIntervalSchedule

  """Timestamp when the report schedule was last executed"""
  lastExecutionTimestamp: DateTime

  """Report name"""
  name: String!

  """Configuration of various widget templates within the report"""
  templatesConfiguration: String!

  """Schedule configuration of report in case of weekly schedule"""
  weeklySchedule: InputWeeklySchedule
}

input InputTestAssertion {
  actualRhsValue: String
  actualValue: String
  assertionResult: AssertionResult

  """Data map"""
  dataMap: [InputAstMapData]!

  """Description of assertion"""
  description: String
  expectedLhsValue: String

  """Fixed assertion Id"""
  fixedAssertionId: String

  """Specifies if Assertion is enabled"""
  isEnabled: Boolean
  key: String!
  lhs: String
  matchOperator: AssertionMatchOperator!
  referenceValue: String
  rhs: String

  """Source identity"""
  sourceIdentity: InputSourceIdentity
}

input InputTestLevelScope {
  """Scan run number within the suite which contains the tests to verify"""
  scanRunNumber: Long!

  """ID of the suite which contains the tests to verify"""
  suiteId: String!

  """IDs of the tests to verify"""
  testIds: [String]!
}

input InputTestMutation {
  action: MutationAction!

  """Data map"""
  dataMap: [InputAstMapData]!

  """Description of mutation"""
  description: String

  """Fixed Mutation Id"""
  fixedMutationId: String

  """Specifies if mutation is enabled"""
  isEnabled: Boolean
  key: String!
  mutatedValue: String
  originalValue: String

  """Source identity"""
  sourceIdentity: InputSourceIdentity
}

input InputTestResultDetailsRequest {
  apiId: String!

  """Identifier for test result, either testId or testResultId"""
  identifier: InputTestResultIdentifier!
  pluginCategory: String!
  pluginName: String!

  """The scan ID for the test."""
  scanId: String!
}

"""Filter to query test results by"""
input InputTestResultFilterArgument {
  """Scan id to filter on"""
  scanId: String!

  """List of test Ids to filter on"""
  testIds: [String]!
}

"""Test Result Identifier : either testId or testResultId"""
input InputTestResultIdentifier {
  testId: String
  testResultId: String
}

input InputTestResultInfoFilterArgument {
  key: TestResultInfoFilterField!
  operator: AstFilterOperatorType!
  value: Unknown!
}

input InputTestResultInfoOrderArgument {
  sortField: TestResultInfoSortField!
  sortOrder: AstSortOrder!
}

"""Threat Activity filter argument"""
input InputThreatActivityFilter {
  key: ThreatActivityField!
  operator: FilterOperatorType!
  value: Unknown!
}

input InputThreatActivityGroupBy {
  key: ThreatActivityGroupByField!
}

"""Threat Activity order argument"""
input InputThreatActivityOrder {
  direction: OrderDirection
  key: ThreatActivityField!
}

input InputThreatActivityUnnestArgument {
  key: ThreatActivityField!
}

"""Threat Activity update argument"""
input InputThreatActivityUpdateArgument {
  key: ThreatActivityField!
  value: Unknown!
}

input InputThreatActorStateChangeEventCondition {
  actorStates: [ThreatActorState]
}

"""Threat scoring config change event condition"""
input InputThreatScoringConfigChangeEventCondition {
  """Threat scoring config types"""
  threatScoringConfigTypes: [ThreatScoringConfigType]!
}

input InputThresholdCountConfig {
  requiredCallsCount: Int
  requiredUniqueIpsCount: Int
  requiredUniqueUserIdsCount: Int
}

input InputThresholdFamilyConfig {
  diverseIpDiverseUserFamilyConfig: InputThresholdCountConfig
  diverseIpLimitedUserFamilyConfig: InputThresholdCountConfig
  limitedIpDiverseUserFamilyConfig: InputThresholdCountConfig
  limitedIpFamilyConfig: InputThresholdCountConfig
}

input InputThresholdOverrideConfig {
  requiredCallsCount: Int
}

input InputThresholdRegexConfig {
  regexList: [String]
  threshold: Int
}

input InputTimeRange {
  endTime: DateTime!
  startTime: DateTime!
}

input InputTokenExtractionRule {
  """
  Optionally define and use alias for the attribute key in the expression
  """
  alias: String

  """The attribute key to be used to get value"""
  key: String!

  """
  Optionally define regex capture rule to extract token value from the attribute
  value. It should have only one capture group. Ex: "(.*)\..*"
  """
  regexCapture: String
}

input InputTraceableAuth {
  enabled: Boolean!
}

input InputTraceableSpanProcessingLogicalFilter {
  logicalOperator: LogicalOperator!
  spanFilters: [InputTraceableSpanProcessingRuleFilter]!
}

input InputTraceableSpanProcessingRelationalFilter {
  field: TraceableSpanProcessingFilterField
  key: String
  relationalOperator: TraceableSpanProcessingRelationalOperator!
  value: Unknown!
}

input InputTraceableSpanProcessingRuleFilter {
  logicalSpanFilter: InputTraceableSpanProcessingLogicalFilter
  relationalSpanFilter: InputTraceableSpanProcessingRelationalFilter
}

input InputTrafficConfiguration {
  """Traffic type of the scan - Live/Generated/Replay"""
  generationTrafficType: GenerationTrafficType

  """
  List of GraphQl Schemas to be used for GENERATED traffic, other types of generated traffic must not be set
  """
  graphqlSchemaDetailsList: [InputGraphqlSchemaDetails]

  """
  Optional open api spec dependency graph as yaml text that can be set in case of open api spec based generated traffic scan
  """
  openApiSpecDependencyGraphYaml: String

  """
  List of Open API spec IDS to be used for GENERATED traffic, other types of generated traffic must not be set
  """
  openApiSpecsIds: [String]

  """
  List of Postman collections to be used for GENERATED traffic, other types of generated traffic must not be set
  """
  postmanCollectionDetailsList: [InputPostmanCollectionDetails]
  replayTraffic: InputReplayTraffic

  """
  Web Crawler configuration that can be set for web crawler discovery generated traffic scan
  """
  webCrawlerDiscoveryConfiguration: InputWebCrawlerConfiguration
}

"""Training action upsert"""
input InputTrainerActionUpsert {
  """Anomaly scope for the training action"""
  configScope: InputAnomalyScope!

  """Force learn action configuration"""
  forceLearnActionConfig: InputForceLearnActionConfig

  """Training action"""
  trainingAction: TrainingAction!

  """User role action configuration"""
  userRoleAction: InputUserRoleActionConfig

  """User scope action configuration"""
  userScopeAction: InputUserScopeActionConfig
}

input InputTrainingConfig {
  """API Discovery Config"""
  apiDiscoveryConfig: InputApiDiscoveryConfig
  apiNamingTrainingConfig: InputApiNamingTrainingConfig
  demoApplicationConfig: InputDemoApplicationConfig
  disabled: Boolean
  localTrainingConfig: InputLocalTrainingConfig
  metadataTrainingConfig: InputMetadataTrainingConfig
  sensitiveDataTrainingConfig: InputSensitiveDataTrainingConfig
  sessionTrainingConfig: InputSessionTrainingConfig
  type: TrainingConfigType!
  volumetricTrainingConfig: InputVolumetricTrainingConfig
  vulnerabilityTrainingConfig: InputVulnerabilityTrainingConfig
}

input InputTrainingConfigDelete {
  anomalyScope: InputAnomalyScope!
  trainingConfigs: [InputTrainingConfig]!
}

input InputTrainingConfigKeyValuePair {
  configKey: String!
  configValue: InputTrainingConfigValue!
}

input InputTrainingConfigUpdate {
  anomalyScope: InputAnomalyScope!
  trainingConfigs: [InputTrainingConfig]!
}

input InputTrainingConfigValue {
  apiCallSpikeTrainingConfigList: [InputApiCallSpikeTrainingConfig]
  customRulesConfigList: [InputCustomRuleConfig]
  demoApplicationDetection: InputDemoApplicationAutomaticDetection
  demoApplicationDefinition: InputDemoApplicationDefinition

  """Span Attribute Filter"""
  discoveryFilter: InputEntitySpanAttributeFilter
  entitySpanAttributeFilterConfigList: [InputEntitySpanAttributeFilterConfig]
  gibberishConfig: InputGibberishConfig
  int32: Int
  intList: [Int]
  minOccurrenceConfig: InputMinOccurrenceConfig
  modsecFilterConfig: InputModsecFilterConfig
  multiValuedStringParamRuleList: [InputMultiValuedStringParamRule]
  paramSusceptibilityConfig: InputParamSusceptibilityConfig
  segmentFilterConfig: InputSegmentFilterConfig
  segmentMergeConfig: [InputSegmentMergeConfig]

  """Static API Discovery Action"""
  staticApiDiscoveryAction: StaticApiDiscoveryAction
  statusCodeFilterConfig: InputStatusCodeFilterConfig
  stringList: [String]
  thresholdCountConfig: InputThresholdCountConfig
  thresholdFamilyConfig: InputThresholdFamilyConfig
  thresholdOverrideConfig: InputThresholdOverrideConfig
  thresholdRegexConfig: InputThresholdRegexConfig
  urlPathFilterConfig: InputUrlPathFilterConfig
  userAgentFilterConfig: InputUserAgentFilterConfig

  """User ID data config list"""
  userIdDataConfigList: [InputTrainingUserIdDataConfig]
  value: String
}

input InputTrainingScopeConfig {
  endpointIds: [String]!
  endpointLabels: [String]!
  urlRegexes: [String]!
}

input InputTrainingUserIdDataConfig {
  """User attribution extracted ID"""
  userAttributionExtractedId: Boolean

  """User attribution extracted ID from JWT"""
  userAttributionExtractedIdFromJwt: Boolean

  """User ID custom attribute"""
  userIdCustomAttribute: String

  """User ID source type"""
  userIdSourceType: TrainingUserIdSourceType!
}

input InputTransformationFunction {
  """Json extraction transform function"""
  jsonExtract: InputJsonExtractTransformationFunction
}

input InputUnlinkJiraIssueReferencesInput {
  references: [InputJiraIssueReference]!
}

input InputUpdateAgentTokenMetadataInput {
  id: String!
  name: String!
}

"""
Input for updating the status of all the fraud incident components linked to the incident
"""
input InputUpdateAllIncidentComponentsStatus {
  """
  Identifier of the fraud incident on which the status change will be applied to each linked component
  """
  incidentId: String!

  """
  Status of fraud incident component to which all the components linked to the incident will be updated to
  """
  status: FraudIncidentComponentStatus!
}

input InputUpdateAnomalyScoreContributions {
  anomalyScore: Int!
}

input InputUpdateApiSpec {
  """Whether the APIs should be discovered from the uploaded spec"""
  apiDiscoveryEnabled: Boolean

  """Whether the API inspector is disabled for the uploaded spec"""
  apiInspectorDisabled: Boolean

  """Whether the discovered APIs should be named as per the uploaded spec"""
  apiNamingEnabled: Boolean!
  id: String!

  """Name of the Open API spec"""
  name: String!

  """Spec path of the Open API spec"""
  specPath: String
}

input InputUpdateApiSpecConformanceScheduledJob {
  duration: Duration
  id: String!
  name: String
  status: ScheduledJobStatus
}

input InputUpdateApiTokenMetadataInput {
  id: String!
  name: String!
}

"""Request of update api for the AST feature config."""
input InputUpdateAstFeatureConfigRequest {
  enabledConfig: InputAstEnabledConfig
  environmentId: String
}

"""update AST hook"""
input InputUpdateAstHook {
  """Hook id"""
  id: String!

  """Hook type"""
  hookType: AstHookType

  """Auth mechanism type"""
  authMechanism: AuthMechanism

  """Hook description"""
  description: String

  """Hook code snippet"""
  hookScript: String

  """Hook name"""
  name: String
}

"""Update AST hook test"""
input InputUpdateAstHookTest {
  """Hook id"""
  id: String!

  """Hook test logs"""
  hookTestLogs: [String]

  """Status of ast hook test"""
  hookTestStatus: AstHookTestStatus
}

"""Update AST hooks V2"""
input InputUpdateAstHookV2 {
  """Hook id"""
  id: String!

  """Auth mechanism type"""
  advancedMode: InputAdvancedMode

  """Auth mechanism type v2"""
  authMechanismV2: AuthMechanismV2!

  """Hook description"""
  description: String

  """Hook config for normal mode"""
  hookConfig: InputHookConfig

  """Hook mode"""
  hookMode: HookMode!

  """Related hook test id"""
  astHookTestId: String

  """is the hook a draft"""
  isDraft: Boolean

  """Hook name"""
  name: String!

  """Role of the user of the hook"""
  role: AstHookUserRole!
}

"""Request to update ast override"""
input InputUpdateAstOverrideRequest {
  """Id of the override"""
  id: String!

  """Ast override info"""
  overrideInfo: InputAstOverrideInfo!
}

input InputUpdateAstPolicyV2Request {
  configuration: InputAstPolicyV2Configuration!
  description: String
  id: String!
  name: String!
}

input InputUpdateConfidenceScoringConfig {
  """Configured confidence score level"""
  confidenceScoreLevel: InputConfidenceScoreLevel!
}

"""Request to update custom test plugin"""
input InputUpdateCustomTestPluginRequest {
  codeSnippetDetails: InputCustomTestPluginCodeSnippetDetails!
  customTestPluginDetails: InputCustomTestPluginDetails!
  id: String!
  name: String!
}

"""Update custom vulnerability type request"""
input InputUpdateCustomVulnerabilityTypeRequest {
  """Custom vulnerability type id"""
  id: String!

  """Yaml configuration for the custom vulnerability type"""
  yamlConfiguration: String!
}

"""Updated Akamai integration details"""
input InputUpdatedAkamaiIntegrationDetails {
  """Akamai auth credentials"""
  authCredentials: InputAkamaiAuthCredentials

  """Akamai security policy configuration id"""
  configurationId: String!

  """Akamai security policy id on which custom rules will be created"""
  securityPolicyId: String!
}

"""Updated azure auth credentials"""
input InputUpdatedAzureAuthCredentials {
  """Azure client ID"""
  clientId: String!

  """Azure client secret"""
  clientSecret: String
}

"""Updated azure integration details"""
input InputUpdatedAzureIntegrationDetails {
  """Azure auth credentials"""
  azureAuthCredentials: InputUpdatedAzureAuthCredentials!

  """Azure environment"""
  azureEnvironment: AzureEnvironment!

  """Azure resource group details"""
  azureResourceGroupDetails: [InputAzureResourceGroupDetails]

  """Azure tenant ID"""
  azureTenantId: String!

  """Azure waf details"""
  azureWafDetails: InputAzureWafDetails

  """Azure waf policy details"""
  azureWafPolicyDetails: InputAzureWafPolicyDetails!

  """Azure integration details id"""
  id: String!

  """Azure subscription ID"""
  subscriptionId: String!
}

input InputUpdatedCloudflareIntegrationParams {
  apiToken: String
  email: String!
  zone: String!
}

"""Updated F5 integration details"""
input InputUpdatedF5IntegrationDetails {
  """F5 auth credentials"""
  authCredentials: InputF5AuthCredentials

  """F5 security policy name on which custom rules will be created"""
  securityPolicyName: String!

  """F5 URL on which F5 server is running"""
  url: String!
}

"""Updated Fortinet auth credentials"""
input InputUpdatedFortinetAuthCredentials {
  """Fortinet api key"""
  apiKey: String!
}

"""Updated Fortinet integration details"""
input InputUpdatedFortinetIntegrationDetails {
  """Fortinet auth credentials"""
  fortinetAuthCredentials: InputUpdatedFortinetAuthCredentials

  """Fortinet rule details"""
  fortinetRuleDetails: InputFortinetRuleDetails!
}

"""Updated Gcp auth credentials"""
input InputUpdatedGcpAuthCredentials {
  """Gcp service account key"""
  serviceAccountKey: String
}

"""Updated Gcp integration details"""
input InputUpdatedGcpIntegrationDetails {
  """Updated Gcp auth credentials"""
  authCredentials: InputUpdatedGcpAuthCredentials

  """Deny action response code in case of blocking"""
  denyActionResponseCode: DenyActionResponseCode

  """Gcp Project ID"""
  projectId: String!

  """Gcp security policy details"""
  securityPolicyDetails: InputGcpSecurityPolicyDetails!

  """Gcp security policy name on which custom rules will be applied"""
  securityPolicyName: String!
}

input InputUpdatedWafIntegrationDetails {
  """Description of the WAF integration"""
  description: String

  """Name of the WAF integration"""
  name: String!

  """Waf Integration Params"""
  updatedWafIntegrationParams: InputUpdatedWafIntegrationParams!

  """Scope for the WAF integration"""
  wafIntegrationScope: InputWafIntegrationScope

  """List of targets for the WAF"""
  wafIntegrationTargets: [InputWafIntegrationTarget]
}

"""WAF Integration Update Details"""
input InputUpdatedWafIntegrationParams {
  """Akamai WAF Integration Update Params"""
  akamaiIntegrationUpdateParams: InputAkamaiIntegrationUpdateParams

  """AWS WAF Integration Update Details"""
  awsIntegrationUpdateParams: InputAwsIntegrationUpdateParams

  """Azure WAF Integration Update Details"""
  azureIntegrationUpdateParams: InputAzureIntegrationUpdateParams

  """F5 WAF Integration Update Params"""
  f5IntegrationUpdateParams: InputF5IntegrationUpdateParams

  """Fortinet WAF Integration Update Params"""
  fortinetIntegrationUpdateParams: InputFortinetIntegrationUpdateParams

  """Gcp WAF Integration Update Params"""
  gcpIntegrationUpdateParams: InputGcpIntegrationUpdateParams

  """Imperva WAF Integration Update Details"""
  impervaIntegrationUpdateParams: InputImpervaIntegrationUpdateParams

  """WAF integration type"""
  integrationType: WafProviderType!

  """Cloudflare WAF Integration Update Details"""
  updatedCloudflareIntegrationParams: InputUpdatedCloudflareIntegrationParams
}

input InputUpdateEventScoreContributions {
  criticalScore: Int
  highScore: Int!
  lowScore: Int!
  mediumScore: Int!
}

input InputUpdateEventTypeContribution {
  kind: EventTypeContributionKind!
}

input InputUpdateImpactScoringConfig {
  """Configured impact score level"""
  impactScoreLevel: InputImpactScoreLevel!
}

input InputUpdateIpReputationThreatScoreConfig {
  criticalIpReputationThreatScoreIncrement: Int!
  highIpReputationThreatScoreIncrement: Int!
  lowIpReputationThreatScoreIncrement: Int!
  mediumIpReputationThreatScoreIncrement: Int!
}

"""Request to update configuration details for issues"""
input InputUpdateIssueConfigRequest {
  """The configurable settings for the issue that can be updated"""
  issueConfigUpdate: InputIssueConfig!

  """The unique identifier of the issue to be updated"""
  updateIssueIdentifier: InputUpdateIssueIdentifier!
}

input InputUpdateIssueIdentifier {
  """Category of the issue"""
  issueCategory: String!

  """Type of the issue"""
  issueType: String!
}

input InputUpdateJiraIntegrationInput {
  description: String!
  environmentIds: [String]
  integrationId: String
  name: String!
}

input InputUpdateLabel {
  color: String
  description: String
  id: String!
  key: String!
}

input InputUpdatePolicyRequest {
  policy: InputPolicy!
}

input InputUpdateProjectIssueConfigurationDetail {
  configurationId: String!
  jiraBidirectionalSyncIsEnabled: Boolean!
  jiraStatusMappingConfiguration: InputJiraStatusMappingConfiguration!
}

input InputUpdateProjectIssueConfigurationsInput {
  updateProjectIssueConfigurationDetails: [InputUpdateProjectIssueConfigurationDetail]!
}

input InputUpdateRoleInput {
  """role id"""
  id: String!

  """Description of the role"""
  description: String!

  """Name of the role"""
  name: String!

  """Permissions granted by the role"""
  permissions: [String]!
}

"""
Update request for updating runner logs persistence config. Whichever of the
different log types configs is set is only considered for update
"""
input InputUpdateRunnerLogsPersistenceConfigRequest {
  """Ast scan logs persistence config to update with"""
  astScanLogsPersistenceConfigUpdate: InputAstScanLogsPersistenceConfigUpdate!
}

"""
Update request for updating runner logs purge config. Whichever of the different
log types configs is set is only considered for update
"""
input InputUpdateRunnerLogsPurgeConfigRequest {
  """Ast scan logs purge config to update with"""
  astScanLogsPurgeConfigUpdate: InputAstScanLogsPurgeConfigUpdate!
}

"""Update Scan Evaluation Criteria Request"""
input InputUpdateScanEvaluationCriteriaRequest {
  """Description of Scan Evaluation Criteria"""
  description: String

  """Evaluation Expression of Scan Evaluation Criteria"""
  expression: InputScanEvaluationCriteriaEvaluationExpression!

  """Id of Scan Evaluation Criteria"""
  id: String!

  """Name of Scan Evaluation Criteria"""
  name: String!

  """Rules of Scan Evaluation Criteria"""
  rules: [InputScanEvaluationCriteriaRule]!
}

input InputUpdateScanPolicyRequest {
  integrationDetails: InputIntegrationDetails
  policyConfiguration: InputPolicyConfiguration!
  scanPolicyId: String!
  scanPolicyName: String!
}

"""Update request for updating scan purge config"""
input InputUpdateScanPurgeConfigRequest {
  """Purge config to update with"""
  purgeConfig: InputScanPurgeConfig!
}

input InputUpdateScanStatusRequest {
  id: String!
  status: ScanStatus!
}

input InputUpdateScanSuiteRequest {
  advanceConfiguration: InputAdvanceScanSuiteConfiguration
  configuration: InputScanSuiteConfiguration!
  description: String
  hookConfiguration: InputScanSuiteHookConfiguration
  id: String!
  integrationDetails: [InputIntegrationDetails]
  name: String!
  priorityDetails: InputScanSuitePriorityDetails
  scanEvaluationCriteriaConfiguration: InputScanSuiteScanEvaluationCriteriaConfiguration!
  scheduleJobConfiguration: InputScanSuiteScheduleJobConfiguration
}

input InputUpdateScheduledJob {
  dailySchedule: InputDailySchedule
  duration: Duration
  id: String!

  """Schedule configuration of scan in case of monthly schedule"""
  monthlySchedule: InputMonthlySchedule
  name: String
  status: ScheduledJobStatus
  weeklySchedule: InputWeeklySchedule
}

"""Update request for data protection config"""
input InputUpdateScopedDataProtectionConfigRequest {
  """Data protection config"""
  config: InputDataProtectionConfig!

  """Scope of the data protection config"""
  scope: InputDataProtectionScope
}

"""Update security scheme role and relationships"""
input InputUpdateSecuritySchemeRoleInput {
  """The security scheme role relationships to be created"""
  applicableEndpoints: [InputEntityIdentifier]

  """List of environment ids to which the security scheme role applies"""
  environmentIds: [String]
  id: String!

  """The security scheme role name"""
  name: String!

  """The security scheme role's parent role ids"""
  parentRoleIds: [String]
}

"""Update security scheme scope and relationships"""
input InputUpdateSecuritySchemeScopeInput {
  """The security scheme role relationships to be created"""
  applicableEndpoints: [InputEntityIdentifier]

  """List of environment ids to which the security scheme scope applies"""
  environmentIds: [String]
  id: String!

  """The security scheme scope name"""
  name: String!

  """The security scheme scope's parent scope IDs"""
  parentScopeIds: [String]
}

input InputUpdateServerSyslogIntegrationInput {
  """Syslog Server Integration ID"""
  id: String!

  """Description of the Syslog server integration"""
  description: String

  """Name of the Syslog server integration"""
  name: String!

  """Syslog log format"""
  syslogLogFormat: SyslogLogFormat!

  """Syslog server connection details"""
  syslogServerConnectionDetails: InputSyslogServerConnectionDetails!
}

input InputUpdateSessionConfigurationInput {
  """Defines maximum absolute duration for the session"""
  maxAbsoluteSessionDuration: Duration!

  """Defines maximum inactive duration for the session"""
  maxIdleSessionDuration: Duration!
}

"""Updates Session Identification rule mutation fields"""
input InputUpdateSessionIdentificationRule {
  """Session Identification rule ID"""
  id: String!

  """Description for the Session Identification rule"""
  description: String

  """Session Identification rule name"""
  name: String!

  """Scope of the Session Identification rule"""
  scope: InputSessionIdentificationRuleScope

  """List of session token rules for the session identification rule"""
  sessionTokenRules: [InputSessionTokenRule]!

  """Status of the Session Identification rule"""
  status: InputSessionIdentificationRuleStatus
}

"""Request to update sonar scan"""
input InputUpdateSonarScanRequest {
  """asset selection"""
  assetSelection: [InputSonarAssetSelection]

  """Plugins to include in scan"""
  includePlugins: [String]

  """Scan id"""
  scanId: String!

  """Updated scan name"""
  scanName: String

  """Updated scan state"""
  scanState: SonarScanState
}

"""Request to update sonar scan"""
input InputUpdateSonarScanV2Request {
  """Scan id"""
  id: String!

  """Updated scan name"""
  scanName: String

  """Updated scan state"""
  scanState: SonarScanV2State
}

input InputUpdateSplunkIntegrationInput {
  """Splunk Integration ID"""
  id: String!

  """API access token to be used to authorize the Splunk integration"""
  apiToken: String

  """Description of the Splunk integration"""
  description: String

  """HEC URL of the Splunk integration"""
  httpEventCollectorUrl: String!

  """Name of the Splunk integration"""
  name: String!
}

input InputUpdateStatusCodeThreatScoreConfigs {
  statusCodeThreatScoreConfigs: [InputStatusCodeThreatScoreConfig]!
}

input InputUpdateThreatAutoBlocking {
  actionType: ThreatAutoBlockingActionType!
  duration: Duration

  """List of configs to exclude from auto blocking."""
  excludeConfigs: [InputExcludeAutoBlockingConfig]
}

input InputUpdateThreatScoreBounds {
  highScoreUpperBound: Int!
  lowScoreUpperBound: Int!
  mediumScoreUpperBound: Int!
}

"""Updates User Attribution rule mutation fields"""
input InputUpdateUserAttributionRule {
  """User Attribution rule ID"""
  id: String!

  """Rule to extract authentication type"""
  authTypeRule: InputUserAttributionTokenRule

  """List of custom token rules"""
  customTokenRules: [InputUserAttributionCustomTokenRule]!

  """Description for the User Attribution rule"""
  description: String

  """User Attribution rule name"""
  name: String!

  """Root token rule to extract root token in cases like JWT"""
  rootTokenRule: InputUserAttributionRootTokenRule

  """Scope of the User Attribution rule"""
  scope: InputUserAttributionRuleScopeV2

  """To determine if rule is user created or automatically created"""
  source: UserAttributionRuleSource

  """Status of the User Attribution rule"""
  status: InputUserAttributionRuleStatus!

  """Template used for the User Attribution rule"""
  template: UserAttributionRuleTemplate!

  """Rule to extract user id"""
  userIdRule: InputUserAttributionTokenRule

  """Rule to extract user role"""
  userRoleRule: InputUserAttributionTokenRule

  """Rule to extract user scope"""
  userScopeRule: InputUserAttributionTokenRule
}

"""Input for update user request"""
input InputUpdateUserInput {
  """roles for the user"""
  assignedRoles: [InputRoleInput]!

  """email of the user"""
  email: String!
}

input InputUpdateVulnerabilityMetadataRequest {
  categoryName: String!
  customTags: InputCustomTags
  cvssScore: Float
  cvssVectorString: String
  estimatedFixTime: Duration
  id: String!
  subCategoryName: String!
  vulnerabilityV2Severity: VulnerabilityV2Severity
}

"""Update vulnerability status change config request"""
input InputUpdateVulnerabilityStatusChangeConfigRequest {
  """Vulnerability status change criteria"""
  vulnerabilityStatusChangeCriteria: InputVulnerabilityStatusChangeCriteria!

  """Vulnerability status change config id"""
  id: String!
}

input InputUpdateVulnerabilityV2Request {
  id: String!
  status: VulnerabilityV2Status!
}

"""Update vulnerability request"""
input InputUpdateVulnerabilityV3Request {
  """Vulnerability id of the vulnerability to be updated"""
  id: String!

  """Status to which the vulnerability status is to be updated to"""
  status: VulnerabilityV3Status
}

input InputUpdateWafIntegrationInput {
  id: String!
  updatedWafIntegrationDetails: InputUpdatedWafIntegrationDetails!
}

input InputUpsertApiAttributesOverrideRequest {
  apiId: String!
  attributeOverrides: [InputAttributeOverride]!
}

input InputUrlPathFilterConfig {
  urlPathRegexPatterns: [String]!
}

input InputUserAgentFilterConfig {
  botAgentList: [String]!
}

input InputUserAttributionCreateInput {
  custom: InputCustomUserAttributionData

  """User attribution rule data in JSON format"""
  customJson: InputCustomJsonUserAttributionData
  customScope: InputUserAttributionRuleCustomScope
  customToken: InputCustomTokenData
  jwt: InputJwtUserAttributionData
  name: String!
  requestHeader: InputRequestHeaderUserAttributionRuleData
  responseBody: InputResponseBodyUserAttributionData
  scopeType: UserAttributionRuleScopeType
  type: UserAttributionRuleType!
}

"""Class to identify user attribution custom token rule"""
input InputUserAttributionCustomTokenRule {
  """Name of the attribute to be added"""
  attributeName: String!

  """Attribute projection for extracting user attribution attributes"""
  attributeProjection: InputUserAttributionTokenAttributeProjection

  """Custom projection for extracting user attribution attributes"""
  customProjection: InputUserAttributionTokenCustomProjection

  """Literal value projection"""
  literalValueProjection: InputUserAttributionTokenLiteralValueProjection

  """Obfuscation strategy for the extracted user attribute"""
  obfuscationStrategy: UserAttributionTokenObfuscationStrategy

  """UserAttributionToken token conditional predicate"""
  predicate: InputUserAttributionTokenPredicate

  """Projection type for extracting user attribution attributes"""
  projectionType: UserAttributionTokenProjectionType!

  """Projection relative to root projection"""
  rootRelativeProjection: InputUserAttributionTokenRootRelativeProjection
}

input InputUserAttributionDeleteInput {
  id: String!
}

input InputUserAttributionRankInput {
  id: String!
  precedingRuleId: String
}

"""Class to identify user attribution root token rule"""
input InputUserAttributionRootTokenRule {
  """Attribute projection for extracting user attribution attributes"""
  attributeProjection: InputUserAttributionTokenAttributeProjection!

  """User attribution token conditional predicate"""
  predicate: InputUserAttributionTokenPredicate
}

input InputUserAttributionRule {
  custom: InputCustomUserAttributionData

  """User attribution rule data in JSON format"""
  customJson: InputCustomJsonUserAttributionData
  customScope: InputUserAttributionRuleCustomScope
  customToken: InputCustomTokenData
  disabled: Boolean
  id: String!
  jwt: InputJwtUserAttributionData
  name: String!
  rank: Int!
  requestHeader: InputRequestHeaderUserAttributionRuleData
  responseBody: InputResponseBodyUserAttributionData
  scopeType: UserAttributionRuleScopeType
  type: UserAttributionRuleType!
}

input InputUserAttributionRuleCondition {
  type: UserAttributionRuleConditionType!
  urlMatchRegex: String!
}

input InputUserAttributionRuleCustomScope {
  environmentScopes: [InputUserAttributionRuleEnvironmentScope]
  urlScopes: [InputUserAttributionRuleUrlScope]
}

input InputUserAttributionRuleEnvironmentScope {
  environmentName: String!
}

"""Scope of the User Attribution rule"""
input InputUserAttributionRuleScopeV2 {
  """List of environment names on which the rule should apply"""
  environmentNames: [String]

  """List of service name regexes on which the rule should apply"""
  serviceNameRegexes: [String]

  """List of service names on which the rule should apply"""
  serviceNames: [String]

  """List of url match regexes on which the rule should apply"""
  urlMatchRegexes: [String]
}

"""Filter to fetch user attribution rule"""
input InputUserAttributionRulesFilter {
  """Disable filter for User Attribution Rule"""
  disabled: Boolean

  """List of environment names on which the rule should apply"""
  environmentNames: [String]
}

"""Status of the User Attribution rule"""
input InputUserAttributionRuleStatus {
  """Flag to disable User Attribution rule"""
  disabled: Boolean!
}

input InputUserAttributionRuleUrlScope {
  urlMatchRegex: String!
}

"""Attribute projection for extracting user attributes"""
input InputUserAttributionTokenAttributeProjection {
  """Attribute key location for predicate matching"""
  attributeKeyLocation: UserAttributionTokenKeyLocation!

  """Matching condition for the attribute key"""
  matchCondition: InputUserAttributionTokenKeyMatchCondition

  """
  List of value projections in order to extract value from user attribute
  """
  valueProjections: [InputUserAttributionTokenValueProjection]
}

"""Custom projection for extracting user attribution attributes"""
input InputUserAttributionTokenCustomProjection {
  """Custom json projection for extracting user attribution attributes"""
  customJson: String!
}

"""Json path projection for the attribute value"""
input InputUserAttributionTokenJsonPathProjection {
  """Json path for getting attribute value"""
  path: String!
}

"""Jwt payload claim projection for the attribute value"""
input InputUserAttributionTokenJwtPayloadClaimProjection {
  """key for getting attribute value from jwt"""
  claim: String!
}

"""Matching condition for the attribute key"""
input InputUserAttributionTokenKeyMatchCondition {
  """Matching operator for the value which needs to be matched"""
  matchOperator: UserAttributionTokenKeyMatchOperator!

  """String value which will be matched against some attribute"""
  stringValue: String
}

"""
UserAttributionToken token conditional predicate for matching against a request/response
"""
input InputUserAttributionTokenKeyPredicate {
  """Attribute projection for the key"""
  attributeProjection: InputUserAttributionTokenAttributeProjection!

  """Matching condition for the value"""
  valueMatchCondition: InputUserAttributionTokenValueMatchCondition
}

"""Literal value projection"""
input InputUserAttributionTokenLiteralValueProjection {
  """Literal value to be used as projection"""
  literalValue: String!
}

"""Logical predicate for matching against a request/response"""
input InputUserAttributionTokenLogicalPredicate {
  """Child predicates for matching against a request/response"""
  children: [InputUserAttributionTokenPredicate]!

  """Logical operator for children"""
  operator: LogicalOperator!
}

"""
UserAttributionToken token conditional predicate for matching against a request/response
"""
input InputUserAttributionTokenPredicate {
  """Attribute predicate for matching against a request/response"""
  attributePredicate: InputUserAttributionTokenKeyPredicate

  """Logical predicate for matching against a request/response"""
  logicalPredicate: InputUserAttributionTokenLogicalPredicate

  """Predicate type for UserAttributionToken token rule"""
  predicateType: UserAttributionTokenPredicateType!
}

"""Regex capture group projection for the attribute value"""
input InputUserAttributionTokenRegexCaptureGroupProjection {
  """Regex capture group for getting attribute value"""
  regexCaptureGroup: String!
}

"""Projections relative to root projection"""
input InputUserAttributionTokenRootRelativeProjection {
  """
  List of value projections in order to extract value from root projection
  """
  valueProjections: [InputUserAttributionTokenValueProjection]
}

"""Class to identify user attribute rule"""
input InputUserAttributionTokenRule {
  """Attribute projection for extracting user attribution attributes"""
  attributeProjection: InputUserAttributionTokenAttributeProjection

  """Custom projection for extracting user attribution attributes"""
  customProjection: InputUserAttributionTokenCustomProjection

  """Literal value projection"""
  literalValueProjection: InputUserAttributionTokenLiteralValueProjection

  """Obfuscation strategy for the extracted user attribute"""
  obfuscationStrategy: UserAttributionTokenObfuscationStrategy

  """UserAttributionToken token conditional predicate"""
  predicate: InputUserAttributionTokenPredicate

  """Projection type for extracting user attribution attributes"""
  projectionType: UserAttributionTokenProjectionType!

  """Projection relative to root projection"""
  rootRelativeProjection: InputUserAttributionTokenRootRelativeProjection
}

"""Matching condition for the attribute value"""
input InputUserAttributionTokenValueMatchCondition {
  """Matching operator for the value which needs to be matched"""
  matchOperator: UserAttributionTokenValueMatchOperator!

  """String value which will be matched against some attribute"""
  stringValue: String
}

"""Value projection to extract value from user attribute"""
input InputUserAttributionTokenValueProjection {
  """Json path projection for the attribute value"""
  jsonPathProjection: InputUserAttributionTokenJsonPathProjection

  """Jwt payload claim projection for the attribute value"""
  jwtPayloadClaimProjection: InputUserAttributionTokenJwtPayloadClaimProjection

  """Regex capture group projection for the attribute value"""
  regexCaptureGroupProjection: InputUserAttributionTokenRegexCaptureGroupProjection

  """Projection type for the attribute value"""
  valueProjectionType: UserAttributionTokenValueProjectionType!
}

input InputUserChangeEventCondition {
  userChangeTypes: [UserChangeType]!
}

"""Input for create user request"""
input InputUserInput {
  """Roles for the user"""
  assignedRoles: [InputRoleInput]!

  """Email of the user"""
  email: String!

  """Defines login info for the invite"""
  loginType: LoginType
}

input InputUserProvisionInfoV2 {
  googleAuth: InputGoogleAuth!
  samlAuth: InputSamlAuth!
  traceableAuth: InputTraceableAuth!
}

input InputUserProvisioningInput {
  domainBasedUserLoginEnabled: Boolean!
  domains: [String]
  samlConnectionIds: [String]
  ssoBasedUserLoginEnabled: Boolean!
}

"""User role action configuration"""
input InputUserRoleActionConfig {
  """Pause entity learn action configuration"""
  pauseEntityLearnAction: InputPauseEntityLearnActionConfig

  """User role action"""
  userRoleAction: UserRoleAction!
}

"""User scope action configuration"""
input InputUserScopeActionConfig {
  """Pause entity learn action configuration"""
  pauseEntityLearnAction: InputPauseEntityLearnActionConfig

  """User scope action"""
  userScopeAction: UserScopeAction!
}

input InputValidateSplunkIntegrationInput {
  """API access token to be used to authorize the Splunk integration"""
  apiToken: String

  """HEC URL of the Splunk integration"""
  httpEventCollectorUrl: String!

  """Splunk config id"""
  splunkConfigId: String
}

input InputValidateSyslogServerIntegrationInput {
  """Syslog server connection host"""
  host: String!

  """Syslog server connection port"""
  port: Int!

  """Syslog integration config ID"""
  syslogIntegrationConfigId: String

  """Syslog log format"""
  syslogLogFormat: SyslogLogFormat!

  """Syslog server connection credential for authorization"""
  syslogServerCredential: InputSyslogServerCredentials
}

"""
Threshold config which specifies unique values allowed over the given time range
"""
input InputValueBasedThresholdConfig {
  """Time range during which unique values are calculated"""
  duration: Duration!

  """
  Type of sensitive params evaluation, only applicable for sensitive params value type
  """
  sensitiveParamsEvaluationType: SensitiveParamsEvaluationType

  """Unique values allowed for specified time range"""
  uniqueValuesAllowed: Long!

  """Type of value based threshold config"""
  valueType: ValueBasedThresholdConfigType!
}

input InputVolumetricAnomalyDetectionConfig {
  keyValuePairs: [InputAnomalyDetectionConfigKeyValuePair]
  name: VolumetricAnomalyDetectionConfigName!
  ruleId: String
}

input InputVolumetricTrainingConfig {
  keyValuePairs: [InputTrainingConfigKeyValuePair]
  name: VolumetricTrainingConfigName!
}

input InputVulnerabilityAutoResolutionConfig {
  disabled: Boolean
}

"""Vulnerabilities burn down chart request"""
input InputVulnerabilityBurnDownChartRequest {
  """Environment names applicable for vulnerabilities"""
  environmentIds: [String]

  """Filter to be applied on vulnerabilities"""
  filter: InputVulnerabilityV3NestedFilter

  """
  The interval for aggregating the results. Defines the granularity of the time buckets within the specified time range.
  """
  interval: Duration!

  """The time range over which to retrieve vulnerability data."""
  timeRange: InputLastSeenTimeRange!

  """The state of the vulnerability"""
  vulnerabilityState: VulnerabilityState!
}

input InputVulnerabilityFilter {
  key: VulnerabilityField!
  operator: FilterOperatorType!
  value: Unknown!
}

input InputvulnerabilityFilterArgument {
  key: VulnerabilityFilterField!
  operator: AstFilterOperatorType!
  value: Unknown!
}

input InputVulnerabilityGroupByArgument {
  key: VulnerabilityGroupByField!
}

input InputVulnerabilityMetadataFilterArgument {
  severityList: [VulnerabilityV2Severity]!
}

input InputVulnerabilityMetadataFilterV2Argument {
  key: VulnerabilityMetadataFilterField!
  operator: AstFilterOperatorType!
  value: Unknown
}

input InputVulnerabilityMetadataTagsKeyValue {
  key: String
  value: String
}

input InputVulnerabilityOrder {
  direction: OrderDirection
  key: VulnerabilityField!
}

input InputVulnerabilityOrderArgument {
  sortField: VulnerabilitySortField!
  sortOrder: AstSortOrder!
}

"""Vulnerability Source Info"""
input InputVulnerabilitySource {
  """Sonar source info"""
  sonarSource: InputSonarSource

  """Specifies vulnerability source type"""
  vulnerabilitySourceType: VulnerabilitySourceType!
}

"""Vulnerability status change criteria"""
input InputVulnerabilityStatusChangeCriteria {
  """Security testing vulnerability auto resolution criteria"""
  securityTestingVulnerabilityAutoResolutionCriteria: InputSecurityTestingVulnerabilityAutoResolutionCriteria!
}

input InputVulnerabilityStatusUpdate {
  id: String!
  status: String!
}

input InputVulnerabilitySummarizeRequest {
  """Vulnerability ID to be summarized"""
  vulnerabilityId: String!

  """Contains data about the type and context of the request"""
  vulnerabilitySummarizeRequestContext: InputVulnerabilitySummarizeRequestContext!
}

input InputVulnerabilitySummarizeRequestContext {
  """The security testing vulnerability summarize request context"""
  securityTestingVulnerabilitySummarizeRequestContext: InputSecurityTestingVulnerabilitySummarizeRequestContext

  """
  The type of the vulnerability summarize request context (SECURITY_TESTING/RUNTIME_PROTECTION)
  """
  vulnerabilitySummarizeRequestContextType: VulnerabilitySummarizeRequestContextType!
}

input InputVulnerabilityTrainingConfig {
  autoResolutionConfig: InputVulnerabilityAutoResolutionConfig
  keyValuePairs: [InputTrainingConfigKeyValuePair]
  name: VulnerabilityTrainingConfigName!
}

input InputVulnerabilityV2StatsFilterArgument {
  key: VulnerabilityFilterField!
  operator: AstFilterOperatorType!
  value: Unknown!
}

input InputVulnerabilityV2StatsGroupByArgument {
  key: VulnerabilityV2StatsGroupByField!
}

"""Vulnerabilities group by argument"""
input InputVulnerabilityV3GroupByArgument {
  """Vulnerability group by field"""
  key: VulnerabilityV3GroupByField!
}

input InputVulnerabilityV3LogicalFilter {
  """nested filters list"""
  filters: [InputVulnerabilityV3NestedFilter]!

  """Filters operator"""
  operator: LogicalOperator!
}

"""Vulnerability filter. One of Logical or Relational filter is required."""
input InputVulnerabilityV3NestedFilter {
  """Logical vulnerability filter"""
  logicalFilter: InputVulnerabilityV3LogicalFilter

  """Relational vulnerability filter"""
  relationalFilter: InputVulnerabilityV3RelationalFilter
}

input InputVulnerabilityV3Order {
  """Order by direction"""
  direction: OrderDirection!

  """Vulnerability field to order by"""
  key: VulnerabilityV3Field!
}

input InputVulnerabilityV3RelationalFilter {
  """Vulnerability field upon which the filter is to be applied"""
  key: VulnerabilityV3Field!

  """Filter relational operator"""
  operator: FilterOperatorType!

  """Filter value"""
  value: Unknown!
}

"""Waf Activity log logical filter"""
input InputWafActivityLogLogicalFilter {
  """
  The individual activity log filters which have to be combined using the specified logical operator
  """
  filters: [InputWafActivityLogsFilterArgument]!

  """Logical operator to use to combine the specified filters"""
  logicalOperator: LogicalOperator!
}

"""Activity log order argument"""
input InputWafActivityLogOrderArgument {
  """Direction in which the activity logs should be ordered"""
  direction: OrderDirection

  """Waf activity log field on which the ordering is to be performed"""
  key: WafActivityEventField!
}

"""Waf activity log relational filter argument"""
input InputWafActivityLogRelationalFilter {
  """Waf activity log field on which the filter is to be applied"""
  key: WafActivityEventField!

  """Relational operator to be applied to match the key with the value"""
  operator: FilterOperatorType!

  """Value or the RHS to be used in the relational filter"""
  value: Unknown!
}

"""
Activity log filter which supports combining filters using logical operators
"""
input InputWafActivityLogsFilterArgument {
  """Activity log logical filter"""
  logicalFilter: InputWafActivityLogLogicalFilter

  """Activity log relational filter"""
  relationalFilter: InputWafActivityLogRelationalFilter
}

"""Waf connection validation input"""
input InputWafConnectionValidationInput {
  """Waf integration id"""
  id: String

  """Waf integration details for validation"""
  wafIntegrationDetails: InputWafValidationIntegrationDetails!
}

input InputWafIntegrationDetails {
  description: String
  name: String!
  wafIntegrationParams: InputWafIntegrationParams!
  wafIntegrationScope: InputWafIntegrationScope
  wafIntegrationTargets: [InputWafIntegrationTarget]
}

"""Waf Integration Environment scope"""
input InputWafIntegrationEnvironmentScope {
  """Environment ids"""
  environmentIds: [String]!
}

"""WAF Integration Details"""
input InputWafIntegrationParams {
  """Akamai WAF Integration params"""
  akamaiIntegrationParams: InputAkamaiIntegrationParams

  """AWS WAF Integration Details"""
  awsIntegrationParams: InputAwsIntegrationParams

  """Azure WAF Integration Details"""
  azureIntegrationParams: InputAzureIntegrationParams

  """Cloudflare WAF Integration Details"""
  cloudflareIntegrationParams: InputCloudflareIntegrationParams

  """F5 WAF Integration Details"""
  f5IntegrationParams: InputF5IntegrationParams

  """Fortinet WAF integration params"""
  fortinetIntegrationParams: InputFortinetIntegrationParams

  """GCP WAF Integration Details"""
  gcpIntegrationParams: InputGcpIntegrationParams

  """Imperva WAF Integration Details"""
  impervaIntegrationParams: InputImpervaIntegrationParams

  """Waf integration type"""
  integrationType: WafProviderType
}

"""Waf integration scope"""
input InputWafIntegrationScope {
  """Waf integration environment scope"""
  wafIntegrationEnvironmentScope: InputWafIntegrationEnvironmentScope
}

"""Targets for which the WAF is valid"""
input InputWafIntegrationTarget {
  """Rule target (if any) for the WAF"""
  ruleTarget: WafIntegrationTargetRuleType

  """Type of the WAF target"""
  targetType: WafIntegrationTargetType!
}

"""Waf integration details for validation"""
input InputWafValidationIntegrationDetails {
  """Azure WAF integration details for validation"""
  azureIntegrationParams: InputAzureValidationIntegrationParams

  """Waf integration type for validation"""
  integrationType: WafProviderType!
}

input InputWebCrawlerConfiguration {
  """Details to login the web application for crawling."""
  webCrawlerLoginDetails: InputWebCrawlerLoginDetails

  """Web Crawler scope for crawling"""
  webCrawlerScope: InputWebCrawlerScope!
}

input InputWebCrawlerLoginDetails {
  """Password required to login the web application"""
  loginPassword: String!

  """Username required to login the web application"""
  loginUsername: String!
}

input InputWebCrawlerScope {
  """Urls from which a web crawler will begin to traverse a site."""
  seedUrls: [String]!
}

input InputWebhookChannelConfig {
  url: String!
  webhookFormat: WebhookFormat!
}

input InputWebhookHeader {
  isSecret: Boolean!
  key: String!
  value: String
}

"""AWS WAF web identity authentication credentials"""
input InputWebIdentityAuthenticationCredentials {
  """AWS role ARN for connection"""
  roleArn: String!
}

"""Weekly schedule"""
input InputWeeklySchedule {
  """Scheduled day of week"""
  scheduledDay: DayOfWeek

  """List of scheduled days of week"""
  scheduledDays: [DayOfWeek]

  """Scheduled time of day"""
  scheduledTime: OffsetTime
}

input InputWizIntegrationCreateInput {
  """api endpoint url for Wiz integration"""
  apiEndpointUrl: String!

  """client id for Wiz integration"""
  clientId: String!

  """client secret for the Wiz integration"""
  clientSecret: String!

  """Description of the Wiz integration"""
  description: String

  """Name of the Wiz integration"""
  name: String!

  """token url for Wiz integration"""
  tokenUrl: String!

  """configuration for pulling wiz issues"""
  wizPullIssuesConfigDetails: InputWizPullIssuesConfigDetails

  """configuration for pushing traceable events to wiz"""
  wizPushEventsConfigDetails: InputWizPushEventsConfigDetails
}

input InputWizIntegrationDeleteInput {
  """wiz Integration ID"""
  id: String!
}

input InputWizIntegrationUpdateInput {
  """api endpoint url for Wiz integration"""
  apiEndpointUrl: String!

  """client id for Wiz integration"""
  clientId: String!

  """client secret for the Wiz integration"""
  clientSecret: String

  """Description of the Wiz integration"""
  description: String

  """Wiz Integration ID"""
  id: String!

  """Name of the Wiz integration"""
  name: String!

  """token url for Wiz integration"""
  tokenUrl: String!

  """configuration for pulling wiz issues"""
  wizPullIssuesConfigDetails: InputWizPullIssuesConfigDetails

  """configuration for pushing traceable events to wiz"""
  wizPushEventsConfigDetails: InputWizPushEventsConfigDetails
}

input InputWizIntegrationValidationInput {
  """client Id to validate the wiz connection"""
  clientId: String!

  """client secret to validate the wiz connection"""
  clientSecret: String

  """ID of the traceable wiz integration"""
  id: String

  """token url to validate the wiz connection"""
  tokenUrl: String!
}

"""wiz issues input filter"""
input InputWizIssueInputFilter {
  """issues ids list"""
  ids: [String]

  """related entity filter"""
  relatedEntity: InputWizIssueRelatedEntityFilter
}

"""related entity filter"""
input InputWizIssueRelatedEntityFilter {
  """related entities types"""
  types: [String]!
}

input InputWizPullIssuesConfigDetails {
  """set to true to enable pulling of wiz issues"""
  enabled: Boolean!
}

input InputWizPushEventsConfigDetails {
  """set to true to enable pushing of traceable event to wiz"""
  enabled: Boolean!

  """the wiz integration id from your wiz platform"""
  wizIntegrationId: String
}

type InsightCard {
  apiCategoryCard: ApiCategoryCard
  apiUserRoleCard: ApiUserRoleCard
  externalApiParamCard: ExternalApiParamCard
  internalApiParamCard: InternalApiParamCard
  requestBodySensitiveDataCard: RequestBodySensitiveDataCard
  responseBodySensitiveDataCard: ResponseBodySensitiveDataCard
  type: InsightCardType!
}

type InsightCardResultSet {
  count: Long!
  results: [InsightCard]!
  total: Long!
}

enum InsightCardType {
  """EXTERNAL_API_PARAM"""
  EXTERNAL_API_PARAM

  """INTERNAL_API_PARAM"""
  INTERNAL_API_PARAM

  """REQUEST_BODY_SENSITIVE_DATA"""
  REQUEST_BODY_SENSITIVE_DATA

  """RESPONSE_BODY_SENSITIVE_DATA"""
  RESPONSE_BODY_SENSITIVE_DATA

  """API_USER_ROLE"""
  API_USER_ROLE

  """API_CATEGORY"""
  API_CATEGORY
}

enum InsightsApiRiskContributorCategory {
  """LIKELIHOOD"""
  LIKELIHOOD

  """IMPACT"""
  IMPACT
}

type InsightsApiRiskElement {
  """The element id"""
  id: String!

  """The element predicate"""
  predicate: InsightsApiRiskElementPredicate!

  """The integer score value"""
  score: Int
}

enum InsightsApiRiskElementEnumOperator {
  """EQUALS"""
  EQUALS
}

type InsightsApiRiskElementEnumPredicate {
  """The list of matched contributors"""
  matchedTypes: [InsightsMatchedType] @deprecated(reason: "Deprecated")

  """The list of matched contributors"""
  matches: [String]

  """The predicate operator"""
  operator: InsightsApiRiskElementEnumOperator!

  """The value to be compared"""
  value: InsightsApiRiskElementEnumValues!
}

enum InsightsApiRiskElementEnumValues {
  """EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_NONE"""
  EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_NONE

  """EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_WEAK"""
  EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_WEAK

  """EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_STRONG"""
  EXTERNAL_UNENCRYPTED_AUTH_CATEGORY_STRONG

  """EXTERNAL_ENCRYPTED_AUTH_CATEGORY_NONE"""
  EXTERNAL_ENCRYPTED_AUTH_CATEGORY_NONE

  """EXTERNAL_ENCRYPTED_AUTH_CATEGORY_WEAK"""
  EXTERNAL_ENCRYPTED_AUTH_CATEGORY_WEAK

  """EXTERNAL_ENCRYPTED_AUTH_CATEGORY_STRONG"""
  EXTERNAL_ENCRYPTED_AUTH_CATEGORY_STRONG

  """INTERNAL_UNENCRYPTED_AUTH_CATEGORY_NONE"""
  INTERNAL_UNENCRYPTED_AUTH_CATEGORY_NONE

  """INTERNAL_UNENCRYPTED_AUTH_CATEGORY_WEAK"""
  INTERNAL_UNENCRYPTED_AUTH_CATEGORY_WEAK

  """INTERNAL_UNENCRYPTED_AUTH_CATEGORY_STRONG"""
  INTERNAL_UNENCRYPTED_AUTH_CATEGORY_STRONG

  """INTERNAL_ENCRYPTED_AUTH_CATEGORY_NONE"""
  INTERNAL_ENCRYPTED_AUTH_CATEGORY_NONE

  """INTERNAL_ENCRYPTED_AUTH_CATEGORY_WEAK"""
  INTERNAL_ENCRYPTED_AUTH_CATEGORY_WEAK

  """INTERNAL_ENCRYPTED_AUTH_CATEGORY_STRONG"""
  INTERNAL_ENCRYPTED_AUTH_CATEGORY_STRONG

  """PATH_PARAM_TYPE_NONE"""
  PATH_PARAM_TYPE_NONE

  """PATH_PARAM_TYPE_DIGIT"""
  PATH_PARAM_TYPE_DIGIT

  """PATH_PARAM_TYPE_STRING"""
  PATH_PARAM_TYPE_STRING

  """VULNERABILITY_SEVERITY_CRITICAL"""
  VULNERABILITY_SEVERITY_CRITICAL

  """VULNERABILITY_SEVERITY_HIGH"""
  VULNERABILITY_SEVERITY_HIGH

  """VULNERABILITY_SEVERITY_MEDIUM"""
  VULNERABILITY_SEVERITY_MEDIUM

  """VULNERABILITY_SEVERITY_LOW"""
  VULNERABILITY_SEVERITY_LOW

  """RESPONSE_SENSITIVITY_CRITICAL"""
  RESPONSE_SENSITIVITY_CRITICAL

  """RESPONSE_SENSITIVITY_HIGH"""
  RESPONSE_SENSITIVITY_HIGH

  """RESPONSE_SENSITIVITY_MEDIUM"""
  RESPONSE_SENSITIVITY_MEDIUM

  """RESPONSE_SENSITIVITY_LOW"""
  RESPONSE_SENSITIVITY_LOW
}

type InsightsApiRiskElementLongPredicate {
  """The value matched"""
  matchedValue: Long

  """The predicate operator"""
  operator: InsightsApiRiskElementNumberOperator!

  """The value to be compared"""
  value: Long!
}

enum InsightsApiRiskElementNumberOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS

  """GREATER_THAN"""
  GREATER_THAN

  """GREATER_THAN_EQUALS"""
  GREATER_THAN_EQUALS
}

type InsightsApiRiskElementPredicate {
  """The enum Predicate"""
  enumPredicate: InsightsApiRiskElementEnumPredicate

  """The long Predicate"""
  longPredicate: InsightsApiRiskElementLongPredicate

  """The predicate item name"""
  predicateItem: InsightsApiRiskElementPredicateItem!

  """The string Predicate"""
  stringPredicate: InsightsApiRiskElementStringPredicate
}

enum InsightsApiRiskElementPredicateItem {
  """EXTERNAL_UNENCRYPTED_AUTH_CATEGORY"""
  EXTERNAL_UNENCRYPTED_AUTH_CATEGORY

  """EXTERNAL_ENCRYPTED_AUTH_CATEGORY"""
  EXTERNAL_ENCRYPTED_AUTH_CATEGORY

  """INTERNAL_UNENCRYPTED_AUTH_CATEGORY"""
  INTERNAL_UNENCRYPTED_AUTH_CATEGORY

  """INTERNAL_ENCRYPTED_AUTH_CATEGORY"""
  INTERNAL_ENCRYPTED_AUTH_CATEGORY

  """PATH_PARAM_TYPE"""
  PATH_PARAM_TYPE

  """VULNERABILITY_SEVERITY"""
  VULNERABILITY_SEVERITY

  """RESPONSE_SENSITIVITY"""
  RESPONSE_SENSITIVITY

  """DEPENDENT_APIS_COUNT"""
  DEPENDENT_APIS_COUNT

  """THIRD_PARTY_APIS_COUNT"""
  THIRD_PARTY_APIS_COUNT

  """LABEL_ID"""
  LABEL_ID
}

enum InsightsApiRiskElementStringOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS
}

type InsightsApiRiskElementStringPredicate {
  """The predicate operator"""
  operator: InsightsApiRiskElementStringOperator!

  """The value to be compared"""
  value: String!
}

type InsightsApiRiskFactor {
  """The risk contributor category"""
  apiRiskContributorCategory: InsightsApiRiskContributorCategory!

  """The list of risk elements"""
  apiRiskElements: [InsightsApiRiskElement]!

  """The risk factor category"""
  apiRiskFactorCategory: InsightsApiRiskFactorCategory!

  """Whether the risk factor is disabled"""
  isDisabled: Boolean!
}

enum InsightsApiRiskFactorCategory {
  """EASE_OF_ACCESS"""
  EASE_OF_ACCESS

  """VULNERABILITY"""
  VULNERABILITY

  """RESOURCE_DISCOVERY"""
  RESOURCE_DISCOVERY

  """SENSITIVE_DATA_EXPOSURE"""
  SENSITIVE_DATA_EXPOSURE

  """BLAST_RADIUS"""
  BLAST_RADIUS

  """LABELS"""
  LABELS
}

type InsightsApiRiskLevelValues {
  """The minimum score required to consider a 'CRITICAL' risk severity"""
  criticalLevelMinScore: Int!

  """The minimum score required to consider a 'HIGH' risk severity"""
  highLevelMinScore: Int!

  """The minimum score required to consider a 'MEDIUM' risk severity"""
  mediumLevelMinScore: Int!
}

type InsightsApiRiskScoringGridCell {
  """The impact axis"""
  apiRiskImpactScoreCategory: ApiRiskScoreCategory!

  """The likelihood axis"""
  apiRiskLikelihoodScoreCategory: ApiRiskScoreCategory!

  """The integer score value"""
  score: Int!
}

enum InsightsMatchedType {
  """VULNERABILITY_TYPE_BASIC_AUTH_USED"""
  VULNERABILITY_TYPE_BASIC_AUTH_USED

  """VULNERABILITY_TYPE_LACK_OF_ENCRYPTION"""
  VULNERABILITY_TYPE_LACK_OF_ENCRYPTION

  """VULNERABILITY_TYPE_API_PARAM_CONTAINS_URL"""
  VULNERABILITY_TYPE_API_PARAM_CONTAINS_URL

  """VULNERABILITY_TYPE_QUERY_PARAM_CONTAINS_SENSITIVE_DATA"""
  VULNERABILITY_TYPE_QUERY_PARAM_CONTAINS_SENSITIVE_DATA

  """VULNERABILITY_TYPE_JAVA_SERIALIZED_OBJECT"""
  VULNERABILITY_TYPE_JAVA_SERIALIZED_OBJECT

  """VULNERABILITY_TYPE_MISSING_NOSNIFF_IN_CONTENT_TYPE_OPTIONS_HEADER"""
  VULNERABILITY_TYPE_MISSING_NOSNIFF_IN_CONTENT_TYPE_OPTIONS_HEADER

  """VULNERABILITY_TYPE_MISSING_HSTS_SECURITY_HEADER"""
  VULNERABILITY_TYPE_MISSING_HSTS_SECURITY_HEADER

  """VULNERABILITY_TYPE_PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA"""
  VULNERABILITY_TYPE_PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA

  """VULNERABILITY_TYPE_JAVA_LOG4J_JNDI_EXPLOITATION"""
  VULNERABILITY_TYPE_JAVA_LOG4J_JNDI_EXPLOITATION

  """VULNERABILITY_TYPE_JAVA_SPRING_CORE_RCE"""
  VULNERABILITY_TYPE_JAVA_SPRING_CORE_RCE

  """VULNERABILITY_TYPE_MISSING_CSP_SECURITY_HEADER"""
  VULNERABILITY_TYPE_MISSING_CSP_SECURITY_HEADER

  """VULNERABILITY_TYPE_DIRECTORY_LISTING"""
  VULNERABILITY_TYPE_DIRECTORY_LISTING

  """VULNERABILITY_TYPE_ENUMERABLE_PARAM"""
  VULNERABILITY_TYPE_ENUMERABLE_PARAM

  """VULNERABILITY_TYPE_DEPRECATED_API_ROUTE"""
  VULNERABILITY_TYPE_DEPRECATED_API_ROUTE

  """VULNERABILITY_TYPE_MULTIPLE_API_VERSIONS"""
  VULNERABILITY_TYPE_MULTIPLE_API_VERSIONS

  """VULNERABILITY_TYPE_EXCESS_DATA_EXPOSURE"""
  VULNERABILITY_TYPE_EXCESS_DATA_EXPOSURE

  """VULNERABILITY_TYPE_OPEN_REDIRECT"""
  VULNERABILITY_TYPE_OPEN_REDIRECT

  """VULNERABILITY_TYPE_MASS_PARAMETER_ASSIGNMENT"""
  VULNERABILITY_TYPE_MASS_PARAMETER_ASSIGNMENT

  """VULNERABILITY_TYPE_ERROR_BASED_SQL_INJECTION"""
  VULNERABILITY_TYPE_ERROR_BASED_SQL_INJECTION

  """VULNERABILITY_TYPE_JWT_WEAK_ALGO"""
  VULNERABILITY_TYPE_JWT_WEAK_ALGO

  """VULNERABILITY_TYPE_JWT_EXPIRATION_AND_ISSUED_AT_NOT_SET"""
  VULNERABILITY_TYPE_JWT_EXPIRATION_AND_ISSUED_AT_NOT_SET

  """VULNERABILITY_TYPE_SELF_SIGNED_JWT"""
  VULNERABILITY_TYPE_SELF_SIGNED_JWT

  """VULNERABILITY_TYPE_MISSING_GATEWAY_POLICY"""
  VULNERABILITY_TYPE_MISSING_GATEWAY_POLICY
}

enum InsightsParameterType {
  """HEADER"""
  HEADER

  """BODY"""
  BODY

  """QUERY"""
  QUERY

  """PATH"""
  PATH
}

type InstantReport {
  channelIds: [String]
  emailAddresses: [String]
  id: String!
}

type IntegerLimit {
  isUnlimited: Boolean!
  value: Long
}

"""Integration change event condition"""
type IntegrationChangeEventCondition {
  """List of integration notification event type"""
  integrationNotificationEventTypes: [IntegrationNotificationEventType]!

  """List of integration notification types"""
  integrationNotificationTypes: [IntegrationNotificationType]!
}

type IntegrationCorrelations {
  snykIntegrationCorrelations: [SnykIntegrationCorrelation]
}

type IntegrationDetails {
  snykIntegrationDetails: SnykIntegrationDetails
}

"""Integration event"""
type IntegrationEvent {
  """Integration ID"""
  id: String

  """Integration event type"""
  integrationEventType: IntegrationEventType!

  """Integration type"""
  integrationType: IntegrationType!

  """Integration name"""
  name: String
}

"""Integration event type"""
enum IntegrationEventType {
  """CREATE_CONFIG"""
  CREATE_CONFIG

  """UPDATE_CONFIG"""
  UPDATE_CONFIG

  """DELETE_CONFIG"""
  DELETE_CONFIG
}

"""Integration notification event type"""
enum IntegrationNotificationEventType {
  """CREATE_CONFIG"""
  CREATE_CONFIG

  """UPDATE_CONFIG"""
  UPDATE_CONFIG

  """DELETE_CONFIG"""
  DELETE_CONFIG
}

type IntegrationNotificationTarget {
  """The ID of the corresponding integration"""
  integrationId: String!

  """
  The type of integration for which the notification rule is being created
  """
  type: IntegrationNotificationTargetType!
}

enum IntegrationNotificationTargetType {
  """WIZ_INTEGRATION"""
  WIZ_INTEGRATION
}

"""Integration notification type"""
enum IntegrationNotificationType {
  """CLOUDFLARE_WAF"""
  CLOUDFLARE_WAF

  """AWS_WAF"""
  AWS_WAF

  """IMPERVA_WAF"""
  IMPERVA_WAF

  """AZURE_WAF"""
  AZURE_WAF

  """GCP_WAF"""
  GCP_WAF

  """F5_WAF"""
  F5_WAF

  """SPLUNK"""
  SPLUNK

  """SYSLOG"""
  SYSLOG

  """JIRA"""
  JIRA

  """SNYK"""
  SNYK

  """WIZ"""
  WIZ
}

"""Integration type"""
enum IntegrationType {
  """CLOUDFLARE_WAF"""
  CLOUDFLARE_WAF

  """AWS_WAF"""
  AWS_WAF

  """IMPERVA_WAF"""
  IMPERVA_WAF

  """AZURE_WAF"""
  AZURE_WAF

  """GCP_WAF"""
  GCP_WAF

  """F5_WAF"""
  F5_WAF

  """SPLUNK"""
  SPLUNK

  """SYSLOG"""
  SYSLOG

  """JIRA"""
  JIRA

  """SNYK"""
  SNYK

  """WIZ"""
  WIZ

  """AKAMAI_WAF"""
  AKAMAI_WAF
}

type InternalApiParamCard {
  numApisWithRequestBody: Long!
  numApisWithResponseBody: Long!
  numRequestHeaders: Long!
  numResponseHeaders: Long!
  totalApis: Long!
}

type IntervalArgument {
  size: Int!
  units: TimeUnit!
}

"""Interval schedule"""
type IntervalSchedule {
  """End time of day"""
  endTime: OffsetTime

  """Repeat period"""
  repeatPeriodHours: Int!

  """Start time of day"""
  startTime: OffsetTime
}

type IntRangeFilterConfig {
  exclusions: [Int]
  high: Int!
  low: Int!
}

type InvoiceDetails {
  apiEndpointsDue: Long!
  edgeCallsDue: Long!
  effectiveFrom: DateTime!
  totalAmountDue: Long!
}

"""
Indicates frequent abusive behaviour seen from the IP address in the recent past
"""
enum IpAbuseVelocity {
  """UNKNOWN"""
  UNKNOWN

  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH
}

"""Connection type associated with the IP address"""
enum IpConnectionType {
  """UNKNOWN"""
  UNKNOWN

  """RESIDENTIAL"""
  RESIDENTIAL

  """CORPORATE"""
  CORPORATE

  """EDUCATION"""
  EDUCATION

  """MOBILE"""
  MOBILE

  """DATA_CENTER"""
  DATA_CENTER
}

"""Location type associated with the IP address"""
enum IpLocationType {
  """ANONYMOUS_VPN"""
  ANONYMOUS_VPN

  """HOSTING_PROVIDER"""
  HOSTING_PROVIDER

  """PUBLIC_PROXY"""
  PUBLIC_PROXY

  """TOR_EXIT_NODE"""
  TOR_EXIT_NODE

  """BOT"""
  BOT
}

"""Metadata associated with the IP address"""
type IpMetadata {
  """ASN associated with the IP address"""
  asn: String

  """Geolocation derived from the IP address"""
  geolocation: Geolocation

  """
  Indicates frequent abusive behaviour seen from the IP address in the recent past
  """
  ipAbuseVelocity: IpAbuseVelocity

  """Connection type associated with the IP address"""
  ipConnectionType: IpConnectionType

  """Location types associated with the IP address"""
  ipLocationTypes: [IpLocationType]

  """IP Organization"""
  ipOrganization: String

  """Reputation level of the IP address"""
  ipReputationLevel: IpReputationLevel
}

type IpRangeEnvironmentScope {
  environmentIds: [String]!
}

enum IpRangeEventSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

type IpRangeExpirationDetails {
  expirationDuration: Duration!
  expirationTimestamp: DateTime!
}

type IpRangeRule {
  id: String
  disabled: Boolean!
  internal: Boolean!
  ruleDetails: IpRangeRuleDetails!
  ruleScope: IpRangeRuleScope
}

enum IpRangeRuleActionType {
  """RULE_ACTION_BLOCK"""
  RULE_ACTION_BLOCK

  """RULE_ACTION_ALLOW"""
  RULE_ACTION_ALLOW

  """RULE_ACTION_BLOCK_ALL_EXCEPT"""
  RULE_ACTION_BLOCK_ALL_EXCEPT

  """RULE_ACTION_ALERT"""
  RULE_ACTION_ALERT
}

"""Ip range rule agent effect"""
type IpRangeRuleAgentEffect {
  """Ip range rule agent modification"""
  agentModifications: [IpRangeRuleAgentModification]!
}

"""Malicious sources rule agent modification"""
type IpRangeRuleAgentModification {
  """Ip range rule agent modification type"""
  agentModificationType: IpRangeRuleAgentModificationType!

  """Ip range rule header injection"""
  headerInjection: IpRangeRuleHeaderInjection!
}

"""Malicious sources rule agent modification type"""
enum IpRangeRuleAgentModificationType {
  """Add a header with inline processing of request on matching conditions"""
  HEADER_INJECTION
}

type IpRangeRuleDetails {
  description: String
  effects: [IpRangeRuleEffectWithModification]
  eventSeverity: IpRangeEventSeverity
  expirationDetails: IpRangeExpirationDetails
  name: String!
  rawIpRangeData: [String]!
  ruleAction: IpRangeRuleActionType!
}

enum IpRangeRuleEffectModificationType {
  """Modifications to be done on agent"""
  AGENT_EFFECT
}

"""Ip range rule effect with modification"""
type IpRangeRuleEffectWithModification {
  """Effects enforced for agent while inline processing of requests"""
  agentEffect: IpRangeRuleAgentEffect!

  """Ip range rule effect modification type"""
  ruleEffectType: IpRangeRuleEffectModificationType!
}

"""Malicious sources header category"""
enum IpRangeRuleHeaderCategory {
  """Request header category"""
  REQUEST

  """Response header category"""
  RESPONSE
}

"""Actions associated with the rule"""
type IpRangeRuleHeaderInjection {
  """Header category"""
  headerCategory: IpRangeRuleHeaderCategory!

  """Header key"""
  key: String!

  """Header value"""
  value: String!
}

type IpRangeRuleResultSet {
  count: Long
  total: Long
  results: [IpRangeRule]!
}

type IpRangeRuleScope {
  environmentScope: IpRangeEnvironmentScope
}

"""Reputation level of the IP address"""
enum IpReputationLevel {
  """UNKNOWN"""
  UNKNOWN

  """CRITICAL"""
  CRITICAL

  """HIGH"""
  HIGH

  """MEDIUM"""
  MEDIUM

  """LOW"""
  LOW
}

type IpReputationThreatScoreConfig {
  criticalIpReputationThreatScoreIncrement: Int!
  defaultCriticalIpReputationThreatScoreIncrement: Int!
  defaultHighIpReputationThreatScoreIncrement: Int!
  defaultLowIpReputationThreatScoreIncrement: Int!
  defaultMediumIpReputationThreatScoreIncrement: Int!
  highIpReputationThreatScoreIncrement: Int!
  lowIpReputationThreatScoreIncrement: Int!
  mediumIpReputationThreatScoreIncrement: Int!
}

type IpTypeAnomalyConfig {
  """Minimum threshold for Abuse Velocity score for generating events"""
  abuseVelocityMinThreshold: AnomalyConfigAbuseVelocity!

  """Minimum threshold for Ip reputation score for generating events"""
  ipReputationScoreMinThreshold: Int!
}

type IssueConfig {
  """Configuration details for detecting for this custom compliance issue"""
  customCompliance: CustomComplianceIssueConfig

  """Description of issue"""
  description: String!

  """Display name of issue"""
  displayName: String!

  """
  The default severity level for the issue, used when no specific severity rules apply.
  """
  fallbackSeverity: VulnerabilitySeverity!

  """Indicates if issue detection is globally enabled across all sources."""
  globalEnableStatus: Boolean!

  """Issue Category"""
  issueCategory: String!

  """Issue category display name"""
  issueCategoryDisplayName: String!

  """
  Mapping of conditions (predicates) to assigned severity levels for this issue
  type. The severity of the first-matching-rule will be used
  """
  issueSeverityRules: [IssueSeverityRule]

  """Issue Type"""
  issueType: String!

  """Configuration details for detecting this issue in live traffic source"""
  liveTraffic: LiveTrafficIssueConfig

  """Configuration details for detecting this system compliance issue"""
  systemCompliance: SystemComplianceIssueConfig
}

type IssueConfigsResultSet {
  count: Long!

  """List of configs applicable to the issues"""
  results: [IssueConfig]!
  total: Long!
}

type IssueDetectionParameter {
  """current value for the parameter"""
  currentValue: Unknown!

  """Datatype of the parameter"""
  datatype: IssueDetectionParameterDatatype!

  """Parameter description"""
  description: String!

  """Display name for parameter"""
  displayName: String!

  """parameter key"""
  key: String!
}

type IssueDetectionParameterDatatype {
  """Enum datatype"""
  enumeration: IssueDetectionParameterEnumType

  """Integer datatype"""
  integer: IssueDetectionParameterIntegerType

  """Referenced datatype"""
  referenced: IssueDetectionParameterReferencedType

  """Timestamp datatype"""
  timestamp: IssueDetectionParameterTimestampType

  """Datatype of the detection parameter"""
  type: IssueDetectionParameterValueType!
}

type IssueDetectionParameterEnumType {
  """Possible values of the enum"""
  possibleEnumValues: [IssueDetectionParameterEnumTypePossibleValue]!
}

type IssueDetectionParameterEnumTypePossibleValue {
  """Display name enum"""
  displayName: String!

  """Enum name"""
  enumName: String!
}

type IssueDetectionParameterIntegerType {
  """Maximum possible value of the detection parameter"""
  maxValue: Int

  """Minimum possible value of the detection parameter"""
  minValue: Int
}

type IssueDetectionParameterReferencedType {
  """Possible values of the referenced field"""
  possibleValues: [IssueDetectionParameterReferenceTypePossibleValue]!
}

type IssueDetectionParameterReferenceTypePossibleValue {
  """Display name for the attribute"""
  displayName: String!

  """Attribute key"""
  key: String!
}

type IssueDetectionParameterTimestampType {
  """Format of the timestamp"""
  format: IssueDetectionParameterTimestampTypeFormat!
}

enum IssueDetectionParameterTimestampTypeFormat {
  """ISO_8601"""
  ISO_8601

  """EPOCH_MILLIS"""
  EPOCH_MILLIS
}

enum IssueDetectionParameterValueType {
  """BOOLEAN"""
  BOOLEAN

  """INTEGER"""
  INTEGER

  """STRING"""
  STRING

  """STRING_ARRAY"""
  STRING_ARRAY

  """INTEGER_ARRAY"""
  INTEGER_ARRAY

  """ENUM_ARRAY"""
  ENUM_ARRAY

  """ENUM"""
  ENUM

  """REFERENCED"""
  REFERENCED

  """TIMESTAMP"""
  TIMESTAMP
}

type IssueSeverityRule {
  """The filter condition to be matched for assigning the severity."""
  filter: GenericFilter!

  """
  Once the filter condition is matched this severity will be assigned to the issue.
  """
  severity: VulnerabilitySeverity!
}

type IssueTypeStatusDetail {
  """The jira issue type for which supported statuses are listed along."""
  issueType: String!

  """Contains list of status id and status names."""
  statusDetails: [StatusDetails]!
}

type JiraCloudIntegrationDetails {
  """Consumer key set in jira cloud"""
  consumerKey: String!
}

type JiraDataCenterIntegrationDetails {
  """Flag to enable mutual TLS"""
  isMtlsEnabled: Boolean!
}

type JiraDataSyncJob {
  createdBy: String!
  createdTimestamp: DateTime!
  executionMode: JobExecutionMode
  id: String!
  messages: [String]
  name: String
  source: JobSource
  status: JobStatus!
  statusUpdatedTimestamp: DateTime!
}

type JiraFieldConfiguration {
  fieldKey: String!
  overriddenDefaultValueJsonString: String
  overriddenDynamicValue: DynamicField
  traceableEntityType: JiraIssueReferenceType!
}

type JiraIntegration {
  """The consumer key created provided for create"""
  consumerKey: String @deprecated(reason: "moved into JiraIntegrationDetails")
  description: String!

  """Integration is scoped to these environments"""
  environmentIds: [String]!
  id: String

  """Flag to determine if bidirectional sync is enabled for integration"""
  jiraBidirectionalSyncIsEnabled: Boolean!

  """Type specific details about the jira integration"""
  jiraIntegrationDetails: JiraIntegrationDetails!

  """
  The url to jira provided for create, for example https://xyz.atlassian.net
  """
  loginUrl: String!
  name: String!
}

type JiraIntegrationDetails {
  """details about the jira cloud integration"""
  jiraCloudIntegrationDetails: JiraCloudIntegrationDetails

  """details about the jira data center integration"""
  jiraDataCenterIntegrationDetails: JiraDataCenterIntegrationDetails

  """the type of jira integration"""
  jiraIntegrationType: JiraIntegrationType!
}

type JiraIntegrationResultSet {
  count: Long!
  results: [JiraIntegration]!
  total: Long!
}

"""returns a set of jira integrations along with the jira public key"""
type JiraIntegrationsResponse {
  integrations: JiraIntegrationResultSet!
  publicKey: String!
}

enum JiraIntegrationType {
  """CLOUD"""
  CLOUD

  """DATA_CENTER"""
  DATA_CENTER
}

type JiraIssueDescriptionTemplate {
  """the Id of this template, can be for creating a jira issue"""
  id: String!

  """the template in the specified format as a string"""
  template: String!

  """the format of the template"""
  templateFormat: JiraIssueTemplateFormat!
}

type JiraIssueFieldSchema {
  allowedValues: [Unknown]
  defaultValue: Unknown
  key: String!
  name: String!
  valueType: JiraIssueFieldValueType!
}

enum JiraIssueFieldValueType {
  """NUMBER"""
  NUMBER

  """STRING"""
  STRING

  """OPTION"""
  OPTION

  """DATE"""
  DATE

  """DATETIME"""
  DATETIME

  """USER"""
  USER

  """ARRAY"""
  ARRAY

  """ARRAY_STRING"""
  ARRAY_STRING

  """ARRAY_USER"""
  ARRAY_USER

  """ARRAY_OPTION"""
  ARRAY_OPTION
}

enum JiraIssueReferenceType {
  """EVENT"""
  EVENT

  """VULNERABILITY"""
  VULNERABILITY

  """SENSITIVE_DATA"""
  SENSITIVE_DATA

  """API_CONFORMANCE"""
  API_CONFORMANCE

  """API_ENDPOINT_DETAIL"""
  API_ENDPOINT_DETAIL

  """AST_SCAN_VULNERABILITY"""
  AST_SCAN_VULNERABILITY

  """THREAT_ACTIVITY"""
  THREAT_ACTIVITY
}

type JiraIssueResponse {
  id: String
  type: JiraIssueReferenceType
  url: String
}

enum JiraIssueTemplateFormat {
  """ADF"""
  ADF

  """MARKDOWN"""
  MARKDOWN
}

type JiraIssueTemplatesResultSet {
  count: Long!
  templates: [JiraIssueDescriptionTemplate]!
  total: Long!
}

type JiraIssueType {
  fields: [JiraIssueFieldSchema]!
  type: String!
}

type JiraProject {
  """An optional default issue type to be pre-selected with the project"""
  defaultIssueType: JiraIssueType
  id: Int!
  issueTypes: [JiraIssueType]!
  name: String!
}

type JiraProjectIssueConfiguration {
  configurationId: String!
  jiraProjectIssueConfigurationDetails: JiraProjectIssueConfigurationDetails!
}

type JiraProjectIssueConfigurationDetails {
  fieldConfigurations: [JiraFieldConfiguration]
  integrationId: String!
  issueType: String!

  """Indicates whether JIRA bidirectional sync is enabled"""
  jiraBidirectionalSyncIsEnabled: Boolean!
  jiraStatusMappingConfiguration: JiraStatusMappingConfiguration!
  jiraTemplate: [JiraTemplate]
  projectId: String!
}

type JiraProjectStatusesResponse {
  """
  Contains list of project supported issue types and their respective statuses.
  """
  issueTypeStatusDetails: [IssueTypeStatusDetail]!
}

type JiraStatusMappingConfiguration {
  """List of Traceable to Jira Status Mappings"""
  statusMappings: [StatusMapping]!
}

type JiraTemplate {
  entityType: JiraIssueReferenceType!
  issueType: String!
  jiraTemplateDetails: JiraTemplateDetails!
  projectId: String!
  templateId: String!
}

type JiraTemplateDetails {
  adfFormatValue: String!
  markdownFormatValue: String!
  name: String!
}

"""Details of a user present in jira's system"""
type JiraUser {
  """Email of the user"""
  email: String!

  """id"""
  id: String!

  """Display name of the user"""
  name: String!
}

type JiraUsersResultSet {
  count: Long!
  results: [JiraUser]!
  total: Long!
}

enum JobExecutionMode {
  """INSTANT"""
  INSTANT

  """ON_DEMAND"""
  ON_DEMAND
}

enum JobField {
  """JOB_FIELD_ID"""
  JOB_FIELD_ID

  """JOB_FIELD_NAME"""
  JOB_FIELD_NAME

  """JOB_FIELD_CREATOR"""
  JOB_FIELD_CREATOR

  """JOB_FIELD_SOURCE"""
  JOB_FIELD_SOURCE

  """JOB_FIELD_STATUS"""
  JOB_FIELD_STATUS

  """JOB_FIELD_CREATED_TIMESTAMP_MILLIS"""
  JOB_FIELD_CREATED_TIMESTAMP_MILLIS

  """JOB_FIELD_LAST_UPDATED_TIMESTAMP_MILLIS"""
  JOB_FIELD_LAST_UPDATED_TIMESTAMP_MILLIS

  """JOB_FIELD_EXECUTION_MODE"""
  JOB_FIELD_EXECUTION_MODE

  """JOB_FIELD_INSTANCE_TYPE"""
  JOB_FIELD_INSTANCE_TYPE

  """JIRA_DATA_SYNC_JOB_SPEC_FIELD_ENVIRONMENT_IDS"""
  JIRA_DATA_SYNC_JOB_SPEC_FIELD_ENVIRONMENT_IDS
}

type JobQueryResult {
  """Selection of job fields"""
  selection(key: JobField!): JobValue
}

type JobQueryResultSet {
  count: Long!

  """Results of the job query"""
  results: [JobQueryResult]!
  total: Long!
}

enum JobSource {
  """SOURCE_USER"""
  SOURCE_USER

  """SOURCE_SYSTEM"""
  SOURCE_SYSTEM
}

enum JobStatus {
  """CREATED"""
  CREATED

  """SCHEDULED"""
  SCHEDULED

  """PROCESSING"""
  PROCESSING

  """SUCCESS"""
  SUCCESS

  """FAILED"""
  FAILED

  """TIMED_OUT"""
  TIMED_OUT
}

enum JobType {
  """JOB_TYPE_API_DEFINITION"""
  JOB_TYPE_API_DEFINITION

  """JOB_TYPE_SPEC_CONFORMANCE"""
  JOB_TYPE_SPEC_CONFORMANCE

  """JOB_TYPE_SECURITY_EVENT_INFO"""
  JOB_TYPE_SECURITY_EVENT_INFO

  """JOB_TYPE_AST_SCAN"""
  JOB_TYPE_AST_SCAN

  """JOB_TYPE_REPORTING"""
  JOB_TYPE_REPORTING

  """JOB_TYPE_WIZ_DATA_REFRESH"""
  JOB_TYPE_WIZ_DATA_REFRESH

  """JOB_TYPE_API_DISCOVERY"""
  JOB_TYPE_API_DISCOVERY

  """JOB_TYPE_API_INSPECTOR"""
  JOB_TYPE_API_INSPECTOR

  """JOB_TYPE_JIRA_DATA_SYNC"""
  JOB_TYPE_JIRA_DATA_SYNC
}

type JobValue {
  """job field data type"""
  type: AttributeType

  """job field value"""
  value: Unknown
}

"""A custom scalar to handle JSON objects"""
scalar JSON

type JsonExtractTransformationFunction {
  """Attribute expression"""
  attribute: AttributeExpression!

  """Json path"""
  jsonPath: String!
}

type JwtConfig {
  """Dynamically extract jwt"""
  dynamicJwt: DynamicJwt

  """Explicit Jwt token"""
  jwtToken: String

  """Jwt token extraction type"""
  jwtType: JwtType!

  """Info of where to place token in request"""
  requestTokenInfo: RequestTokenInfo!
}

"""A rule describing how to extract jwt from a request"""
type JwtExtractionRule {
  """Default rules have been provided by Traceable"""
  defaultRule: Boolean!

  """Activate or deactivate the rule"""
  disabled: Boolean

  """Rule ID"""
  id: String!

  """Extraction instructions from jwt"""
  instructions: [JwtExtractionRuleProcessingInstruction]!

  """Locations to search for jwt in span"""
  locations: [JwtExtractionRuleLocation]!

  """Rule Name"""
  name: String!

  """Predicate used to match against a request"""
  predicate: JwtExtractionRulePredicate

  """
  Scope for which the rule applies. If scope is unset, a rule is always applicable
  """
  scope: JwtExtractionRuleScope
}

type JwtExtractionRuleAction {
  actionType: JwtExtractionRuleActionType!
  addNewAttribute: String
}

"""Type of action processing jwt"""
enum JwtExtractionRuleActionType {
  """Add a new attribute"""
  ADD_NEW_ATTRIBUTE
}

"""Capture details from jwt field"""
type JwtExtractionRuleCapture {
  """Type of capture from jwt field"""
  captureType: JwtExtractionRuleCaptureType!

  """Regex with single capture group for capturing value"""
  regexCaptureGroup: String
}

"""Type of capture from jwt field"""
enum JwtExtractionRuleCaptureType {
  """RAW_VALUE"""
  RAW_VALUE

  """REGEX_CAPTURE_GROUP"""
  REGEX_CAPTURE_GROUP
}

"""
A complex predicate representing one or more children combined with a logical operator
"""
type JwtExtractionRuleCompositePredicate {
  """Child predicates"""
  children: [JwtExtractionRulePredicate]!

  """Operator to used for combining child predicates"""
  operator: LogicalOperator!
}

type JwtExtractionRuleEnvironmentScope {
  """A list of environment names where the rule is applicable"""
  environmentNames: [String]!
}

type JwtExtractionRuleLocation {
  """Location in span from which we try to extract jwt"""
  locationType: JwtExtractionRuleLocationType!

  """Path predicate representing a match against a jwt extraction rule"""
  pathPredicate: JwtExtractionRulePathPredicate

  """Regex with single capture group which extracts jwt from a value"""
  regexCaptureGroup: String

  """String predicate representing a match against a jwt extraction rule"""
  stringPredicate: JwtExtractionRuleStringPredicate
}

"""Type of location for extracting jwt"""
enum JwtExtractionRuleLocationType {
  """Header predicates use the JwtExtractionRuleLocation type"""
  REQUEST_HEADER_PREDICATE

  """Cookie predicates use the JwtExtractionRuleLocation type"""
  REQUEST_COOKIE_PREDICATE

  """Query Parameter predicates use the JwtExtractionRuleLocation type"""
  QUERY_PARAMETER_PREDICATE

  """Form Body predicates use the JwtExtractionRuleLocation type"""
  FORM_BODY_PREDICATE

  """JSON Body predicates use the JwtExtractionRuleLocation type"""
  JSON_BODY_PREDICATE
}

type JwtExtractionRulePathPredicate {
  predicateType: JwtExtractionRulePathPredicateType!
  stringPredicate: JwtExtractionRuleStringPredicate
}

"""Type of path predicate for extracting jwt"""
enum JwtExtractionRulePathPredicateType {
  """Key predicates using the JwtExtractionRulePathPredicate type"""
  KEY_PREDICATE
}

"""Predicate used to extract jwt on a request"""
type JwtExtractionRulePredicate {
  """Composite predicate representing a complex condition."""
  compositePredicate: JwtExtractionRuleCompositePredicate

  """
  The type of predicate populated. Only one predicate field should be assigned corresponding to this type
  """
  predicateType: JwtExtractionRulePredicateType!

  """String predicate representing a match against a jwt extraction rule"""
  stringPredicate: JwtExtractionRuleStringPredicate
}

"""Type of predicate extracting jwt"""
enum JwtExtractionRulePredicateType {
  """COMPOSITE_PREDICATE"""
  COMPOSITE_PREDICATE

  """URL_PREDICATE"""
  URL_PREDICATE
}

type JwtExtractionRuleProcessingInstruction {
  """Action to be performed after jwt extraction"""
  action: JwtExtractionRuleAction!

  """Parameters for extracting value from jwt"""
  valueExtraction: JwtExtractionRuleValueExtraction!
}

"""An operator for comparing against a string value"""
enum JwtExtractionRuleRelationalOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS

  """MATCHES_REGEX"""
  MATCHES_REGEX

  """NOT_MATCHES_REGEX"""
  NOT_MATCHES_REGEX
}

"""Result Set of Jwt Extraction Rules"""
type JwtExtractionRuleResultSet {
  count: Long
  total: Long

  """Rules matching the request"""
  results: [JwtExtractionRule]!
}

"""Scope for which an Jwt Extraction Rule applies"""
type JwtExtractionRuleScope {
  """Scope of the rule"""
  environmentScope: JwtExtractionRuleEnvironmentScope!
}

"""Source details inside jwt where we capture from"""
type JwtExtractionRuleSource {
  """Header key in jwt to extract from"""
  headerKey: String

  """Payload claim in jwt to extract from"""
  payloadClaimName: String

  """Location inside jwt where we capture from"""
  sourceType: JwtExtractionRuleSourceType!
}

"""Location inside jwt where we capture from"""
enum JwtExtractionRuleSourceType {
  """HEADER_KEY"""
  HEADER_KEY

  """PAYLOAD_CLAIM_NAME"""
  PAYLOAD_CLAIM_NAME
}

"""A predicate that compares against a string value"""
type JwtExtractionRuleStringPredicate {
  """Operator to use for comparison"""
  operator: JwtExtractionRuleRelationalOperator!

  """Value to compare against"""
  value: String!
}

type JwtExtractionRuleValueExtraction {
  """Source details inside jwt where we capture from"""
  capture: JwtExtractionRuleCapture!

  """Capture details from jwt field"""
  source: JwtExtractionRuleSource!
}

enum JwtType {
  """EXPLICIT_TOKEN"""
  EXPLICIT_TOKEN

  """DYNAMIC_TOKEN"""
  DYNAMIC_TOKEN
}

type JwtUserAttributionData {
  authentication: Authentication
  location: HeaderLocation!
  roleClaim: String
  roleLocation: DataLocation
  userIdClaim: String!
  userIdLocation: DataLocation
}

enum KeyGenAlgo {
  """SHA256"""
  SHA256

  """SHA1"""
  SHA1
}

type KeyValue {
  key: String!
  value: String!
}

"""A pair of a key and a value"""
type KeyValuePair {
  """String based key name"""
  key: String!

  """Value of a generic type"""
  value: Unknown!
}

type KeyValueRetentionRulePredicate {
  """Describes a key to match"""
  targetKeyPredicate: KeyValueRetentionRuleStringPredicate
}

enum KeyValueRetentionRuleRetentionAction {
  """RETAIN"""
  RETAIN

  """DISCARD"""
  DISCARD

  """DISCARD_VALUE"""
  DISCARD_VALUE
}

type KeyValueRetentionRuleScope {
  """A list of environment IDs for which this rule applies"""
  environmentIds: [String]
}

type KeyValueRetentionRuleStringPredicate {
  """
  If any value in conjunction with the operator matches, return true. Exactly one value or anyOfValues must be set.
  """
  anyOfValues: [String]

  """Operator for key match rule"""
  operator: SpanIngestionRuleKeyMatchOperator!

  """
  Value to match for key match rule. Exactly one value or anyOfValues must be set.
  """
  value: String
}

type Label {
  color: String
  description: String
  id: String!
  key: String!
  labelApplicationRules(limit: Int): LabelApplicationRuleResultSet!
  labeledEntities(type: String!, limit: Int): LabeledEntityResultSet!
}

type LabelApplicationAction {
  """Definition to generate dynamic labels"""
  dynamicLabel: DynamicLabel
  dynamicLabelKey: String
  entityTypes: [String]!
  operation: LabelApplicationActionOperator!
  staticLabels: LabelApplicationStaticLabels
  type: LabelApplicationActionType!
}

enum LabelApplicationActionOperator {
  """OPERATION_MERGE"""
  OPERATION_MERGE
}

enum LabelApplicationActionType {
  """STATIC_LABELS"""
  STATIC_LABELS

  """DYNAMIC_LABEL_KEY"""
  DYNAMIC_LABEL_KEY

  """DYNAMIC_LABEL"""
  DYNAMIC_LABEL
}

type LabelApplicationCondition {
  leafCondition: LabelApplicationLeafCondition!
}

type LabelApplicationLeafCondition {
  keyCondition: LabelApplicationStringCondition!
  valueCondition: LabelApplicationValueCondition!
}

type LabelApplicationRule {
  id: String!
  labelApplicationRuleData: LabelApplicationRuleData!
}

type LabelApplicationRuleConfigurationChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

type LabelApplicationRuleData {
  action: LabelApplicationAction!
  conditionList: [LabelApplicationCondition]!
  description: String
  enabled: Boolean!
  name: String!
}

type LabelApplicationRuleResultSet {
  count: Long!
  results: [LabelApplicationRule]!
  total: Long!
}

type LabelApplicationStaticLabels {
  ids: [String]!
}

type LabelApplicationStringCondition {
  operator: StringConditionOperator!
  stringConditionValueType: StringConditionValueType
  value: String
  values: [String]
}

type LabelApplicationUnaryCondition {
  operator: UnaryConditionOperator!
}

type LabelApplicationValueCondition {
  stringCondition: LabelApplicationStringCondition
  unaryCondition: LabelApplicationUnaryCondition
  valueConditionType: ValueConditionType!
}

"""Event type condition for Label Config"""
type LabelConfigChangeCondition {
  """Represents operation on Label Config i.e Create/Update/Delete """
  labelConfigChangeTypes: [LabelConfigChangeType]!

  """Represents type of Label Config """
  labelConfigTypes: [LabelConfigType]!
}

"""Represents operation of config """
enum LabelConfigChangeType {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE

  """DELETE"""
  DELETE
}

"""Represents type of label config"""
enum LabelConfigType {
  """LABEL_APPLICATION_RULE"""
  LABEL_APPLICATION_RULE

  """LABEL_RULE"""
  LABEL_RULE
}

"""Label Configuration change details"""
type LabelConfigurationChange {
  labelApplicationRuleConfigurationChange: LabelApplicationRuleConfigurationChange
  labelRuleConfigurationChange: LabelRuleConfigurationChange
  type: LabelConfigurationType!
}

enum LabelConfigurationType {
  """LABEL_APPLICATION_RULE_CHANGE"""
  LABEL_APPLICATION_RULE_CHANGE

  """LABEL_RULE_CHANGE"""
  LABEL_RULE_CHANGE
}

type LabeledEntity {
  attribute(key: String, expression: InputAttributeExpression): Unknown
  id: String!
}

type LabeledEntityResultSet {
  count: Long!
  results: [LabeledEntity]!
  total: Long!
}

type LabelResultSet {
  count: Long!
  results: [Label]!
  total: Long!
}

type LabelRuleConfigurationChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

type LandSpeedViolationConfig {
  """List of IpTypes (AND) to belong to for an ip to be considered"""
  ipTypes: [AnomalyConfigIpType]

  """Minimum threshold for Abuse Velocity for ips to be considered"""
  minIpAbuseVelocity: AnomalyConfigAbuseVelocity

  """Minimum threshold for Ip reputation score for ips to be considered"""
  minIpReputationScore: Int

  """Minimum threshold for external ip addresses for generating events"""
  uniqueExternalIpAddressesMinCount: Int

  """Minimum threshold for unique user cities for generating events"""
  uniqueUserCitiesMinCount: Int
}

type LastSuiteScanDetails {
  lastScanStatus: ScanStatus
  pastScanIds: [String]
  scanStateDetails: ScanStateDetails
}

enum LearningEndpointStrategy {
  """MENTION"""
  MENTION

  """EXCLUDE"""
  EXCLUDE
}

type LevelThresholdConfig {
  gibberishThreshold: Int!
  highCardinalityThreshold: Int!
  idsThreshold: Int!
  level: Int!
  lowCardinalityThreshold: Int!
  mediumCardinalityThreshold: Int!
}

type License {
  entitlements: [Entitlement]!
  licenseExpiration: DateTime!
  licenseName: String!
}

"""License change details"""
type LicenseChange {
  licensedApiCallsChange: LongChange
  licensedApiEndpointsChange: LongChange
  newLicenseTier: LicenseTier!
  oldLicenseTier: LicenseTier!
}

type LicenseInfo {
  expiration: DateTime!
  numAllowedApis: IntegerLimit!
  numAllowedCalls: IntegerLimit!
  tier: LicenseTier!
}

enum LicenseTier {
  """INTERNAL"""
  INTERNAL

  """FREE"""
  FREE

  """TEAM"""
  TEAM

  """TEAM_TRIAL"""
  TEAM_TRIAL

  """ENTERPRISE"""
  ENTERPRISE

  """ENTERPRISE_TRIAL"""
  ENTERPRISE_TRIAL
}

type LiveTrafficIssueConfig {
  enabled: Boolean
  scopeOfDetection: PolicyScope

  """
  Parameters that control how issue detection is performed for live traffic source.
  """
  issueDetectionParameters: [IssueDetectionParameter]!
}

type LocalProcessingRule {
  creationTime: DateTime!
  hostHeader: String
  id: String!
  protectionMode: ProtectionMode!
  urlPattern: String!
}

type LocalProcessingRuleResultSet {
  count: Long!
  results: [LocalProcessingRule]!
  total: Long!
}

type LocalTrainingConfig {
  keyValuePairs: [TrainingConfigKeyValuePair]
  name: LocalTrainingConfigName!
}

enum LocalTrainingConfigName {
  """API_NAMING_TRAINING_CONFIG"""
  API_NAMING_TRAINING_CONFIG
}

type LogEvent {
  attribute(key: String, expression: InputAttributeExpression): Unknown
}

type LogEventResultSet {
  count: Long!
  results: [LogEvent]!
  total: Long!
}

"""
Logical operator describing how to combine multiple independent clauses
"""
enum LogicalOperator {
  """AND"""
  AND

  """OR"""
  OR
}

"""authentication type for the user"""
enum LoginType {
  """SAML"""
  SAML

  """LOCAL"""
  LOCAL

  """GOOGLE"""
  GOOGLE
}

"""Long type"""
scalar Long

type LongChange {
  newValue: Long!
  oldValue: Long!
}

"""
Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
"""
type MaliciousSourcesRule {
  """Rule ID"""
  id: String!

  """Malicious Sources rule information"""
  info: MaliciousSourcesRuleInfo!

  """Malicious Sources rule scope"""
  scope: MaliciousSourcesRuleScope

  """Malicious Sources rule status"""
  status: MaliciousSourcesRuleStatus!
}

"""Actions associated with the rule"""
type MaliciousSourcesRuleAction {
  """List of malicious sources rule effect with modification"""
  effects: [MaliciousSourcesRuleEffectWithModification]

  """Severity of events generated by the rule"""
  eventSeverity: MaliciousSourcesRuleEventSeverity

  """Expiration details of the rule"""
  expirationDetails: MaliciousSourcesRuleExpirationDetails

  """Rule Action"""
  ruleActionType: MaliciousSourcesRuleActionType!
}

"""Rule action"""
enum MaliciousSourcesRuleActionType {
  """Block all the request matching the rule"""
  BLOCK

  """Allow all requests"""
  ALLOW

  """Block all requests except the ones matching the rule"""
  BLOCK_ALL_EXCEPT

  """Alert all the request matching the rule"""
  ALERT
}

"""Malicious sources rule agent effect"""
type MaliciousSourcesRuleAgentEffect {
  """Malicious sources rule agent modification"""
  agentModifications: [MaliciousSourcesRuleAgentModification]!
}

"""Malicious sources rule agent modification"""
type MaliciousSourcesRuleAgentModification {
  """Malicious sources rule agent modification type"""
  agentModificationType: MaliciousSourcesRuleAgentModificationType!

  """Malicious sources rule header injection"""
  headerInjection: MaliciousSourcesRuleHeaderInjection!
}

"""Malicious sources rule agent modification type"""
enum MaliciousSourcesRuleAgentModificationType {
  """Add a header with inline processing of request on matching conditions"""
  HEADER_INJECTION
}

"""Condition for the malicious sources rule to be applied"""
type MaliciousSourcesRuleCondition {
  """Condition Type for a rule"""
  conditionType: MaliciousSourcesRuleConditionType!

  """Email domain conditions for the rule to be applied"""
  emailDomainCondition: MaliciousSourcesRuleEmailDomainCondition

  """IP address conditions for the rule to be applied"""
  ipAddressCondition: MaliciousSourcesRuleIpAddressCondition

  """IP location type conditions for the rule to be applied"""
  ipLocationTypeCondition: MaliciousSourcesRuleIpLocationTypeCondition

  """IP reputation conditions for the rule to be applied"""
  ipReputationCondition: MaliciousSourcesRuleIpReputationCondition

  """Region conditions for the rule to be applied"""
  regionCondition: MaliciousSourcesRuleRegionCondition
}

"""Condition Type for a rule"""
enum MaliciousSourcesRuleConditionType {
  """IP_ADDRESS"""
  IP_ADDRESS

  """REGION"""
  REGION

  """IP_LOCATION_TYPE"""
  IP_LOCATION_TYPE

  """IP_REPUTATION"""
  IP_REPUTATION

  """EMAIL_DOMAIN"""
  EMAIL_DOMAIN
}

enum MaliciousSourcesRuleEffectModificationType {
  """Modifications to be done on agent"""
  AGENT_EFFECT
}

"""Malicious sources rule effect with modification"""
type MaliciousSourcesRuleEffectWithModification {
  """Effects enforced for agent while inline processing of requests"""
  agentEffect: MaliciousSourcesRuleAgentEffect!

  """Malicious sources rule effect modification type"""
  ruleEffectType: MaliciousSourcesRuleEffectModificationType!
}

"""Email domain conditions for the rule to be applied"""
type MaliciousSourcesRuleEmailDomainCondition {
  """boolean denoting whether the rule should apply to data leaked email"""
  dataLeakedEmail: Boolean

  """
  boolean denoting whether the rule should apply to disposable email domains
  """
  disposableEmailDomain: Boolean

  """list of email domain where rule should apply"""
  emailDomains: [String]

  """email fraud score where rule should apply"""
  emailFraudScore: MaliciousSourcesRuleEmailFraudScore

  """list of email regexes where rule should apply"""
  emailRegexes: [String]
}

"""email fraud score where rule should apply"""
type MaliciousSourcesRuleEmailFraudScore {
  """Email Fraud Score type for a rule"""
  emailFraudScoreType: MaliciousSourcesRuleEmailFraudScoreType!

  """Minimum Email Fraud Score"""
  minEmailFraudScore: Int

  """Minimum Email Fraud Score Level"""
  minEmailFraudScoreLevel: MaliciousSourcesRuleEmailFraudScoreLevel
}

"""Email Fraud Score level for a rule"""
enum MaliciousSourcesRuleEmailFraudScoreLevel {
  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

"""Email Fraud Score type for a rule"""
enum MaliciousSourcesRuleEmailFraudScoreType {
  """MIN_SEVERITY"""
  MIN_SEVERITY

  """MIN_SCORE"""
  MIN_SCORE
}

"""Environment Scope on which the rule will apply"""
type MaliciousSourcesRuleEnvironmentScope {
  """List of environments on which the rule should apply"""
  environmentIds: [String]!
}

"""Severity of events generated by the rule"""
enum MaliciousSourcesRuleEventSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

"""Expiration details of the rule"""
type MaliciousSourcesRuleExpirationDetails {
  """Requested expiration duration for the rule"""
  expirationDuration: Duration!

  """Requested expiration timestamp for the rule"""
  expirationTimestamp: DateTime
}

"""Malicious sources header category"""
enum MaliciousSourcesRuleHeaderCategory {
  """Request header category"""
  REQUEST

  """Response header category"""
  RESPONSE
}

"""Actions associated with the rule"""
type MaliciousSourcesRuleHeaderInjection {
  """Header category"""
  headerCategory: MaliciousSourcesRuleHeaderCategory!

  """Header key"""
  key: String!

  """Header value"""
  value: String!
}

"""Malicious Sources rule information"""
type MaliciousSourcesRuleInfo {
  """Actions associated with the rule"""
  action: MaliciousSourcesRuleAction!

  """Condition for the malicious sources rule to be applied"""
  conditions: [MaliciousSourcesRuleCondition]!

  """Rule description"""
  description: String

  """Rule name"""
  name: String!
}

"""IP address conditions for the rule to be applied"""
type MaliciousSourcesRuleIpAddressCondition {
  """List of IP ranges following CIDR syntax"""
  cidrIpRanges: [String]

  """List of IP addresses"""
  ipAddresses: [String]
}

"""IP location type for a rule"""
enum MaliciousSourcesRuleIpLocationType {
  """ANONYMOUS_VPN"""
  ANONYMOUS_VPN

  """HOSTING_PROVIDER"""
  HOSTING_PROVIDER

  """PUBLIC_PROXY"""
  PUBLIC_PROXY

  """TOR_EXIT_NODE"""
  TOR_EXIT_NODE

  """BOT"""
  BOT
}

"""IP location type conditions for the rule to be applied"""
type MaliciousSourcesRuleIpLocationTypeCondition {
  """IP location types where rule should apply"""
  ipLocationTypes: [MaliciousSourcesRuleIpLocationType]!
}

"""IP reputation conditions for the rule to be applied"""
type MaliciousSourcesRuleIpReputationCondition {
  """IP reputation type for a rule"""
  ipReputationConditionType: MaliciousSourcesRuleIpReputationConditionType!

  """Minimum IP Reputation Score"""
  minIpReputationScore: Int

  """Minimum IP Reputation Severity Level"""
  minIpReputationSeverity: MaliciousSourcesRuleIpReputationSeverity
}

"""IP reputation type for a rule"""
enum MaliciousSourcesRuleIpReputationConditionType {
  """MIN_SEVERITY"""
  MIN_SEVERITY

  """MIN_SCORE"""
  MIN_SCORE
}

"""Severity of event generated by the rule"""
enum MaliciousSourcesRuleIpReputationSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

"""Region on which rule should apply"""
type MaliciousSourcesRuleRegion {
  """Country ISO code """
  countryIsoCode: String

  """Region Type for a rule"""
  regionType: MaliciousSourcesRuleRegionType!
}

"""Region conditions for the rule to be applied"""
type MaliciousSourcesRuleRegionCondition {
  """Regions on which rule should apply"""
  regions: [MaliciousSourcesRuleRegion]!
}

"""Region Type for a rule"""
enum MaliciousSourcesRuleRegionType {
  """COUNTRY_ISO_CODE"""
  COUNTRY_ISO_CODE
}

"""Malicious sources rules results"""
type MaliciousSourcesRuleResultSet {
  count: Long
  total: Long

  """List of Malicious Sources rules"""
  results: [MaliciousSourcesRule]!
}

"""Malicious Sources rule scope"""
type MaliciousSourcesRuleScope {
  """Environment Scope on which the rule will apply"""
  environmentScope: MaliciousSourcesRuleEnvironmentScope
}

"""Malicious Sources rule status"""
type MaliciousSourcesRuleStatus {
  """Disables rule"""
  disabled: Boolean!

  """
  Sets rule as internal, visible only to traceable users. Consumed only if disabled is set to true
  """
  internal: Boolean
}

"""returns project configurations set for a jira integration."""
type ManageProjectIssueConfigurationsResponse {
  createdProjectIssueConfigurations: [JiraProjectIssueConfiguration]!
  deleteProjectIssueConfigurations: ConfirmationResponse
  updatedProjectIssueConfigurations: [JiraProjectIssueConfiguration]!
}

type MarkParametersResponse {
  success: Boolean!
}

enum MatchType {
  """HEADER"""
  HEADER

  """KEY"""
  KEY

  """VALUE"""
  VALUE

  """COMPLEX_DATA"""
  COMPLEX_DATA
}

type MaxVulnerabilityDuration {
  """vulnerability open duration"""
  vulnerabilityOpenDuration: Duration!
}

type MetadataTrainingConfig {
  keyValuePairs: [TrainingConfigKeyValuePair]
  name: MetadataTrainingConfigName!
}

enum MetadataTrainingConfigName {
  """TYPE"""
  TYPE

  """PII"""
  PII

  """ENUM"""
  ENUM

  """DIGIT_LENGTH"""
  DIGIT_LENGTH

  """SPECIAL_CHARS"""
  SPECIAL_CHARS

  """HTTP_STATUS"""
  HTTP_STATUS

  """DEVICE"""
  DEVICE

  """CONTENT_SIZE"""
  CONTENT_SIZE

  """ACCESSORS"""
  ACCESSORS

  """SSRF"""
  SSRF

  """THRESHOLDS_FAMILY"""
  THRESHOLDS_FAMILY

  """DATA_CLASSIFICATION"""
  DATA_CLASSIFICATION

  """CONTENT_TYPE"""
  CONTENT_TYPE

  """COUNT"""
  COUNT

  """IS_EXTERNAL_API"""
  IS_EXTERNAL_API

  """MESSAGE_PART_STATS"""
  MESSAGE_PART_STATS

  """NO_SQL"""
  NO_SQL

  """RAILS_OPEN"""
  RAILS_OPEN

  """START_TIME"""
  START_TIME

  """USER_AGENT"""
  USER_AGENT

  """USER_ROLE"""
  USER_ROLE

  """HTML_TAGS"""
  HTML_TAGS

  """HTML_TAG_ATTRIBUTES"""
  HTML_TAG_ATTRIBUTES

  """JWT_PARAMS"""
  JWT_PARAMS

  """NUMERIC_SIGN"""
  NUMERIC_SIGN

  """STRUCTURED_CONTENT_DEPTH"""
  STRUCTURED_CONTENT_DEPTH

  """USER_ATTRIBUTION"""
  USER_ATTRIBUTION
}

type MetricAggregation {
  value: Float
}

enum MetricAggregationType {
  """COUNT"""
  COUNT

  """AVG"""
  AVG

  """SUM"""
  SUM

  """MIN"""
  MIN

  """MAX"""
  MAX

  """AVGRATE"""
  AVGRATE

  """PERCENTILE"""
  PERCENTILE

  """DISTINCTCOUNT"""
  DISTINCTCOUNT

  """DISTINCT_ARRAY"""
  DISTINCT_ARRAY

  """ANY_VALUE"""
  ANY_VALUE
}

type MetricBaselineAggregation {
  lowerBound: Float
  upperBound: Float
  value: Float
}

type MetricContainer {
  avg: BaselinedMetricAggregation!
  avgrate(size: Int!, units: TimeUnit!): BaselinedMetricAggregation!
  baselineSeries(size: Int!, units: TimeUnit!): [baselineInterval]
  count: BaselinedMetricAggregation!
  distinctarray: MetricAggregation!
  distinctcount: BaselinedMetricAggregation!
  max: BaselinedMetricAggregation!
  min: BaselinedMetricAggregation!
  percentile(size: Int!): BaselinedMetricAggregation!
  series(size: Int!, units: TimeUnit!): [MetricInterval]!
  sum: BaselinedMetricAggregation!
}

type MetricInterval {
  avg: MetricAggregation!
  avgrate(size: Int!, units: TimeUnit!): MetricAggregation!
  count: MetricAggregation!
  distinctarray: MetricAggregation!
  distinctcount: MetricAggregation!
  endTime: DateTime!
  max: MetricAggregation!
  min: MetricAggregation!
  percentile(size: Int!): MetricAggregation!
  startTime: DateTime!
  sum: MetricAggregation!
}

type MinOccurrenceConfig {
  minPercent: Int
  minTotalOccurrences: Int
}

"""
Initiator Attributes for the fraud detected based on mobile phone fingerprint
"""
type MobilePhoneFingerprintBasedInitiatorAttributes {
  """Phone Manufacturer"""
  phoneManufacturer: String

  """Phone Model"""
  phoneModel: String

  """Phone OS Version"""
  phoneOsVersion: String

  """Unique Device Identifier"""
  UDID: String!
}

enum ModelScopeType {
  """TENANT"""
  TENANT

  """SERVICE"""
  SERVICE

  """API"""
  API
}

"""Modsec default config type"""
enum ModsecDefaultConfigsType {
  """DEFAULT_ENABLED"""
  DEFAULT_ENABLED

  """AGGRESSIVE_DISABLED"""
  AGGRESSIVE_DISABLED

  """RECOMMENDED"""
  RECOMMENDED

  """STRICT"""
  STRICT

  """STANDARD"""
  STANDARD

  """ALL_MONITOR"""
  ALL_MONITOR

  """STANDARD_MONITORING"""
  STANDARD_MONITORING

  """STANDARD_BLOCKING"""
  STANDARD_BLOCKING

  """STRICT_MONITORING"""
  STRICT_MONITORING

  """STRICT_BLOCKING"""
  STRICT_BLOCKING
}

"""Modsec Evaluation Config"""
type ModsecEvaluationEngineConfig {
  """Coraza Version to be used in the Detector"""
  corazaEngineVersion: CorazaEngineVersion
}

type ModsecFilterConfig {
  modsecStrategies: [ModsecStrategy]!
}

"""Global config related to modsec"""
type ModsecGlobalConfig {
  """
  Boolean denoting whether to make aggressive rules available for blocking or not
  """
  blockingAvailableForAggressiveRules: Boolean

  """Modsec default config type"""
  defaultConfigsType: ModsecDefaultConfigsType

  """Boolean denoting status for modsec global config"""
  disabled: Boolean

  """Boolean denoting if detection is enabled for exit spans or not"""
  enabledForExitSpans: Boolean

  """Minimum anomaly confidence level"""
  minConfidenceLevel: AnomalyConfidenceLevel

  """Modsec Evaluation Engine Config"""
  modsecEvaluationEngineConfig: ModsecEvaluationEngineConfig

  """List of scopes whose config is overriding this scope config"""
  overriddenParentScopes: [AnomalyScope]

  """List of scopes whose config is getting overridden by this scope config"""
  overridingChildrenScopes: [AnomalyScope]

  """Boolean denoting whether to use test modsec rules or not"""
  useTestRules: Boolean
}

enum ModsecStrategy {
  """REGULAR_CRS"""
  REGULAR_CRS

  """SAFE_CRS"""
  SAFE_CRS
}

type ModsecurityAnomalyDetectionConfig {
  keyValuePairs: [AnomalyDetectionConfigKeyValuePair]
  name: ModsecurityAnomalyDetectionConfigName!
  ruleId: String
}

enum ModsecurityAnomalyDetectionConfigName {
  """MODSEC_ALL_DETECTION"""
  MODSEC_ALL_DETECTION

  """MODSEC_ANOMALY_RULE"""
  MODSEC_ANOMALY_RULE
}

"""Monthly schedule"""
type MonthDays {
  """List of scheduled days numbers of month, from 1-31"""
  scheduledDayNumbers: [Int]
}

"""Monthly schedule"""
type MonthlySchedule {
  """Scheduled days numbers of month"""
  scheduledMonthDays: MonthDays

  """Scheduled time of day"""
  scheduledTime: OffsetTime
}

type MsaSigningInfo {
  """Timestamp when MSA was signed"""
  acceptanceTimestamp: DateTime!

  """IP Address used to sign the MSA"""
  ipAddress: String!

  """Company of the user who signed the MSA"""
  signatoryCompany: String!

  """Email of the user who signed the MSA"""
  signatoryEmail: String!

  """Name of the user who signed the MSA"""
  signatoryName: String!

  """Title of the user who signed the MSA"""
  signatoryTitle: String!

  """User agent used to sign the MSA"""
  userAgent: String!
}

enum MultiValuedAttributeOperationType {
  """SET"""
  SET

  """ADD"""
  ADD

  """REMOVE"""
  REMOVE
}

type MultiValuedStringParamRule {
  keyRegex: String!
  valueDelimiter: String!
  valueRegex: String
}

type Mutation {
  """
  Mutation for updating the status of all the fraud incident components in the given incident
  """
  updateAllIncidentComponentsStatus(
    """
    Input for updating the status of all the fraud incident components in the given incident
    """
    input: InputUpdateAllIncidentComponentsStatus!
  ): UpdateAllIncidentComponentsStatusResponse!

  """Mutation for taking an action on the fraud incident"""
  updateFraudIncidentAction(
    """Input for taking an action on the fraud incident"""
    input: InputFraudIncidentActionUpdate!
  ): UpdateFraudIncidentActionResponse!

  """Mutation for updating the status of the fraud incident component"""
  updateFraudIncidentComponentStatus(
    """Input for updating the status of the fraud incident component"""
    input: InputFraudIncidentComponentStatusUpdate!
  ): UpdateFraudIncidentComponentStatusResponse!

  """Mutation for updating the status of the fraud incident"""
  updateFraudIncidentStatus(
    """Input for updating the status of the fraud incident"""
    input: InputFraudIncidentStatusUpdate!
  ): UpdateFraudIncidentStatusResponse! @deprecated(reason: "Deprecated")

  """Mutation API to create detection exclusion rule"""
  createDetectionExclusionRule(create: InputCreateDetectionExclusionRuleRequest!): DetectionExclusionRule!

  """Mutation API to delete detection exclusion rule"""
  deleteDetectionExclusionRule(id: String!): DeleteDetectionExclusionRuleResponse!

  """Mutation API to update detection exclusion rule"""
  updateDetectionExclusionRule(rule: InputDetectionExclusionRule!): DetectionExclusionRule!
  createExcludeSpanRule(input: InputExcludeSpanRuleCreate!): ExcludeSpanRule!
  deleteExcludeSpanRule(input: InputExcludeSpanRuleDelete!): DeleteSpanProcessingRuleResponse!
  updateExcludeSpanRule(input: InputExcludeSpanRuleUpdate!): ExcludeSpanRule!

  """Update confidence scoring config"""
  updateConfidenceScoringConfig(input: InputUpdateConfidenceScoringConfig!): ConfidenceScoringConfig! @deprecated(reason: "Deprecated")

  """Update impact scoring config"""
  updateImpactScoringConfig(input: InputUpdateImpactScoringConfig!): ImpactScoringConfig! @deprecated(reason: "Deprecated")
  createRegionRule(input: InputRegionRuleCreate!): RegionRule!
  deleteRegionRule(input: InputRegionRuleDelete!): DeleteRegionRuleResponse!
  updateRegionRule(input: InputRegionRuleUpdate!): RegionRule!
  createAgentToken(input: InputCreateAgentTokenInput!): AgentToken
  deleteAgentToken(input: InputDeleteAgentTokenInput!): Identifiable
  updateAgentTokenMetadata(input: InputUpdateAgentTokenMetadataInput!): AgentTokenMetadata
  removeApiAttributeOverrides(input: InputRemoveApiAttributeOverridesRequest!): ApiAttributeOverrides
  upsertApiAttributeOverrides(input: InputUpsertApiAttributesOverrideRequest!): ApiAttributeOverrides
  createInstantReport(input: InputInstantReportCreation!): InstantReport
  createReport(input: InputReportCreation!): Report

  """Create template based report"""
  createTemplatedReport(input: InputTemplatedReportCreation!): TemplatedReport

  """Delete template based report"""
  deleteTemplatedReport(id: String!): ConfirmationResponse
  updateReport(input: InputReportUpdate!): Report

  """Update template based report"""
  updateTemplatedReport(input: InputTemplatedReportUpdate!): TemplatedReport
  convertTrialToFree: LicenseInfo
  createOidcGroupMapping(input: InputIdpGroupMappingCreate!): IdpGroupMappingMetadata

  """Create custom user roles"""
  createRole(input: InputCreateRoleInput!): Role!
  createSamlGroupMapping(input: InputIdpGroupMappingCreate!): IdpGroupMappingMetadata
  createUser(input: InputUserInput!): User
  deleteApiToken(input: InputDeleteApiTokenInput!): Identifiable
  deleteOidcGroupMapping(id: String!): Boolean

  """Delete custom user roles"""
  deleteRole(id: String!): ConfirmationResponse!
  deleteSamlGroupMapping(id: String!): Boolean
  deleteUser(input: InputDeleteUserInput!): User

  """Sign the Master Service Agreement for your account"""
  signMsa(input: InputSignMsaInput!): MsaSigningInfo!
  updateApiTokenMetadata(input: InputUpdateApiTokenMetadataInput!): ApiTokenMetadata
  updateOidcGroupMapping(input: InputIdpGroupMappingMetadata!): IdpGroupMappingMetadata

  """Update custom user roles"""
  updateRole(input: InputUpdateRoleInput!): Role!
  updateSamlGroupMapping(input: InputIdpGroupMappingMetadata!): IdpGroupMappingMetadata

  """Updates session configuration of tenant"""
  updateSessionConfiguration(input: InputUpdateSessionConfigurationInput!): sessionConfiguration!
  updateUser(input: InputUpdateUserInput!): User
  updateUserProvisioning(input: InputUserProvisioningInput!): ConfirmationResponse!
  updateUserProvisioningV2(input: InputUserProvisionInfoV2!): ConfirmationResponse!
  cloneAndRunScan(cloneAndRunScanRequest: InputCloneAndRunScanRequest!): CloneAndRunScanResponse!

  """Create AST Override config"""
  createAstOverride(create: InputCreateAstOverrideRequest!): AstOverride!

  """Create Custom Test Plugin"""
  createCustomTestPlugin(create: InputCreateCustomTestPluginRequest!): AstCustomTestPlugin!
  createAstPolicyV2(create: InputCreateAstPolicyV2Request!): CreateAstPolicyV2Response!
  createQuickScan(createQuickScan: InputCreateQuickScanRequest!): ConfirmationResponse!
  createScanPolicy(create: InputCreateScanPolicyRequest!): CreateScanPolicyResponse!

  """Delete AST Override configs"""
  deleteAstOverrides(delete: InputDeleteAstOverridesRequest!): ConfirmationResponse!

  """Delete Custom Test Plugin"""
  deleteCustomTestPlugin(delete: InputDeleteCustomTestPluginRequest!): ConfirmationResponse!
  deleteAstPoliciesV2(policyV2IdList: [String]!): ConfirmationResponse!
  deleteScanPolicies(scanPolicyIdList: [String]!): DeleteScanPoliciesResponse!
  deleteScans(scanIdList: [String]!): DeleteScansResponse!
  resetVulnerabilityMetadata(update: InputResetVulnerabilityMetadataRequest!): ConfirmationResponse!
  submitRunnerTask(submit: InputSubmitRunnerTaskRequest!): SubmitRunnerTaskResponse!

  """
  Update/Edit AST feature config, which is config of various AST features for environments.
  """
  updateAstFeatureConfig(request: InputUpdateAstFeatureConfigRequest!): AstFeatureConfig!

  """Update AST Override config"""
  updateAstOverride(update: InputUpdateAstOverrideRequest!): AstOverride!

  """Update Custom Test Plugin"""
  updateCustomTestPlugin(update: InputUpdateCustomTestPluginRequest!): AstCustomTestPlugin!
  updateAstPolicyV2(update: InputUpdateAstPolicyV2Request!): ConfirmationResponse!
  updateScanPurgeConfig(update: InputUpdateScanPurgeConfigRequest!): ScanPurgeConfig
  updateScanStatus(update: InputUpdateScanStatusRequest!): UpdateScanStatusResponse!
  updateVulnerabilityMetadata(update: InputUpdateVulnerabilityMetadataRequest!): ConfirmationResponse!
  updateVulnerabilityV2Status(update: InputUpdateVulnerabilityV2Request!): UpdateVulnerabilityV2StatusResponse!
  createLabel(label: InputCreateLabel!): Label!
  createLabelApplicationRule(labelApplicationRuleData: InputLabelApplicationRuleData!): LabelApplicationRule!
  deleteLabelApplicationRule(id: String!): Boolean!
  updateLabel(label: InputUpdateLabel!): Label!
  updateLabelApplicationRule(labelApplicationRule: InputLabelApplicationRule!): LabelApplicationRule!
  markParametersInsensitive(parameters: [InputParameter]!, apiId: String): MarkParametersResponse @deprecated(reason: "Marking parameters insensitive is deprecated")
  markParametersSensitive(parameters: [InputParameter]!, apiId: String, piiType: String): MarkParametersResponse @deprecated(reason: "Marking parameters sensitive is deprecated")
  setApiTags(input: InputApiTagUpdate!): ApiTagResponse @deprecated(reason: "tagging APIs is deprecated")
  updateApiInsights(input: [InputApiInsightUpdate]!): UpdateApiInsightsResponse @deprecated(reason: "Insights updates is not longer supported")
  updateThreatActivity(ids: [String]!, update: [InputThreatActivityUpdateArgument]!): UpdateThreatActivitiesResponse
  updateVulnerabilityStatus(input: InputVulnerabilityStatusUpdate!): UpdateVulnerabilityStatusResponse @deprecated(reason: "Vulnerability as a feature is replaced by insights")

  """Creates azure devops integration post validation"""
  createAzureDevopsIntegration(input: InputAzureDevopsIntegrationCreateIntegrationInput): AzureDevopsIntegrationResponse

  """Create azure devops work item"""
  createAzureDevopsWorkItem(input: InputAzureDevopsIntegrationCreateWorkItemInput): AzureDevopsIntegrationWorkItemResponse

  """Deletes azure devops integration post validation"""
  deleteAzureDevopsIntegration(input: InputAzureDevopsIntegrationDeleteIntegrationInput): ConfirmationResponse

  """unlink azure devops work item"""
  unlinkAzureDevopsWorkItem(input: InputAzureDevopsIntegrationUnlinkWorkItemInput): ConfirmationResponse

  """Updates azure devops integration post validation"""
  updateAzureDevopsIntegration(input: InputAzureDevopsIntegrationUpdateIntegrationInput): AzureDevopsIntegrationResponse

  """Create Sonar Scan"""
  createSonarScanV2(create: InputCreateSonarScanV2Request!): SonarScanV2!

  """Update Sonar Scan"""
  updateSonarScanV2(update: InputUpdateSonarScanV2Request!): SonarScanV2!
  createNotificationChannel(input: InputNotificationChannelCreation!): NotificationChannel
  createNotificationRule(input: InputNotificationRuleCreation!): NotificationRule
  deleteNotificationChannel(input: InputNotificationChannelDeletion!): DeleteNotificationChannelResponse
  deleteNotificationRule(input: InputNotificationRuleDeletion!): DeleteNotificationRuleResponse
  updateNotificationChannel(input: InputNotificationChannelUpdate!): NotificationChannel
  updateNotificationRule(input: InputNotificationRuleUpdate!): NotificationRule
  updateRunnerLogsPersistenceConfig(update: InputUpdateRunnerLogsPersistenceConfigRequest!): RunnerLogsPersistenceConfig!
  updateRunnerLogsPurgeConfig(update: InputUpdateRunnerLogsPurgeConfigRequest!): RunnerLogsPurgeConfig!

  """Delete a batch of analytics queries"""
  deleteAnalyticsQueryBatch(batchId: String!): ConfirmationResponse!

  """Submit a batch of analytics queries with a given scope"""
  submitAnalyticsQueryBatch(input: InputAnalyticsQueryBatchCreateRequest!): AnalyticsQueryBatchDetailWithResults!
  createAstPolicy(create: InputCreateAstPolicyV2Request!): CreateAstPolicyV2Response!

  """Create a Scan Evaluation Criteria"""
  createScanEvaluationCriteria(create: InputCreateScanEvaluationCriteriaRequest!): CreateScanEvaluationCriteriaResponse!

  """Create a new scan suite"""
  createScanSuite(create: InputCreateScanSuiteRequest!): CreateScanSuiteResponse!
  deleteAstPolicies(policyV2IdList: [String]!): ConfirmationResponse!

  """Delete a Scan Evaluation Criteria"""
  deleteScanEvaluationCriteria(scanEvaluationCriteriaIdList: [String]!): ConfirmationResponse!

  """Delete a list of scan suites"""
  deleteScanSuites(scanSuiteIdList: [String]!): ConfirmationResponse!

  """Queue an AST scan"""
  queueAstScan(request: InputQueueAstScanRequest!): QueueAstScanResponse!

  """Reset scan suite"""
  resetScanSuite(reset: InputResetScanSuiteRequest!): ConfirmationResponse!
  updateAstPolicy(update: InputUpdateAstPolicyV2Request!): ConfirmationResponse!

  """Update a Scan Evaluation Criteria"""
  updateScanEvaluationCriteria(update: InputUpdateScanEvaluationCriteriaRequest!): ConfirmationResponse!
  updateScanPolicy(update: InputUpdateScanPolicyRequest!): UpdateScanPolicyResponse!

  """Update an existing scan suite"""
  updateScanSuite(update: InputUpdateScanSuiteRequest!): ConfirmationResponse!

  """Mutation to update vulnerability"""
  updateVulnerabilityV3(update: InputUpdateVulnerabilityV3Request!): ConfirmationResponse!
  createSecuritySchemeRole(input: InputCreateSecuritySchemeRoleInput!): EntityIdentifier
  createSecuritySchemeRoleRelationships(input: InputCreateSecuritySchemeRoleRelationshipsInput!): ConfirmationResponse
  createSecuritySchemeScope(input: InputCreateSecuritySchemeScopeInput!): EntityIdentifier
  createSecuritySchemeScopeRelationships(input: InputCreateSecuritySchemeScopeRelationshipsInput!): ConfirmationResponse
  deleteSecuritySchemeRoleRelationships(input: InputDeleteSecuritySchemeRoleRelationshipsInput!): ConfirmationResponse
  deleteSecuritySchemeRoles(input: InputDeleteSecuritySchemeRolesInput!): ConfirmationResponse
  deleteSecuritySchemeScopeRelationships(input: InputDeleteSecuritySchemeScopeRelationshipsInput!): ConfirmationResponse
  deleteSecuritySchemeScopes(input: InputDeleteSecuritySchemeScopesInput!): ConfirmationResponse
  updateSecuritySchemeRole(input: InputUpdateSecuritySchemeRoleInput!): EntityIdentifier
  updateSecuritySchemeScope(input: InputUpdateSecuritySchemeScopeInput!): EntityIdentifier

  """Creates a servicenow itsm incident"""
  createServiceNowItsmIncident(input: InputServiceNowItsmIntegrationCreateIncidentInput): ServiceNowItsmIntegrationIncidentResponse

  """Creates a servicenow integration post validation"""
  createServiceNowItsmIntegration(input: InputServiceNowItsmIntegrationCreateIntegrationInput): ServiceNowItsmIntegrationResponse

  """Deletes a servicenow integration post validation"""
  deleteServiceNowItsmIntegration(integrationConfigId: String): ConfirmationResponse

  """Unlinks a servicenow itsm incident"""
  unlinkServiceNowItsmIncident(input: InputServiceNowItsmIntegrationUnlinkIncidentInput): ConfirmationResponse

  """Updates a servicenow integration post validation"""
  updateServiceNowItsmIntegration(input: InputServiceNowItsmIntegrationUpdateIntegrationInput): ServiceNowItsmIntegrationResponse

  """Creates the dashboard"""
  createDashboard(input: InputDashboardCreateInput!): Dashboard!

  """Deletes the dashboard"""
  deleteDashboard(input: InputDashboardDeleteInput!): ConfirmationResponse!

  """Updates the dashboard"""
  updateDashboard(input: InputDashboardUpdateInput!): Dashboard!

  """Creates a new Saved Filter"""
  createSavedFilter(create: InputSavedFilterCreate!): SavedFilter!

  """Deletes an existing Saved Filter"""
  deleteSavedFilter(delete: InputSavedFilterDelete!): ConfirmationResponse!

  """Updates an existing Saved Filter"""
  updateSavedFilter(update: InputSavedFilterUpdate!): SavedFilter!
  updateAnomalyScoreContributions(input: InputUpdateAnomalyScoreContributions!): AnomalyScoreContributions!
  updateEventScoreContributions(input: InputUpdateEventScoreContributions!): EventScoreContributions!
  updateEventTypeContribution(input: InputUpdateEventTypeContribution!): EventTypeContribution!
  updateIpReputationThreatScoreConfig(input: InputUpdateIpReputationThreatScoreConfig!): IpReputationThreatScoreConfig!
  updateStatusCodeThreatScoreConfigs(input: InputUpdateStatusCodeThreatScoreConfigs!): StatusCodeThreatScoreConfigs!
  updateThreatAutoBlocking(input: InputUpdateThreatAutoBlocking!): ThreatAutoBlocking!
  updateThreatScoreBounds(input: InputUpdateThreatScoreBounds!): ThreatScoreBounds!

  """Creates wiz integration config as described"""
  createWizIntegration(input: InputWizIntegrationCreateInput!): WizIntegration!

  """Deletes wiz integration config"""
  deleteWizIntegration(input: InputWizIntegrationDeleteInput!): ConfirmationResponse!

  """Updates wiz integration config as described"""
  updateWizIntegration(input: InputWizIntegrationUpdateInput!): WizIntegration!
  createLocalProcessingRule(input: InputLocalProcessingRuleCreation!): LocalProcessingRule!
  deleteLocalProcessingRule(input: InputLocalProcessingRuleDeletion!): DeleteLocalProcessingRuleResponse!
  updateDefaultProtectionMode(input: InputDefaultProtectionModeUpdate!): ProtectionMode!
  updateLocalProcessingRule(input: InputLocalProcessingRuleUpdate!): LocalProcessingRule!

  """Creates the given span ingestion rule"""
  createSpanIngestionRule(input: InputSpanIngestionRuleCreateInput!): SpanIngestionRule!

  """Deletes the given span ingestion rule"""
  deleteSpanIngestionRule(input: InputSpanIngestionRuleDeleteInput!): ConfirmationResponse!

  """Ranks the given span ingestion rule"""
  rankSpanIngestionRule(input: InputSpanIngestionRuleRankInput!): ConfirmationResponse!

  """Updates the given span ingestion rule"""
  updateSpanIngestionRule(input: InputSpanIngestionRuleUpdateInput!): SpanIngestionRule!

  """Mutator for creating Jwt Extraction Rules"""
  createJwtExtractionRule(input: InputJwtExtractionRuleCreateInput!): JwtExtractionRule!

  """Mutator for deleting Jwt Extraction Rules"""
  deleteJwtExtractionRule(input: InputJwtExtractionRuleDeleteInput!): ConfirmationResponse!

  """Mutator for updating Jwt Extraction Rules"""
  updateJwtExtractionRule(input: InputJwtExtractionRuleUpdateInput!): JwtExtractionRule!
  bulkUpdateEntities(input: InputBulkUpdateEntities!): BulkUpdateResponse
  updateEntity(input: InputEntityUpdate!): UpdatedEntity

  """Creates the described auth detection rule"""
  createAuthDetectionRule(input: InputAuthDetectionRuleCreateInput!): AuthDetectionRule!

  """Deletes the identified auth detection rule"""
  deleteAuthDetectionRule(input: InputAuthDetectionRuleDeleteInput!): ConfirmationResponse!

  """Updates the described auth detection rule"""
  updateAuthDetectionRule(input: InputAuthDetectionRuleUpdateInput!): AuthDetectionRule!
  createExfiltrationDetectionRule(input: InputExfiltrationDetectionRuleData!): ExfiltrationDetectionRule
  deleteExfiltrationDetectionRule(id: String!): Boolean
  updateExfiltrationDetectionRule(input: InputExfiltrationDetectionRule!): ExfiltrationDetectionRule
  createIpRangeRule(create: InputIpRangeRuleCreate!): IpRangeRule!
  deleteIpRangeRule(delete: InputIpRangeRuleDelete!): DeleteIpRangeRuleResponse!
  updateIpRangeRule(update: InputIpRangeRuleUpdate!): IpRangeRule!

  """Create an attribute"""
  createAttribute(
    """The attribute to be created"""
    attributeMetadataInput: InputAttributeMetadataInput!
  ): AttributeMetadata

  """Delete an attribute"""
  deleteAttribute(
    """Identifier of the attribute to be deleted"""
    attributeIdentifierInput: InputAttributeIdentifierInput!
  ): ConfirmationResponse

  """Update an attribute"""
  updateAttribute(
    """Input arguments for updating an attribute"""
    attributeUpdateInput: InputAttributeUpdateInput!
  ): AttributeMetadata
  createApiSpec(input: InputCreateApiSpec!): ApiSpec!
  deleteApiSpec(input: InputDeleteApiSpec!): DeleteApiSpecResponse!
  updateApiSpec(input: InputUpdateApiSpec!): ApiSpec!
  bootstrapAwsWafIntegration(AwsBootstrapWafIntegrationInput: InputAwsBootstrapWafIntegrationInput!): ConfirmationResponse

  """Creates snyk integration config as described"""
  createSnykIntegration(input: InputSnykIntegrationCreateInput!): ConfirmationResponse!

  """Deletes the snyk integration config"""
  deleteSnykIntegration: ConfirmationResponse!

  """Updates snyk integration config as described"""
  updateSnykIntegration(input: InputSnykIntegrationUpdateInput!): ConfirmationResponse!
  createSonarScan(create: InputCreateSonarScanRequest!): SonarScan!
  deleteSonarScan(delete: InputDeleteSonarScanRequest!): ConfirmationResponse!
  updateSonarScan(update: InputUpdateSonarScanRequest!): SonarScan!
  createAnomalyExclusionRule(create: InputAnomalyExclusionRuleData!): AnomalyExclusionRuleConfig!
  deleteAnomalyExclusionRule(delete: InputAnomalyExclusionRuleDelete!): Boolean!
  deleteScopedAnomalyAggregationConfig(delete: InputAnomalyAggregationConfigDelete!): DeleteScopedAnomalyAggregationConfigResponse!
  deleteScopedAnomalyDetectionConfig(delete: InputAnomalyDetectionConfigDelete!): ScopedAnomalyDetectionConfig!
  deleteScopedTrainingConfig(delete: InputTrainingConfigDelete!): ScopedTrainingConfig!
  updateAnomalyExclusionRule(update: InputAnomalyExclusionRuleUpdate!): AnomalyExclusionRuleConfig!
  updateAnomalyGlobalConfigStatus(update: InputAnomalyGlobalConfigStatusUpdate!): AnomalyConfigStatusChange! @deprecated(reason: "Deprecated")
  updateAnomalyRuleConfig(update: InputScopedAnomalyRuleConfigUpdate!): AnomalyRuleConfigUpdate!
  updateScopedAnomalyAggregationConfig(update: InputAnomalyAggregationConfigUpdate!): ScopedAnomalyAggregationConfig!
  updateScopedAnomalyDetectionConfig(update: InputAnomalyDetectionConfigUpdate!): ScopedAnomalyDetectionConfig!
  updateScopedAnomalyGlobalConfig(update: InputScopedAnomalyGlobalConfigChange!): ScopedAnomalyGlobalConfigChange!
  updateScopedTrainingConfig(update: InputTrainingConfigUpdate!): ScopedTrainingConfig!
  upsertTrainingAction(upsertAction: InputTrainerActionUpsert!): ScopedTrainingActionConfig!

  """Create ast hook"""
  createAstHook(input: InputCreateAstHook!): AstHook!

  """Create ast hook test"""
  createAstHookTest(input: InputCreateAstHookTest!): AstHookTest!

  """Create ast hook V2"""
  createAstHookV2(input: InputCreateAstHookV2!): AstHookV2!

  """Delete ast hook"""
  deleteAstHook(id: String!): ConfirmationResponse!

  """Delete ast hook test"""
  deleteAstHookTest(astHookTestIdList: [String]): ConfirmationResponse!

  """Delete ast hooks"""
  deleteAstHookV2(input: InputDeleteAstHookV2!): ConfirmationResponse!

  """Update ast hook"""
  updateAstHook(input: InputUpdateAstHook!): AstHook!

  """Update ast hook test"""
  updateAstHookTest(input: InputUpdateAstHookTest!): AstHookTest!

  """Update ast hook V2"""
  updateAstHookV2(input: InputUpdateAstHookV2!): AstHookV2!

  """
  Accepts parameters from a GitHub callback to link a registered application
  with Traceable a unique URL to integrate with GitHub. GitHub response must be
  returned to complete setup
  """
  correlateGithubIntegration(state: String!): GithubIntegration!

  """
  Generates a unique URL to integrate with GitHub. GitHub response must be returned to complete setup
  """
  createGithubIntegration: GithubIntegrationCreationDetails!

  """
  Deletes a registered GitHub application installation and associated configuration.
  """
  deleteGithubIntegration(id: String!): ConfirmationResponse!
  createJiraIntegration(input: InputCreateJiraIntegrationInput!): JiraIntegration!
  createJiraIssue(input: InputCreateJiraIssueInput!): JiraIssueResponse
  createJiraProjectIssueConfigurations(input: InputCreateProjectIssueConfigurationsInput!): ProjectIssueConfigurationsResponse
  deleteJiraIntegration(integrationId: String): DeleteJiraIntegrationResponse!
  deleteJiraProjectIssueConfiguration(input: InputDeleteProjectIssueConfigurationInput): ConfirmationResponse
  generateJiraAuthorizationLink(input: InputAuthorizationLinkRequest!): AuthorizationLinkResponse
  manageJiraProjectIssueConfigurations(input: InputManageProjectIssueConfigurationsInput!): ManageProjectIssueConfigurationsResponse
  unlinkJiraIssueReferences(input: InputUnlinkJiraIssueReferencesInput!): UnlinkJiraIssueReferencesResponse
  updateJiraIntegration(input: InputUpdateJiraIntegrationInput!): JiraIntegration!
  updateJiraProjectIssueConfigurations(input: InputUpdateProjectIssueConfigurationsInput!): ProjectIssueConfigurationsResponse

  """Mutation to create api naming rule"""
  createApiNamingRule(input: InputApiNamingRuleCreate!): ApiNamingRule!

  """Mutation to create protection span rule"""
  createProtectionSpanRule(input: InputProtectionSpanRuleCreate!): ProtectionSpanRule!
  createSamplingConfig(input: InputSamplingConfigCreate!): SpanProcessingSamplingConfig!

  """Creates the described service naming rule"""
  createServiceNamingRule(input: InputServiceNamingRuleCreateInput!): ServiceNamingRule!

  """Mutation to delete api naming rule"""
  deleteApiNamingRule(input: InputApiNamingRuleDelete!): DeleteTraceableSpanProcessingRuleResponse!

  """Mutation to delete protection span rule"""
  deleteProtectionSpanRule(input: InputProtectionSpanRuleDelete!): DeleteTraceableSpanProcessingRuleResponse!
  deleteSamplingConfig(input: InputSamplingConfigDelete!): DeleteTraceableSpanProcessingRuleResponse!

  """Deletes the identified service naming rule"""
  deleteServiceNamingRule(input: InputServiceNamingRuleDeleteInput!): ConfirmationResponse!

  """Mutation to update api naming rule"""
  updateApiNamingRule(input: InputApiNamingRuleUpdate!): ApiNamingRule!

  """Mutation to update protection span rule"""
  updateProtectionSpanRule(input: InputProtectionSpanRuleUpdate!): ProtectionSpanRule!
  updateSamplingConfig(input: InputSamplingConfigUpdate!): SpanProcessingSamplingConfig!

  """Updates the described service naming rule"""
  updateServiceNamingRule(input: InputServiceNamingRuleUpdateInput!): ServiceNamingRule!
  createSessionIdentificationRule(input: InputSessionIdentificationCreateInput!): SessionIdentificationRuleResultSet!
  deleteSessionIdentificationRule(input: InputSessionIdentificationDeleteInput!): SessionIdentificationRuleResultSet!
  updateSessionIdentificationRule(rule: InputSessionIdentificationRule!): SessionIdentificationRule!
  createCustomSignatureRule(create: InputCustomSignatureRuleDescriptor!): CustomSignatureRule!
  deleteCustomSignatureRule(delete: InputCustomSignatureRuleDelete!): DeleteCustomSignatureRuleResponse!
  updateCustomSignatureRule(update: InputCustomSignatureRuleUpdate!): CustomSignatureRule!

  """Create a new policy"""
  createPolicy(createPolicyRequest: InputCreatePolicyRequest!): Policy

  """Delete the policies by giving the policyIds"""
  deletePolicies(deletePoliciesRequest: InputDeletePoliciesRequest!): ConfirmationResponse

  """Bulk update policies for selected fields"""
  updatePolicies(policyUpdates: [InputPolicyUpdate]!): ConfirmationResponse

  """Update an existing policy"""
  updatePolicy(updatePolicyRequest: InputUpdatePolicyRequest!): Policy

  """Deletes repositories with given ids"""
  deleteRepositories(repositoryIds: [String]!): ConfirmationResponse!

  """Submits the requested code for analysis"""
  startCodeAnalysis(parameters: InputCodeAnalysisParameters!): SubmittedCodeAnalysisJobResultSet!

  """Creates a new saved query"""
  createSavedQuery(create: InputSavedQueryCreate!): SavedQuery!

  """Deletes an existing saved query"""
  deleteSavedQuery(delete: InputSavedQueryDelete!): ConfirmationResponse!

  """Updates an existing saved query"""
  updateSavedQuery(update: InputSavedQueryUpdate!): SavedQuery!

  """Creates a new User Attribution rule"""
  createUserAttributionRuleV2(create: InputCreateUserAttributionRule!): UserAttributionRuleResultSetV2!

  """Deletes an existing User Attribution rule"""
  deleteUserAttributionRuleV2(delete: InputDeleteUserAttributionRule!): ConfirmationResponse!

  """Rank an existing User Attribution rule"""
  rankUserAttributionRuleV2(rank: InputRankUserAttributionRule!): UserAttributionRuleResultSetV2!

  """Updates an existing User Attribution rule"""
  updateUserAttributionRuleV2(update: InputUpdateUserAttributionRule!): UserAttributionRuleV2!

  """Mutation to create vulnerability status change config"""
  createVulnerabilityStatusChangeConfig(create: InputCreateVulnerabilityStatusChangeConfigRequest!): VulnerabilityStatusChangeConfig!

  """Mutation to create custom vulnerability type"""
  createCustomVulnerabilityType(create: InputCreateCustomVulnerabilityTypeRequest!): CreateCustomVulnerabilityTypeResponse!

  """Mutation to create vulnerability"""
  createVulnerabilities(create: InputCreateVulnerabilitiesRequest!): CreateVulnerabilitiesResponse!

  """Mutation to delete vulnerability status change config"""
  deleteVulnerabilityStatusChangeConfig(delete: InputDeleteVulnerabilityStatusChangeConfigsRequest!): ConfirmationResponse!

  """Mutation to delete custom vulnerability type"""
  deleteCustomVulnerabilityType(delete: InputDeleteCustomVulnerabilityTypeRequest!): ConfirmationResponse!

  """Mutation to update vulnerability status change config"""
  updateVulnerabilityStatusChangeConfig(update: InputUpdateVulnerabilityStatusChangeConfigRequest!): VulnerabilityStatusChangeConfig!

  """Mutation to update custom vulnerability type"""
  updateCustomVulnerabilityType(update: InputUpdateCustomVulnerabilityTypeRequest!): UpdateCustomVulnerabilityTypeResponse!

  """Mutation to update vulnerability config"""
  updateIssueConfig(update: InputUpdateIssueConfigRequest!): IssueConfig!
  createUserAttributionRule(input: InputUserAttributionCreateInput!): UserAttributionRuleResultSet!
  deleteUserAttributionRule(input: InputUserAttributionDeleteInput!): UserAttributionRuleResultSet!
  rankUserAttributionRule(input: InputUserAttributionRankInput!): UserAttributionRuleResultSet!
  updateUserAttributionRule(rule: InputUserAttributionRule!): UserAttributionRule!

  """Mutation API to create Malicious Sources rule"""
  createMaliciousSourcesRule(create: InputMaliciousSourcesRuleCreate!): MaliciousSourcesRule!

  """Mutation API to delete Malicious Sources rule"""
  deleteMaliciousSourcesRule(delete: InputMaliciousSourcesRuleDelete!): DeleteMaliciousSourcesRuleResponse!

  """Mutation API to update Malicious Sources rule"""
  updateMaliciousSourcesRule(update: InputMaliciousSourcesRuleUpdate!): MaliciousSourcesRule!
  cancelSubscription: SubscriptionCancelResponse
  generateCardUpdateSecret: GenerateCardUpdateSecretResponse
  setupSubscription(input: InputSubscriptionInput!): SetupSubscriptionResponse
  synchronizeLicenseFromSubscription: SynchronizeLicenseFromSubscriptionResponse
  updateDefaultPaymentMethod(paymentMethodId: String!): Boolean
  updateSubscription(input: InputSubscriptionInput!): SubscriptionUpdateResponse
  createWafIntegration(input: InputCreateWafIntegrationInput!): WafIntegration
  deleteWafIntegration(input: InputDeleteWafIntegrationInput!): DeleteWafIntegrationResponse
  updateWafIntegration(input: InputUpdateWafIntegrationInput!): WafIntegration
  createRateLimitingRule(rateLimitingRuleData: InputRateLimitingRuleData!): RateLimitingRule!
  deleteRateLimitingRule(id: String!): DeleteRateLimitingRuleResponse!
  updateRateLimitingRule(rateLimitingRule: InputRateLimitingRule!): RateLimitingRule!

  """Creates a new Data Classification Override Rule"""
  createDataClassificationOverride(input: InputDataClassificationOverrideRuleCreateInput!): DataClassificationOverrideRule!
  createDataSet(dataSetCreate: InputDataSetCreate!): DataSet!
  createDataType(dataTypeRule: InputDataTypeRule!): DataType!

  """Deletes an existing Data Classification Override Rule"""
  deleteDataClassificationOverride(input: InputDataClassificationOverrideRuleDeleteInput!): ConfirmationResponse!
  deleteDataSet(id: String!): Boolean!
  deleteDataType(id: String!): ConfirmationResponse!

  """Updates an existing new Data Classification Override Rule"""
  updateDataClassificationOverride(input: InputDataClassificationOverrideRuleUpdateInput!): DataClassificationOverrideRule!
  updateDataSet(dataSetUpdate: InputDataSetUpdate!): DataSet!
  updateDataType(dataType: InputDataType!): DataType!

  """Deletes existing scoped data protection config"""
  deleteScopedDataProtectionConfig(delete: InputDeleteScopedDataProtectionConfigRequest!): ConfirmationResponse!

  """Update scoped data protection config"""
  updateScopedDataProtectionConfig(upsert: InputUpdateScopedDataProtectionConfigRequest!): DataProtectionConfig!

  """Reset factors and elements to default values"""
  resetApiRiskFactorConfigs(filter: InputApiRiskFactorConfigsResetFilter): ApiRiskFactorConfigs!

  """Reset grid to default values"""
  resetApiRiskScoringConfig(filter: InputApiRiskConfigScopeFilter): ApiRiskScoringConfigs!

  """Update factors and elements"""
  updateApiRiskFactorConfigs(update: InputApiRiskFactorConfigsUpdate!): ApiRiskFactorConfigs!

  """Update the grid cell scores"""
  updateApiRiskScoringConfig(update: InputApiRiskScoringGridUpdate!): ApiRiskScoringConfigs!
  createApiDefinition(apiDefinitionSpec: InputApiDefinitionSpec!): ApiDefinitionJob
  createApiSpecConformance(createApiSpecConformanceJob: InputCreateApiSpecConformanceJob!): ApiSpecConformanceJob
  createApiSpecConformanceSchedule(createApiSpecConformanceScheduledJob: InputCreateApiSpecConformanceScheduledJob!): ApiSpecConformanceScheduledJob
  createAstInstantScan(createAstInstantScan: InputcreateAstInstantScan!): ConfirmationResponse
  createAstScanJob(createAstScanJob: InputCreateAstScanJob!): AstScanJob
  createJiraDataSync(jiraDataSyncJobSpec: InputJiraDataSyncJobSpec!): JiraDataSyncJob
  createSecurityEventsInfo(securityEventsInfoJobSpec: InputSecurityEventsInfoJobSpec!): SecurityEventsInfoJob
  deleteJobs(jobIds: [String]!): ConfirmationResponse
  deleteScheduledJob(id: String!): ConfirmationResponse
  updateApiSpecConformanceScheduledJob(UpdateApiSpecConformanceScheduledJob: InputUpdateApiSpecConformanceScheduledJob!): ApiSpecConformanceScheduledJob @deprecated(reason: "Deprecated")
  createAstScanJobSpec(astScanJobSpec: InputAstScanJobSpec!): AstScanJobSpec
  updateScheduledJob(updateScheduledJob: InputUpdateScheduledJob!): ConfirmationResponse
  updateActorStatus(input: InputActorStatusUpdate!): UpdatedActorStatus

  """Creates a new Session Identification rule"""
  createSessionIdentificationRuleV2(create: InputCreateSessionIdentificationRule!): SessionIdentificationRuleV2!

  """Deletes an existing Session Identification rule"""
  deleteSessionIdentificationRuleV2(delete: InputDeleteSessionIdentificationRule!): ConfirmationResponse!

  """Updates an existing Session Identification rule"""
  updateSessionIdentificationRuleV2(update: InputUpdateSessionIdentificationRule!): SessionIdentificationRuleV2!
  createRedactionRule(input: InputRedactionRuleCreation!): RedactionRule!
  deleteRedactionRule(input: InputRedactionRuleDelete!): DeleteRedactionRuleResponse!
  updateAutomaticSecretRedaction(enabled: Boolean!): UpdateAutomaticSecretRedactionResponse!
  updateFullPrivacyMode(enabled: Boolean!): UpdateFullPrivacyModeResponse!
  updateRedactionRule(input: InputRedactionRuleUpdate!): RedactionRule!
  updateRedactionStrategy(type: SensitiveParameterType!, redactionStrategy: RedactionStrategy!): UpdateRedactionStrategyResponse

  """Creates splunk integration config as described"""
  createSplunkIntegration(input: InputCreateSplunkIntegrationInput!): SplunkIntegration!

  """Deletes the splunk integration config"""
  deleteSplunkIntegration(input: InputDeleteSplunkIntegrationInput!): ConfirmationResponse!

  """Updates splunk integration config as described"""
  updateSplunkIntegration(input: InputUpdateSplunkIntegrationInput!): SplunkIntegration!

  """Creates syslog server integration config as described"""
  createSyslogServerIntegration(input: InputCreateSyslogServerIntegrationInput!): SyslogServerIntegration!

  """Deletes the syslog server integration config"""
  deleteSyslogServerIntegration(input: InputDeleteSyslogServerIntegrationInput!): ConfirmationResponse!

  """Updates syslog server integration config as described"""
  updateSyslogServerIntegration(input: InputUpdateServerSyslogIntegrationInput!): SyslogServerIntegration!
  OverrideEventConfidenceScoringConfig(input: MUTATION_traceableThreatScoringConfig___OverrideEventConfidenceScoringConfigRequest___Input): MUTATION_traceableThreatScoringConfig___OverrideEventConfidenceScoringConfigResponse___
  DeleteEventConfidenceScoringConfigOverrides(input: MUTATION_traceableThreatScoringConfig___DeleteEventConfidenceScoringConfigOverridesRequest___Input): MUTATION_traceableThreatScoringConfig___DeleteEventConfidenceScoringConfigOverridesResponse___
  OverrideThreatActivityConfidenceScoringConfig(input: MUTATION_traceableThreatScoringConfig___OverrideThreatActivityConfidenceScoringConfigRequest___Input): MUTATION_traceableThreatScoringConfig___OverrideThreatActivityConfidenceScoringConfigResponse___
  DeleteThreatActivityConfidenceScoringConfigOverrides(input: MUTATION_traceableThreatScoringConfig___DeleteThreatActivityConfidenceScoringConfigOverridesRequest___Input): MUTATION_traceableThreatScoringConfig___DeleteThreatActivityConfidenceScoringConfigOverridesResponse___
  Upsert(input: MUTATION_traceablePolicyConfig___UpsertRequest___Input): MUTATION_traceablePolicyConfig___UpsertResponse___
  Delete(input: MUTATION_traceablePolicyConfig___DeleteRequest___Input): MUTATION_traceablePolicyConfig___DeleteResponse___
  Update(input: MUTATION_traceablePolicyConfig___UpdateRequest___Input): MUTATION_traceablePolicyConfig___UpdateResponse___
  CreateFraudPolicy(input: MUTATION_fraudPolicyConfig___CreateFraudPolicyRequest___Input): MUTATION_fraudPolicyConfig___CreateFraudPolicyResponse___
  UpdateFraudPolicy(input: MUTATION_fraudPolicyConfig___UpdateFraudPolicyRequest___Input): MUTATION_fraudPolicyConfig___UpdateFraudPolicyResponse___
  UpsertFraudPolicy(input: MUTATION_fraudPolicyConfig___UpsertFraudPolicyRequest___Input): MUTATION_fraudPolicyConfig___UpsertFraudPolicyResponse___
  DeleteFraudPolicy(input: MUTATION_fraudPolicyConfig___DeleteFraudPolicyRequest___Input): MUTATION_fraudPolicyConfig___DeleteFraudPolicyResponse___
  CreateApiAccessAnomalyConfig(input: MUTATION_fraudPolicyConfig___CreateApiAccessAnomalyConfigRequest___Input): MUTATION_fraudPolicyConfig___CreateApiAccessAnomalyConfigResponse___
  UpdateApiAccessAnomalyConfig(input: MUTATION_fraudPolicyConfig___UpdateApiAccessAnomalyConfigRequest___Input): MUTATION_fraudPolicyConfig___UpdateApiAccessAnomalyConfigResponse___
  DeleteApiAccessAnomalyConfig(input: MUTATION_fraudPolicyConfig___DeleteApiAccessAnomalyConfigRequest___Input): MUTATION_fraudPolicyConfig___DeleteApiAccessAnomalyConfigResponse___
  UpsertFlowConfig(input: MUTATION_traceableEdgeBotConfig___UpsertFlowConfigRequest___Input): MUTATION_traceableEdgeBotConfig___UpsertFlowConfigResponse___
  DeleteFlowConfig(input: MUTATION_traceableEdgeBotConfig___DeleteFlowConfigRequest___Input): MUTATION_traceableEdgeBotConfig___DeleteFlowConfigResponse___
  CreateCategorizedBotConfigPolicy(input: MUTATION_categorizedBotConfigPolicyService___CreateCategorizedBotConfigPolicyRequest___Input): MUTATION_categorizedBotConfigPolicyService___CreateCategorizedBotConfigPolicyResponse___
  UpdateCategorizedBotConfigPolicy(input: MUTATION_categorizedBotConfigPolicyService___UpdateCategorizedBotConfigPolicyRequest___Input): MUTATION_categorizedBotConfigPolicyService___UpdateCategorizedBotConfigPolicyResponse___
  DeleteCategorizedBotConfigPolicy(input: MUTATION_categorizedBotConfigPolicyService___DeleteCategorizedBotConfigPolicyRequest___Input): MUTATION_categorizedBotConfigPolicyService___DeleteCategorizedBotConfigPolicyResponse___
  UpsertEdgeDecisionEngineConfig(input: MUTATION_edgeDecisionConfig___UpsertEdgeDecisionEngineConfigRequest___Input): MUTATION_edgeDecisionConfig___UpsertEdgeDecisionEngineConfigResponse___
  CreateEdgeDecisionRule(input: MUTATION_edgeDecisionConfig___CreateEdgeDecisionRuleRequest___Input): MUTATION_edgeDecisionConfig___CreateEdgeDecisionRuleResponse___
  UpdateEdgeDecisionRule(input: MUTATION_edgeDecisionConfig___UpdateEdgeDecisionRuleRequest___Input): MUTATION_edgeDecisionConfig___UpdateEdgeDecisionRuleResponse___
  DeleteEdgeDecisionRule(input: MUTATION_edgeDecisionConfig___DeleteEdgeDecisionRuleRequest___Input): MUTATION_edgeDecisionConfig___DeleteEdgeDecisionRuleResponse___
  CreateEdgeDecisionSpec(input: MUTATION_edgeDecisionConfig___CreateEdgeDecisionSpecRequest___Input): MUTATION_edgeDecisionConfig___CreateEdgeDecisionSpecResponse___
  UpdateEdgeDecisionSpec(input: MUTATION_edgeDecisionConfig___UpdateEdgeDecisionSpecRequest___Input): MUTATION_edgeDecisionConfig___UpdateEdgeDecisionSpecResponse___
  DeleteEdgeDecisionSpec(input: MUTATION_edgeDecisionConfig___DeleteEdgeDecisionSpecRequest___Input): MUTATION_edgeDecisionConfig___DeleteEdgeDecisionSpecResponse___
  CreateEdgeAttributionRule(input: MUTATION_edgeDecisionConfig___CreateEdgeAttributionRuleRequest___Input): MUTATION_edgeDecisionConfig___CreateEdgeAttributionRuleResponse___
  UpdateEdgeAttributionRule(input: MUTATION_edgeDecisionConfig___UpdateEdgeAttributionRuleRequest___Input): MUTATION_edgeDecisionConfig___UpdateEdgeAttributionRuleResponse___
  DeleteEdgeAttributionRule(input: MUTATION_edgeDecisionConfig___DeleteEdgeAttributionRuleRequest___Input): MUTATION_edgeDecisionConfig___DeleteEdgeAttributionRuleResponse___
  CreateEdgeCustomResponse(input: MUTATION_edgeDecisionConfig___CreateEdgeCustomResponseRequest___Input): MUTATION_edgeDecisionConfig___CreateEdgeCustomResponseResponse___
  UpdateEdgeCustomResponse(input: MUTATION_edgeDecisionConfig___UpdateEdgeCustomResponseRequest___Input): MUTATION_edgeDecisionConfig___UpdateEdgeCustomResponseResponse___
  DeleteEdgeCustomResponse(input: MUTATION_edgeDecisionConfig___DeleteEdgeCustomResponseRequest___Input): MUTATION_edgeDecisionConfig___DeleteEdgeCustomResponseResponse___
}

type MUTATION_categorizedBotConfigPolicyService___BotClassification___ {
  category: String
  sub_category: [String]
  sub_category___JSON: JSON
}

input MUTATION_categorizedBotConfigPolicyService___BotClassification___Input {
  category: String
  sub_category: [String]
  sub_category___JSON: JSON
}

type MUTATION_categorizedBotConfigPolicyService___BotList___ {
  bot_ids: [String]
  bot_ids___JSON: JSON
}

input MUTATION_categorizedBotConfigPolicyService___BotList___Input {
  bot_ids: [String]
  bot_ids___JSON: JSON
}

type MUTATION_categorizedBotConfigPolicyService___BotScope___ {
  bot_list: MUTATION_categorizedBotConfigPolicyService___BotList___
  bot_list___JSON: JSON
  bot_classification: MUTATION_categorizedBotConfigPolicyService___BotClassification___
  bot_classification___JSON: JSON
}

input MUTATION_categorizedBotConfigPolicyService___BotScope___Input {
  bot_list: MUTATION_categorizedBotConfigPolicyService___BotList___Input
  bot_list___JSON: JSON
  bot_classification: MUTATION_categorizedBotConfigPolicyService___BotClassification___Input
  bot_classification___JSON: JSON
}

enum MUTATION_categorizedBotConfigPolicyService___CategorizedBotAction___ {
  CATEGORIZED_BOT_ACTION_UNSPECIFIED
  CATEGORIZED_BOT_ACTION_BLOCK
  CATEGORIZED_BOT_ACTION_MONITOR
  CATEGORIZED_BOT_ACTION_ALLOW
}

type MUTATION_categorizedBotConfigPolicyService___CategorizedBotConfigPolicy___ {
  id: String
  categorized_bot_policy_details: MUTATION_categorizedBotConfigPolicyService___CategorizedBotConfigPolicyDetails___
  categorized_bot_policy_details___JSON: JSON
}

input MUTATION_categorizedBotConfigPolicyService___CategorizedBotConfigPolicy___Input {
  id: String
  categorized_bot_policy_details: MUTATION_categorizedBotConfigPolicyService___CategorizedBotConfigPolicyDetails___Input
  categorized_bot_policy_details___JSON: JSON
}

type MUTATION_categorizedBotConfigPolicyService___CategorizedBotConfigPolicyDetails___ {
  name: String
  description: String
  enabled: Boolean
  categorized_bot_policy_scope: MUTATION_categorizedBotConfigPolicyService___CategorizedBotPolicyScope___
  categorized_bot_policy_scope___JSON: JSON
  bot_scopes: [MUTATION_categorizedBotConfigPolicyService___BotScope___]
  bot_scopes___JSON: JSON
  categorized_bot_policy_action_config: MUTATION_categorizedBotConfigPolicyService___CategorizedBotPolicyActionConfig___
  categorized_bot_policy_action_config___JSON: JSON
}

input MUTATION_categorizedBotConfigPolicyService___CategorizedBotConfigPolicyDetails___Input {
  name: String
  description: String
  enabled: Boolean
  categorized_bot_policy_scope: MUTATION_categorizedBotConfigPolicyService___CategorizedBotPolicyScope___Input
  categorized_bot_policy_scope___JSON: JSON
  bot_scopes: [MUTATION_categorizedBotConfigPolicyService___BotScope___Input]
  bot_scopes___JSON: JSON
  categorized_bot_policy_action_config: MUTATION_categorizedBotConfigPolicyService___CategorizedBotPolicyActionConfig___Input
  categorized_bot_policy_action_config___JSON: JSON
}

type MUTATION_categorizedBotConfigPolicyService___CategorizedBotPolicyActionConfig___ {
  bot_action: MUTATION_categorizedBotConfigPolicyService___CategorizedBotAction___
}

input MUTATION_categorizedBotConfigPolicyService___CategorizedBotPolicyActionConfig___Input {
  bot_action: MUTATION_categorizedBotConfigPolicyService___CategorizedBotAction___
}

type MUTATION_categorizedBotConfigPolicyService___CategorizedBotPolicyScope___ {
  environment_scope: MUTATION_categorizedBotConfigPolicyService___EnvironmentScope___
  environment_scope___JSON: JSON
}

input MUTATION_categorizedBotConfigPolicyService___CategorizedBotPolicyScope___Input {
  environment_scope: MUTATION_categorizedBotConfigPolicyService___EnvironmentScope___Input
  environment_scope___JSON: JSON
}

input MUTATION_categorizedBotConfigPolicyService___CreateCategorizedBotConfigPolicyRequest___Input {
  categorized_bot_config_policy_details: MUTATION_categorizedBotConfigPolicyService___CategorizedBotConfigPolicyDetails___Input
  categorized_bot_config_policy_details___JSON: JSON
}

type MUTATION_categorizedBotConfigPolicyService___CreateCategorizedBotConfigPolicyResponse___ {
  categorized_bot_config_policy: MUTATION_categorizedBotConfigPolicyService___CategorizedBotConfigPolicy___
  categorized_bot_config_policy___JSON: JSON
}

input MUTATION_categorizedBotConfigPolicyService___DeleteCategorizedBotConfigPolicyRequest___Input {
  categorized_bot_config_policy_id: String
}

type MUTATION_categorizedBotConfigPolicyService___DeleteCategorizedBotConfigPolicyResponse___ {
  categorized_bot_config_policy: MUTATION_categorizedBotConfigPolicyService___CategorizedBotConfigPolicy___
  categorized_bot_config_policy___JSON: JSON
}

type MUTATION_categorizedBotConfigPolicyService___EnvironmentScope___ {
  environment_ids: [String]
  environment_ids___JSON: JSON
}

input MUTATION_categorizedBotConfigPolicyService___EnvironmentScope___Input {
  environment_ids: [String]
  environment_ids___JSON: JSON
}

input MUTATION_categorizedBotConfigPolicyService___UpdateCategorizedBotConfigPolicyRequest___Input {
  categorized_bot_config_policy: MUTATION_categorizedBotConfigPolicyService___CategorizedBotConfigPolicy___Input
  categorized_bot_config_policy___JSON: JSON
}

type MUTATION_categorizedBotConfigPolicyService___UpdateCategorizedBotConfigPolicyResponse___ {
  categorized_bot_config_policy: MUTATION_categorizedBotConfigPolicyService___CategorizedBotConfigPolicy___
  categorized_bot_config_policy___JSON: JSON
}

type MUTATION_edgeDecisionConfig___AccessPatternRule___ {
  correlation_key: MUTATION_edgeDecisionConfig___CorrelationKey___
  correlation_key___JSON: JSON
  filter: MUTATION_edgeDecisionConfig___MatchCondition___
  filter___JSON: JSON
  target_request: MUTATION_edgeDecisionConfig___MatchCondition___
  target_request___JSON: JSON
  pre_requests: [MUTATION_edgeDecisionConfig___RequestInvocation___]
  pre_requests___JSON: JSON
  time_window: MUTATION_edgeDecisionConfig___Duration___
  time_window___JSON: JSON
  check_for_any_pre_requests: Boolean
  trigger_on_all_missing: Boolean
  trigger_on_any_missing: Boolean
  trigger_on_score: Float
}

input MUTATION_edgeDecisionConfig___AccessPatternRule___Input {
  correlation_key: MUTATION_edgeDecisionConfig___CorrelationKey___Input
  correlation_key___JSON: JSON
  filter: MUTATION_edgeDecisionConfig___MatchCondition___Input
  filter___JSON: JSON
  target_request: MUTATION_edgeDecisionConfig___MatchCondition___Input
  target_request___JSON: JSON
  pre_requests: [MUTATION_edgeDecisionConfig___RequestInvocation___Input]
  pre_requests___JSON: JSON
  time_window: MUTATION_edgeDecisionConfig___Duration___Input
  time_window___JSON: JSON
  check_for_any_pre_requests: Boolean
  trigger_on_all_missing: Boolean
  trigger_on_any_missing: Boolean
  trigger_on_score: Float
}

type MUTATION_edgeDecisionConfig___AggregateThresholdRule___ {
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
  group_by_dimensions: [MUTATION_edgeDecisionConfig___AttributeDerivationMapping___]
  group_by_dimensions___JSON: JSON
  aggregate_without_grouping: Boolean
  time_window: MUTATION_edgeDecisionConfig___Duration___
  time_window___JSON: JSON
  value_aggregate_threshold: MUTATION_edgeDecisionConfig___ValueAggregateThreshold___
  value_aggregate_threshold___JSON: JSON
}

input MUTATION_edgeDecisionConfig___AggregateThresholdRule___Input {
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___Input
  match_condition___JSON: JSON
  group_by_dimensions: [MUTATION_edgeDecisionConfig___AttributeDerivationMapping___Input]
  group_by_dimensions___JSON: JSON
  aggregate_without_grouping: Boolean
  time_window: MUTATION_edgeDecisionConfig___Duration___Input
  time_window___JSON: JSON
  value_aggregate_threshold: MUTATION_edgeDecisionConfig___ValueAggregateThreshold___Input
  value_aggregate_threshold___JSON: JSON
}

enum MUTATION_edgeDecisionConfig___AggregationType___ {
  AGGREGATION_TYPE_UNSPECIFIED
  AGGREGATION_TYPE_COUNT
  AGGREGATION_TYPE_DISTINCT_COUNT
  AGGREGATION_TYPE_SUM
  AGGREGATION_TYPE_AVG
  AGGREGATION_TYPE_MAX
  AGGREGATION_TYPE_MIN
}

type MUTATION_edgeDecisionConfig___AttributeDerivationMapping___ {
  name: String
  type: MUTATION_edgeDecisionConfig___FieldType___
  rules: [MUTATION_edgeDecisionConfig___DerivationRule___]
  rules___JSON: JSON
}

input MUTATION_edgeDecisionConfig___AttributeDerivationMapping___Input {
  name: String
  type: MUTATION_edgeDecisionConfig___FieldType___
  rules: [MUTATION_edgeDecisionConfig___DerivationRule___Input]
  rules___JSON: JSON
}

type MUTATION_edgeDecisionConfig___BinaryOperator___ {
  list_value: MUTATION_edgeDecisionConfig___ListValue___
  list_value___JSON: JSON
  regex: String
  bloom_filter: String
  number_value: Float
  bool_value: Boolean
  null_value: MUTATION_edgeDecisionConfig___NullValue___
  string_value: String
  range_value: MUTATION_edgeDecisionConfig___RangeValue___
  range_value___JSON: JSON
  time_range_value: MUTATION_edgeDecisionConfig___TimeRangeValue___
  time_range_value___JSON: JSON
  match_operator: MUTATION_edgeDecisionConfig___MatchOperator___
}

input MUTATION_edgeDecisionConfig___BinaryOperator___Input {
  list_value: MUTATION_edgeDecisionConfig___ListValue___Input
  list_value___JSON: JSON
  regex: String
  bloom_filter: String
  number_value: Float
  bool_value: Boolean
  null_value: MUTATION_edgeDecisionConfig___NullValue___
  string_value: String
  range_value: MUTATION_edgeDecisionConfig___RangeValue___Input
  range_value___JSON: JSON
  time_range_value: MUTATION_edgeDecisionConfig___TimeRangeValue___Input
  time_range_value___JSON: JSON
  match_operator: MUTATION_edgeDecisionConfig___MatchOperator___
}

type MUTATION_edgeDecisionConfig___ConditionalConfig___ {
  bool_expression: String
  true_transformation: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  true_transformation___JSON: JSON
  false_transformation: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  false_transformation___JSON: JSON
}

input MUTATION_edgeDecisionConfig___ConditionalConfig___Input {
  bool_expression: String
  true_transformation: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  true_transformation___JSON: JSON
  false_transformation: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  false_transformation___JSON: JSON
}

type MUTATION_edgeDecisionConfig___ConfigTtl___ {
  created_at: MUTATION_edgeDecisionConfig___Timestamp___
  created_at___JSON: JSON
  expires_at: MUTATION_edgeDecisionConfig___Timestamp___
  expires_at___JSON: JSON
}

input MUTATION_edgeDecisionConfig___ConfigTtl___Input {
  created_at: MUTATION_edgeDecisionConfig___Timestamp___Input
  created_at___JSON: JSON
  expires_at: MUTATION_edgeDecisionConfig___Timestamp___Input
  expires_at___JSON: JSON
}

type MUTATION_edgeDecisionConfig___CorrelationKey___ {
  attributes: [MUTATION_edgeDecisionConfig___AttributeDerivationMapping___]
  attributes___JSON: JSON
}

input MUTATION_edgeDecisionConfig___CorrelationKey___Input {
  attributes: [MUTATION_edgeDecisionConfig___AttributeDerivationMapping___Input]
  attributes___JSON: JSON
}

input MUTATION_edgeDecisionConfig___CreateEdgeAttributionRuleRequest___Input {
  edge_attribution_rule: MUTATION_edgeDecisionConfig___EdgeAttributionRule___Input
  edge_attribution_rule___JSON: JSON
}

type MUTATION_edgeDecisionConfig___CreateEdgeAttributionRuleResponse___ {
  edge_attribution_rule: MUTATION_edgeDecisionConfig___EdgeAttributionRule___
  edge_attribution_rule___JSON: JSON
}

input MUTATION_edgeDecisionConfig___CreateEdgeCustomResponseRequest___Input {
  edge_custom_response: MUTATION_edgeDecisionConfig___EdgeCustomResponse___Input
  edge_custom_response___JSON: JSON
}

type MUTATION_edgeDecisionConfig___CreateEdgeCustomResponseResponse___ {
  edge_custom_response: MUTATION_edgeDecisionConfig___EdgeCustomResponse___
  edge_custom_response___JSON: JSON
}

input MUTATION_edgeDecisionConfig___CreateEdgeDecisionRuleRequest___Input {
  edge_decision_rule: MUTATION_edgeDecisionConfig___EdgeDecisionRule___Input
  edge_decision_rule___JSON: JSON
}

type MUTATION_edgeDecisionConfig___CreateEdgeDecisionRuleResponse___ {
  edge_decision_rule: MUTATION_edgeDecisionConfig___EdgeDecisionRule___
  edge_decision_rule___JSON: JSON
}

input MUTATION_edgeDecisionConfig___CreateEdgeDecisionSpecRequest___Input {
  edge_decision_spec: MUTATION_edgeDecisionConfig___EdgeDecisionSpec___Input
  edge_decision_spec___JSON: JSON
}

type MUTATION_edgeDecisionConfig___CreateEdgeDecisionSpecResponse___ {
  edge_decision_spec: MUTATION_edgeDecisionConfig___EdgeDecisionSpec___
  edge_decision_spec___JSON: JSON
}

type MUTATION_edgeDecisionConfig___CustomResponse___ {
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
  variables: [MUTATION_edgeDecisionConfig___VariableDerivationMapping___]
  variables___JSON: JSON
  status_code: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  status_code___JSON: JSON
  response_headers: [MUTATION_edgeDecisionConfig___ResponseHeader___]
  response_headers___JSON: JSON
  response_body: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  response_body___JSON: JSON
}

input MUTATION_edgeDecisionConfig___CustomResponse___Input {
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___Input
  match_condition___JSON: JSON
  variables: [MUTATION_edgeDecisionConfig___VariableDerivationMapping___Input]
  variables___JSON: JSON
  status_code: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  status_code___JSON: JSON
  response_headers: [MUTATION_edgeDecisionConfig___ResponseHeader___Input]
  response_headers___JSON: JSON
  response_body: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  response_body___JSON: JSON
}

type MUTATION_edgeDecisionConfig___DataModelEntity___ {
  id: String
  type: String
  name: String
  metadata_attributes: [MUTATION_edgeDecisionConfig___AttributeDerivationMapping___]
  metadata_attributes___JSON: JSON
}

input MUTATION_edgeDecisionConfig___DataModelEntity___Input {
  id: String
  type: String
  name: String
  metadata_attributes: [MUTATION_edgeDecisionConfig___AttributeDerivationMapping___Input]
  metadata_attributes___JSON: JSON
}

type MUTATION_edgeDecisionConfig___DataTransformationConfig___ {
  static_value: MUTATION_edgeDecisionConfig___Value___
  static_value___JSON: JSON
  jexl_expression: MUTATION_edgeDecisionConfig___JexlExpressionConfig___
  jexl_expression___JSON: JSON
  jexl_script: MUTATION_edgeDecisionConfig___JexlScriptConfig___
  jexl_script___JSON: JSON
  regex: MUTATION_edgeDecisionConfig___RegexConfig___
  regex___JSON: JSON
  conditional: MUTATION_edgeDecisionConfig___ConditionalConfig___
  conditional___JSON: JSON
  output_type: MUTATION_edgeDecisionConfig___FieldType___
}

input MUTATION_edgeDecisionConfig___DataTransformationConfig___Input {
  static_value: MUTATION_edgeDecisionConfig___Value___Input
  static_value___JSON: JSON
  jexl_expression: MUTATION_edgeDecisionConfig___JexlExpressionConfig___Input
  jexl_expression___JSON: JSON
  jexl_script: MUTATION_edgeDecisionConfig___JexlScriptConfig___Input
  jexl_script___JSON: JSON
  regex: MUTATION_edgeDecisionConfig___RegexConfig___Input
  regex___JSON: JSON
  conditional: MUTATION_edgeDecisionConfig___ConditionalConfig___Input
  conditional___JSON: JSON
  output_type: MUTATION_edgeDecisionConfig___FieldType___
}

input MUTATION_edgeDecisionConfig___DeleteEdgeAttributionRuleRequest___Input {
  id: String
}

type MUTATION_edgeDecisionConfig___DeleteEdgeAttributionRuleResponse___ {
  deleted_edge_attribution_rule: MUTATION_edgeDecisionConfig___EdgeAttributionRule___
  deleted_edge_attribution_rule___JSON: JSON
}

input MUTATION_edgeDecisionConfig___DeleteEdgeCustomResponseRequest___Input {
  id: String
}

type MUTATION_edgeDecisionConfig___DeleteEdgeCustomResponseResponse___ {
  deleted_edge_custom_response: MUTATION_edgeDecisionConfig___EdgeCustomResponse___
  deleted_edge_custom_response___JSON: JSON
}

input MUTATION_edgeDecisionConfig___DeleteEdgeDecisionRuleRequest___Input {
  id: String
}

type MUTATION_edgeDecisionConfig___DeleteEdgeDecisionRuleResponse___ {
  deleted_edge_decision_rule: MUTATION_edgeDecisionConfig___EdgeDecisionRule___
  deleted_edge_decision_rule___JSON: JSON
}

input MUTATION_edgeDecisionConfig___DeleteEdgeDecisionSpecRequest___Input {
  id: String
}

type MUTATION_edgeDecisionConfig___DeleteEdgeDecisionSpecResponse___ {
  deleted_edge_decision_spec: MUTATION_edgeDecisionConfig___EdgeDecisionSpec___
  deleted_edge_decision_spec___JSON: JSON
}

type MUTATION_edgeDecisionConfig___DerivationRule___ {
  transformation_config: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  transformation_config___JSON: JSON
  transformation_configs: [MUTATION_edgeDecisionConfig___DataTransformationConfig___]
  transformation_configs___JSON: JSON
  condition_expression: MUTATION_edgeDecisionConfig___JexlExpressionConfig___
  condition_expression___JSON: JSON
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
}

input MUTATION_edgeDecisionConfig___DerivationRule___Input {
  transformation_config: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  transformation_config___JSON: JSON
  transformation_configs: [MUTATION_edgeDecisionConfig___DataTransformationConfig___Input]
  transformation_configs___JSON: JSON
  condition_expression: MUTATION_edgeDecisionConfig___JexlExpressionConfig___Input
  condition_expression___JSON: JSON
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___Input
  match_condition___JSON: JSON
}

type MUTATION_edgeDecisionConfig___DomainScope___ {
  domains: [String]
  domains___JSON: JSON
}

input MUTATION_edgeDecisionConfig___DomainScope___Input {
  domains: [String]
  domains___JSON: JSON
}

type MUTATION_edgeDecisionConfig___Duration___ {
  seconds: Int
  nanos: Int
}

input MUTATION_edgeDecisionConfig___Duration___Input {
  seconds: Int
  nanos: Int
}

type MUTATION_edgeDecisionConfig___EdgeAttributionRule___ {
  id: String
  name: String
  version: Int
  description: String
  rule_scope: MUTATION_edgeDecisionConfig___EdgeDecisionRuleScope___
  rule_scope___JSON: JSON
  rule_definition: MUTATION_edgeDecisionConfig___EdgeAttributionRuleDefinition___
  rule_definition___JSON: JSON
  rule_status: MUTATION_edgeDecisionConfig___EdgeDecisionRuleStatus___
  rule_status___JSON: JSON
  template_id: String
}

input MUTATION_edgeDecisionConfig___EdgeAttributionRule___Input {
  id: String
  name: String
  version: Int
  description: String
  rule_scope: MUTATION_edgeDecisionConfig___EdgeDecisionRuleScope___Input
  rule_scope___JSON: JSON
  rule_definition: MUTATION_edgeDecisionConfig___EdgeAttributionRuleDefinition___Input
  rule_definition___JSON: JSON
  rule_status: MUTATION_edgeDecisionConfig___EdgeDecisionRuleStatus___Input
  rule_status___JSON: JSON
  template_id: String
}

type MUTATION_edgeDecisionConfig___EdgeAttributionRuleDefinition___ {
  edge_input_kind: MUTATION_edgeDecisionConfig___EdgeInputKind___
  rule_variables: [MUTATION_edgeDecisionConfig___VariableDerivationMapping___]
  rule_variables___JSON: JSON
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
  span_attributes: [MUTATION_edgeDecisionConfig___SpanAttributeDecoration___]
  span_attributes___JSON: JSON
  decorations: [MUTATION_edgeDecisionConfig___PayloadDecoration___]
  decorations___JSON: JSON
  custom_fields: MUTATION_edgeDecisionConfig___Struct___
  custom_fields___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EdgeAttributionRuleDefinition___Input {
  edge_input_kind: MUTATION_edgeDecisionConfig___EdgeInputKind___
  rule_variables: [MUTATION_edgeDecisionConfig___VariableDerivationMapping___Input]
  rule_variables___JSON: JSON
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___Input
  match_condition___JSON: JSON
  span_attributes: [MUTATION_edgeDecisionConfig___SpanAttributeDecoration___Input]
  span_attributes___JSON: JSON
  decorations: [MUTATION_edgeDecisionConfig___PayloadDecoration___Input]
  decorations___JSON: JSON
  custom_fields: MUTATION_edgeDecisionConfig___Struct___Input
  custom_fields___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EdgeCustomResponse___ {
  id: String
  name: String
  version: Int
  description: String
  rule_scope: MUTATION_edgeDecisionConfig___EdgeDecisionRuleScope___
  rule_scope___JSON: JSON
  custom_response: MUTATION_edgeDecisionConfig___CustomResponse___
  custom_response___JSON: JSON
  rule_status: MUTATION_edgeDecisionConfig___EdgeDecisionRuleStatus___
  rule_status___JSON: JSON
  template_id: String
  custom_config: MUTATION_edgeDecisionConfig___Struct___
  custom_config___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EdgeCustomResponse___Input {
  id: String
  name: String
  version: Int
  description: String
  rule_scope: MUTATION_edgeDecisionConfig___EdgeDecisionRuleScope___Input
  rule_scope___JSON: JSON
  custom_response: MUTATION_edgeDecisionConfig___CustomResponse___Input
  custom_response___JSON: JSON
  rule_status: MUTATION_edgeDecisionConfig___EdgeDecisionRuleStatus___Input
  rule_status___JSON: JSON
  template_id: String
  custom_config: MUTATION_edgeDecisionConfig___Struct___Input
  custom_config___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EdgeDecision___ {
  edge_decision_type: MUTATION_edgeDecisionConfig___EdgeDecisionType___
  decision_apply_duration: MUTATION_edgeDecisionConfig___Duration___
  decision_apply_duration___JSON: JSON
  decorations: [MUTATION_edgeDecisionConfig___PayloadDecoration___]
  decorations___JSON: JSON
  sampling_rate: Float
  threat_type: String
  span_attributes: [MUTATION_edgeDecisionConfig___SpanAttributeDecoration___]
  span_attributes___JSON: JSON
  edge_decision_targets: [MUTATION_edgeDecisionConfig___EdgeDecisionTarget___]
  edge_decision_targets___JSON: JSON
  rule_info_decorations: [MUTATION_edgeDecisionConfig___RuleInfoDecoration___]
  rule_info_decorations___JSON: JSON
  custom_response: MUTATION_edgeDecisionConfig___EdgeCustomResponse___
  custom_response___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EdgeDecision___Input {
  edge_decision_type: MUTATION_edgeDecisionConfig___EdgeDecisionType___
  decision_apply_duration: MUTATION_edgeDecisionConfig___Duration___Input
  decision_apply_duration___JSON: JSON
  decorations: [MUTATION_edgeDecisionConfig___PayloadDecoration___Input]
  decorations___JSON: JSON
  sampling_rate: Float
  threat_type: String
  span_attributes: [MUTATION_edgeDecisionConfig___SpanAttributeDecoration___Input]
  span_attributes___JSON: JSON
  edge_decision_targets: [MUTATION_edgeDecisionConfig___EdgeDecisionTarget___Input]
  edge_decision_targets___JSON: JSON
  rule_info_decorations: [MUTATION_edgeDecisionConfig___RuleInfoDecoration___Input]
  rule_info_decorations___JSON: JSON
  custom_response: MUTATION_edgeDecisionConfig___EdgeCustomResponse___Input
  custom_response___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EdgeDecisionEngineConfig___ {
  id: String
  name: String
  version: Int
  common_variables: [MUTATION_edgeDecisionConfig___VariableDerivationMapping___]
  common_variables___JSON: JSON
  decision_rules: [MUTATION_edgeDecisionConfig___EdgeDecisionRule___]
  decision_rules___JSON: JSON
  decision_specs: [MUTATION_edgeDecisionConfig___EdgeDecisionSpec___]
  decision_specs___JSON: JSON
  disabled: Boolean
  disabled_rule_categories: [MUTATION_edgeDecisionConfig___EdgeDecisionRuleCategory___]
  disabled_rule_categories___JSON: JSON
  attribution_rules: [MUTATION_edgeDecisionConfig___EdgeAttributionRule___]
  attribution_rules___JSON: JSON
  default_block_response: MUTATION_edgeDecisionConfig___EdgeCustomResponse___
  default_block_response___JSON: JSON
  custom_config: MUTATION_edgeDecisionConfig___Value___
  custom_config___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EdgeDecisionRule___ {
  id: String
  name: String
  version: Int
  rule_scope: MUTATION_edgeDecisionConfig___EdgeDecisionRuleScope___
  rule_scope___JSON: JSON
  rule_category: MUTATION_edgeDecisionConfig___EdgeDecisionRuleCategory___
  rule_status: MUTATION_edgeDecisionConfig___EdgeDecisionRuleStatus___
  rule_status___JSON: JSON
  rule_definition: MUTATION_edgeDecisionConfig___EdgeDecisionRuleDefinition___
  rule_definition___JSON: JSON
  rule_decision: MUTATION_edgeDecisionConfig___EdgeDecision___
  rule_decision___JSON: JSON
  policy_kind: MUTATION_edgeDecisionConfig___PolicyKind___
  description: String
  template_id: String
  policy_id: String
}

input MUTATION_edgeDecisionConfig___EdgeDecisionRule___Input {
  id: String
  name: String
  version: Int
  rule_scope: MUTATION_edgeDecisionConfig___EdgeDecisionRuleScope___Input
  rule_scope___JSON: JSON
  rule_category: MUTATION_edgeDecisionConfig___EdgeDecisionRuleCategory___
  rule_status: MUTATION_edgeDecisionConfig___EdgeDecisionRuleStatus___Input
  rule_status___JSON: JSON
  rule_definition: MUTATION_edgeDecisionConfig___EdgeDecisionRuleDefinition___Input
  rule_definition___JSON: JSON
  rule_decision: MUTATION_edgeDecisionConfig___EdgeDecision___Input
  rule_decision___JSON: JSON
  policy_kind: MUTATION_edgeDecisionConfig___PolicyKind___
  description: String
  template_id: String
  policy_id: String
}

enum MUTATION_edgeDecisionConfig___EdgeDecisionRuleCategory___ {
  EDGE_DECISION_RULE_CATEGORY_UNSPECIFIED
  EDGE_DECISION_RULE_CATEGORY_ORIGINAL
  EDGE_DECISION_RULE_CATEGORY_CUSTOM_SIGNATURE
  EDGE_DECISION_RULE_CATEGORY_RATE_LIMIT
  EDGE_DECISION_RULE_CATEGORY_MALICIOUS_SOURCES
  EDGE_DECISION_RULE_CATEGORY_THREAT_ACTOR
  EDGE_DECISION_RULE_CATEGORY_DETECTION_EXCLUSION
  EDGE_DECISION_RULE_CATEGORY_TRACEABLE_CATEGORIZED_BOTS
}

type MUTATION_edgeDecisionConfig___EdgeDecisionRuleDefinition___ {
  edge_input_kind: MUTATION_edgeDecisionConfig___EdgeInputKind___
  rule_variables: [MUTATION_edgeDecisionConfig___VariableDerivationMapping___]
  rule_variables___JSON: JSON
  attribute_projections: [MUTATION_edgeDecisionConfig___AttributeDerivationMapping___]
  attribute_projections___JSON: JSON
  signature_rule: MUTATION_edgeDecisionConfig___SignatureRule___
  signature_rule___JSON: JSON
  entity_rule: MUTATION_edgeDecisionConfig___EntityRule___
  entity_rule___JSON: JSON
  aggregate_threshold_rule: MUTATION_edgeDecisionConfig___AggregateThresholdRule___
  aggregate_threshold_rule___JSON: JSON
  access_pattern_rule: MUTATION_edgeDecisionConfig___AccessPatternRule___
  access_pattern_rule___JSON: JSON
  logical_rule: MUTATION_edgeDecisionConfig___LogicalRule___
  logical_rule___JSON: JSON
  custom_fields: MUTATION_edgeDecisionConfig___Value___
  custom_fields___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EdgeDecisionRuleDefinition___Input {
  edge_input_kind: MUTATION_edgeDecisionConfig___EdgeInputKind___
  rule_variables: [MUTATION_edgeDecisionConfig___VariableDerivationMapping___Input]
  rule_variables___JSON: JSON
  attribute_projections: [MUTATION_edgeDecisionConfig___AttributeDerivationMapping___Input]
  attribute_projections___JSON: JSON
  signature_rule: MUTATION_edgeDecisionConfig___SignatureRule___Input
  signature_rule___JSON: JSON
  entity_rule: MUTATION_edgeDecisionConfig___EntityRule___Input
  entity_rule___JSON: JSON
  aggregate_threshold_rule: MUTATION_edgeDecisionConfig___AggregateThresholdRule___Input
  aggregate_threshold_rule___JSON: JSON
  access_pattern_rule: MUTATION_edgeDecisionConfig___AccessPatternRule___Input
  access_pattern_rule___JSON: JSON
  logical_rule: MUTATION_edgeDecisionConfig___LogicalRule___Input
  logical_rule___JSON: JSON
  custom_fields: MUTATION_edgeDecisionConfig___Value___Input
  custom_fields___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EdgeDecisionRuleScope___ {
  scope_conditions: [MUTATION_edgeDecisionConfig___EdgeDecisionRuleScopeCondition___]
  scope_conditions___JSON: JSON
  scope_exclusion_conditions: [MUTATION_edgeDecisionConfig___EdgeDecisionRuleScopeCondition___]
  scope_exclusion_conditions___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EdgeDecisionRuleScope___Input {
  scope_conditions: [MUTATION_edgeDecisionConfig___EdgeDecisionRuleScopeCondition___Input]
  scope_conditions___JSON: JSON
  scope_exclusion_conditions: [MUTATION_edgeDecisionConfig___EdgeDecisionRuleScopeCondition___Input]
  scope_exclusion_conditions___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EdgeDecisionRuleScopeCondition___ {
  environment_scope: MUTATION_edgeDecisionConfig___EnvironmentScope___
  environment_scope___JSON: JSON
  service_scope: MUTATION_edgeDecisionConfig___ServiceScope___
  service_scope___JSON: JSON
  url_scope: MUTATION_edgeDecisionConfig___UrlScope___
  url_scope___JSON: JSON
  url_regex_scope: MUTATION_edgeDecisionConfig___UrlRegexScope___
  url_regex_scope___JSON: JSON
  http_method_scope: MUTATION_edgeDecisionConfig___HttpMethodScope___
  http_method_scope___JSON: JSON
  match_condition_scope: MUTATION_edgeDecisionConfig___MatchCondition___
  match_condition_scope___JSON: JSON
  domain_scope: MUTATION_edgeDecisionConfig___DomainScope___
  domain_scope___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EdgeDecisionRuleScopeCondition___Input {
  environment_scope: MUTATION_edgeDecisionConfig___EnvironmentScope___Input
  environment_scope___JSON: JSON
  service_scope: MUTATION_edgeDecisionConfig___ServiceScope___Input
  service_scope___JSON: JSON
  url_scope: MUTATION_edgeDecisionConfig___UrlScope___Input
  url_scope___JSON: JSON
  url_regex_scope: MUTATION_edgeDecisionConfig___UrlRegexScope___Input
  url_regex_scope___JSON: JSON
  http_method_scope: MUTATION_edgeDecisionConfig___HttpMethodScope___Input
  http_method_scope___JSON: JSON
  match_condition_scope: MUTATION_edgeDecisionConfig___MatchCondition___Input
  match_condition_scope___JSON: JSON
  domain_scope: MUTATION_edgeDecisionConfig___DomainScope___Input
  domain_scope___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EdgeDecisionRuleStatus___ {
  disabled: Boolean
  internal: Boolean
  ttl: MUTATION_edgeDecisionConfig___ConfigTtl___
  ttl___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EdgeDecisionRuleStatus___Input {
  disabled: Boolean
  internal: Boolean
  ttl: MUTATION_edgeDecisionConfig___ConfigTtl___Input
  ttl___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EdgeDecisionRuleTarget___ {
  edge_decision_rule_category: MUTATION_edgeDecisionConfig___EdgeDecisionRuleCategory___
  rule_ids: [String]
  rule_ids___JSON: JSON
  result_attribute_derivations: [MUTATION_edgeDecisionConfig___AttributeDerivationMapping___]
  result_attribute_derivations___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EdgeDecisionRuleTarget___Input {
  edge_decision_rule_category: MUTATION_edgeDecisionConfig___EdgeDecisionRuleCategory___
  rule_ids: [String]
  rule_ids___JSON: JSON
  result_attribute_derivations: [MUTATION_edgeDecisionConfig___AttributeDerivationMapping___Input]
  result_attribute_derivations___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EdgeDecisionSpec___ {
  id: String
  name: String
  version: Int
  edge_input_kind: MUTATION_edgeDecisionConfig___EdgeInputKind___
  scope: MUTATION_edgeDecisionConfig___EdgeDecisionSpecScope___
  scope___JSON: JSON
  decision_spec_directives: [MUTATION_edgeDecisionConfig___EdgeDecisionSpecDirective___]
  decision_spec_directives___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EdgeDecisionSpec___Input {
  id: String
  name: String
  version: Int
  edge_input_kind: MUTATION_edgeDecisionConfig___EdgeInputKind___
  scope: MUTATION_edgeDecisionConfig___EdgeDecisionSpecScope___Input
  scope___JSON: JSON
  decision_spec_directives: [MUTATION_edgeDecisionConfig___EdgeDecisionSpecDirective___Input]
  decision_spec_directives___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EdgeDecisionSpecDirective___ {
  edge_decision: MUTATION_edgeDecisionConfig___EdgeDecision___
  edge_decision___JSON: JSON
  any_rule: Boolean
  all_rules: Boolean
  any_rule_of_type: MUTATION_edgeDecisionConfig___EdgeDecisionType___
  specific_rule_ids: MUTATION_edgeDecisionConfig___StringList___
  specific_rule_ids___JSON: JSON
  decision_tree_jexl_expression: MUTATION_edgeDecisionConfig___JexlExpressionConfig___
  decision_tree_jexl_expression___JSON: JSON
  decision_tree_jexl_script: MUTATION_edgeDecisionConfig___JexlScriptConfig___
  decision_tree_jexl_script___JSON: JSON
  custom_response: MUTATION_edgeDecisionConfig___EdgeCustomResponse___
  custom_response___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EdgeDecisionSpecDirective___Input {
  edge_decision: MUTATION_edgeDecisionConfig___EdgeDecision___Input
  edge_decision___JSON: JSON
  any_rule: Boolean
  all_rules: Boolean
  any_rule_of_type: MUTATION_edgeDecisionConfig___EdgeDecisionType___
  specific_rule_ids: MUTATION_edgeDecisionConfig___StringList___Input
  specific_rule_ids___JSON: JSON
  decision_tree_jexl_expression: MUTATION_edgeDecisionConfig___JexlExpressionConfig___Input
  decision_tree_jexl_expression___JSON: JSON
  decision_tree_jexl_script: MUTATION_edgeDecisionConfig___JexlScriptConfig___Input
  decision_tree_jexl_script___JSON: JSON
  custom_response: MUTATION_edgeDecisionConfig___EdgeCustomResponse___Input
  custom_response___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EdgeDecisionSpecScope___ {
  environment: String
}

input MUTATION_edgeDecisionConfig___EdgeDecisionSpecScope___Input {
  environment: String
}

type MUTATION_edgeDecisionConfig___EdgeDecisionTarget___ {
  edge_decision_type: MUTATION_edgeDecisionConfig___EdgeDecisionType___
  edge_decision_rule_targets: [MUTATION_edgeDecisionConfig___EdgeDecisionRuleTarget___]
  edge_decision_rule_targets___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EdgeDecisionTarget___Input {
  edge_decision_type: MUTATION_edgeDecisionConfig___EdgeDecisionType___
  edge_decision_rule_targets: [MUTATION_edgeDecisionConfig___EdgeDecisionRuleTarget___Input]
  edge_decision_rule_targets___JSON: JSON
}

enum MUTATION_edgeDecisionConfig___EdgeDecisionType___ {
  EDGE_DECISION_TYPE_UNSPECIFIED
  EDGE_DECISION_TYPE_ALLOW
  EDGE_DECISION_TYPE_BLOCK
  EDGE_DECISION_TYPE_CAPTCHA
  EDGE_DECISION_TYPE_MARK_FOR_TESTING
  EDGE_DECISION_TYPE_EXCLUDE
  EDGE_DECISION_TYPE_ALERT
}

enum MUTATION_edgeDecisionConfig___EdgeInputKind___ {
  EDGE_INPUT_KIND_UNSPECIFIED
  EDGE_INPUT_KIND_HTTP_REQUEST
  EDGE_INPUT_KIND_CLIENT_FINGERPRINT_DATA
}

enum MUTATION_edgeDecisionConfig___EdgeRuleLogicalOperator___ {
  EDGE_RULE_LOGICAL_OPERATOR_UNSPECIFIED
  EDGE_RULE_LOGICAL_OPERATOR_AND
  EDGE_RULE_LOGICAL_OPERATOR_OR
  EDGE_RULE_LOGICAL_OPERATOR_NOT
}

type MUTATION_edgeDecisionConfig___EntityRule___ {
  entity_data: [MUTATION_edgeDecisionConfig___EntityRuleData___]
  entity_data___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EntityRule___Input {
  entity_data: [MUTATION_edgeDecisionConfig___EntityRuleData___Input]
  entity_data___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EntityRuleData___ {
  entity: MUTATION_edgeDecisionConfig___DataModelEntity___
  entity___JSON: JSON
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EntityRuleData___Input {
  entity: MUTATION_edgeDecisionConfig___DataModelEntity___Input
  entity___JSON: JSON
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___Input
  match_condition___JSON: JSON
}

type MUTATION_edgeDecisionConfig___EnvironmentScope___ {
  environments: [String]
  environments___JSON: JSON
}

input MUTATION_edgeDecisionConfig___EnvironmentScope___Input {
  environments: [String]
  environments___JSON: JSON
}

input MUTATION_edgeDecisionConfig___FieldMask___Input {
  paths: [String]
  paths___JSON: JSON
}

enum MUTATION_edgeDecisionConfig___FieldType___ {
  FIELD_TYPE_UNSPECIFIED
  FIELD_TYPE_STR
  FIELD_TYPE_BOOL
  FIELD_TYPE_LONG
  FIELD_TYPE_DOUBLE
  FIELD_TYPE_LIST
  FIELD_TYPE_MAP
  FIELD_TYPE_TIMESTAMP
  FIELD_TYPE_BINARY
  FIELD_TYPE_INT
}

type MUTATION_edgeDecisionConfig___GenericMatchCondition___ {
  jexl_expression: MUTATION_edgeDecisionConfig___JexlExpressionConfig___
  jexl_expression___JSON: JSON
  jexl_script: MUTATION_edgeDecisionConfig___JexlScriptConfig___
  jexl_script___JSON: JSON
}

input MUTATION_edgeDecisionConfig___GenericMatchCondition___Input {
  jexl_expression: MUTATION_edgeDecisionConfig___JexlExpressionConfig___Input
  jexl_expression___JSON: JSON
  jexl_script: MUTATION_edgeDecisionConfig___JexlScriptConfig___Input
  jexl_script___JSON: JSON
}

type MUTATION_edgeDecisionConfig___HttpMethodScope___ {
  http_methods: [String]
  http_methods___JSON: JSON
}

input MUTATION_edgeDecisionConfig___HttpMethodScope___Input {
  http_methods: [String]
  http_methods___JSON: JSON
}

type MUTATION_edgeDecisionConfig___JexlExpressionConfig___ {
  jexl_expression: String
}

input MUTATION_edgeDecisionConfig___JexlExpressionConfig___Input {
  jexl_expression: String
}

type MUTATION_edgeDecisionConfig___JexlScriptConfig___ {
  jexl_script: String
}

input MUTATION_edgeDecisionConfig___JexlScriptConfig___Input {
  jexl_script: String
}

type MUTATION_edgeDecisionConfig___ListValue___ {
  values: [MUTATION_edgeDecisionConfig___Value___]
  values___JSON: JSON
}

input MUTATION_edgeDecisionConfig___ListValue___Input {
  values: [MUTATION_edgeDecisionConfig___Value___Input]
  values___JSON: JSON
}

type MUTATION_edgeDecisionConfig___LogicalMatchCondition___ {
  operator: MUTATION_edgeDecisionConfig___LogicalMatchOperator___
  conditions: [MUTATION_edgeDecisionConfig___MatchCondition___]
  conditions___JSON: JSON
}

input MUTATION_edgeDecisionConfig___LogicalMatchCondition___Input {
  operator: MUTATION_edgeDecisionConfig___LogicalMatchOperator___
  conditions: [MUTATION_edgeDecisionConfig___MatchCondition___Input]
  conditions___JSON: JSON
}

enum MUTATION_edgeDecisionConfig___LogicalMatchOperator___ {
  LOGICAL_MATCH_OPERATOR_UNSPECIFIED
  LOGICAL_MATCH_OPERATOR_AND
  LOGICAL_MATCH_OPERATOR_OR
}

type MUTATION_edgeDecisionConfig___LogicalRule___ {
  operator: MUTATION_edgeDecisionConfig___EdgeRuleLogicalOperator___
  rules: [MUTATION_edgeDecisionConfig___EdgeDecisionRuleDefinition___]
  rules___JSON: JSON
}

input MUTATION_edgeDecisionConfig___LogicalRule___Input {
  operator: MUTATION_edgeDecisionConfig___EdgeRuleLogicalOperator___
  rules: [MUTATION_edgeDecisionConfig___EdgeDecisionRuleDefinition___Input]
  rules___JSON: JSON
}

type MUTATION_edgeDecisionConfig___MatchCondition___ {
  generic_match_condition: MUTATION_edgeDecisionConfig___GenericMatchCondition___
  generic_match_condition___JSON: JSON
  structured_match_condition: MUTATION_edgeDecisionConfig___StructuredMatchCondition___
  structured_match_condition___JSON: JSON
  logical_match_condition: MUTATION_edgeDecisionConfig___LogicalMatchCondition___
  logical_match_condition___JSON: JSON
  negate: Boolean
}

input MUTATION_edgeDecisionConfig___MatchCondition___Input {
  generic_match_condition: MUTATION_edgeDecisionConfig___GenericMatchCondition___Input
  generic_match_condition___JSON: JSON
  structured_match_condition: MUTATION_edgeDecisionConfig___StructuredMatchCondition___Input
  structured_match_condition___JSON: JSON
  logical_match_condition: MUTATION_edgeDecisionConfig___LogicalMatchCondition___Input
  logical_match_condition___JSON: JSON
  negate: Boolean
}

enum MUTATION_edgeDecisionConfig___MatchOperator___ {
  MATCH_OPERATOR_UNSPECIFIED
  MATCH_OPERATOR_IN
  MATCH_OPERATOR_NOT_IN
  MATCH_OPERATOR_LIKE
  MATCH_OPERATOR_NOT_LIKE
  MATCH_OPERATOR_EQ
  MATCH_OPERATOR_NOT_EQ
  MATCH_OPERATOR_GT
  MATCH_OPERATOR_LT
  MATCH_OPERATOR_GTE
  MATCH_OPERATOR_LTE
  MATCH_OPERATOR_BETWEEN
  MATCH_OPERATOR_CONTAINS
  MATCH_OPERATOR_STARTS_WITH
  MATCH_OPERATOR_ENDS_WITH
  MATCH_OPERATOR_EQ_IGNORE_CASE
}

enum MUTATION_edgeDecisionConfig___NullValue___ {
  NULL_VALUE
}

type MUTATION_edgeDecisionConfig___PayloadDecoration___ {
  request_header_injection: MUTATION_edgeDecisionConfig___RequestHeaderInjection___
  request_header_injection___JSON: JSON
  response_header_injection: MUTATION_edgeDecisionConfig___ResponseHeaderInjection___
  response_header_injection___JSON: JSON
}

input MUTATION_edgeDecisionConfig___PayloadDecoration___Input {
  request_header_injection: MUTATION_edgeDecisionConfig___RequestHeaderInjection___Input
  request_header_injection___JSON: JSON
  response_header_injection: MUTATION_edgeDecisionConfig___ResponseHeaderInjection___Input
  response_header_injection___JSON: JSON
}

enum MUTATION_edgeDecisionConfig___PolicyKind___ {
  POLICY_KIND_UNSPECIFIED
  POLICY_KIND_WAF
  POLICY_KIND_BOT_MITIGATION
  POLICY_KIND_FRAUD_PROTECTION
  POLICY_KIND_CUSTOM
}

type MUTATION_edgeDecisionConfig___RangeThreshold___ {
  lower_bound: Float
  upper_bound: Float
}

input MUTATION_edgeDecisionConfig___RangeThreshold___Input {
  lower_bound: Float
  upper_bound: Float
}

type MUTATION_edgeDecisionConfig___RangeValue___ {
  lower: Float
  upper: Float
}

input MUTATION_edgeDecisionConfig___RangeValue___Input {
  lower: Float
  upper: Float
}

type MUTATION_edgeDecisionConfig___RegexConfig___ {
  regex: String
  split_regex: String
  group_indices: [Int]
  group_indices___JSON: JSON
  join_delimiter: String
  value_transformation: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  value_transformation___JSON: JSON
}

input MUTATION_edgeDecisionConfig___RegexConfig___Input {
  regex: String
  split_regex: String
  group_indices: [Int]
  group_indices___JSON: JSON
  join_delimiter: String
  value_transformation: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  value_transformation___JSON: JSON
}

type MUTATION_edgeDecisionConfig___RequestHeaderInjection___ {
  header_key: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  header_key___JSON: JSON
  header_value: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  header_value___JSON: JSON
}

input MUTATION_edgeDecisionConfig___RequestHeaderInjection___Input {
  header_key: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  header_key___JSON: JSON
  header_value: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  header_value___JSON: JSON
}

type MUTATION_edgeDecisionConfig___RequestInvocation___ {
  request_invocation_id: String
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
  weight: Int
  median_percent: Float
}

input MUTATION_edgeDecisionConfig___RequestInvocation___Input {
  request_invocation_id: String
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___Input
  match_condition___JSON: JSON
  weight: Int
  median_percent: Float
}

type MUTATION_edgeDecisionConfig___ResponseHeader___ {
  header_key: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  header_key___JSON: JSON
  header_value: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  header_value___JSON: JSON
}

input MUTATION_edgeDecisionConfig___ResponseHeader___Input {
  header_key: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  header_key___JSON: JSON
  header_value: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  header_value___JSON: JSON
}

type MUTATION_edgeDecisionConfig___ResponseHeaderInjection___ {
  header_key: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  header_key___JSON: JSON
  header_value: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  header_value___JSON: JSON
}

input MUTATION_edgeDecisionConfig___ResponseHeaderInjection___Input {
  header_key: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  header_key___JSON: JSON
  header_value: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  header_value___JSON: JSON
}

type MUTATION_edgeDecisionConfig___RuleInfoDecoration___ {
  rule_info_key: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  rule_info_key___JSON: JSON
  rule_info_value: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  rule_info_value___JSON: JSON
}

input MUTATION_edgeDecisionConfig___RuleInfoDecoration___Input {
  rule_info_key: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  rule_info_key___JSON: JSON
  rule_info_value: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  rule_info_value___JSON: JSON
}

type MUTATION_edgeDecisionConfig___ServiceScope___ {
  service_names: [String]
  service_names___JSON: JSON
}

input MUTATION_edgeDecisionConfig___ServiceScope___Input {
  service_names: [String]
  service_names___JSON: JSON
}

type MUTATION_edgeDecisionConfig___SignatureRule___ {
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
}

input MUTATION_edgeDecisionConfig___SignatureRule___Input {
  match_condition: MUTATION_edgeDecisionConfig___MatchCondition___Input
  match_condition___JSON: JSON
}

type MUTATION_edgeDecisionConfig___SpanAttributeDecoration___ {
  span_attribute_key: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  span_attribute_key___JSON: JSON
  span_attribute_value: MUTATION_edgeDecisionConfig___DataTransformationConfig___
  span_attribute_value___JSON: JSON
}

input MUTATION_edgeDecisionConfig___SpanAttributeDecoration___Input {
  span_attribute_key: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  span_attribute_key___JSON: JSON
  span_attribute_value: MUTATION_edgeDecisionConfig___DataTransformationConfig___Input
  span_attribute_value___JSON: JSON
}

type MUTATION_edgeDecisionConfig___StringList___ {
  values: [String]
  values___JSON: JSON
}

input MUTATION_edgeDecisionConfig___StringList___Input {
  values: [String]
  values___JSON: JSON
}

type MUTATION_edgeDecisionConfig___Struct___ {
  fields: [MUTATION_edgeDecisionConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput]
  fields___JSON: JSON
}

input MUTATION_edgeDecisionConfig___Struct___Input {
  fields: [MUTATION_edgeDecisionConfig_google_protobuf_Struct_FieldsEntry___fields___MapInput]
  fields___JSON: JSON
}

type MUTATION_edgeDecisionConfig___StructuredMatchCondition___ {
  lhs: MUTATION_edgeDecisionConfig___AttributeDerivationMapping___
  lhs___JSON: JSON
  unary_operator: MUTATION_edgeDecisionConfig___UnaryOperator___
  binary_operator: MUTATION_edgeDecisionConfig___BinaryOperator___
  binary_operator___JSON: JSON
}

input MUTATION_edgeDecisionConfig___StructuredMatchCondition___Input {
  lhs: MUTATION_edgeDecisionConfig___AttributeDerivationMapping___Input
  lhs___JSON: JSON
  unary_operator: MUTATION_edgeDecisionConfig___UnaryOperator___
  binary_operator: MUTATION_edgeDecisionConfig___BinaryOperator___Input
  binary_operator___JSON: JSON
}

enum MUTATION_edgeDecisionConfig___ThresholdOperator___ {
  THRESHOLD_OPERATOR_UNSPECIFIED
  THRESHOLD_OPERATOR_ABOVE
  THRESHOLD_OPERATOR_BELOW
  THRESHOLD_OPERATOR_ABOVE_OR_BELOW
}

type MUTATION_edgeDecisionConfig___TimeRangeValue___ {
  start: MUTATION_edgeDecisionConfig___Timestamp___
  start___JSON: JSON
  end: MUTATION_edgeDecisionConfig___Timestamp___
  end___JSON: JSON
}

input MUTATION_edgeDecisionConfig___TimeRangeValue___Input {
  start: MUTATION_edgeDecisionConfig___Timestamp___Input
  start___JSON: JSON
  end: MUTATION_edgeDecisionConfig___Timestamp___Input
  end___JSON: JSON
}

type MUTATION_edgeDecisionConfig___Timestamp___ {
  seconds: Int
  nanos: Int
}

input MUTATION_edgeDecisionConfig___Timestamp___Input {
  seconds: Int
  nanos: Int
}

type MUTATION_edgeDecisionConfig___ToleranceThreshold___ {
  reference_value: Float
  percentage_tolerance: Float
  absolute_tolerance: Float
}

input MUTATION_edgeDecisionConfig___ToleranceThreshold___Input {
  reference_value: Float
  percentage_tolerance: Float
  absolute_tolerance: Float
}

enum MUTATION_edgeDecisionConfig___UnaryOperator___ {
  UNARY_OPERATOR_UNSPECIFIED
  UNARY_OPERATOR_IS_NULL
  UNARY_OPERATOR_IS_NOT_NULL
  UNARY_OPERATOR_IS_EMPTY
  UNARY_OPERATOR_IS_NOT_EMPTY
}

input MUTATION_edgeDecisionConfig___UpdateEdgeAttributionRuleRequest___Input {
  current_version: Int
  edge_attribution_rule: MUTATION_edgeDecisionConfig___EdgeAttributionRule___Input
  edge_attribution_rule___JSON: JSON
  update_mask: MUTATION_edgeDecisionConfig___FieldMask___Input
  update_mask___JSON: JSON
}

type MUTATION_edgeDecisionConfig___UpdateEdgeAttributionRuleResponse___ {
  edge_attribution_rule: MUTATION_edgeDecisionConfig___EdgeAttributionRule___
  edge_attribution_rule___JSON: JSON
}

input MUTATION_edgeDecisionConfig___UpdateEdgeCustomResponseRequest___Input {
  current_version: Int
  edge_custom_response: MUTATION_edgeDecisionConfig___EdgeCustomResponse___Input
  edge_custom_response___JSON: JSON
  update_mask: MUTATION_edgeDecisionConfig___FieldMask___Input
  update_mask___JSON: JSON
}

type MUTATION_edgeDecisionConfig___UpdateEdgeCustomResponseResponse___ {
  edge_custom_response: MUTATION_edgeDecisionConfig___EdgeCustomResponse___
  edge_custom_response___JSON: JSON
}

input MUTATION_edgeDecisionConfig___UpdateEdgeDecisionRuleRequest___Input {
  current_version: Int
  edge_decision_rule: MUTATION_edgeDecisionConfig___EdgeDecisionRule___Input
  edge_decision_rule___JSON: JSON
  update_mask: MUTATION_edgeDecisionConfig___FieldMask___Input
  update_mask___JSON: JSON
}

type MUTATION_edgeDecisionConfig___UpdateEdgeDecisionRuleResponse___ {
  edge_decision_rule: MUTATION_edgeDecisionConfig___EdgeDecisionRule___
  edge_decision_rule___JSON: JSON
}

input MUTATION_edgeDecisionConfig___UpdateEdgeDecisionSpecRequest___Input {
  current_version: Int
  edge_decision_spec: MUTATION_edgeDecisionConfig___EdgeDecisionSpec___Input
  edge_decision_spec___JSON: JSON
  update_mask: MUTATION_edgeDecisionConfig___FieldMask___Input
  update_mask___JSON: JSON
}

type MUTATION_edgeDecisionConfig___UpdateEdgeDecisionSpecResponse___ {
  edge_decision_spec: MUTATION_edgeDecisionConfig___EdgeDecisionSpec___
  edge_decision_spec___JSON: JSON
}

input MUTATION_edgeDecisionConfig___UpsertEdgeDecisionEngineConfigRequest___Input {
  id: String
  name: String
  version: Int
  common_variables: [MUTATION_edgeDecisionConfig___VariableDerivationMapping___Input]
  common_variables___JSON: JSON
  disabled: Boolean
  disabled_rule_categories: [MUTATION_edgeDecisionConfig___EdgeDecisionRuleCategory___]
  disabled_rule_categories___JSON: JSON
  default_block_response: MUTATION_edgeDecisionConfig___EdgeCustomResponse___Input
  default_block_response___JSON: JSON
  custom_config: MUTATION_edgeDecisionConfig___Value___Input
  custom_config___JSON: JSON
}

type MUTATION_edgeDecisionConfig___UpsertEdgeDecisionEngineConfigResponse___ {
  edge_decision_engine_config: MUTATION_edgeDecisionConfig___EdgeDecisionEngineConfig___
  edge_decision_engine_config___JSON: JSON
}

type MUTATION_edgeDecisionConfig___UrlRegexScope___ {
  url_regexes: [String]
  url_regexes___JSON: JSON
}

input MUTATION_edgeDecisionConfig___UrlRegexScope___Input {
  url_regexes: [String]
  url_regexes___JSON: JSON
}

type MUTATION_edgeDecisionConfig___UrlScope___ {
  urls: [String]
  urls___JSON: JSON
}

input MUTATION_edgeDecisionConfig___UrlScope___Input {
  urls: [String]
  urls___JSON: JSON
}

type MUTATION_edgeDecisionConfig___Value___ {
  null_value: MUTATION_edgeDecisionConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: MUTATION_edgeDecisionConfig___Struct___
  struct_value___JSON: JSON
  list_value: MUTATION_edgeDecisionConfig___ListValue___
  list_value___JSON: JSON
}

input MUTATION_edgeDecisionConfig___Value___Input {
  null_value: MUTATION_edgeDecisionConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: MUTATION_edgeDecisionConfig___Struct___Input
  struct_value___JSON: JSON
  list_value: MUTATION_edgeDecisionConfig___ListValue___Input
  list_value___JSON: JSON
}

type MUTATION_edgeDecisionConfig___ValueAggregateThreshold___ {
  dimension: MUTATION_edgeDecisionConfig___AttributeDerivationMapping___
  dimension___JSON: JSON
  aggregation_type: MUTATION_edgeDecisionConfig___AggregationType___
  static_threshold: Float
  range_threshold: MUTATION_edgeDecisionConfig___RangeThreshold___
  range_threshold___JSON: JSON
  tolerance_threshold: MUTATION_edgeDecisionConfig___ToleranceThreshold___
  tolerance_threshold___JSON: JSON
  threshold_operator: MUTATION_edgeDecisionConfig___ThresholdOperator___
  disable_estimated_aggregate: Boolean
}

input MUTATION_edgeDecisionConfig___ValueAggregateThreshold___Input {
  dimension: MUTATION_edgeDecisionConfig___AttributeDerivationMapping___Input
  dimension___JSON: JSON
  aggregation_type: MUTATION_edgeDecisionConfig___AggregationType___
  static_threshold: Float
  range_threshold: MUTATION_edgeDecisionConfig___RangeThreshold___Input
  range_threshold___JSON: JSON
  tolerance_threshold: MUTATION_edgeDecisionConfig___ToleranceThreshold___Input
  tolerance_threshold___JSON: JSON
  threshold_operator: MUTATION_edgeDecisionConfig___ThresholdOperator___
  disable_estimated_aggregate: Boolean
}

type MUTATION_edgeDecisionConfig___VariableDerivationMapping___ {
  name: String
  rules: [MUTATION_edgeDecisionConfig___DerivationRule___]
  rules___JSON: JSON
}

input MUTATION_edgeDecisionConfig___VariableDerivationMapping___Input {
  name: String
  rules: [MUTATION_edgeDecisionConfig___DerivationRule___Input]
  rules___JSON: JSON
}

input MUTATION_edgeDecisionConfig_google_protobuf_Struct_FieldsEntry___fields___MapInput {
  key: String
  value: MUTATION_edgeDecisionConfig___Value___Input
}

type MUTATION_edgeDecisionConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput {
  key: String
  value: MUTATION_edgeDecisionConfig___Value___
}

type MUTATION_fraudPolicyConfig___ApiAccessAnomalyConfig___ {
  id: String
  grouped_configs: [MUTATION_fraudPolicyConfig___GroupedConfig___]
  grouped_configs___JSON: JSON
}

input MUTATION_fraudPolicyConfig___ApiAccessAnomalyConfig___Input {
  id: String
  grouped_configs: [MUTATION_fraudPolicyConfig___GroupedConfig___Input]
  grouped_configs___JSON: JSON
}

type MUTATION_fraudPolicyConfig___ApiCollection___ {
  apis: [MUTATION_fraudPolicyConfig___APISpec___]
  apis___JSON: JSON
}

input MUTATION_fraudPolicyConfig___ApiCollection___Input {
  apis: [MUTATION_fraudPolicyConfig___APISpec___Input]
  apis___JSON: JSON
}

type MUTATION_fraudPolicyConfig___ApiOccurenceStats___ {
  prob_no_api_median: Float
  prob_no_api_median_absolute_deviation: Float
}

input MUTATION_fraudPolicyConfig___ApiOccurenceStats___Input {
  prob_no_api_median: Float
  prob_no_api_median_absolute_deviation: Float
}

type MUTATION_fraudPolicyConfig___ApiReference___ {
  api_id: String
  api_type: String
  api_name: String
}

input MUTATION_fraudPolicyConfig___ApiReference___Input {
  api_id: String
  api_type: String
  api_name: String
}

type MUTATION_fraudPolicyConfig___APISpec___ {
  api_reference: MUTATION_fraudPolicyConfig___ApiReference___
  api_reference___JSON: JSON
  weight: Int
  request_attributes: MUTATION_fraudPolicyConfig___RequestAttributes___
  request_attributes___JSON: JSON
  median_pct: Float
}

input MUTATION_fraudPolicyConfig___APISpec___Input {
  api_reference: MUTATION_fraudPolicyConfig___ApiReference___Input
  api_reference___JSON: JSON
  weight: Int
  request_attributes: MUTATION_fraudPolicyConfig___RequestAttributes___Input
  request_attributes___JSON: JSON
  median_pct: Float
}

type MUTATION_fraudPolicyConfig___AutoThreshold___ {
  """Placeholder field for empty messages"""
  placeholder: String
}

input MUTATION_fraudPolicyConfig___AutoThreshold___Input {
  """Placeholder field for empty messages"""
  placeholder: String
}

type MUTATION_fraudPolicyConfig___BaselineConfig___ {
  baseline_spec: MUTATION_fraudPolicyConfig___BaselineSpec___
  baseline_spec___JSON: JSON
  baseline_data_config: MUTATION_fraudPolicyConfig___BaselineDataConfig___
  baseline_data_config___JSON: JSON
}

input MUTATION_fraudPolicyConfig___BaselineConfig___Input {
  baseline_spec: MUTATION_fraudPolicyConfig___BaselineSpec___Input
  baseline_spec___JSON: JSON
  baseline_data_config: MUTATION_fraudPolicyConfig___BaselineDataConfig___Input
  baseline_data_config___JSON: JSON
}

type MUTATION_fraudPolicyConfig___BaselineDataConfig___ {
  num_periods: Int
  seasonality: MUTATION_fraudPolicyConfig___Seasonality___
}

input MUTATION_fraudPolicyConfig___BaselineDataConfig___Input {
  num_periods: Int
  seasonality: MUTATION_fraudPolicyConfig___Seasonality___
}

type MUTATION_fraudPolicyConfig___BaselineSpec___ {
  simple_aggregation_baseline: MUTATION_fraudPolicyConfig___SimpleAggregationBaseline___
  simple_aggregation_baseline___JSON: JSON
  linear_regression_baseline: MUTATION_fraudPolicyConfig___LinearRegressionBaseline___
  linear_regression_baseline___JSON: JSON
  sma_baseline: MUTATION_fraudPolicyConfig___SMABaseline___
  sma_baseline___JSON: JSON
  ewma_baseline: MUTATION_fraudPolicyConfig___EWMABaseline___
  ewma_baseline___JSON: JSON
}

input MUTATION_fraudPolicyConfig___BaselineSpec___Input {
  simple_aggregation_baseline: MUTATION_fraudPolicyConfig___SimpleAggregationBaseline___Input
  simple_aggregation_baseline___JSON: JSON
  linear_regression_baseline: MUTATION_fraudPolicyConfig___LinearRegressionBaseline___Input
  linear_regression_baseline___JSON: JSON
  sma_baseline: MUTATION_fraudPolicyConfig___SMABaseline___Input
  sma_baseline___JSON: JSON
  ewma_baseline: MUTATION_fraudPolicyConfig___EWMABaseline___Input
  ewma_baseline___JSON: JSON
}

type MUTATION_fraudPolicyConfig___CorrelationKey___ {
  attributes: [String]
  attributes___JSON: JSON
}

input MUTATION_fraudPolicyConfig___CorrelationKey___Input {
  attributes: [String]
  attributes___JSON: JSON
}

type MUTATION_fraudPolicyConfig___CountFieldVersions___ {
  field_name: String
}

input MUTATION_fraudPolicyConfig___CountFieldVersions___Input {
  field_name: String
}

type MUTATION_fraudPolicyConfig___CountRelatedEntities___ {
  rel_type: String
}

input MUTATION_fraudPolicyConfig___CountRelatedEntities___Input {
  rel_type: String
}

input MUTATION_fraudPolicyConfig___CreateApiAccessAnomalyConfigRequest___Input {
  grouped_configs: [MUTATION_fraudPolicyConfig___GroupedConfig___Input]
  grouped_configs___JSON: JSON
}

type MUTATION_fraudPolicyConfig___CreateApiAccessAnomalyConfigResponse___ {
  config: MUTATION_fraudPolicyConfig___ApiAccessAnomalyConfig___
  config___JSON: JSON
}

input MUTATION_fraudPolicyConfig___CreateFraudPolicyRequest___Input {
  fraud_policy: MUTATION_fraudPolicyConfig___FraudPolicy___Input
  fraud_policy___JSON: JSON
}

type MUTATION_fraudPolicyConfig___CreateFraudPolicyResponse___ {
  fraud_policy: MUTATION_fraudPolicyConfig___FraudPolicy___
  fraud_policy___JSON: JSON
}

type MUTATION_fraudPolicyConfig___DataQuery___ {
  entity_graph_data_query: MUTATION_fraudPolicyConfig___EntityGraphDataQuery___
  entity_graph_data_query___JSON: JSON
  entity_metric_data_query: MUTATION_fraudPolicyConfig___EntityMetricDataQuery___
  entity_metric_data_query___JSON: JSON
  metric_data_query: MUTATION_fraudPolicyConfig___MetricDataQuery___
  metric_data_query___JSON: JSON
}

input MUTATION_fraudPolicyConfig___DataQuery___Input {
  entity_graph_data_query: MUTATION_fraudPolicyConfig___EntityGraphDataQuery___Input
  entity_graph_data_query___JSON: JSON
  entity_metric_data_query: MUTATION_fraudPolicyConfig___EntityMetricDataQuery___Input
  entity_metric_data_query___JSON: JSON
  metric_data_query: MUTATION_fraudPolicyConfig___MetricDataQuery___Input
  metric_data_query___JSON: JSON
}

input MUTATION_fraudPolicyConfig___DeleteApiAccessAnomalyConfigRequest___Input {
  id: String
}

type MUTATION_fraudPolicyConfig___DeleteApiAccessAnomalyConfigResponse___ {
  """Placeholder field for empty messages"""
  placeholder: String
}

input MUTATION_fraudPolicyConfig___DeleteFraudPolicyRequest___Input {
  fraud_policy_id_list: [String]
  fraud_policy_id_list___JSON: JSON
}

type MUTATION_fraudPolicyConfig___DeleteFraudPolicyResponse___ {
  fraud_policy_list: [MUTATION_fraudPolicyConfig___FraudPolicy___]
  fraud_policy_list___JSON: JSON
}

enum MUTATION_fraudPolicyConfig___Dialect___ {
  DIALECT_UNSPECIFIED
  DIALECT_TRINO
  DIALECT_SPARK
  DIALECT_PINOT
  DIALECT_MONGO
  DIALECT_POSTGRES
}

type MUTATION_fraudPolicyConfig___DimensionList___ {
  dimensions: [String]
  dimensions___JSON: JSON
}

input MUTATION_fraudPolicyConfig___DimensionList___Input {
  dimensions: [String]
  dimensions___JSON: JSON
}

enum MUTATION_fraudPolicyConfig___EntityFieldType___ {
  ENTITY_FIELD_TYPE_UNSPECIFIED
  ENTITY_FIELD_TYPE_FIELD
  ENTITY_FIELD_TYPE_TAG
}

type MUTATION_fraudPolicyConfig___EntityGraphBasedFraudRule___ {
  entity_graph_data_query: MUTATION_fraudPolicyConfig___EntityGraphDataQuery___
  entity_graph_data_query___JSON: JSON
  threshold_definition: MUTATION_fraudPolicyConfig___ThresholdDefinition___
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityGraphBasedFraudRule_MessageParamsEntry___message_params___MapOutput]
  message_params___JSON: JSON
}

input MUTATION_fraudPolicyConfig___EntityGraphBasedFraudRule___Input {
  entity_graph_data_query: MUTATION_fraudPolicyConfig___EntityGraphDataQuery___Input
  entity_graph_data_query___JSON: JSON
  threshold_definition: MUTATION_fraudPolicyConfig___ThresholdDefinition___Input
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityGraphBasedFraudRule_MessageParamsEntry___message_params___MapInput]
  message_params___JSON: JSON
}

type MUTATION_fraudPolicyConfig___EntityGraphDataQuery___ {
  entity_graph_query: MUTATION_fraudPolicyConfig___EntityGraphQuery___
  entity_graph_query___JSON: JSON
  raw_sql_query: String
  dialect: MUTATION_fraudPolicyConfig___Dialect___
  query_params: MUTATION_fraudPolicyConfig___QueryParams___
  query_params___JSON: JSON
}

input MUTATION_fraudPolicyConfig___EntityGraphDataQuery___Input {
  entity_graph_query: MUTATION_fraudPolicyConfig___EntityGraphQuery___Input
  entity_graph_query___JSON: JSON
  raw_sql_query: String
  dialect: MUTATION_fraudPolicyConfig___Dialect___
  query_params: MUTATION_fraudPolicyConfig___QueryParams___Input
  query_params___JSON: JSON
}

type MUTATION_fraudPolicyConfig___EntityGraphQuery___ {
  entity_query: MUTATION_fraudPolicyConfig___EntityQuery___
  entity_query___JSON: JSON
  relationship_navs: [MUTATION_fraudPolicyConfig___RelationshipQuery___]
  relationship_navs___JSON: JSON
  sort_and_limit: MUTATION_fraudPolicyConfig___SortAndLimit___
  sort_and_limit___JSON: JSON
}

input MUTATION_fraudPolicyConfig___EntityGraphQuery___Input {
  entity_query: MUTATION_fraudPolicyConfig___EntityQuery___Input
  entity_query___JSON: JSON
  relationship_navs: [MUTATION_fraudPolicyConfig___RelationshipQuery___Input]
  relationship_navs___JSON: JSON
  sort_and_limit: MUTATION_fraudPolicyConfig___SortAndLimit___Input
  sort_and_limit___JSON: JSON
}

type MUTATION_fraudPolicyConfig___EntityMetricBasedFraudRule___ {
  entity_metric_data_query: MUTATION_fraudPolicyConfig___EntityMetricDataQuery___
  entity_metric_data_query___JSON: JSON
  threshold_definition: MUTATION_fraudPolicyConfig___ThresholdDefinition___
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityMetricBasedFraudRule_MessageParamsEntry___message_params___MapOutput]
  message_params___JSON: JSON
}

input MUTATION_fraudPolicyConfig___EntityMetricBasedFraudRule___Input {
  entity_metric_data_query: MUTATION_fraudPolicyConfig___EntityMetricDataQuery___Input
  entity_metric_data_query___JSON: JSON
  threshold_definition: MUTATION_fraudPolicyConfig___ThresholdDefinition___Input
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityMetricBasedFraudRule_MessageParamsEntry___message_params___MapInput]
  message_params___JSON: JSON
}

type MUTATION_fraudPolicyConfig___EntityMetricDataQuery___ {
  entity_metric_query: MUTATION_fraudPolicyConfig___EntityMetricQuery___
  entity_metric_query___JSON: JSON
  raw_sql_query: String
  dialect: MUTATION_fraudPolicyConfig___Dialect___
  query_params: MUTATION_fraudPolicyConfig___QueryParams___
  query_params___JSON: JSON
}

input MUTATION_fraudPolicyConfig___EntityMetricDataQuery___Input {
  entity_metric_query: MUTATION_fraudPolicyConfig___EntityMetricQuery___Input
  entity_metric_query___JSON: JSON
  raw_sql_query: String
  dialect: MUTATION_fraudPolicyConfig___Dialect___
  query_params: MUTATION_fraudPolicyConfig___QueryParams___Input
  query_params___JSON: JSON
}

type MUTATION_fraudPolicyConfig___EntityMetricQuery___ {
  entity_query: MUTATION_fraudPolicyConfig___EntityQuery___
  entity_query___JSON: JSON
  count_related_entities: MUTATION_fraudPolicyConfig___CountRelatedEntities___
  count_related_entities___JSON: JSON
  count_field_versions: MUTATION_fraudPolicyConfig___CountFieldVersions___
  count_field_versions___JSON: JSON
  granularity: MUTATION_fraudPolicyConfig___TimeObj___
  granularity___JSON: JSON
  single_aggregate_value: Boolean
  time_frame: MUTATION_fraudPolicyConfig___TimeFrame___
  time_frame___JSON: JSON
}

input MUTATION_fraudPolicyConfig___EntityMetricQuery___Input {
  entity_query: MUTATION_fraudPolicyConfig___EntityQuery___Input
  entity_query___JSON: JSON
  count_related_entities: MUTATION_fraudPolicyConfig___CountRelatedEntities___Input
  count_related_entities___JSON: JSON
  count_field_versions: MUTATION_fraudPolicyConfig___CountFieldVersions___Input
  count_field_versions___JSON: JSON
  granularity: MUTATION_fraudPolicyConfig___TimeObj___Input
  granularity___JSON: JSON
  single_aggregate_value: Boolean
  time_frame: MUTATION_fraudPolicyConfig___TimeFrame___Input
  time_frame___JSON: JSON
}

type MUTATION_fraudPolicyConfig___EntityQuery___ {
  type_id: String
  entity_ids: [String]
  entity_ids___JSON: JSON
  predicates: [MUTATION_fraudPolicyConfig___EntityQueryPredicate___]
  predicates___JSON: JSON
  projections: [MUTATION_fraudPolicyConfig___EntityQueryProjection___]
  projections___JSON: JSON
  rel_predicates: [MUTATION_fraudPolicyConfig___RelationshipPredicate___]
  rel_predicates___JSON: JSON
}

input MUTATION_fraudPolicyConfig___EntityQuery___Input {
  type_id: String
  entity_ids: [String]
  entity_ids___JSON: JSON
  predicates: [MUTATION_fraudPolicyConfig___EntityQueryPredicate___Input]
  predicates___JSON: JSON
  projections: [MUTATION_fraudPolicyConfig___EntityQueryProjection___Input]
  projections___JSON: JSON
  rel_predicates: [MUTATION_fraudPolicyConfig___RelationshipPredicate___Input]
  rel_predicates___JSON: JSON
}

type MUTATION_fraudPolicyConfig___EntityQueryPredicate___ {
  field_type: MUTATION_fraudPolicyConfig___EntityFieldType___
  key: String
  map_key: String
  op: MUTATION_fraudPolicyConfig___Operation___
  value: MUTATION_fraudPolicyConfig___FieldValue___
  value___JSON: JSON
  range_values: [MUTATION_fraudPolicyConfig___FieldValue___]
  range_values___JSON: JSON
}

input MUTATION_fraudPolicyConfig___EntityQueryPredicate___Input {
  field_type: MUTATION_fraudPolicyConfig___EntityFieldType___
  key: String
  map_key: String
  op: MUTATION_fraudPolicyConfig___Operation___
  value: MUTATION_fraudPolicyConfig___FieldValue___Input
  value___JSON: JSON
  range_values: [MUTATION_fraudPolicyConfig___FieldValue___Input]
  range_values___JSON: JSON
}

type MUTATION_fraudPolicyConfig___EntityQueryProjection___ {
  field_type: MUTATION_fraudPolicyConfig___EntityFieldType___
  name: String
}

input MUTATION_fraudPolicyConfig___EntityQueryProjection___Input {
  field_type: MUTATION_fraudPolicyConfig___EntityFieldType___
  name: String
}

type MUTATION_fraudPolicyConfig___EnvironmentScope___ {
  environment_ids: [String]
  environment_ids___JSON: JSON
}

input MUTATION_fraudPolicyConfig___EnvironmentScope___Input {
  environment_ids: [String]
  environment_ids___JSON: JSON
}

type MUTATION_fraudPolicyConfig___EWMABaseline___ {
  alpha: Float
}

input MUTATION_fraudPolicyConfig___EWMABaseline___Input {
  alpha: Float
}

input MUTATION_fraudPolicyConfig___FieldMask___Input {
  paths: [String]
  paths___JSON: JSON
}

enum MUTATION_fraudPolicyConfig___FieldType___ {
  FIELD_TYPE_UNSPECIFIED
  FIELD_TYPE_STR
  FIELD_TYPE_BOOL
  FIELD_TYPE_LONG
  FIELD_TYPE_DOUBLE
  FIELD_TYPE_LIST
  FIELD_TYPE_MAP
  FIELD_TYPE_TIMESTAMP
  FIELD_TYPE_BINARY
  FIELD_TYPE_INT
}

type MUTATION_fraudPolicyConfig___FieldValue___ {
  list_val: MUTATION_fraudPolicyConfig___ListValue___
  list_val___JSON: JSON
  map_val: MUTATION_fraudPolicyConfig___MapValue___
  map_val___JSON: JSON
  primitive_val: MUTATION_fraudPolicyConfig___PrimitiveFieldValue___
  primitive_val___JSON: JSON
}

input MUTATION_fraudPolicyConfig___FieldValue___Input {
  list_val: MUTATION_fraudPolicyConfig___ListValue___Input
  list_val___JSON: JSON
  map_val: MUTATION_fraudPolicyConfig___MapValue___Input
  map_val___JSON: JSON
  primitive_val: MUTATION_fraudPolicyConfig___PrimitiveFieldValue___Input
  primitive_val___JSON: JSON
}

type MUTATION_fraudPolicyConfig___FraudBizImpactRule___ {
  fraud_data_query: MUTATION_fraudPolicyConfig___FraudDataQuery___
  fraud_data_query___JSON: JSON
}

input MUTATION_fraudPolicyConfig___FraudBizImpactRule___Input {
  fraud_data_query: MUTATION_fraudPolicyConfig___FraudDataQuery___Input
  fraud_data_query___JSON: JSON
}

type MUTATION_fraudPolicyConfig___FraudDataQuery___ {
  data_query: MUTATION_fraudPolicyConfig___DataQuery___
  data_query___JSON: JSON
  message_format: String
  message_params: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_FraudDataQuery_MessageParamsEntry___message_params___MapOutput]
  message_params___JSON: JSON
}

input MUTATION_fraudPolicyConfig___FraudDataQuery___Input {
  data_query: MUTATION_fraudPolicyConfig___DataQuery___Input
  data_query___JSON: JSON
  message_format: String
  message_params: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_FraudDataQuery_MessageParamsEntry___message_params___MapInput]
  message_params___JSON: JSON
}

type MUTATION_fraudPolicyConfig___FraudPolicy___ {
  id: String
  name: String
  fraud_policy_rule: MUTATION_fraudPolicyConfig___FraudPolicyRule___
  fraud_policy_rule___JSON: JSON
  category: MUTATION_fraudPolicyConfig___FraudPolicyCategory___
  primary_entity_type: String
  time_window: MUTATION_fraudPolicyConfig___TimeWindow___
  time_window___JSON: JSON
  watcher_policy: MUTATION_fraudPolicyConfig___FraudWatcherPolicy___
  watcher_policy___JSON: JSON
  biz_impact_rules: [MUTATION_fraudPolicyConfig___FraudBizImpactRule___]
  biz_impact_rules___JSON: JSON
  disabled: Boolean
  labels: [String]
  labels___JSON: JSON
  fraud_policy_stage: MUTATION_fraudPolicyConfig___FraudPolicyStage___
  description: String
  risk_spec: MUTATION_fraudPolicyConfig___FraudRiskSpec___
  risk_spec___JSON: JSON
  fraud_risk_category: String
  scope: MUTATION_fraudPolicyConfig___FraudPolicyScope___
  scope___JSON: JSON
  schedule: MUTATION_fraudPolicyConfig___Schedule___
  schedule___JSON: JSON
  version: Int
  policy_group: MUTATION_fraudPolicyConfig___PolicyGroup___
  policy_type: MUTATION_fraudPolicyConfig___PolicyType___
  template_id: String
  incident_config: MUTATION_fraudPolicyConfig___Value___
  incident_config___JSON: JSON
  triage_config: MUTATION_fraudPolicyConfig___Value___
  triage_config___JSON: JSON
  execution_status: MUTATION_fraudPolicyConfig___Value___
  execution_status___JSON: JSON
  additional_fields: MUTATION_fraudPolicyConfig___Value___
  additional_fields___JSON: JSON
}

input MUTATION_fraudPolicyConfig___FraudPolicy___Input {
  id: String
  name: String
  fraud_policy_rule: MUTATION_fraudPolicyConfig___FraudPolicyRule___Input
  fraud_policy_rule___JSON: JSON
  category: MUTATION_fraudPolicyConfig___FraudPolicyCategory___
  primary_entity_type: String
  time_window: MUTATION_fraudPolicyConfig___TimeWindow___Input
  time_window___JSON: JSON
  watcher_policy: MUTATION_fraudPolicyConfig___FraudWatcherPolicy___Input
  watcher_policy___JSON: JSON
  biz_impact_rules: [MUTATION_fraudPolicyConfig___FraudBizImpactRule___Input]
  biz_impact_rules___JSON: JSON
  disabled: Boolean
  labels: [String]
  labels___JSON: JSON
  fraud_policy_stage: MUTATION_fraudPolicyConfig___FraudPolicyStage___
  description: String
  risk_spec: MUTATION_fraudPolicyConfig___FraudRiskSpec___Input
  risk_spec___JSON: JSON
  fraud_risk_category: String
  scope: MUTATION_fraudPolicyConfig___FraudPolicyScope___Input
  scope___JSON: JSON
  schedule: MUTATION_fraudPolicyConfig___Schedule___Input
  schedule___JSON: JSON
  version: Int
  policy_group: MUTATION_fraudPolicyConfig___PolicyGroup___
  policy_type: MUTATION_fraudPolicyConfig___PolicyType___
  template_id: String
  incident_config: MUTATION_fraudPolicyConfig___Value___Input
  incident_config___JSON: JSON
  triage_config: MUTATION_fraudPolicyConfig___Value___Input
  triage_config___JSON: JSON
  execution_status: MUTATION_fraudPolicyConfig___Value___Input
  execution_status___JSON: JSON
  additional_fields: MUTATION_fraudPolicyConfig___Value___Input
  additional_fields___JSON: JSON
}

enum MUTATION_fraudPolicyConfig___FraudPolicyCategory___ {
  FRAUD_POLICY_CATEGORY_UNSPECIFIED
  FRAUD_POLICY_CATEGORY_RISK
  FRAUD_POLICY_CATEGORY_FRAUD
  FRAUD_POLICY_CATEGORY_BOT
}

type MUTATION_fraudPolicyConfig___FraudPolicyRule___ {
  fraud_rule: MUTATION_fraudPolicyConfig___FraudRule___
  fraud_rule___JSON: JSON
  logical_fraud_rule: MUTATION_fraudPolicyConfig___LogicalFraudRule___
  logical_fraud_rule___JSON: JSON
}

input MUTATION_fraudPolicyConfig___FraudPolicyRule___Input {
  fraud_rule: MUTATION_fraudPolicyConfig___FraudRule___Input
  fraud_rule___JSON: JSON
  logical_fraud_rule: MUTATION_fraudPolicyConfig___LogicalFraudRule___Input
  logical_fraud_rule___JSON: JSON
}

type MUTATION_fraudPolicyConfig___FraudPolicyScope___ {
  environment_scope: MUTATION_fraudPolicyConfig___EnvironmentScope___
  environment_scope___JSON: JSON
  tenant_scope: MUTATION_fraudPolicyConfig___TenantScope___
  tenant_scope___JSON: JSON
}

input MUTATION_fraudPolicyConfig___FraudPolicyScope___Input {
  environment_scope: MUTATION_fraudPolicyConfig___EnvironmentScope___Input
  environment_scope___JSON: JSON
  tenant_scope: MUTATION_fraudPolicyConfig___TenantScope___Input
  tenant_scope___JSON: JSON
}

enum MUTATION_fraudPolicyConfig___FraudPolicyStage___ {
  FRAUD_POLICY_STAGE_UNSPECIFIED
  FRAUD_POLICY_STAGE_PRODUCTION
  FRAUD_POLICY_STAGE_STAGING
  FRAUD_POLICY_STAGE_INTERNAL
  FRAUD_POLICY_STAGE_SIMULATION
}

enum MUTATION_fraudPolicyConfig___FraudRiskSeverity___ {
  FRAUD_RISK_SEVERITY_UNSPECIFIED
  FRAUD_RISK_SEVERITY_LOW
  FRAUD_RISK_SEVERITY_MEDIUM
  FRAUD_RISK_SEVERITY_HIGH
}

type MUTATION_fraudPolicyConfig___FraudRiskSpec___ {
  score: Int
  severity: MUTATION_fraudPolicyConfig___FraudRiskSeverity___
}

input MUTATION_fraudPolicyConfig___FraudRiskSpec___Input {
  score: Int
  severity: MUTATION_fraudPolicyConfig___FraudRiskSeverity___
}

type MUTATION_fraudPolicyConfig___FraudRule___ {
  fraud_rule_id: String
  entity_graph_fraud_rule: MUTATION_fraudPolicyConfig___EntityGraphBasedFraudRule___
  entity_graph_fraud_rule___JSON: JSON
  entity_metric_fraud_rule: MUTATION_fraudPolicyConfig___EntityMetricBasedFraudRule___
  entity_metric_fraud_rule___JSON: JSON
  metric_fraud_rule: MUTATION_fraudPolicyConfig___MetricBasedFraudRule___
  metric_fraud_rule___JSON: JSON
  inline_detection_config: String
  transformation_config: String
  transformation_config_fraud_rule: MUTATION_fraudPolicyConfig___TransformationConfigBasedFraudRule___
  transformation_config_fraud_rule___JSON: JSON
}

input MUTATION_fraudPolicyConfig___FraudRule___Input {
  fraud_rule_id: String
  entity_graph_fraud_rule: MUTATION_fraudPolicyConfig___EntityGraphBasedFraudRule___Input
  entity_graph_fraud_rule___JSON: JSON
  entity_metric_fraud_rule: MUTATION_fraudPolicyConfig___EntityMetricBasedFraudRule___Input
  entity_metric_fraud_rule___JSON: JSON
  metric_fraud_rule: MUTATION_fraudPolicyConfig___MetricBasedFraudRule___Input
  metric_fraud_rule___JSON: JSON
  inline_detection_config: String
  transformation_config: String
  transformation_config_fraud_rule: MUTATION_fraudPolicyConfig___TransformationConfigBasedFraudRule___Input
  transformation_config_fraud_rule___JSON: JSON
}

enum MUTATION_fraudPolicyConfig___FraudRuleLogicalOperator___ {
  FRAUD_RULE_LOGICAL_OPERATOR_UNSPECIFIED
  FRAUD_RULE_LOGICAL_OPERATOR_AND
  FRAUD_RULE_LOGICAL_OPERATOR_OR
}

type MUTATION_fraudPolicyConfig___FraudWatcherPolicy___ {
  watcher_policy: MUTATION_fraudPolicyConfig___FraudPolicy___
  watcher_policy___JSON: JSON
  ttl: MUTATION_fraudPolicyConfig___TimeObj___
  ttl___JSON: JSON
}

input MUTATION_fraudPolicyConfig___FraudWatcherPolicy___Input {
  watcher_policy: MUTATION_fraudPolicyConfig___FraudPolicy___Input
  watcher_policy___JSON: JSON
  ttl: MUTATION_fraudPolicyConfig___TimeObj___Input
  ttl___JSON: JSON
}

type MUTATION_fraudPolicyConfig___GroupedConfig___ {
  pre: MUTATION_fraudPolicyConfig___ApiCollection___
  pre___JSON: JSON
  post: MUTATION_fraudPolicyConfig___ApiCollection___
  post___JSON: JSON
  correlation_key: MUTATION_fraudPolicyConfig___CorrelationKey___
  correlation_key___JSON: JSON
  api_reference: MUTATION_fraudPolicyConfig___ApiReference___
  api_reference___JSON: JSON
  lookback_time_window: MUTATION_fraudPolicyConfig___TimeWindow___
  lookback_time_window___JSON: JSON
  request_attributes: MUTATION_fraudPolicyConfig___RequestAttributes___
  request_attributes___JSON: JSON
  pre_occurence_stats: MUTATION_fraudPolicyConfig___ApiOccurenceStats___
  pre_occurence_stats___JSON: JSON
  post_occurence_stats: MUTATION_fraudPolicyConfig___ApiOccurenceStats___
  post_occurence_stats___JSON: JSON
  grouping_kv: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_GroupedConfig_GroupingKvEntry___grouping_kv___MapOutput]
  grouping_kv___JSON: JSON
}

input MUTATION_fraudPolicyConfig___GroupedConfig___Input {
  pre: MUTATION_fraudPolicyConfig___ApiCollection___Input
  pre___JSON: JSON
  post: MUTATION_fraudPolicyConfig___ApiCollection___Input
  post___JSON: JSON
  correlation_key: MUTATION_fraudPolicyConfig___CorrelationKey___Input
  correlation_key___JSON: JSON
  api_reference: MUTATION_fraudPolicyConfig___ApiReference___Input
  api_reference___JSON: JSON
  lookback_time_window: MUTATION_fraudPolicyConfig___TimeWindow___Input
  lookback_time_window___JSON: JSON
  request_attributes: MUTATION_fraudPolicyConfig___RequestAttributes___Input
  request_attributes___JSON: JSON
  pre_occurence_stats: MUTATION_fraudPolicyConfig___ApiOccurenceStats___Input
  pre_occurence_stats___JSON: JSON
  post_occurence_stats: MUTATION_fraudPolicyConfig___ApiOccurenceStats___Input
  post_occurence_stats___JSON: JSON
  grouping_kv: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_GroupedConfig_GroupingKvEntry___grouping_kv___MapInput]
  grouping_kv___JSON: JSON
}

type MUTATION_fraudPolicyConfig___LinearRegressionBaseline___ {
  regressor: MUTATION_fraudPolicyConfig___Regressor___
}

input MUTATION_fraudPolicyConfig___LinearRegressionBaseline___Input {
  regressor: MUTATION_fraudPolicyConfig___Regressor___
}

type MUTATION_fraudPolicyConfig___ListValue___ {
  values: [MUTATION_fraudPolicyConfig___PrimitiveFieldValue___]
  values___JSON: JSON
}

input MUTATION_fraudPolicyConfig___ListValue___Input {
  values: [MUTATION_fraudPolicyConfig___PrimitiveFieldValue___Input]
  values___JSON: JSON
}

type MUTATION_fraudPolicyConfig___LiteralParam___ {
  name: String
  value: String
}

input MUTATION_fraudPolicyConfig___LiteralParam___Input {
  name: String
  value: String
}

type MUTATION_fraudPolicyConfig___LogicalFraudRule___ {
  operator: MUTATION_fraudPolicyConfig___FraudRuleLogicalOperator___
  rules: [MUTATION_fraudPolicyConfig___FraudPolicyRule___]
  rules___JSON: JSON
}

input MUTATION_fraudPolicyConfig___LogicalFraudRule___Input {
  operator: MUTATION_fraudPolicyConfig___FraudRuleLogicalOperator___
  rules: [MUTATION_fraudPolicyConfig___FraudPolicyRule___Input]
  rules___JSON: JSON
}

type MUTATION_fraudPolicyConfig___ManualThreshold___ {
  static_value: Float
  query_based_threshold: MUTATION_fraudPolicyConfig___QueryBasedThreshold___
  query_based_threshold___JSON: JSON
}

input MUTATION_fraudPolicyConfig___ManualThreshold___Input {
  static_value: Float
  query_based_threshold: MUTATION_fraudPolicyConfig___QueryBasedThreshold___Input
  query_based_threshold___JSON: JSON
}

type MUTATION_fraudPolicyConfig___MapValue___ {
  entries: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_datamodel_config_service_v1_MapValue_EntriesEntry___entries___MapOutput]
  entries___JSON: JSON
}

input MUTATION_fraudPolicyConfig___MapValue___Input {
  entries: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_datamodel_config_service_v1_MapValue_EntriesEntry___entries___MapInput]
  entries___JSON: JSON
}

type MUTATION_fraudPolicyConfig___MetricBasedFraudRule___ {
  metric_data_query: MUTATION_fraudPolicyConfig___MetricDataQuery___
  metric_data_query___JSON: JSON
  threshold_definition: MUTATION_fraudPolicyConfig___ThresholdDefinition___
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_MetricBasedFraudRule_MessageParamsEntry___message_params___MapOutput]
  message_params___JSON: JSON
}

input MUTATION_fraudPolicyConfig___MetricBasedFraudRule___Input {
  metric_data_query: MUTATION_fraudPolicyConfig___MetricDataQuery___Input
  metric_data_query___JSON: JSON
  threshold_definition: MUTATION_fraudPolicyConfig___ThresholdDefinition___Input
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_MetricBasedFraudRule_MessageParamsEntry___message_params___MapInput]
  message_params___JSON: JSON
}

type MUTATION_fraudPolicyConfig___MetricDataQuery___ {
  metric_query: MUTATION_fraudPolicyConfig___MetricQuery___
  metric_query___JSON: JSON
  raw_sql_query: String
  dialect: MUTATION_fraudPolicyConfig___Dialect___
  query_params: MUTATION_fraudPolicyConfig___QueryParams___
  query_params___JSON: JSON
}

input MUTATION_fraudPolicyConfig___MetricDataQuery___Input {
  metric_query: MUTATION_fraudPolicyConfig___MetricQuery___Input
  metric_query___JSON: JSON
  raw_sql_query: String
  dialect: MUTATION_fraudPolicyConfig___Dialect___
  query_params: MUTATION_fraudPolicyConfig___QueryParams___Input
  query_params___JSON: JSON
}

type MUTATION_fraudPolicyConfig___MetricQuery___ {
  field_to_aggregate: String
  metric_id: String
  dimensions: MUTATION_fraudPolicyConfig___DimensionList___
  dimensions___JSON: JSON
  group_by: [String]
  group_by___JSON: JSON
  granularity: MUTATION_fraudPolicyConfig___TimeObj___
  granularity___JSON: JSON
  single_aggregate_value: Boolean
  time_frame: MUTATION_fraudPolicyConfig___TimeFrame___
  time_frame___JSON: JSON
  filters: [MUTATION_fraudPolicyConfig___MetricQueryFilter___]
  filters___JSON: JSON
}

input MUTATION_fraudPolicyConfig___MetricQuery___Input {
  field_to_aggregate: String
  metric_id: String
  dimensions: MUTATION_fraudPolicyConfig___DimensionList___Input
  dimensions___JSON: JSON
  group_by: [String]
  group_by___JSON: JSON
  granularity: MUTATION_fraudPolicyConfig___TimeObj___Input
  granularity___JSON: JSON
  single_aggregate_value: Boolean
  time_frame: MUTATION_fraudPolicyConfig___TimeFrame___Input
  time_frame___JSON: JSON
  filters: [MUTATION_fraudPolicyConfig___MetricQueryFilter___Input]
  filters___JSON: JSON
}

type MUTATION_fraudPolicyConfig___MetricQueryFilter___ {
  key: String
  op: MUTATION_fraudPolicyConfig___Operation___
  value: MUTATION_fraudPolicyConfig___FieldValue___
  value___JSON: JSON
}

input MUTATION_fraudPolicyConfig___MetricQueryFilter___Input {
  key: String
  op: MUTATION_fraudPolicyConfig___Operation___
  value: MUTATION_fraudPolicyConfig___FieldValue___Input
  value___JSON: JSON
}

enum MUTATION_fraudPolicyConfig___NullValue___ {
  NULL_VALUE
}

enum MUTATION_fraudPolicyConfig___Operation___ {
  OPERATION_UNSPECIFIED
  OPERATION_EQ
  OPERATION_LT
  OPERATION_GT
  OPERATION_CONTAINS
  OPERATION_STARTS_WITH
  OPERATION_EXISTS
  OPERATION_DOES_NOT_EXIST
  OPERATION_REGEX
  OPERATION_NEQ
  OPERATION_GTE
  OPERATION_LTE
  OPERATION_NOT_CONTAINS
  OPERATION_NOT_REGEX
  OPERATION_GTE_NUM_VERSIONS
}

type MUTATION_fraudPolicyConfig___Param___ {
  literal_param: MUTATION_fraudPolicyConfig___LiteralParam___
  literal_param___JSON: JSON
  typed_param: MUTATION_fraudPolicyConfig___TypedParam___
  typed_param___JSON: JSON
}

input MUTATION_fraudPolicyConfig___Param___Input {
  literal_param: MUTATION_fraudPolicyConfig___LiteralParam___Input
  literal_param___JSON: JSON
  typed_param: MUTATION_fraudPolicyConfig___TypedParam___Input
  typed_param___JSON: JSON
}

enum MUTATION_fraudPolicyConfig___PolicyGroup___ {
  POLICY_GROUP_UNSPECIFIED
  POLICY_GROUP_BOT
  POLICY_GROUP_WAF
  POLICY_GROUP_MODSEC
  POLICY_GROUP_CUSTOM
  POLICY_GROUP_FRAUD
}

enum MUTATION_fraudPolicyConfig___PolicyType___ {
  POLICY_TYPE_UNSPECIFIED
  POLICY_TYPE_VOLUMETRIC
  POLICY_TYPE_API_ACCESS
  POLICY_TYPE_ACCOUNT_TAKEOVER
  POLICY_TYPE_CUSTOM
}

type MUTATION_fraudPolicyConfig___PrimitiveFieldValue___ {
  long_val: Int
  double_val: Float
  string_val: String
  boolean_val: Boolean
  timestamp_val: Int
  binary_val: String
  int_val: Int
}

input MUTATION_fraudPolicyConfig___PrimitiveFieldValue___Input {
  long_val: Int
  double_val: Float
  string_val: String
  boolean_val: Boolean
  timestamp_val: Int
  binary_val: String
  int_val: Int
}

type MUTATION_fraudPolicyConfig___QuantileFunc___ {
  quantile: Float
}

input MUTATION_fraudPolicyConfig___QuantileFunc___Input {
  quantile: Float
}

type MUTATION_fraudPolicyConfig___QueryBasedThreshold___ {
  copy_query_from_rule: Boolean
  threshold_query: MUTATION_fraudPolicyConfig___DataQuery___
  threshold_query___JSON: JSON
  threshold_operation: MUTATION_fraudPolicyConfig___ThresholdOperation___
  threshold_operation___JSON: JSON
  baseline_config: MUTATION_fraudPolicyConfig___BaselineConfig___
  baseline_config___JSON: JSON
}

input MUTATION_fraudPolicyConfig___QueryBasedThreshold___Input {
  copy_query_from_rule: Boolean
  threshold_query: MUTATION_fraudPolicyConfig___DataQuery___Input
  threshold_query___JSON: JSON
  threshold_operation: MUTATION_fraudPolicyConfig___ThresholdOperation___Input
  threshold_operation___JSON: JSON
  baseline_config: MUTATION_fraudPolicyConfig___BaselineConfig___Input
  baseline_config___JSON: JSON
}

type MUTATION_fraudPolicyConfig___QueryParams___ {
  query_params: [MUTATION_fraudPolicyConfig___Param___]
  query_params___JSON: JSON
}

input MUTATION_fraudPolicyConfig___QueryParams___Input {
  query_params: [MUTATION_fraudPolicyConfig___Param___Input]
  query_params___JSON: JSON
}

enum MUTATION_fraudPolicyConfig___Regressor___ {
  REGRESSOR_UNSPECIFIED
  REGRESSOR_LINEAR
  REGRESSOR_THEIL_SEN
  REGRESSOR_HUBER
}

type MUTATION_fraudPolicyConfig___RelationshipPredicate___ {
  type_id: String
  op: MUTATION_fraudPolicyConfig___Operation___
  predicates: [MUTATION_fraudPolicyConfig___EntityQueryPredicate___]
  predicates___JSON: JSON
  nav_name: String
  entity_type_id: String
  entity_ids: [String]
  entity_ids___JSON: JSON
}

input MUTATION_fraudPolicyConfig___RelationshipPredicate___Input {
  type_id: String
  op: MUTATION_fraudPolicyConfig___Operation___
  predicates: [MUTATION_fraudPolicyConfig___EntityQueryPredicate___Input]
  predicates___JSON: JSON
  nav_name: String
  entity_type_id: String
  entity_ids: [String]
  entity_ids___JSON: JSON
}

type MUTATION_fraudPolicyConfig___RelationshipQuery___ {
  type_id: String
  op: MUTATION_fraudPolicyConfig___Operation___
  predicates: [MUTATION_fraudPolicyConfig___EntityQueryPredicate___]
  predicates___JSON: JSON
  projections: [MUTATION_fraudPolicyConfig___EntityQueryProjection___]
  projections___JSON: JSON
  entity_type_id: String
  nav_name: String
}

input MUTATION_fraudPolicyConfig___RelationshipQuery___Input {
  type_id: String
  op: MUTATION_fraudPolicyConfig___Operation___
  predicates: [MUTATION_fraudPolicyConfig___EntityQueryPredicate___Input]
  predicates___JSON: JSON
  projections: [MUTATION_fraudPolicyConfig___EntityQueryProjection___Input]
  projections___JSON: JSON
  entity_type_id: String
  nav_name: String
}

type MUTATION_fraudPolicyConfig___RequestAttributes___ {
  request_method: [String]
  request_method___JSON: JSON
  status_code: Int
  status_code_regex: String
  request_body_type: [String]
  request_body_type___JSON: JSON
  domain_names: [String]
  domain_names___JSON: JSON
  environment: String
  host_header: [String]
  host_header___JSON: JSON
}

input MUTATION_fraudPolicyConfig___RequestAttributes___Input {
  request_method: [String]
  request_method___JSON: JSON
  status_code: Int
  status_code_regex: String
  request_body_type: [String]
  request_body_type___JSON: JSON
  domain_names: [String]
  domain_names___JSON: JSON
  environment: String
  host_header: [String]
  host_header___JSON: JSON
}

type MUTATION_fraudPolicyConfig___Schedule___ {
  cron_expression: String
  interval: MUTATION_fraudPolicyConfig___TimeObj___
  interval___JSON: JSON
  start_time: Int
  end_time: Int
}

input MUTATION_fraudPolicyConfig___Schedule___Input {
  cron_expression: String
  interval: MUTATION_fraudPolicyConfig___TimeObj___Input
  interval___JSON: JSON
  start_time: Int
  end_time: Int
}

enum MUTATION_fraudPolicyConfig___Seasonality___ {
  SEASONALITY_UNSPECIFIED
  SEASONALITY_HOURLY
  SEASONALITY_DAILY
  SEASONALITY_WEEKLY
}

type MUTATION_fraudPolicyConfig___SimpleAggregationBaseline___ {
  func: MUTATION_fraudPolicyConfig___SimpleAggregationFunc___
  quantile_func: MUTATION_fraudPolicyConfig___QuantileFunc___
  quantile_func___JSON: JSON
}

input MUTATION_fraudPolicyConfig___SimpleAggregationBaseline___Input {
  func: MUTATION_fraudPolicyConfig___SimpleAggregationFunc___
  quantile_func: MUTATION_fraudPolicyConfig___QuantileFunc___Input
  quantile_func___JSON: JSON
}

enum MUTATION_fraudPolicyConfig___SimpleAggregationFunc___ {
  SIMPLE_AGGREGATION_FUNC_UNSPECIFIED
  SIMPLE_AGGREGATION_FUNC_SUM
  SIMPLE_AGGREGATION_FUNC_AVG
  SIMPLE_AGGREGATION_FUNC_COUNT
  SIMPLE_AGGREGATION_FUNC_MIN
  SIMPLE_AGGREGATION_FUNC_MAX
  SIMPLE_AGGREGATION_FUNC_LATEST
}

type MUTATION_fraudPolicyConfig___SMABaseline___ {
  window_size: Int
}

input MUTATION_fraudPolicyConfig___SMABaseline___Input {
  window_size: Int
}

type MUTATION_fraudPolicyConfig___SortAndLimit___ {
  field_name: String
  sort_order: MUTATION_fraudPolicyConfig___SortOrder___
  sort_options: MUTATION_fraudPolicyConfig___SortOptions___
  limit: Int
}

input MUTATION_fraudPolicyConfig___SortAndLimit___Input {
  field_name: String
  sort_order: MUTATION_fraudPolicyConfig___SortOrder___
  sort_options: MUTATION_fraudPolicyConfig___SortOptions___
  limit: Int
}

enum MUTATION_fraudPolicyConfig___SortOptions___ {
  SORT_OPTIONS_UNSPECIFIED
  SORT_OPTIONS_NUMERIC
  SORT_OPTIONS_IGNORE_CASE
}

enum MUTATION_fraudPolicyConfig___SortOrder___ {
  SORT_ORDER_UNSPECIFIED
  SORT_ORDER_ASC
  SORT_ORDER_DESC
}

type MUTATION_fraudPolicyConfig___Struct___ {
  fields: [MUTATION_fraudPolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput]
  fields___JSON: JSON
}

input MUTATION_fraudPolicyConfig___Struct___Input {
  fields: [MUTATION_fraudPolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapInput]
  fields___JSON: JSON
}

type MUTATION_fraudPolicyConfig___TenantScope___ {
  """Placeholder field for empty messages"""
  placeholder: String
}

input MUTATION_fraudPolicyConfig___TenantScope___Input {
  """Placeholder field for empty messages"""
  placeholder: String
}

type MUTATION_fraudPolicyConfig___ThresholdAbsolute___ {
  """Placeholder field for empty messages"""
  placeholder: String
}

input MUTATION_fraudPolicyConfig___ThresholdAbsolute___Input {
  """Placeholder field for empty messages"""
  placeholder: String
}

type MUTATION_fraudPolicyConfig___ThresholdDefinition___ {
  threshold_name: String
  auto_threshold: MUTATION_fraudPolicyConfig___AutoThreshold___
  auto_threshold___JSON: JSON
  manual_threshold: MUTATION_fraudPolicyConfig___ManualThreshold___
  manual_threshold___JSON: JSON
  threshold_operator: MUTATION_fraudPolicyConfig___ThresholdOperator___
}

input MUTATION_fraudPolicyConfig___ThresholdDefinition___Input {
  threshold_name: String
  auto_threshold: MUTATION_fraudPolicyConfig___AutoThreshold___Input
  auto_threshold___JSON: JSON
  manual_threshold: MUTATION_fraudPolicyConfig___ManualThreshold___Input
  manual_threshold___JSON: JSON
  threshold_operator: MUTATION_fraudPolicyConfig___ThresholdOperator___
}

type MUTATION_fraudPolicyConfig___ThresholdDelta___ {
  delta: Float
}

input MUTATION_fraudPolicyConfig___ThresholdDelta___Input {
  delta: Float
}

type MUTATION_fraudPolicyConfig___ThresholdOperation___ {
  threshold_delta: MUTATION_fraudPolicyConfig___ThresholdDelta___
  threshold_delta___JSON: JSON
  threshold_percent: MUTATION_fraudPolicyConfig___ThresholdPercent___
  threshold_percent___JSON: JSON
  threshold_std_dev: MUTATION_fraudPolicyConfig___ThresholdStdDev___
  threshold_std_dev___JSON: JSON
  threshold_abs: MUTATION_fraudPolicyConfig___ThresholdAbsolute___
  threshold_abs___JSON: JSON
}

input MUTATION_fraudPolicyConfig___ThresholdOperation___Input {
  threshold_delta: MUTATION_fraudPolicyConfig___ThresholdDelta___Input
  threshold_delta___JSON: JSON
  threshold_percent: MUTATION_fraudPolicyConfig___ThresholdPercent___Input
  threshold_percent___JSON: JSON
  threshold_std_dev: MUTATION_fraudPolicyConfig___ThresholdStdDev___Input
  threshold_std_dev___JSON: JSON
  threshold_abs: MUTATION_fraudPolicyConfig___ThresholdAbsolute___Input
  threshold_abs___JSON: JSON
}

enum MUTATION_fraudPolicyConfig___ThresholdOperator___ {
  THRESHOLD_OPERATOR_UNSPECIFIED
  THRESHOLD_OPERATOR_ABOVE
  THRESHOLD_OPERATOR_BELOW
  THRESHOLD_OPERATOR_ABOVE_OR_BELOW
}

type MUTATION_fraudPolicyConfig___ThresholdPercent___ {
  percent: Float
}

input MUTATION_fraudPolicyConfig___ThresholdPercent___Input {
  percent: Float
}

type MUTATION_fraudPolicyConfig___ThresholdStdDev___ {
  num_std_devs: Float
}

input MUTATION_fraudPolicyConfig___ThresholdStdDev___Input {
  num_std_devs: Float
}

type MUTATION_fraudPolicyConfig___TimeFrame___ {
  start_time: Int
  end_time: Int
}

input MUTATION_fraudPolicyConfig___TimeFrame___Input {
  start_time: Int
  end_time: Int
}

type MUTATION_fraudPolicyConfig___TimeObj___ {
  value: Int
  unit: MUTATION_fraudPolicyConfig___TimeUnit___
}

input MUTATION_fraudPolicyConfig___TimeObj___Input {
  value: Int
  unit: MUTATION_fraudPolicyConfig___TimeUnit___
}

enum MUTATION_fraudPolicyConfig___TimeUnit___ {
  TIME_UNIT_UNSPECIFIED
  TIME_UNIT_HOURS
  TIME_UNIT_DAYS
  TIME_UNIT_WEEKS
}

type MUTATION_fraudPolicyConfig___TimeWindow___ {
  relative_time: MUTATION_fraudPolicyConfig___TimeObj___
  relative_time___JSON: JSON
  time_frame: MUTATION_fraudPolicyConfig___TimeFrame___
  time_frame___JSON: JSON
}

input MUTATION_fraudPolicyConfig___TimeWindow___Input {
  relative_time: MUTATION_fraudPolicyConfig___TimeObj___Input
  relative_time___JSON: JSON
  time_frame: MUTATION_fraudPolicyConfig___TimeFrame___Input
  time_frame___JSON: JSON
}

type MUTATION_fraudPolicyConfig___TransformationConfigBasedFraudRule___ {
  transformation_config: String
  threshold_definition: MUTATION_fraudPolicyConfig___ThresholdDefinition___
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_TransformationConfigBasedFraudRule_MessageParamsEntry___message_params___MapOutput]
  message_params___JSON: JSON
}

input MUTATION_fraudPolicyConfig___TransformationConfigBasedFraudRule___Input {
  transformation_config: String
  threshold_definition: MUTATION_fraudPolicyConfig___ThresholdDefinition___Input
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_TransformationConfigBasedFraudRule_MessageParamsEntry___message_params___MapInput]
  message_params___JSON: JSON
}

type MUTATION_fraudPolicyConfig___TypedParam___ {
  name: String
  type: MUTATION_fraudPolicyConfig___FieldType___
  value: MUTATION_fraudPolicyConfig___FieldValue___
  value___JSON: JSON
}

input MUTATION_fraudPolicyConfig___TypedParam___Input {
  name: String
  type: MUTATION_fraudPolicyConfig___FieldType___
  value: MUTATION_fraudPolicyConfig___FieldValue___Input
  value___JSON: JSON
}

input MUTATION_fraudPolicyConfig___UpdateApiAccessAnomalyConfigRequest___Input {
  config: MUTATION_fraudPolicyConfig___ApiAccessAnomalyConfig___Input
  config___JSON: JSON
  update_mask: MUTATION_fraudPolicyConfig___FieldMask___Input
  update_mask___JSON: JSON
}

type MUTATION_fraudPolicyConfig___UpdateApiAccessAnomalyConfigResponse___ {
  config: MUTATION_fraudPolicyConfig___ApiAccessAnomalyConfig___
  config___JSON: JSON
}

input MUTATION_fraudPolicyConfig___UpdateFraudPolicyRequest___Input {
  fraud_policy_id: String
  fraud_policy: MUTATION_fraudPolicyConfig___FraudPolicy___Input
  fraud_policy___JSON: JSON
  current_version: Int
  update_mask: MUTATION_fraudPolicyConfig___FieldMask___Input
  update_mask___JSON: JSON
}

type MUTATION_fraudPolicyConfig___UpdateFraudPolicyResponse___ {
  fraud_policy: MUTATION_fraudPolicyConfig___FraudPolicy___
  fraud_policy___JSON: JSON
}

input MUTATION_fraudPolicyConfig___UpsertFraudPolicyRequest___Input {
  fraud_policy: MUTATION_fraudPolicyConfig___FraudPolicy___Input
  fraud_policy___JSON: JSON
}

type MUTATION_fraudPolicyConfig___UpsertFraudPolicyResponse___ {
  fraud_policy: MUTATION_fraudPolicyConfig___FraudPolicy___
  fraud_policy___JSON: JSON
}

type MUTATION_fraudPolicyConfig___Value___ {
  null_value: MUTATION_fraudPolicyConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: MUTATION_fraudPolicyConfig___Struct___
  struct_value___JSON: JSON
  list_value: MUTATION_fraudPolicyConfig___ListValue___
  list_value___JSON: JSON
}

input MUTATION_fraudPolicyConfig___Value___Input {
  null_value: MUTATION_fraudPolicyConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: MUTATION_fraudPolicyConfig___Struct___Input
  struct_value___JSON: JSON
  list_value: MUTATION_fraudPolicyConfig___ListValue___Input
  list_value___JSON: JSON
}

input MUTATION_fraudPolicyConfig_ai_traceable_fraud_datamodel_config_service_v1_MapValue_EntriesEntry___entries___MapInput {
  key: String
  value: MUTATION_fraudPolicyConfig___PrimitiveFieldValue___Input
}

type MUTATION_fraudPolicyConfig_ai_traceable_fraud_datamodel_config_service_v1_MapValue_EntriesEntry___entries___MapOutput {
  key: String
  value: MUTATION_fraudPolicyConfig___PrimitiveFieldValue___
}

input MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityGraphBasedFraudRule_MessageParamsEntry___message_params___MapInput {
  key: String
  value: MUTATION_fraudPolicyConfig___FieldType___
}

type MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityGraphBasedFraudRule_MessageParamsEntry___message_params___MapOutput {
  key: String
  value: MUTATION_fraudPolicyConfig___FieldType___
}

input MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityMetricBasedFraudRule_MessageParamsEntry___message_params___MapInput {
  key: String
  value: MUTATION_fraudPolicyConfig___FieldType___
}

type MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityMetricBasedFraudRule_MessageParamsEntry___message_params___MapOutput {
  key: String
  value: MUTATION_fraudPolicyConfig___FieldType___
}

input MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_FraudDataQuery_MessageParamsEntry___message_params___MapInput {
  key: String
  value: MUTATION_fraudPolicyConfig___FieldType___
}

type MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_FraudDataQuery_MessageParamsEntry___message_params___MapOutput {
  key: String
  value: MUTATION_fraudPolicyConfig___FieldType___
}

input MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_GroupedConfig_GroupingKvEntry___grouping_kv___MapInput {
  key: String
  value: String
}

type MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_GroupedConfig_GroupingKvEntry___grouping_kv___MapOutput {
  key: String
  value: String
}

input MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_MetricBasedFraudRule_MessageParamsEntry___message_params___MapInput {
  key: String
  value: MUTATION_fraudPolicyConfig___FieldType___
}

type MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_MetricBasedFraudRule_MessageParamsEntry___message_params___MapOutput {
  key: String
  value: MUTATION_fraudPolicyConfig___FieldType___
}

input MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_TransformationConfigBasedFraudRule_MessageParamsEntry___message_params___MapInput {
  key: String
  value: MUTATION_fraudPolicyConfig___FieldType___
}

type MUTATION_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_TransformationConfigBasedFraudRule_MessageParamsEntry___message_params___MapOutput {
  key: String
  value: MUTATION_fraudPolicyConfig___FieldType___
}

input MUTATION_fraudPolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapInput {
  key: String
  value: MUTATION_fraudPolicyConfig___Value___Input
}

type MUTATION_fraudPolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput {
  key: String
  value: MUTATION_fraudPolicyConfig___Value___
}

type MUTATION_traceableEdgeBotConfig___AttributeDerivationMapping___ {
  name: String
  type: MUTATION_traceableEdgeBotConfig___FieldType___
  rules: [MUTATION_traceableEdgeBotConfig___DerivationRule___]
  rules___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___AttributeDerivationMapping___Input {
  name: String
  type: MUTATION_traceableEdgeBotConfig___FieldType___
  rules: [MUTATION_traceableEdgeBotConfig___DerivationRule___Input]
  rules___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___BinaryOperator___ {
  list_value: MUTATION_traceableEdgeBotConfig___ListValue___
  list_value___JSON: JSON
  regex: String
  bloom_filter: String
  number_value: Float
  bool_value: Boolean
  null_value: MUTATION_traceableEdgeBotConfig___NullValue___
  string_value: String
  range_value: MUTATION_traceableEdgeBotConfig___RangeValue___
  range_value___JSON: JSON
  time_range_value: MUTATION_traceableEdgeBotConfig___TimeRangeValue___
  time_range_value___JSON: JSON
  match_operator: MUTATION_traceableEdgeBotConfig___MatchOperator___
}

input MUTATION_traceableEdgeBotConfig___BinaryOperator___Input {
  list_value: MUTATION_traceableEdgeBotConfig___ListValue___Input
  list_value___JSON: JSON
  regex: String
  bloom_filter: String
  number_value: Float
  bool_value: Boolean
  null_value: MUTATION_traceableEdgeBotConfig___NullValue___
  string_value: String
  range_value: MUTATION_traceableEdgeBotConfig___RangeValue___Input
  range_value___JSON: JSON
  time_range_value: MUTATION_traceableEdgeBotConfig___TimeRangeValue___Input
  time_range_value___JSON: JSON
  match_operator: MUTATION_traceableEdgeBotConfig___MatchOperator___
}

type MUTATION_traceableEdgeBotConfig___ConditionalConfig___ {
  bool_expression: String
  true_transformation: MUTATION_traceableEdgeBotConfig___DataTransformationConfig___
  true_transformation___JSON: JSON
  false_transformation: MUTATION_traceableEdgeBotConfig___DataTransformationConfig___
  false_transformation___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___ConditionalConfig___Input {
  bool_expression: String
  true_transformation: MUTATION_traceableEdgeBotConfig___DataTransformationConfig___Input
  true_transformation___JSON: JSON
  false_transformation: MUTATION_traceableEdgeBotConfig___DataTransformationConfig___Input
  false_transformation___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___DataTransformationConfig___ {
  static_value: MUTATION_traceableEdgeBotConfig___Value___
  static_value___JSON: JSON
  jexl_expression: MUTATION_traceableEdgeBotConfig___JexlExpressionConfig___
  jexl_expression___JSON: JSON
  jexl_script: MUTATION_traceableEdgeBotConfig___JexlScriptConfig___
  jexl_script___JSON: JSON
  regex: MUTATION_traceableEdgeBotConfig___RegexConfig___
  regex___JSON: JSON
  conditional: MUTATION_traceableEdgeBotConfig___ConditionalConfig___
  conditional___JSON: JSON
  output_type: MUTATION_traceableEdgeBotConfig___FieldType___
}

input MUTATION_traceableEdgeBotConfig___DataTransformationConfig___Input {
  static_value: MUTATION_traceableEdgeBotConfig___Value___Input
  static_value___JSON: JSON
  jexl_expression: MUTATION_traceableEdgeBotConfig___JexlExpressionConfig___Input
  jexl_expression___JSON: JSON
  jexl_script: MUTATION_traceableEdgeBotConfig___JexlScriptConfig___Input
  jexl_script___JSON: JSON
  regex: MUTATION_traceableEdgeBotConfig___RegexConfig___Input
  regex___JSON: JSON
  conditional: MUTATION_traceableEdgeBotConfig___ConditionalConfig___Input
  conditional___JSON: JSON
  output_type: MUTATION_traceableEdgeBotConfig___FieldType___
}

input MUTATION_traceableEdgeBotConfig___DeleteFlowConfigRequest___Input {
  id: String
}

type MUTATION_traceableEdgeBotConfig___DeleteFlowConfigResponse___ {
  deleted_config: MUTATION_traceableEdgeBotConfig___FlowConfig___
  deleted_config___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___DerivationRule___ {
  transformation_config: MUTATION_traceableEdgeBotConfig___DataTransformationConfig___
  transformation_config___JSON: JSON
  transformation_configs: [MUTATION_traceableEdgeBotConfig___DataTransformationConfig___]
  transformation_configs___JSON: JSON
  condition_expression: MUTATION_traceableEdgeBotConfig___JexlExpressionConfig___
  condition_expression___JSON: JSON
  match_condition: MUTATION_traceableEdgeBotConfig___MatchCondition___
  match_condition___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___DerivationRule___Input {
  transformation_config: MUTATION_traceableEdgeBotConfig___DataTransformationConfig___Input
  transformation_config___JSON: JSON
  transformation_configs: [MUTATION_traceableEdgeBotConfig___DataTransformationConfig___Input]
  transformation_configs___JSON: JSON
  condition_expression: MUTATION_traceableEdgeBotConfig___JexlExpressionConfig___Input
  condition_expression___JSON: JSON
  match_condition: MUTATION_traceableEdgeBotConfig___MatchCondition___Input
  match_condition___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___EnvironmentScope___ {
  environments: [String]
  environments___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___EnvironmentScope___Input {
  environments: [String]
  environments___JSON: JSON
}

enum MUTATION_traceableEdgeBotConfig___FieldType___ {
  FIELD_TYPE_UNSPECIFIED
  FIELD_TYPE_STR
  FIELD_TYPE_BOOL
  FIELD_TYPE_LONG
  FIELD_TYPE_DOUBLE
  FIELD_TYPE_LIST
  FIELD_TYPE_MAP
  FIELD_TYPE_TIMESTAMP
  FIELD_TYPE_BINARY
  FIELD_TYPE_INT
}

type MUTATION_traceableEdgeBotConfig___FlowConfig___ {
  id: String
  name: String
  disabled: Boolean
  page_ids: [String]
  page_ids___JSON: JSON
  api_ids: [String]
  api_ids___JSON: JSON
  pages: [MUTATION_traceableEdgeBotConfig___PageDerivationRules___]
  pages___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___FlowConfig___Input {
  id: String
  name: String
  disabled: Boolean
  page_ids: [String]
  page_ids___JSON: JSON
  api_ids: [String]
  api_ids___JSON: JSON
  pages: [MUTATION_traceableEdgeBotConfig___PageDerivationRules___Input]
  pages___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___GenericMatchCondition___ {
  jexl_expression: MUTATION_traceableEdgeBotConfig___JexlExpressionConfig___
  jexl_expression___JSON: JSON
  jexl_script: MUTATION_traceableEdgeBotConfig___JexlScriptConfig___
  jexl_script___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___GenericMatchCondition___Input {
  jexl_expression: MUTATION_traceableEdgeBotConfig___JexlExpressionConfig___Input
  jexl_expression___JSON: JSON
  jexl_script: MUTATION_traceableEdgeBotConfig___JexlScriptConfig___Input
  jexl_script___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___HttpMethodScope___ {
  http_methods: [String]
  http_methods___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___HttpMethodScope___Input {
  http_methods: [String]
  http_methods___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___JexlExpressionConfig___ {
  jexl_expression: String
}

input MUTATION_traceableEdgeBotConfig___JexlExpressionConfig___Input {
  jexl_expression: String
}

type MUTATION_traceableEdgeBotConfig___JexlScriptConfig___ {
  jexl_script: String
}

input MUTATION_traceableEdgeBotConfig___JexlScriptConfig___Input {
  jexl_script: String
}

type MUTATION_traceableEdgeBotConfig___ListValue___ {
  values: [MUTATION_traceableEdgeBotConfig___Value___]
  values___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___ListValue___Input {
  values: [MUTATION_traceableEdgeBotConfig___Value___Input]
  values___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___LogicalMatchCondition___ {
  operator: MUTATION_traceableEdgeBotConfig___LogicalMatchOperator___
  conditions: [MUTATION_traceableEdgeBotConfig___MatchCondition___]
  conditions___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___LogicalMatchCondition___Input {
  operator: MUTATION_traceableEdgeBotConfig___LogicalMatchOperator___
  conditions: [MUTATION_traceableEdgeBotConfig___MatchCondition___Input]
  conditions___JSON: JSON
}

enum MUTATION_traceableEdgeBotConfig___LogicalMatchOperator___ {
  LOGICAL_MATCH_OPERATOR_UNSPECIFIED
  LOGICAL_MATCH_OPERATOR_AND
  LOGICAL_MATCH_OPERATOR_OR
}

type MUTATION_traceableEdgeBotConfig___MatchCondition___ {
  generic_match_condition: MUTATION_traceableEdgeBotConfig___GenericMatchCondition___
  generic_match_condition___JSON: JSON
  structured_match_condition: MUTATION_traceableEdgeBotConfig___StructuredMatchCondition___
  structured_match_condition___JSON: JSON
  logical_match_condition: MUTATION_traceableEdgeBotConfig___LogicalMatchCondition___
  logical_match_condition___JSON: JSON
  negate: Boolean
}

input MUTATION_traceableEdgeBotConfig___MatchCondition___Input {
  generic_match_condition: MUTATION_traceableEdgeBotConfig___GenericMatchCondition___Input
  generic_match_condition___JSON: JSON
  structured_match_condition: MUTATION_traceableEdgeBotConfig___StructuredMatchCondition___Input
  structured_match_condition___JSON: JSON
  logical_match_condition: MUTATION_traceableEdgeBotConfig___LogicalMatchCondition___Input
  logical_match_condition___JSON: JSON
  negate: Boolean
}

enum MUTATION_traceableEdgeBotConfig___MatchOperator___ {
  MATCH_OPERATOR_UNSPECIFIED
  MATCH_OPERATOR_IN
  MATCH_OPERATOR_NOT_IN
  MATCH_OPERATOR_LIKE
  MATCH_OPERATOR_NOT_LIKE
  MATCH_OPERATOR_EQ
  MATCH_OPERATOR_NOT_EQ
  MATCH_OPERATOR_GT
  MATCH_OPERATOR_LT
  MATCH_OPERATOR_GTE
  MATCH_OPERATOR_LTE
  MATCH_OPERATOR_BETWEEN
  MATCH_OPERATOR_CONTAINS
  MATCH_OPERATOR_STARTS_WITH
  MATCH_OPERATOR_ENDS_WITH
  MATCH_OPERATOR_EQ_IGNORE_CASE
}

enum MUTATION_traceableEdgeBotConfig___NullValue___ {
  NULL_VALUE
}

type MUTATION_traceableEdgeBotConfig___PageDerivationRule___ {
  url_based_rule: MUTATION_traceableEdgeBotConfig___UrlBasedDerivationRule___
  url_based_rule___JSON: JSON
  window_location_based_rule: MUTATION_traceableEdgeBotConfig___WindowLocationBasedDerivationRule___
  window_location_based_rule___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___PageDerivationRule___Input {
  url_based_rule: MUTATION_traceableEdgeBotConfig___UrlBasedDerivationRule___Input
  url_based_rule___JSON: JSON
  window_location_based_rule: MUTATION_traceableEdgeBotConfig___WindowLocationBasedDerivationRule___Input
  window_location_based_rule___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___PageDerivationRules___ {
  page_id: String
  scope_conditions: [MUTATION_traceableEdgeBotConfig___ScopeCondition___]
  scope_conditions___JSON: JSON
  rules: [MUTATION_traceableEdgeBotConfig___PageDerivationRule___]
  rules___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___PageDerivationRules___Input {
  page_id: String
  scope_conditions: [MUTATION_traceableEdgeBotConfig___ScopeCondition___Input]
  scope_conditions___JSON: JSON
  rules: [MUTATION_traceableEdgeBotConfig___PageDerivationRule___Input]
  rules___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___RangeValue___ {
  lower: Float
  upper: Float
}

input MUTATION_traceableEdgeBotConfig___RangeValue___Input {
  lower: Float
  upper: Float
}

type MUTATION_traceableEdgeBotConfig___RegexConfig___ {
  regex: String
  split_regex: String
  group_indices: [Int]
  group_indices___JSON: JSON
  join_delimiter: String
  value_transformation: MUTATION_traceableEdgeBotConfig___DataTransformationConfig___
  value_transformation___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___RegexConfig___Input {
  regex: String
  split_regex: String
  group_indices: [Int]
  group_indices___JSON: JSON
  join_delimiter: String
  value_transformation: MUTATION_traceableEdgeBotConfig___DataTransformationConfig___Input
  value_transformation___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___ScopeCondition___ {
  environment_scope: MUTATION_traceableEdgeBotConfig___EnvironmentScope___
  environment_scope___JSON: JSON
  service_scope: MUTATION_traceableEdgeBotConfig___ServiceScope___
  service_scope___JSON: JSON
  url_scope: MUTATION_traceableEdgeBotConfig___UrlScope___
  url_scope___JSON: JSON
  url_regex_scope: MUTATION_traceableEdgeBotConfig___UrlRegexScope___
  url_regex_scope___JSON: JSON
  http_method_scope: MUTATION_traceableEdgeBotConfig___HttpMethodScope___
  http_method_scope___JSON: JSON
  match_condition_scope: MUTATION_traceableEdgeBotConfig___MatchCondition___
  match_condition_scope___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___ScopeCondition___Input {
  environment_scope: MUTATION_traceableEdgeBotConfig___EnvironmentScope___Input
  environment_scope___JSON: JSON
  service_scope: MUTATION_traceableEdgeBotConfig___ServiceScope___Input
  service_scope___JSON: JSON
  url_scope: MUTATION_traceableEdgeBotConfig___UrlScope___Input
  url_scope___JSON: JSON
  url_regex_scope: MUTATION_traceableEdgeBotConfig___UrlRegexScope___Input
  url_regex_scope___JSON: JSON
  http_method_scope: MUTATION_traceableEdgeBotConfig___HttpMethodScope___Input
  http_method_scope___JSON: JSON
  match_condition_scope: MUTATION_traceableEdgeBotConfig___MatchCondition___Input
  match_condition_scope___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___ServiceScope___ {
  service_names: [String]
  service_names___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___ServiceScope___Input {
  service_names: [String]
  service_names___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___Struct___ {
  fields: [MUTATION_traceableEdgeBotConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput]
  fields___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___Struct___Input {
  fields: [MUTATION_traceableEdgeBotConfig_google_protobuf_Struct_FieldsEntry___fields___MapInput]
  fields___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___StructuredMatchCondition___ {
  lhs: MUTATION_traceableEdgeBotConfig___AttributeDerivationMapping___
  lhs___JSON: JSON
  unary_operator: MUTATION_traceableEdgeBotConfig___UnaryOperator___
  binary_operator: MUTATION_traceableEdgeBotConfig___BinaryOperator___
  binary_operator___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___StructuredMatchCondition___Input {
  lhs: MUTATION_traceableEdgeBotConfig___AttributeDerivationMapping___Input
  lhs___JSON: JSON
  unary_operator: MUTATION_traceableEdgeBotConfig___UnaryOperator___
  binary_operator: MUTATION_traceableEdgeBotConfig___BinaryOperator___Input
  binary_operator___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___TimeRangeValue___ {
  start: MUTATION_traceableEdgeBotConfig___Timestamp___
  start___JSON: JSON
  end: MUTATION_traceableEdgeBotConfig___Timestamp___
  end___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___TimeRangeValue___Input {
  start: MUTATION_traceableEdgeBotConfig___Timestamp___Input
  start___JSON: JSON
  end: MUTATION_traceableEdgeBotConfig___Timestamp___Input
  end___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___Timestamp___ {
  seconds: Int
  nanos: Int
}

input MUTATION_traceableEdgeBotConfig___Timestamp___Input {
  seconds: Int
  nanos: Int
}

enum MUTATION_traceableEdgeBotConfig___UnaryOperator___ {
  UNARY_OPERATOR_UNSPECIFIED
  UNARY_OPERATOR_IS_NULL
  UNARY_OPERATOR_IS_NOT_NULL
  UNARY_OPERATOR_IS_EMPTY
  UNARY_OPERATOR_IS_NOT_EMPTY
}

input MUTATION_traceableEdgeBotConfig___UpsertFlowConfigRequest___Input {
  config: MUTATION_traceableEdgeBotConfig___FlowConfig___Input
  config___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___UpsertFlowConfigResponse___ {
  config: MUTATION_traceableEdgeBotConfig___FlowConfig___
  config___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___UrlBasedDerivationRule___ {
  match_condition: MUTATION_traceableEdgeBotConfig___MatchCondition___
  match_condition___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___UrlBasedDerivationRule___Input {
  match_condition: MUTATION_traceableEdgeBotConfig___MatchCondition___Input
  match_condition___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___UrlRegexScope___ {
  url_regexes: [String]
  url_regexes___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___UrlRegexScope___Input {
  url_regexes: [String]
  url_regexes___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___UrlScope___ {
  urls: [String]
  urls___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___UrlScope___Input {
  urls: [String]
  urls___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___Value___ {
  null_value: MUTATION_traceableEdgeBotConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: MUTATION_traceableEdgeBotConfig___Struct___
  struct_value___JSON: JSON
  list_value: MUTATION_traceableEdgeBotConfig___ListValue___
  list_value___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___Value___Input {
  null_value: MUTATION_traceableEdgeBotConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: MUTATION_traceableEdgeBotConfig___Struct___Input
  struct_value___JSON: JSON
  list_value: MUTATION_traceableEdgeBotConfig___ListValue___Input
  list_value___JSON: JSON
}

type MUTATION_traceableEdgeBotConfig___WindowLocationBasedDerivationRule___ {
  match_condition: MUTATION_traceableEdgeBotConfig___MatchCondition___
  match_condition___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig___WindowLocationBasedDerivationRule___Input {
  match_condition: MUTATION_traceableEdgeBotConfig___MatchCondition___Input
  match_condition___JSON: JSON
}

input MUTATION_traceableEdgeBotConfig_google_protobuf_Struct_FieldsEntry___fields___MapInput {
  key: String
  value: MUTATION_traceableEdgeBotConfig___Value___Input
}

type MUTATION_traceableEdgeBotConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput {
  key: String
  value: MUTATION_traceableEdgeBotConfig___Value___
}

type MUTATION_traceablePolicyConfig___BotFingerprintEvalRule___ {
  enabled: Boolean
  weight: Float
  config: MUTATION_traceablePolicyConfig___Value___
  config___JSON: JSON
  rule_type: String
  scores: MUTATION_traceablePolicyConfig___BotFingerprintScore___
  scores___JSON: JSON
}

input MUTATION_traceablePolicyConfig___BotFingerprintEvalRule___Input {
  enabled: Boolean
  weight: Float
  config: MUTATION_traceablePolicyConfig___Value___Input
  config___JSON: JSON
  rule_type: String
  scores: MUTATION_traceablePolicyConfig___BotFingerprintScore___Input
  scores___JSON: JSON
}

type MUTATION_traceablePolicyConfig___BotFingerprintScore___ {
  high_score: Float
  medium_score: Float
  low_score: Float
}

input MUTATION_traceablePolicyConfig___BotFingerprintScore___Input {
  high_score: Float
  medium_score: Float
  low_score: Float
}

type MUTATION_traceablePolicyConfig___ClientBotFingerprintPolicy___ {
  use_default: Boolean
  bot_suspicion_threshold: Float
  default_scores: MUTATION_traceablePolicyConfig___BotFingerprintScore___
  default_scores___JSON: JSON
  rules: [MUTATION_traceablePolicyConfig___BotFingerprintEvalRule___]
  rules___JSON: JSON
  site_key: String
}

input MUTATION_traceablePolicyConfig___ClientBotFingerprintPolicy___Input {
  use_default: Boolean
  bot_suspicion_threshold: Float
  default_scores: MUTATION_traceablePolicyConfig___BotFingerprintScore___Input
  default_scores___JSON: JSON
  rules: [MUTATION_traceablePolicyConfig___BotFingerprintEvalRule___Input]
  rules___JSON: JSON
  site_key: String
}

input MUTATION_traceablePolicyConfig___DeleteRequest___Input {
  policy_kind: String
  id: String
}

type MUTATION_traceablePolicyConfig___DeleteResponse___ {
  deleted_policy: MUTATION_traceablePolicyConfig___TraceablePolicy___
  deleted_policy___JSON: JSON
}

input MUTATION_traceablePolicyConfig___FieldMask___Input {
  paths: [String]
  paths___JSON: JSON
}

type MUTATION_traceablePolicyConfig___ListValue___ {
  values: [MUTATION_traceablePolicyConfig___Value___]
  values___JSON: JSON
}

input MUTATION_traceablePolicyConfig___ListValue___Input {
  values: [MUTATION_traceablePolicyConfig___Value___Input]
  values___JSON: JSON
}

enum MUTATION_traceablePolicyConfig___NullValue___ {
  NULL_VALUE
}

type MUTATION_traceablePolicyConfig___Struct___ {
  fields: [MUTATION_traceablePolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput]
  fields___JSON: JSON
}

input MUTATION_traceablePolicyConfig___Struct___Input {
  fields: [MUTATION_traceablePolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapInput]
  fields___JSON: JSON
}

type MUTATION_traceablePolicyConfig___TraceablePolicy___ {
  policy_kind: String
  id: String
  name: String
  disabled: Boolean
  labels: [MUTATION_traceablePolicyConfig_ai_traceable_policy_config_service_v1_TraceablePolicy_LabelsEntry___labels___MapOutput]
  labels___JSON: JSON
  client_bot_fingerprint_policy: MUTATION_traceablePolicyConfig___ClientBotFingerprintPolicy___
  client_bot_fingerprint_policy___JSON: JSON
  template_id: String
}

input MUTATION_traceablePolicyConfig___TraceablePolicy___Input {
  policy_kind: String
  id: String
  name: String
  disabled: Boolean
  labels: [MUTATION_traceablePolicyConfig_ai_traceable_policy_config_service_v1_TraceablePolicy_LabelsEntry___labels___MapInput]
  labels___JSON: JSON
  client_bot_fingerprint_policy: MUTATION_traceablePolicyConfig___ClientBotFingerprintPolicy___Input
  client_bot_fingerprint_policy___JSON: JSON
  template_id: String
}

input MUTATION_traceablePolicyConfig___UpdateRequest___Input {
  policy: MUTATION_traceablePolicyConfig___TraceablePolicy___Input
  policy___JSON: JSON
  update_mask: MUTATION_traceablePolicyConfig___FieldMask___Input
  update_mask___JSON: JSON
}

type MUTATION_traceablePolicyConfig___UpdateResponse___ {
  updated_policy: MUTATION_traceablePolicyConfig___TraceablePolicy___
  updated_policy___JSON: JSON
}

input MUTATION_traceablePolicyConfig___UpsertRequest___Input {
  policy: MUTATION_traceablePolicyConfig___TraceablePolicy___Input
  policy___JSON: JSON
}

type MUTATION_traceablePolicyConfig___UpsertResponse___ {
  policy: MUTATION_traceablePolicyConfig___TraceablePolicy___
  policy___JSON: JSON
}

type MUTATION_traceablePolicyConfig___Value___ {
  null_value: MUTATION_traceablePolicyConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: MUTATION_traceablePolicyConfig___Struct___
  struct_value___JSON: JSON
  list_value: MUTATION_traceablePolicyConfig___ListValue___
  list_value___JSON: JSON
}

input MUTATION_traceablePolicyConfig___Value___Input {
  null_value: MUTATION_traceablePolicyConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: MUTATION_traceablePolicyConfig___Struct___Input
  struct_value___JSON: JSON
  list_value: MUTATION_traceablePolicyConfig___ListValue___Input
  list_value___JSON: JSON
}

input MUTATION_traceablePolicyConfig_ai_traceable_policy_config_service_v1_TraceablePolicy_LabelsEntry___labels___MapInput {
  key: String
  value: String
}

type MUTATION_traceablePolicyConfig_ai_traceable_policy_config_service_v1_TraceablePolicy_LabelsEntry___labels___MapOutput {
  key: String
  value: String
}

input MUTATION_traceablePolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapInput {
  key: String
  value: MUTATION_traceablePolicyConfig___Value___Input
}

type MUTATION_traceablePolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput {
  key: String
  value: MUTATION_traceablePolicyConfig___Value___
}

type MUTATION_traceableThreatScoringConfig___ActorMaliciousConfidenceConfig___ {
  ip_reputation_factor_mapping: MUTATION_traceableThreatScoringConfig___IpReputationFactorMapping___
  ip_reputation_factor_mapping___JSON: JSON
  actor_trend_factor: Int
  level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___
  level_config___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___ActorMaliciousConfidenceConfig___Input {
  ip_reputation_factor_mapping: MUTATION_traceableThreatScoringConfig___IpReputationFactorMapping___Input
  ip_reputation_factor_mapping___JSON: JSON
  actor_trend_factor: Int
  level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___Input
  level_config___JSON: JSON
}

type MUTATION_traceableThreatScoringConfig___AnomalousEventConfidenceConfig___ {
  level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___
  level_config___JSON: JSON
  min_number_of_unlearnt_params_in_api: Int
  min_number_of_unique_unexpected_characters: Int
}

input MUTATION_traceableThreatScoringConfig___AnomalousEventConfidenceConfig___Input {
  level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___Input
  level_config___JSON: JSON
  min_number_of_unlearnt_params_in_api: Int
  min_number_of_unique_unexpected_characters: Int
}

type MUTATION_traceableThreatScoringConfig___ApiTrendConfidenceConfig___ {
  level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___
  level_config___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___ApiTrendConfidenceConfig___Input {
  level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___Input
  level_config___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___DeleteEventConfidenceScoringConfigOverridesRequest___Input {
  config_scope: MUTATION_traceableThreatScoringConfig___ThreatScoringConfigScope___Input
  config_scope___JSON: JSON
}

type MUTATION_traceableThreatScoringConfig___DeleteEventConfidenceScoringConfigOverridesResponse___ {
  default_event_confidence_scoring_config: MUTATION_traceableThreatScoringConfig___EventConfidenceScoringConfig___
  default_event_confidence_scoring_config___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___DeleteThreatActivityConfidenceScoringConfigOverridesRequest___Input {
  config_scope: MUTATION_traceableThreatScoringConfig___ThreatScoringConfigScope___Input
  config_scope___JSON: JSON
}

type MUTATION_traceableThreatScoringConfig___DeleteThreatActivityConfidenceScoringConfigOverridesResponse___ {
  default_threat_activity_confidence_scoring_config: MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceScoringConfig___
  default_threat_activity_confidence_scoring_config___JSON: JSON
}

type MUTATION_traceableThreatScoringConfig___EnvironmentScope___ {
  environment_id: String
}

input MUTATION_traceableThreatScoringConfig___EnvironmentScope___Input {
  environment_id: String
}

type MUTATION_traceableThreatScoringConfig___EventConfidenceMapping___ {
  actor_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  malicious_span_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  anomalous_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  trend_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  response_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  event_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
}

input MUTATION_traceableThreatScoringConfig___EventConfidenceMapping___Input {
  actor_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  malicious_span_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  anomalous_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  trend_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  response_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  event_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
}

type MUTATION_traceableThreatScoringConfig___EventConfidenceMatrixConfig___ {
  event_confidence_mapping: [MUTATION_traceableThreatScoringConfig___EventConfidenceMapping___]
  event_confidence_mapping___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___EventConfidenceMatrixConfig___Input {
  event_confidence_mapping: [MUTATION_traceableThreatScoringConfig___EventConfidenceMapping___Input]
  event_confidence_mapping___JSON: JSON
}

type MUTATION_traceableThreatScoringConfig___EventConfidenceScoringConfig___ {
  event_confidence_matrix_config: MUTATION_traceableThreatScoringConfig___EventConfidenceMatrixConfig___
  event_confidence_matrix_config___JSON: JSON
  malicious_span_confidence_scoring: MUTATION_traceableThreatScoringConfig___MaliciousSpanConfidenceScoring___
  malicious_span_confidence_scoring___JSON: JSON
  anomalous_event_confidence_config: MUTATION_traceableThreatScoringConfig___AnomalousEventConfidenceConfig___
  anomalous_event_confidence_config___JSON: JSON
  response_confidence_config: MUTATION_traceableThreatScoringConfig___ResponseConfidenceConfig___
  response_confidence_config___JSON: JSON
  api_trend_confidence_config: MUTATION_traceableThreatScoringConfig___ApiTrendConfidenceConfig___
  api_trend_confidence_config___JSON: JSON
  actor_malicious_confidence_config: MUTATION_traceableThreatScoringConfig___ActorMaliciousConfidenceConfig___
  actor_malicious_confidence_config___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___EventConfidenceScoringConfig___Input {
  event_confidence_matrix_config: MUTATION_traceableThreatScoringConfig___EventConfidenceMatrixConfig___Input
  event_confidence_matrix_config___JSON: JSON
  malicious_span_confidence_scoring: MUTATION_traceableThreatScoringConfig___MaliciousSpanConfidenceScoring___Input
  malicious_span_confidence_scoring___JSON: JSON
  anomalous_event_confidence_config: MUTATION_traceableThreatScoringConfig___AnomalousEventConfidenceConfig___Input
  anomalous_event_confidence_config___JSON: JSON
  response_confidence_config: MUTATION_traceableThreatScoringConfig___ResponseConfidenceConfig___Input
  response_confidence_config___JSON: JSON
  api_trend_confidence_config: MUTATION_traceableThreatScoringConfig___ApiTrendConfidenceConfig___Input
  api_trend_confidence_config___JSON: JSON
  actor_malicious_confidence_config: MUTATION_traceableThreatScoringConfig___ActorMaliciousConfidenceConfig___Input
  actor_malicious_confidence_config___JSON: JSON
}

type MUTATION_traceableThreatScoringConfig___IpReputationFactorMapping___ {
  low_ip_reputation_factor: Float
  medium_ip_reputation_factor: Float
  high_ip_reputation_factor: Float
  critical_ip_reputation_factor: Float
}

input MUTATION_traceableThreatScoringConfig___IpReputationFactorMapping___Input {
  low_ip_reputation_factor: Float
  medium_ip_reputation_factor: Float
  high_ip_reputation_factor: Float
  critical_ip_reputation_factor: Float
}

type MUTATION_traceableThreatScoringConfig___MaliciousSpanConfidenceScoring___ {
  level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___
  level_config___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___MaliciousSpanConfidenceScoring___Input {
  level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___Input
  level_config___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___OverrideEventConfidenceScoringConfigRequest___Input {
  scope: MUTATION_traceableThreatScoringConfig___ThreatScoringConfigScope___Input
  scope___JSON: JSON
  event_confidence_scoring_config: MUTATION_traceableThreatScoringConfig___EventConfidenceScoringConfig___Input
  event_confidence_scoring_config___JSON: JSON
}

type MUTATION_traceableThreatScoringConfig___OverrideEventConfidenceScoringConfigResponse___ {
  scope: MUTATION_traceableThreatScoringConfig___ThreatScoringConfigScope___
  scope___JSON: JSON
  resolved_event_confidence_scoring_config: MUTATION_traceableThreatScoringConfig___EventConfidenceScoringConfig___
  resolved_event_confidence_scoring_config___JSON: JSON
  default_event_confidence_scoring_config: MUTATION_traceableThreatScoringConfig___EventConfidenceScoringConfig___
  default_event_confidence_scoring_config___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___OverrideThreatActivityConfidenceScoringConfigRequest___Input {
  scope: MUTATION_traceableThreatScoringConfig___ThreatScoringConfigScope___Input
  scope___JSON: JSON
  threat_activity_confidence_scoring_config: MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceScoringConfig___Input
  threat_activity_confidence_scoring_config___JSON: JSON
}

type MUTATION_traceableThreatScoringConfig___OverrideThreatActivityConfidenceScoringConfigResponse___ {
  scope: MUTATION_traceableThreatScoringConfig___ThreatScoringConfigScope___
  scope___JSON: JSON
  resolved_threat_activity_confidence_scoring_config: MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceScoringConfig___
  resolved_threat_activity_confidence_scoring_config___JSON: JSON
  default_threat_activity_confidence_scoring_config: MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceScoringConfig___
  default_threat_activity_confidence_scoring_config___JSON: JSON
}

type MUTATION_traceableThreatScoringConfig___ResponseConfidenceConfig___ {
  level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___
  level_config___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___ResponseConfidenceConfig___Input {
  level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___Input
  level_config___JSON: JSON
}

enum MUTATION_traceableThreatScoringConfig___ScoringLevel___ {
  SCORING_LEVEL_UNSPECIFIED
  SCORING_LEVEL_LOW
  SCORING_LEVEL_MEDIUM
  SCORING_LEVEL_HIGH
}

type MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___ {
  medium_level_min_score: Int
  high_level_min_score: Int
  max_normalized_score: Int
}

input MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___Input {
  medium_level_min_score: Int
  high_level_min_score: Int
  max_normalized_score: Int
}

type MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceMapping___ {
  current_event_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  previous_activity_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  previous_activity_event_count: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  previous_unique_params_count: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  new_activity_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
}

input MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceMapping___Input {
  current_event_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  previous_activity_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  previous_activity_event_count: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  previous_unique_params_count: MUTATION_traceableThreatScoringConfig___ScoringLevel___
  new_activity_confidence: MUTATION_traceableThreatScoringConfig___ScoringLevel___
}

type MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceMatrixConfig___ {
  threat_activity_confidence_mapping: [MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceMapping___]
  threat_activity_confidence_mapping___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceMatrixConfig___Input {
  threat_activity_confidence_mapping: [MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceMapping___Input]
  threat_activity_confidence_mapping___JSON: JSON
}

type MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceScoringConfig___ {
  threat_activity_confidence_matrix_config: MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceMatrixConfig___
  threat_activity_confidence_matrix_config___JSON: JSON
  previous_activity_event_count_level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___
  previous_activity_event_count_level_config___JSON: JSON
  previous_unique_params_count_level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___
  previous_unique_params_count_level_config___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceScoringConfig___Input {
  threat_activity_confidence_matrix_config: MUTATION_traceableThreatScoringConfig___ThreatActivityConfidenceMatrixConfig___Input
  threat_activity_confidence_matrix_config___JSON: JSON
  previous_activity_event_count_level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___Input
  previous_activity_event_count_level_config___JSON: JSON
  previous_unique_params_count_level_config: MUTATION_traceableThreatScoringConfig___ScoringLevelConfig___Input
  previous_unique_params_count_level_config___JSON: JSON
}

type MUTATION_traceableThreatScoringConfig___ThreatScoringConfigScope___ {
  environment_scope: MUTATION_traceableThreatScoringConfig___EnvironmentScope___
  environment_scope___JSON: JSON
}

input MUTATION_traceableThreatScoringConfig___ThreatScoringConfigScope___Input {
  environment_scope: MUTATION_traceableThreatScoringConfig___EnvironmentScope___Input
  environment_scope___JSON: JSON
}

enum MutationAction {
  """ADD"""
  ADD

  """DELETE"""
  DELETE

  """MODIFY"""
  MODIFY

  """REPEAT"""
  REPEAT

  """SET"""
  SET

  """REGEX_DELETE"""
  REGEX_DELETE

  """REGEX_MODIFY"""
  REGEX_MODIFY

  """REGEX_SET"""
  REGEX_SET

  """REGEX_REPEAT"""
  REGEX_REPEAT
}

type MutualTls {
  """Auth endpoint"""
  authEndpoint: String

  """Cert authority"""
  certAuthorityCert: String

  """Client certificate"""
  clientCert: String!

  """Client key"""
  clientKey: String!

  """Client key passphrase"""
  clientKeyPassphrase: String
}

type NotificationChannel {
  channelId: String!
  channelName: String!
  notificationChannelConfig: NotificationChannelConfig!
}

type NotificationChannelConfig {
  customWebhookChannelConfigs: [CustomWebhookChannelConfig]
  emailChannelConfigs: [EmailChannelConfig]
  s3BucketChannelConfigs: [S3BucketChannelConfig]
  slackWebhookChannelConfigs: [SlackWebhookChannelConfig]

  """List of splunk integration configs for notification channel"""
  splunkIntegrationChannelConfigs: [SplunkIntegrationChannelConfig]

  """List of syslog integration configs for notification channel"""
  syslogIntegrationChannelConfigs: [SyslogIntegrationChannelConfig]
  webhookChannelConfigs: [WebhookChannelConfig] @deprecated(reason: "Deprecated")
}

"""Notification Channel Configuration change details"""
type NotificationChannelConfigurationChange {
  crudAction: CrudAction!
  notificationChannelData: NotificationChannelData!
}

type NotificationChannelData {
  emailChannelConfigList: [EmailChannelConfig]!
  identity: ActivityLogIdentity!
  oldIdentity: ActivityLogIdentity
  splunkIntegrationChannelConfigList: [SplunkIntegrationChannelConfig]
  syslogIntegrationChannelConfigList: [SyslogIntegrationChannelConfig]
  webhookChannelConfigList: [WebhookChannelConfig]!
}

type NotificationChannelResultSet {
  count: Long!
  results: [NotificationChannel]!
  total: Long!
}

"""Event type for notification configs"""
type NotificationConfigChangeCondition {
  """Represents operation on Notification i.e Create/Update/Delete """
  notificationConfigChangeTypes: [NotificationConfigChangeType]!

  """Represents type of notification"""
  notificationTypes: [NotificationConfigType]!
}

"""Operation on notification change config"""
enum NotificationConfigChangeType {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE

  """DELETE"""
  DELETE
}

"""Type of notification config"""
enum NotificationConfigType {
  """NOTIFICATION_CHANNEL"""
  NOTIFICATION_CHANNEL

  """NOTIFICATION_RULE"""
  NOTIFICATION_RULE
}

"""Available options for the different notification event conditions"""
type NotificationEventConditionsOptions {
  """Available options for Blocked Security Event Condition"""
  blockedSecurityEventConditionOptions: BlockedSecurityEventConditionOptions!

  """Available options for Detected Security Event Condition"""
  detectedSecurityEventConditionOptions: DetectedSecurityEventConditionOptions!
}

type NotificationRule {
  category: Category!
  channelId: String
  description: String
  disabled: Boolean!
  environment: String
  environmentScope: NotificationRuleEnvironmentScope
  eventConditions: EventConditions!

  """For notifications relying on an integration"""
  integrationTarget: IntegrationNotificationTarget
  rateLimitIntervalDuration: Duration
  ruleId: String!
  ruleName: String!
}

"""Notification Rule Configuration change details"""
type NotificationRuleConfigurationChange {
  crudAction: CrudAction!
  notificationRuleDetails: NotificationRuleDetails!
  oldNotificationRuleDetails: NotificationRuleDetails
}

type NotificationRuleDetails {
  channelId: String!
  eventConditionId: String!
  eventConditionType: String!
  identity: ActivityLogIdentity!
}

type NotificationRuleEnvironmentScope {
  """Environments that the scope applies to"""
  environments: [String]!
}

type NotificationRuleResultSet {
  count: Long!
  results: [NotificationRule]!
  total: Long!
}

type Oauth {
  accessTokenUrl: String
  authEndpoint: String
  oauthAuthorizationCodeFlow: OauthAuthorizationCodeFlow
  oauthClientCredentialsFlow: OauthClientCredentialsFlow
  clientId: String!
  oauthFlowType: OauthFlowType!
  oauthImplicitFlow: OauthImplicitFlow
  oauthPasswordFlow: OauthPasswordFlow
  oauthPkceFlow: OauthPkceFlow

  """Dynamically extract jwt"""
  requestTokenInfo: RequestTokenInfo

  """scope of the grant"""
  scopes: [String]

  """Dynamically extract jwt"""
  token: String
}

type OauthAuthorizationCodeFlow {
  clientAuthenticationType: OauthClientAuthenticationType!
  clientSecret: String!
  state: String!
}

enum OauthClientAuthenticationType {
  """REQUEST_BODY"""
  REQUEST_BODY

  """BASIC_AUTH_HEADER"""
  BASIC_AUTH_HEADER
}

type OauthClientCredentialsFlow {
  clientSecret: String!
}

enum OauthFlowType {
  """AUTHORIZATION_CODE"""
  AUTHORIZATION_CODE

  """PKCE"""
  PKCE

  """IMPLICIT"""
  IMPLICIT

  """PASSWORD"""
  PASSWORD

  """CLIENT_CREDENTIALS"""
  CLIENT_CREDENTIALS
}

type OauthImplicitFlow {
  state: String!
}

type OauthPasswordFlow {
  clientSecret: String!
  oauthPassword: String!
  oauthUsername: String!
}

type OauthPkceFlow {
  clientSecret: String!
  codeVerifier: String!
  state: String!
}

"""An ISO-8601 formatted OffsetTime Scalar"""
scalar OffsetTime

type OnboardingResponse {
  agentsReporting: AgentsReportingResponse!
  eventReporterInstalled: Boolean!
  required: Boolean!
}

type OpenApiSpecDependencyGraphResponse {
  openApiSpecDependencyGraphYaml: String!
}

type OpenApiSpecMetadata {
  """Open API spec references and its metadata"""
  openApiSpecReferences: [OpenApiSpecReference]!

  """Open API spec resolution state"""
  openApiSpecResolutionState: OpenApiSpecResolutionState!
}

type OpenApiSpecReference {
  """Open API spec reference that is resolved completely and its metadata"""
  completeOpenApiSpecReference: CompleteOpenApiSpecReference

  """
  Open API spec reference that is not resolved completely and its metadata
  """
  incompleteOpenApiSpecReference: IncompleteOpenApiSpecReference

  """Type of Open API spec reference"""
  openApiSpecReferenceType: OpenApiSpecReferenceType!

  """Resolved spec path of the Open API spec reference"""
  resolvedSpecPath: String!
}

enum OpenApiSpecReferenceType {
  """MISSING"""
  MISSING

  """INCOMPLETE"""
  INCOMPLETE

  """COMPLETE"""
  COMPLETE
}

enum OpenApiSpecResolutionState {
  """COMPLETE"""
  COMPLETE

  """INCOMPLETE"""
  INCOMPLETE
}

enum OrderDirection {
  """ASC"""
  ASC

  """DESC"""
  DESC
}

enum OriginalSource {
  """USER"""
  USER

  """SYSTEM"""
  SYSTEM
}

type OverriddenScopesDetails {
  """List of scopes whose config blocking status is overridden"""
  blockingStatusOverriddenScopes: [AnomalyScope]!

  """List of scopes whose config detection status is overridden"""
  detectionStatusOverriddenScopes: [AnomalyScope]!
}

enum ParameterAggregationField {
  """API_ID"""
  API_ID

  """NAME"""
  NAME

  """TYPE"""
  TYPE

  """VALUE_TYPE"""
  VALUE_TYPE

  """PII_TYPE"""
  PII_TYPE
}

type ParameterDetails {
  fullyQualifiedParamName: String!
  httpMessagePart: HttpMessagePart!
  name: String!
  piiType: String
  valueType: String! @deprecated(reason: "Deprecated")
}

type ParameterDetailsResultSet {
  count: Long!
  results: [ParameterDetails]!
  total: Long!
}

type ParameterExtractionConfig {
  """
  Extract the parameter labelled with one of the specified data type ids as per
  the data classification rules. Priority will be given to the data type id
  appearing first in the list.
  """
  dataTypeIds: [String]!

  """
  The logic to extract the parameter. Example: "get_json_object(request_body,
  '$.email')". This doesn't have any checks - whether the syntax is correct, the
  function is supported, etc.
  """
  extractionLogic: String!
}

enum ParameterField {
  """API_ID"""
  API_ID

  """NAME"""
  NAME

  """TYPE"""
  TYPE

  """VALUE_TYPE"""
  VALUE_TYPE

  """PII_TYPE"""
  PII_TYPE

  """DATA_TYPE_NAME"""
  DATA_TYPE_NAME

  """HTTP_MESSAGE_PART"""
  HTTP_MESSAGE_PART

  """IS_PII"""
  IS_PII
}

enum ParameterGroupByField {
  """API_ID"""
  API_ID

  """NAME"""
  NAME

  """TYPE"""
  TYPE

  """VALUE_TYPE"""
  VALUE_TYPE

  """PII_TYPE"""
  PII_TYPE

  """CHANGE_LABEL"""
  CHANGE_LABEL
}

type ParameterInsight {
  aggregation(key: ParameterAggregationField!, aggregation: ParameterMetricAggregationType!): ParameterValue!
  entity(type: String!): Entity
  selection(key: ParameterSelectionField!): ParameterValue!
}

type ParameterInsightResultSet {
  count: Long!
  results: [ParameterInsight]!
  total: Long!
}

type ParameterMatchingSummary {
  totalCommonParametersWithIssues: Long!
  totalOrphanParameters: Long!
  totalShadowParameters: Long!
}

enum ParameterMetricAggregationType {
  """AVG"""
  AVG

  """SUM"""
  SUM

  """MIN"""
  MIN

  """MAX"""
  MAX

  """DISTINCT"""
  DISTINCT

  """COUNT"""
  COUNT

  """DISTINCTCOUNT"""
  DISTINCTCOUNT
}

enum ParameterSelectionField {
  """ID"""
  ID

  """API_ID"""
  API_ID

  """NAME"""
  NAME

  """TYPE"""
  TYPE

  """VALUE_TYPE"""
  VALUE_TYPE

  """IS_PII"""
  IS_PII

  """PII_TYPE"""
  PII_TYPE

  """IS_LEARNT"""
  IS_LEARNT

  """IS_REQUIRED"""
  IS_REQUIRED

  """CHANGE_LABEL"""
  CHANGE_LABEL

  """CHANGE_LABEL_UPDATED_TIMESTAMP"""
  CHANGE_LABEL_UPDATED_TIMESTAMP

  """DIGIT_LENGTHS"""
  DIGIT_LENGTHS

  """SPECIAL_CHARACTERS"""
  SPECIAL_CHARACTERS
}

type ParameterValue {
  type: AttributeType!
  value: Unknown
}

type ParamInsight {
  changeLabel: String
  changeLabelTimestamp: DateTime
  digitLengths: ValueTypeDistributionResultSet
  id: String!
  isLearnt: Boolean
  isPii: Boolean
  isRequired: Boolean
  piiType: String
  piiTypeName: String
  specialCharacters: ValueTypeDistributionResultSet
  summary: String
}

type ParamSusceptibilityConfig {
  prefixesNotAllowedInRequestParamKey: [String]
  regexesNotAllowedInRequestParamKey: [String]
  requestParamKeys: [String]
  requestParamValueRegex: String
  suffixesNotAllowedInRequestParamKey: [String]
}

type ParamTypeOverride {
  paramName: String!
  paramTypeActionName: AttributeOverrideParamTypeAction!
  paramValueType: AttributeOverrideParamValueType!
}

enum ParamValueType {
  """HTML"""
  HTML

  """RICH_TEXT_HTML"""
  RICH_TEXT_HTML

  """FREE_TEXT"""
  FREE_TEXT
}

type ParamValueTypeModsecExclude {
  excludedModsecRuleIds: [String]!
  paramValueType: ParamValueType!
}

type ParsingTarget {
  regexCaptureGroup: String!
  type: ParsingTargetType!
}

enum ParsingTargetType {
  """REGEX_CAPTURE_GROUP"""
  REGEX_CAPTURE_GROUP
}

"""Pause entity learn action"""
enum PauseEntityLearnAction {
  """DISABLED_ALL"""
  DISABLED_ALL

  """DISABLED_ENTITIES_FOR_LEARNING"""
  DISABLED_ENTITIES_FOR_LEARNING
}

"""Pause entity learn action configuration"""
type PauseEntityLearnActionConfig {
  """Disable all entities for learning"""
  disabledAll: Boolean

  """List of entities to disable for learning"""
  disabledEntitiesForLearning: [String]

  """Action for pause entity learning"""
  pauseEntityLearnAction: PauseEntityLearnAction!
}

type PaymentDetails {
  billingFrequency: BillingFrequency!
  cardDetails: CardDetails!
  isCancellationScheduled: Boolean!
}

"""A collection of IDs granted a permission for a particular entity type"""
type PermissionEntityReferences {
  """List of entity ids"""
  ids: [String]!

  """Entity type"""
  type: String!
}

"""
A grant of a specific permission, potentially for some scoped set of resources
"""
type PermissionGrant {
  """The permission being granted"""
  permission: String!

  """
  Scope for which the permission applies. If unset, permission is granted for all resources
  """
  scope: PermissionScope
}

"""A restricted scope for which a permission applies"""
type PermissionScope {
  """One or more entities for which this permission applies"""
  entityReferences: [PermissionEntityReferences]

  """The type of scope applied to the permission"""
  type: PermissionScopeType!
}

"""A type of permission scope"""
enum PermissionScopeType {
  """ENTITY_REFERENCES"""
  ENTITY_REFERENCES
}

enum PiiParameterType {
  """AVAILABLE"""
  AVAILABLE

  """IN_USE"""
  IN_USE
}

type PiiType {
  name: String!
  source: PiiTypeSource!
}

enum PiiTypeSource {
  """SYSTEM"""
  SYSTEM

  """USER"""
  USER
}

type PiiTypesResultSet {
  count: Long!
  results: [PiiType]!
  total: Long!
}

type Plugin {
  categoryDisplayName: String!
  categoryName: String!
  description: String!

  """Active or Passive"""
  detectionType: VulnerabilityDetectionType!
  displayName: String!

  """Plugin id. Non-null only in case of custom test plugins"""
  id: String
  name: String!

  """details about what will this plugin do"""
  pluginDetails: String

  """Readiness Status of plugin"""
  readinessStatus: PluginReadinessStatus!

  """Plugin source type"""
  sourceType: AstTestPluginSourceType!
  tag: String!
}

type PluginConfig {
  key: String
  value: String
}

type PluginOptions {
  plugins: [Plugin]!
}

enum PluginReadinessStatus {
  """STABLE"""
  STABLE

  """HIGH_CONFIDENCE"""
  HIGH_CONFIDENCE
}

type PluginTestStats {
  completedTestsCount: Long!
  generatedTestsCount: Long!
  openVulnerabilities: Long!
  pluginCategory: String!
  pluginSubcategory: String!
  severity: VulnerabilityV2Severity
  totalVulnerabilities: Long!
}

type PoliciesResultSet {
  count: Long!
  total: Long!
  results: [Policy]!
}

type Policy {
  """Id of the Policy"""
  id: String!

  """List of Actions To be performed when conditions matches"""
  actions: [PolicyAction]!

  """flag to check if the policy is disabled or not"""
  disabled: Boolean!

  """Filter conditions on the source"""
  filter: PolicyFilter!

  """Name for the Policy"""
  name: String!

  """List of labels available for the policy"""
  policyLabels: [PolicyLabel]

  """referenced field pool for the policy"""
  policyReferencedFieldPool: PolicyReferencedFieldPool

  """
  This field represents the scope for which the policy applies, such as 'environment' or another relevant type
  """
  policyScope: PolicyScope

  """The event source to apply the policy"""
  source: PolicySource!
}

type PolicyAction {
  """Compliance violation action to create violation"""
  complianceViolation: PolicyActionComplianceViolation

  """
  Notification configs to perform notification actions (destinations and format)
  """
  notificationConfig: PolicyActionNotificationConfig

  """transformation to be performed on the results"""
  transformation: PolicyActionInputTransformation

  """Type of the action to be performed"""
  type: PolicyActionType!
}

type PolicyActionComplianceViolation {
  """Description of the violation"""
  description: String!

  """Violation label"""
  label: String!

  """Name of the violation"""
  name: String!

  """Severity of the violation"""
  severity: ViolationSeverity!
}

type PolicyActionInputTransformation {
  """
  Join the source with a target and perform the actions per joined result
  """
  policyJoin: PolicyJoin

  """Type of the transformation to be performed"""
  type: PolicyActionInputTransformationType!
}

enum PolicyActionInputTransformationType {
  """JOIN"""
  JOIN
}

type PolicyActionNotificationConfig {
  """List of destinations to be notified"""
  destinations: [PolicyNotificationDestination]!
}

enum PolicyActionType {
  """NOTIFICATION"""
  NOTIFICATION

  """COMPLIANCE_VIOLATION"""
  COMPLIANCE_VIOLATION
}

type PolicyAggregateByTime {
  """The time duration for which the aggregation is to be applied"""
  duration: Duration!

  """
  The aggregation will be applied per unique combination of the expressions
  specified here. If this is an empty list, the aggregation will be applied globally.
  """
  expressions: [PolicyExpression]!
}

type PolicyAggregationFunction {
  """Perform aggregation by time"""
  aggregateByFixedTime: PolicyAggregateByTime

  """Operator of the aggregation function"""
  operation: PolicyAggregationOperation!

  """Type of aggregation to be performed"""
  type: PolicyAggregationFunctionType!

  """The condition to be met for this aggregation operation to be applied"""
  updateCriteria: PolicyFilter!
}

enum PolicyAggregationFunctionType {
  """AGGREGATE_BY_TIME"""
  AGGREGATE_BY_TIME
}

type PolicyAggregationOperation {
  """Aggregation operation type"""
  type: PolicyAggregationOperationType!
}

enum PolicyAggregationOperationType {
  """COUNT_OPERATION"""
  COUNT_OPERATION

  """APPROX_RATIO_OPERATION"""
  APPROX_RATIO_OPERATION
}

type PolicyArrayDatatype {
  """Containing primitive datatype"""
  primitive: PolicyPrimitiveDatatype

  """Containing datatype"""
  valueType: PolicyArrayValueType!
}

type PolicyArrayFilter {
  """The array operator to be applied for the filter"""
  arrayOperator: PolicyArrayOperator!

  """The join containing the target fields in the LHS of relational filters"""
  policyJoinFilter: PolicyJoin

  """The relational filter with an array LHS"""
  policyRelationalFilter: PolicyRelationalFilter

  """The type in the array filter"""
  type: PolicyArrayFilterType!
}

enum PolicyArrayFilterType {
  """RELATIONAL"""
  RELATIONAL

  """JOIN"""
  JOIN
}

enum PolicyArrayOperator {
  """ANY"""
  ANY

  """ALL"""
  ALL
}

enum PolicyArrayValueType {
  """PRIMITIVE"""
  PRIMITIVE
}

type PolicyAttribute {
  """Groups to which this attribute belongs to"""
  attributeGroup: [PolicyAttributeGroup]

  """Datatype of the attribute"""
  datatype: PolicyDatatype!

  """Unique display name"""
  displayName: String!

  """Unique attribute key"""
  key: String!
}

type PolicyAttributeGroup {
  """The name of the attribute group"""
  name: String!
}

type PolicyConfiguration {
  customSelection: CustomSelection!
  hookIds: [String]
  policySelectionSource: PolicySelectionSource!
  referenceScanProfileName: String
  scanTimeoutMinutes: Long
  targetUrlPrefix: String
  trafficConfiguration: TrafficConfiguration!
  trafficEnvironment: String!
}

type PolicyDatatype {
  """Array datatype definition """
  array: PolicyArrayDatatype

  """Map datatype definition"""
  map: PolicyMapDatatype

  """Primitive datatype definition"""
  primitive: PolicyPrimitiveDatatype

  """Datatype"""
  type: PolicyDatatypeType!
}

enum PolicyDatatypeType {
  """PRIMITIVE"""
  PRIMITIVE

  """ARRAY"""
  ARRAY

  """MAP"""
  MAP
}

type PolicyDetails {
  id: String!
  policyName: String
}

type PolicyExpression {
  """Policy aggregation function expression"""
  aggregationFunction: PolicyAggregationFunction

  """Policy constant expression"""
  constant: Unknown

  """Policy field expression"""
  field: PolicyField

  """Policy field reference expression"""
  fieldReference: PolicyFieldReference

  """Policy function expression"""
  function: PolicyFunction

  """Type of expression"""
  type: PolicyExpressionType!
}

enum PolicyExpressionType {
  """FIELD"""
  FIELD

  """CONSTANT"""
  CONSTANT

  """FUNCTION"""
  FUNCTION

  """AGGREGATION_FUNCTION"""
  AGGREGATION_FUNCTION

  """FIELD_REFERENCE"""
  FIELD_REFERENCE
}

type PolicyField {
  """
  This key should be present in the schema for which this filter is intended
  (Note: For joins, prefix the key with the target alias separated by a dot)
  """
  key: String!

  """LOCATION of the key"""
  location: PolicyFieldLocation!
}

enum PolicyFieldLocation {
  """OLD"""
  OLD

  """NEW"""
  NEW

  """DATA"""
  DATA

  """METADATA"""
  METADATA
}

type PolicyFieldReference {
  """The location for the field."""
  location: PolicyFieldLocation!

  """
  The unique identifier for the policy field, used to reference its corresponding value in policy conditions.
  """
  referenceKey: String!
}

type PolicyFilter {
  """Array filter"""
  policyArrayFilter: PolicyArrayFilter

  """Logical filter"""
  policyLogicalFilter: PolicyLogicalFilter

  """Relational filter"""
  policyRelationalFilter: PolicyRelationalFilter

  """Unary filter"""
  policyUnaryFilter: PolicyUnaryFilter

  """Possible types of filter"""
  type: PolicyFilterType!
}

enum PolicyFilterType {
  """ARRAY"""
  ARRAY

  """LOGICAL"""
  LOGICAL

  """RELATIONAL"""
  RELATIONAL

  """UNARY"""
  UNARY
}

type PolicyFunction {
  """List of expressions on which the function will be applied"""
  expressions: [PolicyExpression]!

  """Name for the function to be applied on"""
  name: PolicyFunctionName!
}

enum PolicyFunctionName {
  """CURRENT_TIMESTAMP_MILLIS"""
  CURRENT_TIMESTAMP_MILLIS

  """SUBTRACT"""
  SUBTRACT
}

type PolicyJoin {
  """Filter conditions for the join target"""
  filter: PolicyFilter!

  """Location of the source event"""
  sourceLocation: PolicyFieldLocation!

  """Target to join the source on"""
  target: PolicyJoinTarget!

  """Alias for the target which will be referred in the join filter"""
  targetAlias: String!
}

enum PolicyJoinTarget {
  """API"""
  API

  """VULNERABILITY"""
  VULNERABILITY

  """DATASET"""
  DATASET

  """REQUEST_DATASET"""
  REQUEST_DATASET

  """RESPONSE_DATASET"""
  RESPONSE_DATASET

  """DATATYPE"""
  DATATYPE

  """REQUEST_DATATYPE"""
  REQUEST_DATATYPE

  """RESPONSE_DATATYPE"""
  RESPONSE_DATATYPE

  """API_PARAMETER"""
  API_PARAMETER

  """RATE_LIMIT_CONFIG"""
  RATE_LIMIT_CONFIG
}

type PolicyLabel {
  """The datatype of the value assigned to the policy label"""
  datatype: PolicyDatatype!

  """
  A brief explanation or summary of the purpose or meaning of this policy label.
  """
  description: String!

  """The display name for this policy label."""
  displayName: String!

  """
  The unique identifier for the label, used to reference its corresponding value in policy conditions.
  """
  key: String!

  """
  The value associated with the policy label, which is used in policy conditions.
  """
  value: Unknown
}

type PolicyLabelValue {
  """
  The unique identifier for the label, used to reference its corresponding value in policy conditions.
  """
  key: String!
}

type PolicyLogicalFilter {
  """Logical operator"""
  logicalOperator: LogicalOperator!

  """Filters"""
  policyFilters: [PolicyFilter]!
}

type PolicyMapDatatype {
  """Key type in map"""
  keyType: PolicyMapKeyType!

  """Primitive key type"""
  primitiveKey: PolicyPrimitiveDatatype

  """Primitive value type"""
  primitiveValue: PolicyPrimitiveDatatype

  """Value type in map"""
  valueType: PolicyMapValueType!
}

enum PolicyMapKeyType {
  """PRIMITIVE"""
  PRIMITIVE
}

enum PolicyMapValueType {
  """PRIMITIVE"""
  PRIMITIVE
}

type PolicyMetadata {
  createdBy: String!
  creationTimestampMillis: DateTime!
}

type PolicyNotificationDestination {
  """channel id"""
  channelId: String

  """Format in which the notification should be sent"""
  format: PolicyNotificationFormat!

  """Destination type"""
  type: PolicyNotificationDestinationType!
}

enum PolicyNotificationDestinationType {
  """CHANNEL"""
  CHANNEL
}

type PolicyNotificationFormat {
  """
  The custom format provided by user. For example: owner is changed from ${new.owner}
  """
  customFormat: String

  """Type of the format can be custom or default"""
  type: PolicyNotificationFormatType!
}

enum PolicyNotificationFormatType {
  """DEFAULT"""
  DEFAULT

  """CUSTOM"""
  CUSTOM
}

type PolicyPrimitiveDatatype {
  """Enum primitive"""
  enumeration: PolicyPrimitiveEnumDatatype

  """Timestamp primitive"""
  timestamp: PolicyPrimitiveTimestampDatatype

  """Type for the primitive datatype"""
  type: PolicyPrimitiveValueType!
}

type PolicyPrimitiveEnumDatatype {
  """All possible values for the enum"""
  possibleValues: [PolicyPrimitiveEnumPossibleValue]!
}

type PolicyPrimitiveEnumPossibleValue {
  """Display name enum"""
  displayName: String!

  """The enum name"""
  enumName: String!
}

type PolicyPrimitiveTimestampDatatype {
  """Format of the timestamp"""
  format: PolicyPrimitiveTimestampFormat!
}

enum PolicyPrimitiveTimestampFormat {
  """ISO_8601"""
  ISO_8601

  """EPOCH_MILLIS"""
  EPOCH_MILLIS
}

enum PolicyPrimitiveValueType {
  """BOOLEAN"""
  BOOLEAN

  """LONG"""
  LONG

  """DOUBLE"""
  DOUBLE

  """STRING"""
  STRING

  """ENUM"""
  ENUM

  """TIMESTAMP"""
  TIMESTAMP
}

type PolicyReferencedField {
  """Group to which this attribute belongs"""
  attributeGroup: String!

  """Attribute key which is referred"""
  attributeKey: String!

  """Description of the attribute"""
  description: String!

  """Display name for the attribute"""
  displayName: String!

  """Reference key for the field"""
  referenceKey: String!
}

type PolicyReferencedFieldPool {
  """List of referenced fields available for the policy"""
  referencedFields: [PolicyReferencedField]!
}

type PolicyRelationalFilter {
  """The RHS label value"""
  labelValue: PolicyLabelValue

  """The LHS expression"""
  lhsExpression: PolicyExpression

  """Type of LHS in the relational filter"""
  lhsType: PolicyRelationalFilterLhsType!

  """Relational Operator"""
  operator: PolicyRelationalOperator!

  """The RHS value"""
  rhsConstant: Unknown

  """The RHS field"""
  rhsField: PolicyField

  """Type of RHS in the relational filter"""
  rhsType: PolicyRelationalFilterRhsType!
}

enum PolicyRelationalFilterLhsType {
  """EXPRESSION"""
  EXPRESSION
}

enum PolicyRelationalFilterRhsType {
  """FIELD"""
  FIELD

  """VALUE"""
  VALUE

  """LABEL"""
  LABEL
}

enum PolicyRelationalOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS

  """IN"""
  IN

  """NOT_IN"""
  NOT_IN

  """GREATER_THAN"""
  GREATER_THAN

  """LESS_THAN"""
  LESS_THAN

  """GREATER_THAN_OR_EQUALS"""
  GREATER_THAN_OR_EQUALS

  """LESS_THAN_OR_EQUALS"""
  LESS_THAN_OR_EQUALS

  """STRING_CONTAINS"""
  STRING_CONTAINS
}

type PolicySchema {
  """Data attributes"""
  dataAttributes: [PolicyAttribute]!

  """Metadata attributes"""
  metadataAttributes: [PolicyAttribute]!

  """Schema type"""
  schemaType: PolicySchemaType!
}

type PolicySchemasResultSet {
  count: Long!
  total: Long!
  results: [PolicySchema]!
}

enum PolicySchemaType {
  """API"""
  API

  """VULNERABILITY"""
  VULNERABILITY

  """SPAN"""
  SPAN
}

type PolicyScope {
  """
  Environment IDs to which this policy should apply. If this is empty then the policy applies to all the environments
  """
  environmentIds: [String]

  """Generic scope filter for detection"""
  genericFilter: GenericFilter

  """
  Type of scope for the policy. This field represents the category or nature of
  the policy scope, such as 'environment' or another relevant type.
  """
  scopeType: PolicyScopeType!
}

enum PolicyScopeType {
  """ENVIRONMENT"""
  ENVIRONMENT

  """GENERIC_FILTER"""
  GENERIC_FILTER

  """COMPOSITE"""
  COMPOSITE
}

enum PolicySelectionSource {
  """SCAN_PROFILE"""
  SCAN_PROFILE

  """CUSTOM_SELECTION"""
  CUSTOM_SELECTION
}

enum PolicySortField {
  """CREATION_TIMESTAMP"""
  CREATION_TIMESTAMP

  """NAME"""
  NAME
}

type PolicySource {
  """Applicable api event types"""
  apiEventTypes: [PolicySourceApiEventType]

  """Applicable AST scan event types"""
  astScanEventTypes: [PolicySourceAstScanEventType]

  """Applicable span event types"""
  spanEventTypes: [PolicySourceSpanEventType]

  """The source on which the policy conditions are to be checked"""
  type: PolicySourceType!

  """Applicable vulnerability event types"""
  vulnerabilityEventTypes: [PolicySourceVulnerabilityEventType]
}

enum PolicySourceApiEventType {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE

  """DELETE"""
  DELETE

  """PERIODIC"""
  PERIODIC
}

enum PolicySourceAstScanEventType {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE

  """DELETE"""
  DELETE
}

enum PolicySourceSpanEventType {
  """DATA"""
  DATA
}

enum PolicySourceType {
  """API"""
  API

  """VULNERABILITY"""
  VULNERABILITY

  """SPAN"""
  SPAN

  """AST_SCAN"""
  AST_SCAN
}

enum PolicySourceVulnerabilityEventType {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE
}

type PolicyUnaryFilter {
  """Type of argument in the unary filter"""
  argumentType: PolicyUnaryFilterArgumentType!

  """The argument expression"""
  argumentExpression: PolicyExpression

  """Unary Operator"""
  operator: PolicyUnaryOperator!
}

enum PolicyUnaryFilterArgumentType {
  """EXPRESSION"""
  EXPRESSION
}

enum PolicyUnaryOperator {
  """IS_MISSING"""
  IS_MISSING
}

enum PolicyUpdateFieldType {
  """DISABLED"""
  DISABLED

  """SCOPE"""
  SCOPE

  """LABELS"""
  LABELS

  """REFERENCED_FIELD"""
  REFERENCED_FIELD
}

type PopTokenSignature {
  externalHeadersToSign: [String]!
  popHeaderKey: String!
  popHeaderPrefix: String!
  popPrivateKey: String!
}

type PostmanCollectionDetails {
  """The environment document ID related to the postman collection."""
  environmentDocumentId: String

  """The postman collection ID for which to run the DAST scan."""
  postmanCollectionId: String!
}

type PostmanSpecsDetails {
  postmanCollectionIds: [String]!
  postmanEnvironmentIds: [String]!
}

type PostureEventCondition {
  postureEvents: [PostureEvents]
  riskDeltas: [RiskChange]
}

enum PostureEvents {
  """API_DISCOVERY"""
  API_DISCOVERY

  """SENSITIVE_DATA_DISCOVERY"""
  SENSITIVE_DATA_DISCOVERY

  """SENSITIVE_DATA_SHARED_WITH_THIRD_PARTY"""
  SENSITIVE_DATA_SHARED_WITH_THIRD_PARTY

  """SERVICE_DISCOVERY"""
  SERVICE_DISCOVERY

  """RISK_SCORE_CHANGE"""
  RISK_SCORE_CHANGE

  """VULNERABILITY_DISCOVERY"""
  VULNERABILITY_DISCOVERY

  """VULNERABILITY_STATUS_CHANGE"""
  VULNERABILITY_STATUS_CHANGE

  """DOMAIN_DISCOVERY"""
  DOMAIN_DISCOVERY

  """BACKEND_DISCOVERY"""
  BACKEND_DISCOVERY

  """THIRD_PARTY_DISCOVERY"""
  THIRD_PARTY_DISCOVERY

  """THIRD_PARTY_API_DISCOVERY"""
  THIRD_PARTY_API_DISCOVERY

  """UNSPECIFIED"""
  UNSPECIFIED
}

type PotentialGeneratedVulnerabilityTypeInfo {
  id: String!
  name: String
}

type PredecessorSuccessorApiConfig {
  predecessorApiIds: [String]!
  successorApiId: String!
}

type PredecessorSuccessorApiSequenceConfig {
  predecessorSuccessorApiConfigs: [PredecessorSuccessorApiConfig]!
}

"""Pre defined blocking rule condition"""
type PreDefinedBlockingCondition {
  """Rule ID of pre defined anomaly rule"""
  anomalyRuleId: String!
}

"""Pre defined detection rule condition"""
type PreDefinedDetectionCondition {
  """Rule ID of pre defined anomaly rule"""
  anomalyRuleId: String!
}

type PreviewSubscriptionChangeResponse {
  currency: Currency!
  currentDue: InvoiceDetails!
}

type Projection {
  projectionType: ProjectionType!
  projectionValues: [String]!
}

enum ProjectionFilterField {
  """SCAN_ID"""
  SCAN_ID

  """SUITE_ID"""
  SUITE_ID
}

type ProjectionResultSet {
  projections: [Projection]!
}

enum ProjectionType {
  """AST_SCAN_INITIATED_BY"""
  AST_SCAN_INITIATED_BY

  """AST_VULNERABILITY_SUB_CATEGORIES"""
  AST_VULNERABILITY_SUB_CATEGORIES

  """AST_API_NAMES_FOR_TESTS"""
  AST_API_NAMES_FOR_TESTS

  """POLICY_V2_OWNERS"""
  POLICY_V2_OWNERS

  """TEST_RESULTS_RESPONSE_CODE"""
  TEST_RESULTS_RESPONSE_CODE

  """TEST_RESULTS_VULNERABILITY_TYPES"""
  TEST_RESULTS_VULNERABILITY_TYPES

  """TEST_RESULTS_VULNERABILITY_CATEGORIES"""
  TEST_RESULTS_VULNERABILITY_CATEGORIES

  """TEST_RESULTS_STATUS"""
  TEST_RESULTS_STATUS
}

"""returns project configurations set for a jira integration."""
type ProjectIssueConfigurationsResponse {
  jiraProjectIssueConfigurations: [JiraProjectIssueConfiguration]!
}

type ProjectsResponse {
  """Jira project for default selection."""
  defaultProject: JiraProject
  projects: [JiraProject]!
}

enum ProtectionMode {
  """ADVANCED"""
  ADVANCED

  """CORE"""
  CORE
}

"""Protection Mode Configuration change details"""
type ProtectionModeConfigurationChange {
  newProtectionMode: ProtectionMode!
  oldProtectionMode: ProtectionMode!
}

type ProtectionSpanRule {
  """Creation time of protection span rule"""
  creationTime: DateTime!

  """Says if protection span rule is disabled"""
  disabled: Boolean!
  id: String!

  """Last updated time of protection span rule"""
  lastUpdatedTime: DateTime!

  """Name of the protection span rule"""
  name: String!

  """Filter to match the spans to apply the protection span rule"""
  spanFilter: TraceableSpanProcessingRuleFilter!
}

type ProtectionSpanRuleResultSet {
  count: Long!
  results: [ProtectionSpanRule]!
  total: Long!
}

type Query {
  events(between: InputTimeRange!, filterBy: [InputFilter], orderBy: [InputOrder], limit: Int, offset: Int): EventResultSet!

  """
  Query to get the fraud incident component insights. Selection and aggregation can be performed on various fields
  """
  fraudIncidentComponentInsights(between: InputTimeRange, filterBy: [InputFraudIncidentComponentFilter], limit: Int, offset: Int, orderBy: [InputIncidentComponentOrderByArgument], groupBy: [InputIncidentComponentGroupByArgument]): IncidentComponentInsightsResultSet!

  """Query to get the fraud incident components"""
  fraudIncidentComponents(between: InputTimeRange, filterBy: [InputFraudIncidentComponentFilter], limit: Int, offset: Int, orderBy: [InputIncidentComponentOrderByArgument]): FraudIncidentComponentResultSet!

  """
  Query to get the fraud incident insights. Selection and aggregation can be performed on various fields
  """
  fraudIncidentInsights(between: InputTimeRange!, filterBy: [InputFraudIncidentFilter], limit: Int, offset: Int, orderBy: [InputIncidentOrderByArgument], groupBy: [InputIncidentGroupByArgument]): IncidentInsightsResultSet!

  """Query to get the fraud incidents"""
  fraudIncidents(between: InputTimeRange!, filterBy: [InputFraudIncidentFilter], limit: Int, offset: Int, orderBy: [InputIncidentOrderByArgument]): FraudIncidentResultSet!

  """Query to get the fraud metadata"""
  fraudMetadata(filter: InputFraudMetadataFilter): FraudMetadata! @deprecated(reason: "Deprecated")
  detectionExclusionConditionOptions: detectionExclusionConditionOptions!

  """Query API to fetch detection exclusion rules"""
  detectionExclusionRules(filter: InputDetectionExclusionRulesFilter): DetectionExclusionRuleResultSet!
  excludeSpanRules: ExcludeSpanRuleResultSet!
  summarize(summarizeRequest: InputSummarizeRequest): summarizeResult!

  """
  Get anomaly scoring configuration. It will return both configured and default
  """
  anomalyScoringConfig: AnomalyScoringConfig! @deprecated(reason: "Deprecated")
  countries: RegionResultSet!
  regionRules(filter: InputRegionRulesFilter): RegionRuleResultSet!
  agentTokenMetadata: AgentTokenMetadataResultSet
  users(limit: Int, offset: Int): UserResultSet!
  apiAttributeOverrides: ApiAttributeOverridesResultSet
  traces(type: TraceType, between: InputTimeRange!, filterBy: [InputFilter], orderBy: [InputOrder], limit: Int, offset: Int, space: String): TraceResultSet!
  reports: ReportResultSet!

  """fetch template based reports"""
  templatedReports(filter: InputTemplatedReportsFilter): TemplatedReportResultSet!
  apiTokenMetadata: ApiTokenMetadataResultSet
  oidcGroupMappingsMetadata: IdpGroupMappingMetadataResultSet
  roles: RoleResultSet!
  samlGroupMappingsMetadata: IdpGroupMappingMetadataResultSet

  """Gets the session configuration for the tenant"""
  sessionConfiguration: sessionConfiguration!
  user: UserResponse!
  projectionLists(between: InputTimeRange, projectionTypesList: [ProjectionType]!, filterBy: [InputProjectionFilterArgument]): ProjectionResultSet!

  """
  Api to query AST feature configs, which is config of various AST features for environments.
  """
  astFeatureConfigs(filterBy: InputAstFeatureConfigFilterArgument): AstFeatureConfigResultSet!

  """Get all AST override configs"""
  astOverrides(filterBy: InputAstOverridesFilterArgument): AstOverrideResultSet!

  """
  Stored metadata for APIs that can be used for AST replay and DAST scans.
  """
  astStoredApiMetadata(filterBy: InputAstStoredApiMetadataFilterArgument, sortBy: InputAstStoredApiMetadataSortBy, limit: Int, offset: Int): AstStoredApiMetadataResultSet!

  """Query to fetch all applicable attack labels"""
  attackLabels: AstAttackLabelsResponse!

  """Get all Custom Test Plugins"""
  customTestPlugins(filterBy: InputAstCustomTestPluginFilterArgument): AstCustomTestPluginResultSet!
  openApiSpecDependencyGraph(
    """
    List of open api spec ids for which the api graph is to be generated amongst
    """
    openApiSpecIdList: [String]!

    """Api name filter"""
    apiNameFilter: InputOpenApiSpecDependencyGraphApiNameFilter
  ): OpenApiSpecDependencyGraphResponse!
  pluginOptions: PluginOptions!
  pluginsStats(filterBy: [InputVulnerabilityV2StatsFilterArgument], between: InputTimeRange): VulnerabilitiesV2Statistics!
  astPoliciesV2(filterBy: [InputAstPoliciesV2FilterArgument]): AstPoliciesV2ResultSet!
  quickScanCommand(quickScanCommand: InputQuickScanCommandRequest!): QuickScanCommandResponse!
  runnerCommands(input: InputRunnerCommandsRequest!): ScanCommandResult!
  runnerTaskResult(get: InputGetRunnerTaskRequest!): GetRunnerTaskResultResponse!
  scanCommand(input: InputScanCommandRequest!): String! @deprecated(reason: "Deprecated")
  scanCommandV2(input: InputScanCommandRequest!): ScanCommandResult!
  scanPurgeConfig: ScanPurgeConfig
  scanRuntimeStatus(scanId: String!): ScanRuntimeStatusResponse!
  scanSuiteCommand(scanSuiteId: String!): ScanSuiteCommandResponse!
  scanSuites(filterBy: [InputScanSuitesFilterArgument]): ScanSuitesResultSet!
  scanSuitesStats(filterBy: [InputScanSuitesStatsFilterArgument]): ScanSuitesStatsResult!
  testDetails(testId: String!): TestDetails!
  testResultDetails(testResultDetails: InputTestResultDetailsRequest!): TestResultDetailsResponse!
  vulnerabilitiesDistribution(filterBy: [InputVulnerabilityV2StatsFilterArgument], between: InputTimeRange, groupBy: InputVulnerabilityV2StatsGroupByArgument!): VulnerabilitiesV2Statistics! @deprecated(reason: "Deprecated")
  vulnerabilitiesStats(filterBy: [InputVulnerabilityV2StatsFilterArgument], between: InputTimeRange, groupBy: InputVulnerabilityV2StatsGroupByArgument!): VulnerabilitiesV2Statistics! @deprecated(reason: "Deprecated")
  vulnerabilityMetadataList(filterBy: InputVulnerabilityMetadataFilterArgument, filterArguments: [InputVulnerabilityMetadataFilterV2Argument]): VulnerabilityMetadataResultSet!
  labelApplicationRules: LabelApplicationRuleResultSet!
  labels: LabelResultSet!
  apiInsight(id: String): ApiInsight @deprecated(reason: "first class APIs were introduced")
  apiInsightByApiId(id: String!): ApiInsight
  insightCards: InsightCardResultSet @deprecated(reason: "Use first class APIs instead")
  paramInsight(id: String!): ParamInsight
  parameterInsights(filterBy: [InputParameterFilter], orderBy: [InputParameterOrder], groupBy: [InputParameterGroupByArgument], limit: Int, offset: Int): ParameterInsightResultSet @deprecated(reason: "Use param insight by id query instead")
  sensitiveParameters(type: InsightsParameterType!, apiId: String, filterBy: [InputParameterFilter], orderBy: [InputParameterOrder], limit: Int, offset: Int): ParameterDetailsResultSet! @deprecated(reason: "parameterInsights query was introduced")
  serviceInsightByServiceId(id: String): ServiceInsight @deprecated(reason: "Service Insight as a feature is not used anymore")
  threatActivity(filterBy: [InputThreatActivityFilter], orderBy: [InputThreatActivityOrder], groupBy: [InputThreatActivityGroupBy], unnest: [InputThreatActivityUnnestArgument], limit: Int, offset: Int): ThreatActivityResultSet
  threatActivityGraph(between: InputTimeRange!, interval: InputIntervalArgument!, filterBy: [InputThreatActivityFilter], groupBy: [InputThreatActivityGroupBy], limit: Int): ThreatActivityGraphResultSet
  threatActivityMetadata: ThreatActivityMetadataResultSet
  trainingModelJson(modelScope: InputModelScope, modelType: TrainingModelType): TrainingModelJsonKeyValueNodes
  vulnerabilities(filterBy: [InputVulnerabilityFilter], orderBy: [InputVulnerabilityOrder], limit: Int, offset: Int): VulnerabilityResultSet @deprecated(reason: "Vulnerability as a feature is replaced by insights")
  vulnerabilityInsights(filterBy: [InputVulnerabilityFilter], orderBy: [InputVulnerabilityOrder], groupBy: [InputVulnerabilityGroupByArgument], limit: Int, offset: Int): VulnerabilityInsightResultSet @deprecated(reason: "Vulnerability as a feature is replaced by insights")
  vulnerableServices(filterBy: [InputVulnerabilityFilter], between: InputTimeRange!): VulnerableServicesResultSet @deprecated(reason: "Vulnerability as a feature is replaced by insights")

  """Fetches all configured azure devops projects"""
  getAllAzureDevopsProjects(input: InputAzureDevopsIntegrationGetAllAzureDevopsProjectsInput): AzureDevopsIntegrationGetAllAzureDevopsProjectsResultSet

  """Fetches all azure devops work item assignees."""
  getAzureDevopsAssignees(input: InputAzureDevopsIntegrationGetAssigneesInput): AzureDevopsIntegrationAssigneesResultSet

  """Fetches all configured azure devops integrations"""
  getAzureDevopsIntegrations(input: InputAzureDevopsIntegrationGetIntegrationsInput): AzureDevopsIntegrationsResultSet

  """Fetches all azure devops work items."""
  getAzureDevopsWorkItems(input: InputAzureDevopsIntegrationGetWorkItemsInput): AzureDevopsIntegrationWorkItemsResultSet

  """
  Fetches all configured azure devops project work item type field details
  """
  getAzureProjectWorkItemTypeFieldDetails(input: InputAzureDevopsIntegrationGetAzureProjectWorkItemTypeFieldDetailsInput): AzureDevopsAzureDevopsIntegrationGetAzureProjectWorkItemTypeFieldDetailsResultSet

  """Fetches all configured azure devops project work item types"""
  getAzureProjectWorkItemTypes(input: InputAzureDevopsIntegrationGetAzureProjectWorkItemTypesInput): AzureDevopsIntegrationGetAzureProjectWorkItemTypesResultSet

  """Validates the azure devops connection"""
  validateAzureDevopsConnection(input: InputAzureDevopsIntegrationValidateConnectionInput): ConfirmationResponse

  """List of Sonar Scans"""
  sonarScansV2(get: InputGetSonarScansV2Request): SonarScanV2ResultSet!
  exportSpans(between: InputTimeRange!, filterBy: [InputFilter], limit: Int): ExportSpanResult!
  spans(between: InputTimeRange!, filterBy: [InputFilter], orderBy: [InputOrder], limit: Int, offset: Int, space: String): SpanResultSet!
  notificationChannels: NotificationChannelResultSet!
  notificationEventConditionsOptions: NotificationEventConditionsOptions!
  notificationRules: NotificationRuleResultSet!
  metadata: [AttributeMetadata]!
  runnerLogMessages(filterBy: InputRunnerLogMessageFilterArgument!): RunnerLogMessageResultSet!
  runnerLogsPersistenceConfig: RunnerLogsPersistenceConfig!
  runnerLogsPurgeConfig: RunnerLogsPurgeConfig!

  """Get the result of a batch of analytics queries"""
  analyticsQueryBatch(batchId: String!): AnalyticsQueryBatchDetailWithResults!

  """Get all batches of analytics query matching the provided filter"""
  analyticsQueryBatches(input: InputAnalyticsQueryBatchesDetailRequest): AnalyticsQueryBatchesDetail!
  apiStatsList(scanId: String!, limit: Int, offset: Int): ApiStatsList!
  astPolicies(filterBy: [InputAstPoliciesV2FilterArgument]): AstPoliciesV2ResultSet!
  reVerifyCommand(testId: String!): ReVerifyCommand!

  """Get Scan Evaluation Criteria"""
  scanEvaluationCriteria(filterBy: [InputScanEvaluationCriteriaFilterArgument]): ScanEvaluationCriteriaResultSet!
  scanInfos(filterBy: [InputScanInfoFilterArgument], between: InputTimeRange, limit: Int, offset: Int): ScanInfoResultSet!

  """Query to fetch Scan Overview details for the list of given Scan Ids"""
  scanOverview(scanIdList: [String]!): ScanOverviewResultSet!
  scanPolicies(sortBy: InputScanPolicySortBy, filterBy: [InputScanPolicyFilterArgument]): ScanPolicyResultSet!
  scanSummaryReport(scanId: String!): ScanSummaryReport!
  scannedApiStats(filterBy: [InputScannedApiStatFilterArgument]!, sortBy: InputScannedApiStatOrderArgument, limit: Int!, offset: Int): ScannedApiStatResultSet!
  scans(filterBy: [InputScanFilterArgument], between: InputTimeRange, limit: Int, offset: Int): ScanResultSet!
  searchAst(astDataSource: astDataSource, filterBy: [InputastFilter], orderBy: [InputAstOrderArgument], groupBy: [InputAstGroupByArgument], limit: Int, offset: Int): AstResultSet!
  skippedApis(filterBy: [InputSkippedApisFilterArgument]!, limit: Int!, offset: Int): SkippedApiResultSet!
  testResultInfos(filterBy: [InputTestResultInfoFilterArgument]!, sortBy: InputTestResultInfoOrderArgument, limit: Int, offset: Int): TestInfoResultSet!

  """Query to fetch test results for a particular scan and vulnerability"""
  testResults(filterBy: InputTestResultFilterArgument, testId: [String]): TestResultSet!
  vulnerabilitiesV2(filterBy: [InputvulnerabilityFilterArgument], limit: Int, offset: Int, between: InputTimeRange, shouldResolveSpanId: Boolean, sortBy: InputVulnerabilityOrderArgument): VulnerabilityV2ResultSet! @deprecated(reason: "Deprecated")
  explore(context: ExplorerContext, scope: String, between: InputTimeRange, space: String, limit: Int, offset: Int, filterBy: [InputFilter], orderBy: [InputAggregatableOrder], groupBy: InputGroupByArgument, interval: InputIntervalArgument, entityContextOptions: InputEntityContextOptions): ExploreResultSet!

  """Fetches vulnerability results as per query"""
  vulnerabilitiesV3(
    """Vulnerability filter argument"""
    filter: InputVulnerabilityV3NestedFilter

    """Vulnerability results order by argument"""
    orderBy: [InputVulnerabilityV3Order]

    """Vulnerability group by argument"""
    groupBy: [InputVulnerabilityV3GroupByArgument]

    """
    Filters returned vulnerabilities to those which have been last seen in the provided time range.
    """
    lastSeenBetween: InputLastSeenTimeRange

    """
    The number of vulnerability results to return. No default is set if unset
    """
    limit: Int

    """
    The offset with which vulnerability results are to be queried. If unset, defaults to 0
    """
    offset: Int
  ): VulnerabilityV3ResultSet

  """Fetches the applicable servicenow itsm assignee groups"""
  getServiceNowItsmAssigneeGroups(input: InputServiceNowItsmIntegrationGetAssigneeGroupsInput): ServiceNowItsmIntegrationAssigneeGroupsResultSet

  """Fetches the applicable servicenow itsm assignees"""
  getServiceNowItsmAssignees(input: InputServiceNowItsmIntegrationGetAssigneesInput): ServiceNowItsmIntegrationAssigneesResultSet

  """Fetches the applicable servicenow itsm callers"""
  getServiceNowItsmCallers(input: InputServiceNowItsmIntegrationGetCallersInput): ServiceNowItsmIntegrationCallersResultSet

  """Fetches the corresponding servicenow itsm incidents"""
  getServiceNowItsmIncidents(input: InputServiceNowItsmIntegrationGetIncidentsInput): ServiceNowItsmIntegrationIncidentsResultSet

  """Fetches all configured servicenow integrations"""
  getServiceNowItsmIntegrations(input: InputServiceNowItsmIntegrationGetIntegrationsInput): ServiceNowItsmIntegrationsResultSet

  """Fetches the corresponding reference values for a table field"""
  getServiceNowReferenceValues(input: InputServiceNowItsmIntegrationGetServiceNowReferenceValuesInput): ServiceNowItsmIntegrationServiceNowReferenceValuesResultSet

  """Validates the servicenow connection"""
  validateServiceNowItsmConnection(input: InputServiceNowItsmIntegrationValidateConnectionInput): ConfirmationResponse

  """Gets dashboards matching the provided filter, if any"""
  dashboards(filter: InputDashboardFilter): DashboardResultSet!

  """Queries filtered ResultSet of saved filters"""
  savedFilters(savedFilterCondition: InputSavedFiltersQueryFilter!): SavedFiltersResultSet!
  anomalyScoreContributions: AnomalyScoreContributions!
  eventScoreContributions: EventScoreContributions!
  eventTypeContribution: EventTypeContribution!
  ipReputationThreatScoreConfig: IpReputationThreatScoreConfig!
  statusCodeThreatScoreConfigs: StatusCodeThreatScoreConfigs!
  threatAutoBlocking: ThreatAutoBlocking!
  threatScoreBounds: ThreatScoreBounds!

  """Validates wiz connection"""
  wizConnectionValidation(input: InputWizIntegrationValidationInput!): ConfirmationResponse

  """Get All Wiz Integrations"""
  wizIntegrations: WizIntegrationsResultSet

  """Get Wiz Issues"""
  wizIssues(input: InputGetWizIssuesInput!): WizIssuesResponse

  """Query to fetch the activity logs"""
  activityLogs(
    """Time range within which the activity log are to be fetched"""
    between: InputTimeRange!

    """
    Activity log filter argument. All the individual relational filters are ANDed
    """
    filterBy: [InputActivityLogFilter]

    """
    Activity log filter argument which provides the option of combining the filters using logical operators
    """
    activityLogFilter: InputActivityLogCompositeFilter

    """Activity log order by argument"""
    orderBy: [InputActivityLogOrder]

    """Number of activity logs to return. If unset, defaults to 100"""
    limit: Int

    """
    Offset with which activity logs are to be queried. If unset, defaults to 0
    """
    offset: Int
  ): ActivityLogResultSet!

  """Query to fetch the waf activity logs"""
  wafActivityLogs(
    """Time range within which the activity log are to be fetched"""
    between: InputTimeRange!

    """Activity log filter argument"""
    filterArgument: InputWafActivityLogsFilterArgument

    """Activity log order by argument"""
    orderBy: [InputWafActivityLogOrderArgument]

    """Number of activity logs to return. If unset, defaults to 100"""
    limit: Int

    """
    Offset with which activity logs are to be queried. If unset, defaults to 0
    """
    offset: Int
  ): WafActivityLogResultSet!
  defaultProtectionMode: ProtectionMode!
  localProcessingRules: LocalProcessingRuleResultSet!
  entities(type: EntityType, scope: String, between: InputTimeRange!, space: String, filterBy: [InputFilter], orderBy: [InputAggregatableOrder], limit: Int, offset: Int, includeInactive: Boolean): EntityResultSet!

  """Query to get span ingestion rules"""
  spanIngestionRules(input: InputSpanIngestionRuleInput!): SpanIngestionConfig!

  """Gets a result set of Jwt Extraction Rules"""
  jwtExtractionRules(filter: InputJwtExtractionRuleFilter): JwtExtractionRuleResultSet!

  """Gets a list of Auth Detection Rules"""
  authDetectionRules(filter: InputAuthDetectionRuleFilter): AuthDetectionRuleResultSet!
  exfiltrationData(between: InputTimeRange!, limit: Int, offset: Int, filterBy: [InputExfiltrationFilterArgument], order: [InputExfiltrationOrderByArgument], groupBy: [InputExfiltrationGroupByArgument]): ExfiltrationResultSet
  exfiltrationDetectionRules: ExfiltrationDetectionRulesResultSet
  ipRangeRules(filter: InputIpRangeRulesFilter): IpRangeRuleResultSet!
  apiSpecs(filter: InputApiSpecFilter): ApiSpecResultSet!
  getWafIntegrations(input: InputGetWafIntegrationsInput!): WafIntegrationsResultSet

  """Validates snyk connection"""
  snykConnectionValidation(input: InputSnykConnectionValidationInput!): ConfirmationResponse

  """Gets the snyk integration config"""
  snykIntegration: ConfirmationResponse

  """Gets snyk code issues corresponding to provided input"""
  snykIssues(input: InputGetSnykIssuesInput!): SnykIssuesResponse

  """Gets snyk code issue summaries"""
  snykIssuesSummary(input: InputGetSnykIssuesSummaryRequestInput!): SnykIssuesSummaryResponse

  """Gets the snyk organizations corresponding to the tenant's integration"""
  snykOrganizations: SnykOrganizationsResponse

  """
  Gets the snyk projects corresponding to tenant's integration and provided input
  """
  snykProjects(input: InputGetSnykProjectsInput!): SnykProjectsResponse
  sonarScans(get: InputGetSonarScansRequest): SonarScansResultSet!
  allScopedAnomalyAggregationConfigs: ScopedAnomalyAggregationConfigsResultSet!
  allScopedAnomalyDetectionConfig(configTypes: [AnomalyDetectionConfigType]): ScopedAnomalyDetectionConfigsResultSet!
  allScopedAnomalyGlobalConfigs: ScopedAnomalyGlobalConfigsResultSet!
  allScopedTrainingConfigs(configTypes: [TrainingConfigType]): ScopedTrainingConfigsResultSet!
  allTrainingActionConfigs: TrainingActionsResultSet!
  allUnresolvedScopedAnomalyDetectionConfigs(configTypes: [AnomalyDetectionConfigType]): ScopedAnomalyDetectionConfigsResultSet!
  allUnresolvedScopedAnomalyGlobalConfigs: ScopedAnomalyGlobalConfigsChangeResultSet!
  allUnresolvedScopedTrainingConfigs(configTypes: [TrainingConfigType]): ScopedTrainingConfigsResultSet!
  anomalyDetectionConfigKeysDescriptor: [AnomalyConfigDescriptor]!
  anomalyDetectionRuleConfigs(anomalyScope: InputAnomalyScope!): AnomalyDetectionRuleConfigsResultSet!
  anomalyExclusionApplicableOptions(input: InputAnomalyExclusionApplicableOptionsRequest!): AnomalyExclusionConfigOptions!
  anomalyExclusionRules: AnomalyExclusionRuleResultSet!
  anomalyGlobalConfigStatus(anomalyScope: InputAnomalyScope!): AnomalyConfigStatus! @deprecated(reason: "Deprecated")
  scopedAnomalyAggregationConfig(anomalyScope: InputAnomalyScope!): ScopedAnomalyAggregationConfig!
  scopedAnomalyDetectionConfig(anomalyScope: InputAnomalyScope!, configTypes: [AnomalyDetectionConfigType]): ScopedAnomalyDetectionConfig!
  scopedAnomalyGlobalConfig(anomalyScope: InputAnomalyScope!): ScopedAnomalyGlobalConfig!
  scopedTrainingConfig(anomalyScope: InputAnomalyScope!, configTypes: [TrainingConfigType]): ScopedTrainingConfig!

  """Tracked scanner types"""
  trackedScannerTypes: [String]!
  trainingActionConfig(anomalyScope: InputAnomalyScope!): ScopedTrainingActionConfig!
  trainingConfigKeysDescriptor: [AnomalyConfigDescriptor]!
  unresolvedScopedAnomalyDetectionConfig(anomalyScope: InputAnomalyScope!, configTypes: [AnomalyDetectionConfigType]): ScopedAnomalyDetectionConfig!
  unresolvedScopedAnomalyGlobalConfig(anomalyScope: InputAnomalyScope!): ScopedAnomalyGlobalConfigChange!

  """Get all the ast hooks"""
  allAstHooks: AstHooksResultSet

  """Get all the ast hooks"""
  allAstHooksV2: AstHooksResultSetV2

  """Get ast hook test by id"""
  astHookTestResult(id: String!): AuthHookTestResult

  """Get ast hook by id"""
  astHookV2Status(id: String!): AstHookV2Status

  """Github Integrations"""
  githubIntegrations: GithubIntegrationsResultSet

  """Details of all Jira projects"""
  getAllJiraProjects(input: InputGetAllProjectsInput): ProjectsResponse

  """Url of the jira issue associated with the entity"""
  getJiraIssue(input: InputGetJiraIssueInput!): JiraIssueResponse

  """Templates for creating the description in Jira Issues"""
  getJiraIssueTemplates(input: InputGetAllDescriptionTemplatesInput!): JiraIssueTemplatesResultSet

  """Urls of the jira issues associated with the entities"""
  getJiraIssues(input: [InputGetJiraIssueInput]!): [JiraIssueResponse]

  """Query for Jira project issue configurations for bi-directional sync."""
  getJiraProjectIssueConfiguration(input: InputGetJiraProjectIssueConfigurationInput!): ProjectIssueConfigurationsResponse

  """Fetch all supported statuses for a Jira project"""
  getJiraProjectStatuses(input: InputGetJiraProjectStatusesInput): JiraProjectStatusesResponse

  """Queries for configured Jira integrations matching provided criteria"""
  jiraIntegrations(
    """
    Filter to integrations that are scoped to at least one of the provided
    Environment IDs. If omitted or empty, any environment scope is eligible for
    the returned integrations.
    """
    environmentIds: [String]
  ): JiraIntegrationsResponse!

  """Details of all the assignable users for a project"""
  jiraIssueAssignableUsers(input: InputGetJiraIssueAssignableUsersInput!): JiraUsersResultSet

  """
  Validates that the jira connection can be established for the provided params
  """
  validateExistingJiraConnection(input: InputJiraExistingConnectionValidationInput): ConfirmationResponse

  """
  Validates that the jira data center connection can be established for the provided params
  """
  validateJiraDataCenterConnection(input: InputJiraDataCenterConnectionValidationInput): ConfirmationResponse
  config: ConfigResponse!

  """Query to get api naming rules"""
  apiNamingRules(filter: InputApiNamingRuleFilter): ApiNamingRuleResultSet!

  """Query to get protection span rules"""
  protectionSpanRules: ProtectionSpanRuleResultSet!
  samplingConfigs: SamplingConfigsResultSet!

  """Query for Service naming rules"""
  serviceNamingRules(filter: InputServiceNamingRuleFilter): ServiceNamingRuleResultSet!
  sessionIdentificationRules: SessionIdentificationRuleResultSet!
  customSignatureRules(filter: InputCustomSignatureRulesFilter): CustomSignatureRuleResultSet!
  matchCombinations: CustomSignatureRuleExpressionCombinations!

  """Get policies matching the input filters"""
  policies(filter: InputPolicyRequestFilter!): PoliciesResultSet

  """Get policy schemas by giving schema types"""
  policySchema(policySchemaTypes: [PolicySchemaType], policyAttributeGroupNames: [String]): PolicySchemasResultSet
  clusterssnapshots(id: String, between: InputTimeRange!, limit: Int): ClustersSnapshotResultSet!

  """Gets an API spec generated via code analysis"""
  codeAnalysisApiSpec(sourceCodeApiId: String!): SourceCodeApiSpec!

  """ResultSet of saved queries"""
  savedQueries(savedQueryCondition: InputSavedQueryFilter!): SavedQueryResultSet!

  """List of authors of saved queries"""
  savedQueryAuthors: SavedQueryAuthorsResult!

  """Gets all User Attribution rules based on the filter"""
  userAttributionRulesV2(filter: InputUserAttributionRulesFilter): UserAttributionRuleResultSetV2!

  """Query to fetch all issue configs"""
  issueConfigs(get: InputGetIssueConfigsRequest!): IssueConfigsResultSet!

  """Query to fetch vulnerability counts for burn down chart"""
  vulnerabilityBurnDownChart(get: InputVulnerabilityBurnDownChartRequest!): VulnerabilityBurnDownChartResultSet!

  """Query to fetch all vulnerability status change config"""
  vulnerabilityStatusChangeConfigs: VulnerabilityStatusChangeConfigResultSet!
  userAttributionRules: UserAttributionRuleResultSet!
  logEvents(between: InputTimeRange!, filterBy: [InputFilter], orderBy: [InputOrder], limit: Int, offset: Int): LogEventResultSet!

  """Query to get the reputation of a given user"""
  userReputation(id: String!): UserReputation!

  """Returns decrypted API keys for ids"""
  apiKeys(ids: [String]!): ApiKeysResultSet!

  """API to fetch malicious sources rules"""
  maliciousSourcesRules(filter: InputMaliciousSourcesRulesFilter): MaliciousSourcesRuleResultSet!
  onboarding: OnboardingResponse!
  getUpcomingInvoice: GetUpcomingInvoiceResponse
  previewSubscriptionChange(input: InputSubscriptionChangePreview!): PreviewSubscriptionChangeResponse
  getAllAwsWafRules(input: InputGetAwsWafRulesInput!): GetAwsWafIntegrationResponse

  """API for getting Imperva WAF website domain entries"""
  getImpervaWafWebsites(input: InputGetImpervaWafWebsitesInput!): GetImpervaWafWebsitesResponse
  getWafIntegration(input: InputGetWafIntegrationInput!): WafIntegration

  """API for validating Akamai WAF connection"""
  validateAkamaiWafConnection(input: InputAkamaiWafValidationInput!): WafConnectionValidationResponse
  validateAwsWafConnection(input: InputAwsWafConnectionValidationInput!): ConfirmationResponse

  """API for validating Azure WAF connection"""
  validateAzureWafConnection(input: InputAzureWafConnectionValidationInput!): WafConnectionValidationResponse

  """API for validating WAF cloudflare connection"""
  validateCloudflareWafConnection(input: InputCloudflareWafValidationInput!): WafConnectionValidationResponse

  """API for validating F5 WAF connection"""
  validateF5WafConnection(input: InputF5WafValidationInput!): WafConnectionValidationResponse

  """API for validating Fortinet WAF connection"""
  validateFortinetWafConnection(input: InputFortinetWafConnectionValidationInput!): WafConnectionValidationResponse
  validateGcpWafConnection(input: InputGcpWafConnectionValidationInput!): WafConnectionValidationResponse
  validateWafConnection(input: InputWafConnectionValidationInput!): WafConnectionValidationResponse
  rateLimitingRuleKeyValueConditionCombinations: RateLimitingRuleKeyValueConditionCombinationResultSet! @deprecated(reason: "Deprecated")
  rateLimitingRuleOptions: RateLimitingRuleOptions! @deprecated(reason: "Deprecated")
  rateLimitingRules(category: [RateLimitingRuleCategory], rateLimitingRulesFilter: InputRateLimitingRulesFilter): RateLimitingRuleResultSet!

  """Retrieves all Data Classification Override Rules"""
  dataClassificationOverrideRules: DataClassificationOverrideRuleResultSet!
  dataSets(
    """Override the system data sets used with a specific version"""
    version: SystemDataSetsVersion
  ): DataSetResultSet!
  dataTypes(
    """Override the system data sets used with a specific version"""
    version: SystemDataSetsVersion
  ): DataTypeResultSet!
  resolvedScopedDataProtectionConfig(scope: InputDataProtectionScope): DataProtectionConfig!

  """The risk factors and elements"""
  apiRiskFactorConfigs(filter: InputApiRiskConfigScopeFilter): ApiRiskFactorConfigs!

  """The grid and level values"""
  apiRiskScoringConfigs(filter: InputApiRiskConfigScopeFilter): ApiRiskScoringConfigs!
  apiSpecConformanceResults(id: String!, queryType: QueryType!, filterBy: [InputApiSpecConformanceFilterArgument], orderBy: [InputApiSpecConformanceOrder], groupBy: [InputApiSpecConformanceGroupByArgument], limit: Int, offset: Int): ApiSpecConformanceResultSet
  apiSpecConformanceScheduledJob(id: String!): ApiSpecConformanceScheduledJob!
  astScanSchedules(getAstScanJob: InputGetAstScanJob): AstScanScheduleResultSet!
  getApiDefinition(id: String!): ApiDefinitionJob!
  apiInspectorJobResults(filterBy: [InputApiInspectorJobFilterArgument], orderBy: [InputApiInspectorJobOrderArgument], limit: Int, offset: Int): ApiInspectorJobQueryResultSet
  apiInspectorResults(id: String!, filterBy: [InputApiInspectorFilterArgument], orderBy: [InputApiInspectorOrderArgument], groupBy: [InputApiInspectorGroupByArgument], limit: Int, offset: Int): ApiInspectorResultSet
  apiInspectorRuleInformation(id: String!): ApiInspectorRuleInformation
  apiSpecConformanceJobResults(filterBy: [InputApiSpecConformanceJobFilterArgument], orderBy: [InputApiSpecConformanceJobOrder], limit: Int, offset: Int): ApiSpecConformanceJobQueryResultSet

  """List of jobs"""
  jobResults(jobType: JobType!, filterBy: [InputJobFilterArgument], orderBy: [InputJobOrderArgument], limit: Int, offset: Int): JobQueryResultSet

  """List of schedules"""
  scheduledJobResults(jobType: JobType!, filterBy: [InputScheduledJobFilterArgument], orderBy: [InputScheduledJobOrderArgument], limit: Int, offset: Int): ScheduledJobQueryResultSet
  securityEventsInfo(id: String!): SecurityEventsInfoJob!
  actor(id: String): Actor
  actors(foreignFilter: InputActorForeignFilter, filterBy: [InputFilter], orderBy: [InputOrder], limit: Int, offset: Int): ActorResultSet
  sessionIdentificationConfigOptions: SessionIdentificationConfigOptions!
  sessionIdentificationRulesV2(filter: InputSessionIdentificationRulesFilter): SessionIdentificationRuleResultSetV2!
  automaticSecretRedaction: AutomaticSecretRedactionResponse! @deprecated(reason: "Deprecated")
  fullPrivacyMode: FullPrivacyModeResponse! @deprecated(reason: "Deprecated")
  piiTypes(type: PiiParameterType): PiiTypesResultSet! @deprecated(reason: "Deprecated")
  redactionRules: RedactionRuleResultSet! @deprecated(reason: "Deprecated")
  redactionStrategy(type: SensitiveParameterType!): RedactionStrategyResponse! @deprecated(reason: "Deprecated")

  """Get All Splunk Integrations"""
  splunkIntegrations: SplunkIntegrationsResultSet

  """Validates splunk connection"""
  validateSplunkConnection(input: InputValidateSplunkIntegrationInput!): ConfirmationResponse

  """Get All Syslog Server Integrations"""
  syslogServerIntegrations: SyslogServerIntegrationsResultSet

  """Validates syslog server connection"""
  validateSyslogServerIntegration(input: InputValidateSyslogServerIntegrationInput!): ConfirmationResponse
  GetScopedThreatScoringConfigs(input: QUERY_traceableThreatScoringConfig___GetScopedThreatScoringConfigsRequest___Input): QUERY_traceableThreatScoringConfig___GetScopedThreatScoringConfigsResponse___
  GetConfigs(input: QUERY_traceableEdgeConfig___GetConfigsRequest___Input): QUERY_traceableEdgeConfig___GetConfigsResponse___
  Get(input: QUERY_traceablePolicyConfig___GetRequest___Input): QUERY_traceablePolicyConfig___GetResponse___
  GetAll(input: QUERY_traceablePolicyConfig___GetAllRequest___Input): QUERY_traceablePolicyConfig___GetAllResponse___
  GetFraudPolicyList(input: QUERY_fraudPolicyConfig___GetFraudPolicyListRequest___Input): QUERY_fraudPolicyConfig___GetFraudPolicyListResponse___
  GetFraudPolicy(input: QUERY_fraudPolicyConfig___GetFraudPolicyRequest___Input): QUERY_fraudPolicyConfig___GetFraudPolicyResponse___
  GetApiAccessAnomalyConfigs(input: QUERY_fraudPolicyConfig___GetApiAccessAnomalyConfigsRequest___Input): QUERY_fraudPolicyConfig___GetApiAccessAnomalyConfigsResponse___
  GetApiAccessAnomalyConfig(input: QUERY_fraudPolicyConfig___GetApiAccessAnomalyConfigRequest___Input): QUERY_fraudPolicyConfig___GetApiAccessAnomalyConfigResponse___
  GetCategorizedBotConfigs(input: QUERY_categorizedBotConfigService___GetCategorizedBotConfigsRequest___Input): QUERY_categorizedBotConfigService___GetCategorizedBotConfigsResponse___
  GetCategorizedBotConfigEdgeDecisionVariables(input: QUERY_categorizedBotConfigService___GetCategorizedBotConfigEdgeDecisionVariablesRequest___Input): QUERY_categorizedBotConfigService___GetCategorizedBotConfigEdgeDecisionVariablesResponse___
  GetFlowConfig(input: QUERY_traceableEdgeBotConfig___GetFlowConfigRequest___Input): QUERY_traceableEdgeBotConfig___GetFlowConfigResponse___
  GetAllFlowConfigs(input: QUERY_traceableEdgeBotConfig___GetAllFlowConfigsRequest___Input): QUERY_traceableEdgeBotConfig___GetAllFlowConfigsResponse___
  GetCategorizedBotConfigPolicies(input: QUERY_categorizedBotConfigPolicyService___GetCategorizedBotConfigPoliciesRequest___Input): QUERY_categorizedBotConfigPolicyService___GetCategorizedBotConfigPoliciesResponse___
  GetCategorizedBotConfigPolicyEdgeDecisionRules(input: QUERY_categorizedBotConfigPolicyService___GetCategorizedBotConfigPolicyEdgeDecisionRulesRequest___Input): QUERY_categorizedBotConfigPolicyService___GetCategorizedBotConfigPolicyEdgeDecisionRulesResponse___
  GetResolvedEdgeDecisionEngineConfigs(input: QUERY_edgeDecisionConfig___GetResolvedEdgeDecisionEngineConfigsRequest___Input): QUERY_edgeDecisionConfig___GetResolvedEdgeDecisionEngineConfigsResponse___
  GetEdgeDecisionEngineConfig(input: QUERY_edgeDecisionConfig___GetEdgeDecisionEngineConfigRequest___Input): QUERY_edgeDecisionConfig___GetEdgeDecisionEngineConfigResponse___
  GetAllEdgeDecisionEngineConfig(input: QUERY_edgeDecisionConfig___GetAllEdgeDecisionEngineConfigRequest___Input): QUERY_edgeDecisionConfig___GetAllEdgeDecisionEngineConfigResponse___
  GetAllEdgeDecisionRules(input: QUERY_edgeDecisionConfig___GetAllEdgeDecisionRulesRequest___Input): QUERY_edgeDecisionConfig___GetAllEdgeDecisionRulesResponse___
  GetEdgeDecisionRule(input: QUERY_edgeDecisionConfig___GetEdgeDecisionRuleRequest___Input): QUERY_edgeDecisionConfig___GetEdgeDecisionRuleResponse___
  GetAllEdgeDecisionSpecs(input: QUERY_edgeDecisionConfig___GetAllEdgeDecisionSpecsRequest___Input): QUERY_edgeDecisionConfig___GetAllEdgeDecisionSpecsResponse___
  GetEdgeDecisionSpec(input: QUERY_edgeDecisionConfig___GetEdgeDecisionSpecRequest___Input): QUERY_edgeDecisionConfig___GetEdgeDecisionSpecResponse___
  GetAllEdgeAttributionRules(input: QUERY_edgeDecisionConfig___GetAllEdgeAttributionRulesRequest___Input): QUERY_edgeDecisionConfig___GetAllEdgeAttributionRulesResponse___
  GetEdgeAttributionRule(input: QUERY_edgeDecisionConfig___GetEdgeAttributionRuleRequest___Input): QUERY_edgeDecisionConfig___GetEdgeAttributionRuleResponse___
  GetAllEdgeCustomResponses(input: QUERY_edgeDecisionConfig___GetAllEdgeCustomResponsesRequest___Input): QUERY_edgeDecisionConfig___GetAllEdgeCustomResponsesResponse___
  GetEdgeCustomResponse(input: QUERY_edgeDecisionConfig___GetEdgeCustomResponseRequest___Input): QUERY_edgeDecisionConfig___GetEdgeCustomResponseResponse___
  AssessRisk(input: QUERY_edgeDecisionService___AssessRiskRequest___Input): QUERY_edgeDecisionService___AssessRiskResponse___
  DebugAssessRisk(input: QUERY_edgeDecisionService___DebugAssessRiskRequest___Input): QUERY_edgeDecisionService___DebugAssessRiskResponse___
}

type QUERY_categorizedBotConfigPolicyService___AccessPatternRule___ {
  correlation_key: QUERY_categorizedBotConfigPolicyService___CorrelationKey___
  correlation_key___JSON: JSON
  filter: QUERY_categorizedBotConfigPolicyService___MatchCondition___
  filter___JSON: JSON
  target_request: QUERY_categorizedBotConfigPolicyService___MatchCondition___
  target_request___JSON: JSON
  pre_requests: [QUERY_categorizedBotConfigPolicyService___RequestInvocation___]
  pre_requests___JSON: JSON
  time_window: QUERY_categorizedBotConfigPolicyService___Duration___
  time_window___JSON: JSON
  check_for_any_pre_requests: Boolean
  trigger_on_all_missing: Boolean
  trigger_on_any_missing: Boolean
  trigger_on_score: Float
}

type QUERY_categorizedBotConfigPolicyService___AggregateThresholdRule___ {
  match_condition: QUERY_categorizedBotConfigPolicyService___MatchCondition___
  match_condition___JSON: JSON
  group_by_dimensions: [QUERY_categorizedBotConfigPolicyService___AttributeDerivationMapping___]
  group_by_dimensions___JSON: JSON
  aggregate_without_grouping: Boolean
  time_window: QUERY_categorizedBotConfigPolicyService___Duration___
  time_window___JSON: JSON
  value_aggregate_threshold: QUERY_categorizedBotConfigPolicyService___ValueAggregateThreshold___
  value_aggregate_threshold___JSON: JSON
}

enum QUERY_categorizedBotConfigPolicyService___AggregationType___ {
  AGGREGATION_TYPE_UNSPECIFIED
  AGGREGATION_TYPE_COUNT
  AGGREGATION_TYPE_DISTINCT_COUNT
  AGGREGATION_TYPE_SUM
  AGGREGATION_TYPE_AVG
  AGGREGATION_TYPE_MAX
  AGGREGATION_TYPE_MIN
}

type QUERY_categorizedBotConfigPolicyService___AttributeDerivationMapping___ {
  name: String
  type: QUERY_categorizedBotConfigPolicyService___FieldType___
  rules: [QUERY_categorizedBotConfigPolicyService___DerivationRule___]
  rules___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___BinaryOperator___ {
  list_value: QUERY_categorizedBotConfigPolicyService___ListValue___
  list_value___JSON: JSON
  regex: String
  bloom_filter: String
  number_value: Float
  bool_value: Boolean
  null_value: QUERY_categorizedBotConfigPolicyService___NullValue___
  string_value: String
  range_value: QUERY_categorizedBotConfigPolicyService___RangeValue___
  range_value___JSON: JSON
  time_range_value: QUERY_categorizedBotConfigPolicyService___TimeRangeValue___
  time_range_value___JSON: JSON
  match_operator: QUERY_categorizedBotConfigPolicyService___MatchOperator___
}

type QUERY_categorizedBotConfigPolicyService___BotClassification___ {
  category: String
  sub_category: [String]
  sub_category___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___BotList___ {
  bot_ids: [String]
  bot_ids___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___BotScope___ {
  bot_list: QUERY_categorizedBotConfigPolicyService___BotList___
  bot_list___JSON: JSON
  bot_classification: QUERY_categorizedBotConfigPolicyService___BotClassification___
  bot_classification___JSON: JSON
}

enum QUERY_categorizedBotConfigPolicyService___CategorizedBotAction___ {
  CATEGORIZED_BOT_ACTION_UNSPECIFIED
  CATEGORIZED_BOT_ACTION_BLOCK
  CATEGORIZED_BOT_ACTION_MONITOR
  CATEGORIZED_BOT_ACTION_ALLOW
}

type QUERY_categorizedBotConfigPolicyService___CategorizedBotConfigPolicy___ {
  id: String
  categorized_bot_policy_details: QUERY_categorizedBotConfigPolicyService___CategorizedBotConfigPolicyDetails___
  categorized_bot_policy_details___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___CategorizedBotConfigPolicyDetails___ {
  name: String
  description: String
  enabled: Boolean
  categorized_bot_policy_scope: QUERY_categorizedBotConfigPolicyService___CategorizedBotPolicyScope___
  categorized_bot_policy_scope___JSON: JSON
  bot_scopes: [QUERY_categorizedBotConfigPolicyService___BotScope___]
  bot_scopes___JSON: JSON
  categorized_bot_policy_action_config: QUERY_categorizedBotConfigPolicyService___CategorizedBotPolicyActionConfig___
  categorized_bot_policy_action_config___JSON: JSON
}

input QUERY_categorizedBotConfigPolicyService___CategorizedBotConfigPolicyEdgeDecisionRulesFilter___Input {
  categorized_bot_config_policy_ids: [String]
  categorized_bot_config_policy_ids___JSON: JSON
}

input QUERY_categorizedBotConfigPolicyService___CategorizedBotConfigPolicyFilter___Input {
  categorized_bot_config_policy_ids: [String]
  categorized_bot_config_policy_ids___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___CategorizedBotPolicyActionConfig___ {
  bot_action: QUERY_categorizedBotConfigPolicyService___CategorizedBotAction___
}

type QUERY_categorizedBotConfigPolicyService___CategorizedBotPolicyScope___ {
  environment_scope: QUERY_categorizedBotConfigPolicyService___EnvironmentScope___
  environment_scope___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___ConditionalConfig___ {
  bool_expression: String
  true_transformation: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  true_transformation___JSON: JSON
  false_transformation: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  false_transformation___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___ConfigTtl___ {
  created_at: QUERY_categorizedBotConfigPolicyService___Timestamp___
  created_at___JSON: JSON
  expires_at: QUERY_categorizedBotConfigPolicyService___Timestamp___
  expires_at___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___CorrelationKey___ {
  attributes: [QUERY_categorizedBotConfigPolicyService___AttributeDerivationMapping___]
  attributes___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___CustomResponse___ {
  match_condition: QUERY_categorizedBotConfigPolicyService___MatchCondition___
  match_condition___JSON: JSON
  variables: [QUERY_categorizedBotConfigPolicyService___VariableDerivationMapping___]
  variables___JSON: JSON
  status_code: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  status_code___JSON: JSON
  response_headers: [QUERY_categorizedBotConfigPolicyService___ResponseHeader___]
  response_headers___JSON: JSON
  response_body: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  response_body___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___DataModelEntity___ {
  id: String
  type: String
  name: String
  metadata_attributes: [QUERY_categorizedBotConfigPolicyService___AttributeDerivationMapping___]
  metadata_attributes___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___ {
  static_value: QUERY_categorizedBotConfigPolicyService___Value___
  static_value___JSON: JSON
  jexl_expression: QUERY_categorizedBotConfigPolicyService___JexlExpressionConfig___
  jexl_expression___JSON: JSON
  jexl_script: QUERY_categorizedBotConfigPolicyService___JexlScriptConfig___
  jexl_script___JSON: JSON
  regex: QUERY_categorizedBotConfigPolicyService___RegexConfig___
  regex___JSON: JSON
  conditional: QUERY_categorizedBotConfigPolicyService___ConditionalConfig___
  conditional___JSON: JSON
  output_type: QUERY_categorizedBotConfigPolicyService___FieldType___
}

type QUERY_categorizedBotConfigPolicyService___DerivationRule___ {
  transformation_config: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  transformation_config___JSON: JSON
  transformation_configs: [QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___]
  transformation_configs___JSON: JSON
  condition_expression: QUERY_categorizedBotConfigPolicyService___JexlExpressionConfig___
  condition_expression___JSON: JSON
  match_condition: QUERY_categorizedBotConfigPolicyService___MatchCondition___
  match_condition___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___DomainScope___ {
  domains: [String]
  domains___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___Duration___ {
  seconds: Int
  nanos: Int
}

type QUERY_categorizedBotConfigPolicyService___EdgeAttributionRule___ {
  id: String
  name: String
  version: Int
  description: String
  rule_scope: QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleScope___
  rule_scope___JSON: JSON
  rule_definition: QUERY_categorizedBotConfigPolicyService___EdgeAttributionRuleDefinition___
  rule_definition___JSON: JSON
  rule_status: QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleStatus___
  rule_status___JSON: JSON
  template_id: String
}

type QUERY_categorizedBotConfigPolicyService___EdgeAttributionRuleDefinition___ {
  edge_input_kind: QUERY_categorizedBotConfigPolicyService___EdgeInputKind___
  rule_variables: [QUERY_categorizedBotConfigPolicyService___VariableDerivationMapping___]
  rule_variables___JSON: JSON
  match_condition: QUERY_categorizedBotConfigPolicyService___MatchCondition___
  match_condition___JSON: JSON
  span_attributes: [QUERY_categorizedBotConfigPolicyService___SpanAttributeDecoration___]
  span_attributes___JSON: JSON
  decorations: [QUERY_categorizedBotConfigPolicyService___PayloadDecoration___]
  decorations___JSON: JSON
  custom_fields: QUERY_categorizedBotConfigPolicyService___Struct___
  custom_fields___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EdgeCustomResponse___ {
  id: String
  name: String
  version: Int
  description: String
  rule_scope: QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleScope___
  rule_scope___JSON: JSON
  custom_response: QUERY_categorizedBotConfigPolicyService___CustomResponse___
  custom_response___JSON: JSON
  rule_status: QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleStatus___
  rule_status___JSON: JSON
  template_id: String
  custom_config: QUERY_categorizedBotConfigPolicyService___Struct___
  custom_config___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecision___ {
  edge_decision_type: QUERY_categorizedBotConfigPolicyService___EdgeDecisionType___
  decision_apply_duration: QUERY_categorizedBotConfigPolicyService___Duration___
  decision_apply_duration___JSON: JSON
  decorations: [QUERY_categorizedBotConfigPolicyService___PayloadDecoration___]
  decorations___JSON: JSON
  sampling_rate: Float
  threat_type: String
  span_attributes: [QUERY_categorizedBotConfigPolicyService___SpanAttributeDecoration___]
  span_attributes___JSON: JSON
  edge_decision_targets: [QUERY_categorizedBotConfigPolicyService___EdgeDecisionTarget___]
  edge_decision_targets___JSON: JSON
  rule_info_decorations: [QUERY_categorizedBotConfigPolicyService___RuleInfoDecoration___]
  rule_info_decorations___JSON: JSON
  custom_response: QUERY_categorizedBotConfigPolicyService___EdgeCustomResponse___
  custom_response___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecisionEngineConfig___ {
  id: String
  name: String
  version: Int
  common_variables: [QUERY_categorizedBotConfigPolicyService___VariableDerivationMapping___]
  common_variables___JSON: JSON
  decision_rules: [QUERY_categorizedBotConfigPolicyService___EdgeDecisionRule___]
  decision_rules___JSON: JSON
  decision_specs: [QUERY_categorizedBotConfigPolicyService___EdgeDecisionSpec___]
  decision_specs___JSON: JSON
  disabled: Boolean
  disabled_rule_categories: [QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleCategory___]
  disabled_rule_categories___JSON: JSON
  attribution_rules: [QUERY_categorizedBotConfigPolicyService___EdgeAttributionRule___]
  attribution_rules___JSON: JSON
  default_block_response: QUERY_categorizedBotConfigPolicyService___EdgeCustomResponse___
  default_block_response___JSON: JSON
  custom_config: QUERY_categorizedBotConfigPolicyService___Value___
  custom_config___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecisionRule___ {
  id: String
  name: String
  version: Int
  rule_scope: QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleScope___
  rule_scope___JSON: JSON
  rule_category: QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleCategory___
  rule_status: QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleStatus___
  rule_status___JSON: JSON
  rule_definition: QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleDefinition___
  rule_definition___JSON: JSON
  rule_decision: QUERY_categorizedBotConfigPolicyService___EdgeDecision___
  rule_decision___JSON: JSON
  policy_kind: QUERY_categorizedBotConfigPolicyService___PolicyKind___
  description: String
  template_id: String
  policy_id: String
}

enum QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleCategory___ {
  EDGE_DECISION_RULE_CATEGORY_UNSPECIFIED
  EDGE_DECISION_RULE_CATEGORY_ORIGINAL
  EDGE_DECISION_RULE_CATEGORY_CUSTOM_SIGNATURE
  EDGE_DECISION_RULE_CATEGORY_RATE_LIMIT
  EDGE_DECISION_RULE_CATEGORY_MALICIOUS_SOURCES
  EDGE_DECISION_RULE_CATEGORY_THREAT_ACTOR
  EDGE_DECISION_RULE_CATEGORY_DETECTION_EXCLUSION
  EDGE_DECISION_RULE_CATEGORY_TRACEABLE_CATEGORIZED_BOTS
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleDefinition___ {
  edge_input_kind: QUERY_categorizedBotConfigPolicyService___EdgeInputKind___
  rule_variables: [QUERY_categorizedBotConfigPolicyService___VariableDerivationMapping___]
  rule_variables___JSON: JSON
  attribute_projections: [QUERY_categorizedBotConfigPolicyService___AttributeDerivationMapping___]
  attribute_projections___JSON: JSON
  signature_rule: QUERY_categorizedBotConfigPolicyService___SignatureRule___
  signature_rule___JSON: JSON
  entity_rule: QUERY_categorizedBotConfigPolicyService___EntityRule___
  entity_rule___JSON: JSON
  aggregate_threshold_rule: QUERY_categorizedBotConfigPolicyService___AggregateThresholdRule___
  aggregate_threshold_rule___JSON: JSON
  access_pattern_rule: QUERY_categorizedBotConfigPolicyService___AccessPatternRule___
  access_pattern_rule___JSON: JSON
  logical_rule: QUERY_categorizedBotConfigPolicyService___LogicalRule___
  logical_rule___JSON: JSON
  custom_fields: QUERY_categorizedBotConfigPolicyService___Value___
  custom_fields___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleScope___ {
  scope_conditions: [QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleScopeCondition___]
  scope_conditions___JSON: JSON
  scope_exclusion_conditions: [QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleScopeCondition___]
  scope_exclusion_conditions___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleScopeCondition___ {
  environment_scope: QUERY_categorizedBotConfigPolicyService___EnvironmentScope___
  environment_scope___JSON: JSON
  service_scope: QUERY_categorizedBotConfigPolicyService___ServiceScope___
  service_scope___JSON: JSON
  url_scope: QUERY_categorizedBotConfigPolicyService___UrlScope___
  url_scope___JSON: JSON
  url_regex_scope: QUERY_categorizedBotConfigPolicyService___UrlRegexScope___
  url_regex_scope___JSON: JSON
  http_method_scope: QUERY_categorizedBotConfigPolicyService___HttpMethodScope___
  http_method_scope___JSON: JSON
  match_condition_scope: QUERY_categorizedBotConfigPolicyService___MatchCondition___
  match_condition_scope___JSON: JSON
  domain_scope: QUERY_categorizedBotConfigPolicyService___DomainScope___
  domain_scope___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleStatus___ {
  disabled: Boolean
  internal: Boolean
  ttl: QUERY_categorizedBotConfigPolicyService___ConfigTtl___
  ttl___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleTarget___ {
  edge_decision_rule_category: QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleCategory___
  rule_ids: [String]
  rule_ids___JSON: JSON
  result_attribute_derivations: [QUERY_categorizedBotConfigPolicyService___AttributeDerivationMapping___]
  result_attribute_derivations___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecisionSpec___ {
  id: String
  name: String
  version: Int
  edge_input_kind: QUERY_categorizedBotConfigPolicyService___EdgeInputKind___
  scope: QUERY_categorizedBotConfigPolicyService___EdgeDecisionSpecScope___
  scope___JSON: JSON
  decision_spec_directives: [QUERY_categorizedBotConfigPolicyService___EdgeDecisionSpecDirective___]
  decision_spec_directives___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecisionSpecDirective___ {
  edge_decision: QUERY_categorizedBotConfigPolicyService___EdgeDecision___
  edge_decision___JSON: JSON
  any_rule: Boolean
  all_rules: Boolean
  any_rule_of_type: QUERY_categorizedBotConfigPolicyService___EdgeDecisionType___
  specific_rule_ids: QUERY_categorizedBotConfigPolicyService___StringList___
  specific_rule_ids___JSON: JSON
  decision_tree_jexl_expression: QUERY_categorizedBotConfigPolicyService___JexlExpressionConfig___
  decision_tree_jexl_expression___JSON: JSON
  decision_tree_jexl_script: QUERY_categorizedBotConfigPolicyService___JexlScriptConfig___
  decision_tree_jexl_script___JSON: JSON
  custom_response: QUERY_categorizedBotConfigPolicyService___EdgeCustomResponse___
  custom_response___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecisionSpecScope___ {
  environment: String
}

type QUERY_categorizedBotConfigPolicyService___EdgeDecisionTarget___ {
  edge_decision_type: QUERY_categorizedBotConfigPolicyService___EdgeDecisionType___
  edge_decision_rule_targets: [QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleTarget___]
  edge_decision_rule_targets___JSON: JSON
}

enum QUERY_categorizedBotConfigPolicyService___EdgeDecisionType___ {
  EDGE_DECISION_TYPE_UNSPECIFIED
  EDGE_DECISION_TYPE_ALLOW
  EDGE_DECISION_TYPE_BLOCK
  EDGE_DECISION_TYPE_CAPTCHA
  EDGE_DECISION_TYPE_MARK_FOR_TESTING
  EDGE_DECISION_TYPE_EXCLUDE
  EDGE_DECISION_TYPE_ALERT
}

enum QUERY_categorizedBotConfigPolicyService___EdgeInputKind___ {
  EDGE_INPUT_KIND_UNSPECIFIED
  EDGE_INPUT_KIND_HTTP_REQUEST
  EDGE_INPUT_KIND_CLIENT_FINGERPRINT_DATA
}

enum QUERY_categorizedBotConfigPolicyService___EdgeRuleLogicalOperator___ {
  EDGE_RULE_LOGICAL_OPERATOR_UNSPECIFIED
  EDGE_RULE_LOGICAL_OPERATOR_AND
  EDGE_RULE_LOGICAL_OPERATOR_OR
  EDGE_RULE_LOGICAL_OPERATOR_NOT
}

type QUERY_categorizedBotConfigPolicyService___EntityRule___ {
  entity_data: [QUERY_categorizedBotConfigPolicyService___EntityRuleData___]
  entity_data___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EntityRuleData___ {
  entity: QUERY_categorizedBotConfigPolicyService___DataModelEntity___
  entity___JSON: JSON
  match_condition: QUERY_categorizedBotConfigPolicyService___MatchCondition___
  match_condition___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___EnvironmentScope___ {
  environment_ids: [String]
  environment_ids___JSON: JSON
}

enum QUERY_categorizedBotConfigPolicyService___FieldType___ {
  FIELD_TYPE_UNSPECIFIED
  FIELD_TYPE_STR
  FIELD_TYPE_BOOL
  FIELD_TYPE_LONG
  FIELD_TYPE_DOUBLE
  FIELD_TYPE_LIST
  FIELD_TYPE_MAP
  FIELD_TYPE_TIMESTAMP
  FIELD_TYPE_BINARY
  FIELD_TYPE_INT
}

type QUERY_categorizedBotConfigPolicyService___GenericMatchCondition___ {
  jexl_expression: QUERY_categorizedBotConfigPolicyService___JexlExpressionConfig___
  jexl_expression___JSON: JSON
  jexl_script: QUERY_categorizedBotConfigPolicyService___JexlScriptConfig___
  jexl_script___JSON: JSON
}

input QUERY_categorizedBotConfigPolicyService___GetCategorizedBotConfigPoliciesRequest___Input {
  categorized_bot_config_policy_filter: QUERY_categorizedBotConfigPolicyService___CategorizedBotConfigPolicyFilter___Input
  categorized_bot_config_policy_filter___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___GetCategorizedBotConfigPoliciesResponse___ {
  categorized_bot_config_policies: [QUERY_categorizedBotConfigPolicyService___CategorizedBotConfigPolicy___]
  categorized_bot_config_policies___JSON: JSON
}

input QUERY_categorizedBotConfigPolicyService___GetCategorizedBotConfigPolicyEdgeDecisionRulesRequest___Input {
  categorized_bot_config_policy_edge_decision_rules_filter: QUERY_categorizedBotConfigPolicyService___CategorizedBotConfigPolicyEdgeDecisionRulesFilter___Input
  categorized_bot_config_policy_edge_decision_rules_filter___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___GetCategorizedBotConfigPolicyEdgeDecisionRulesResponse___ {
  edge_decision_engine_config: QUERY_categorizedBotConfigPolicyService___EdgeDecisionEngineConfig___
  edge_decision_engine_config___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___HttpMethodScope___ {
  http_methods: [String]
  http_methods___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___JexlExpressionConfig___ {
  jexl_expression: String
}

type QUERY_categorizedBotConfigPolicyService___JexlScriptConfig___ {
  jexl_script: String
}

type QUERY_categorizedBotConfigPolicyService___ListValue___ {
  values: [QUERY_categorizedBotConfigPolicyService___Value___]
  values___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___LogicalMatchCondition___ {
  operator: QUERY_categorizedBotConfigPolicyService___LogicalMatchOperator___
  conditions: [QUERY_categorizedBotConfigPolicyService___MatchCondition___]
  conditions___JSON: JSON
}

enum QUERY_categorizedBotConfigPolicyService___LogicalMatchOperator___ {
  LOGICAL_MATCH_OPERATOR_UNSPECIFIED
  LOGICAL_MATCH_OPERATOR_AND
  LOGICAL_MATCH_OPERATOR_OR
}

type QUERY_categorizedBotConfigPolicyService___LogicalRule___ {
  operator: QUERY_categorizedBotConfigPolicyService___EdgeRuleLogicalOperator___
  rules: [QUERY_categorizedBotConfigPolicyService___EdgeDecisionRuleDefinition___]
  rules___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___MatchCondition___ {
  generic_match_condition: QUERY_categorizedBotConfigPolicyService___GenericMatchCondition___
  generic_match_condition___JSON: JSON
  structured_match_condition: QUERY_categorizedBotConfigPolicyService___StructuredMatchCondition___
  structured_match_condition___JSON: JSON
  logical_match_condition: QUERY_categorizedBotConfigPolicyService___LogicalMatchCondition___
  logical_match_condition___JSON: JSON
  negate: Boolean
}

enum QUERY_categorizedBotConfigPolicyService___MatchOperator___ {
  MATCH_OPERATOR_UNSPECIFIED
  MATCH_OPERATOR_IN
  MATCH_OPERATOR_NOT_IN
  MATCH_OPERATOR_LIKE
  MATCH_OPERATOR_NOT_LIKE
  MATCH_OPERATOR_EQ
  MATCH_OPERATOR_NOT_EQ
  MATCH_OPERATOR_GT
  MATCH_OPERATOR_LT
  MATCH_OPERATOR_GTE
  MATCH_OPERATOR_LTE
  MATCH_OPERATOR_BETWEEN
  MATCH_OPERATOR_CONTAINS
  MATCH_OPERATOR_STARTS_WITH
  MATCH_OPERATOR_ENDS_WITH
  MATCH_OPERATOR_EQ_IGNORE_CASE
}

enum QUERY_categorizedBotConfigPolicyService___NullValue___ {
  NULL_VALUE
}

type QUERY_categorizedBotConfigPolicyService___PayloadDecoration___ {
  request_header_injection: QUERY_categorizedBotConfigPolicyService___RequestHeaderInjection___
  request_header_injection___JSON: JSON
  response_header_injection: QUERY_categorizedBotConfigPolicyService___ResponseHeaderInjection___
  response_header_injection___JSON: JSON
}

enum QUERY_categorizedBotConfigPolicyService___PolicyKind___ {
  POLICY_KIND_UNSPECIFIED
  POLICY_KIND_WAF
  POLICY_KIND_BOT_MITIGATION
  POLICY_KIND_FRAUD_PROTECTION
  POLICY_KIND_CUSTOM
}

type QUERY_categorizedBotConfigPolicyService___RangeThreshold___ {
  lower_bound: Float
  upper_bound: Float
}

type QUERY_categorizedBotConfigPolicyService___RangeValue___ {
  lower: Float
  upper: Float
}

type QUERY_categorizedBotConfigPolicyService___RegexConfig___ {
  regex: String
  split_regex: String
  group_indices: [Int]
  group_indices___JSON: JSON
  join_delimiter: String
  value_transformation: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  value_transformation___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___RequestHeaderInjection___ {
  header_key: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  header_key___JSON: JSON
  header_value: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  header_value___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___RequestInvocation___ {
  request_invocation_id: String
  match_condition: QUERY_categorizedBotConfigPolicyService___MatchCondition___
  match_condition___JSON: JSON
  weight: Int
  median_percent: Float
}

type QUERY_categorizedBotConfigPolicyService___ResponseHeader___ {
  header_key: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  header_key___JSON: JSON
  header_value: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  header_value___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___ResponseHeaderInjection___ {
  header_key: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  header_key___JSON: JSON
  header_value: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  header_value___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___RuleInfoDecoration___ {
  rule_info_key: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  rule_info_key___JSON: JSON
  rule_info_value: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  rule_info_value___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___ServiceScope___ {
  service_names: [String]
  service_names___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___SignatureRule___ {
  match_condition: QUERY_categorizedBotConfigPolicyService___MatchCondition___
  match_condition___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___SpanAttributeDecoration___ {
  span_attribute_key: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  span_attribute_key___JSON: JSON
  span_attribute_value: QUERY_categorizedBotConfigPolicyService___DataTransformationConfig___
  span_attribute_value___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___StringList___ {
  values: [String]
  values___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___Struct___ {
  fields: [QUERY_categorizedBotConfigPolicyService_google_protobuf_Struct_FieldsEntry___fields___MapOutput]
  fields___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___StructuredMatchCondition___ {
  lhs: QUERY_categorizedBotConfigPolicyService___AttributeDerivationMapping___
  lhs___JSON: JSON
  unary_operator: QUERY_categorizedBotConfigPolicyService___UnaryOperator___
  binary_operator: QUERY_categorizedBotConfigPolicyService___BinaryOperator___
  binary_operator___JSON: JSON
}

enum QUERY_categorizedBotConfigPolicyService___ThresholdOperator___ {
  THRESHOLD_OPERATOR_UNSPECIFIED
  THRESHOLD_OPERATOR_ABOVE
  THRESHOLD_OPERATOR_BELOW
  THRESHOLD_OPERATOR_ABOVE_OR_BELOW
}

type QUERY_categorizedBotConfigPolicyService___TimeRangeValue___ {
  start: QUERY_categorizedBotConfigPolicyService___Timestamp___
  start___JSON: JSON
  end: QUERY_categorizedBotConfigPolicyService___Timestamp___
  end___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___Timestamp___ {
  seconds: Int
  nanos: Int
}

type QUERY_categorizedBotConfigPolicyService___ToleranceThreshold___ {
  reference_value: Float
  percentage_tolerance: Float
  absolute_tolerance: Float
}

enum QUERY_categorizedBotConfigPolicyService___UnaryOperator___ {
  UNARY_OPERATOR_UNSPECIFIED
  UNARY_OPERATOR_IS_NULL
  UNARY_OPERATOR_IS_NOT_NULL
  UNARY_OPERATOR_IS_EMPTY
  UNARY_OPERATOR_IS_NOT_EMPTY
}

type QUERY_categorizedBotConfigPolicyService___UrlRegexScope___ {
  url_regexes: [String]
  url_regexes___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___UrlScope___ {
  urls: [String]
  urls___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___Value___ {
  null_value: QUERY_categorizedBotConfigPolicyService___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: QUERY_categorizedBotConfigPolicyService___Struct___
  struct_value___JSON: JSON
  list_value: QUERY_categorizedBotConfigPolicyService___ListValue___
  list_value___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService___ValueAggregateThreshold___ {
  dimension: QUERY_categorizedBotConfigPolicyService___AttributeDerivationMapping___
  dimension___JSON: JSON
  aggregation_type: QUERY_categorizedBotConfigPolicyService___AggregationType___
  static_threshold: Float
  range_threshold: QUERY_categorizedBotConfigPolicyService___RangeThreshold___
  range_threshold___JSON: JSON
  tolerance_threshold: QUERY_categorizedBotConfigPolicyService___ToleranceThreshold___
  tolerance_threshold___JSON: JSON
  threshold_operator: QUERY_categorizedBotConfigPolicyService___ThresholdOperator___
  disable_estimated_aggregate: Boolean
}

type QUERY_categorizedBotConfigPolicyService___VariableDerivationMapping___ {
  name: String
  rules: [QUERY_categorizedBotConfigPolicyService___DerivationRule___]
  rules___JSON: JSON
}

type QUERY_categorizedBotConfigPolicyService_google_protobuf_Struct_FieldsEntry___fields___MapOutput {
  key: String
  value: QUERY_categorizedBotConfigPolicyService___Value___
}

type QUERY_categorizedBotConfigService___CategorizedBotConfig___ {
  id: String
  categorized_bot_details: QUERY_categorizedBotConfigService___CategorizedBotDetails___
  categorized_bot_details___JSON: JSON
}

type QUERY_categorizedBotConfigService___CategorizedBotDetails___ {
  name: String
  description: String
  categorized_bot_signature_rule: QUERY_categorizedBotConfigService___CategorizedBotSignatureRule___
  categorized_bot_signature_rule___JSON: JSON
  bot_category: String
  bot_sub_category: String
}

input QUERY_categorizedBotConfigService___CategorizedBotRequestFilter___Input {
  bot_ids: [String]
  bot_ids___JSON: JSON
  category: [String]
  category___JSON: JSON
  sub_category: [String]
  sub_category___JSON: JSON
}

type QUERY_categorizedBotConfigService___CategorizedBotSignatureRule___ {
  match_condition: QUERY_categorizedBotConfigService___MatchCondition___
  match_condition___JSON: JSON
}

type QUERY_categorizedBotConfigService___ConditionalConfig___ {
  bool_expression: String
  true_transformation: QUERY_categorizedBotConfigService___DataTransformationConfig___
  true_transformation___JSON: JSON
  false_transformation: QUERY_categorizedBotConfigService___DataTransformationConfig___
  false_transformation___JSON: JSON
}

type QUERY_categorizedBotConfigService___DataTransformationConfig___ {
  static_value: QUERY_categorizedBotConfigService___Value___
  static_value___JSON: JSON
  jexl_expression: QUERY_categorizedBotConfigService___JexlExpressionConfig___
  jexl_expression___JSON: JSON
  jexl_script: QUERY_categorizedBotConfigService___JexlScriptConfig___
  jexl_script___JSON: JSON
  regex: QUERY_categorizedBotConfigService___RegexConfig___
  regex___JSON: JSON
  conditional: QUERY_categorizedBotConfigService___ConditionalConfig___
  conditional___JSON: JSON
  output_type: QUERY_categorizedBotConfigService___FieldType___
}

type QUERY_categorizedBotConfigService___DerivationRule___ {
  transformation_config: QUERY_categorizedBotConfigService___DataTransformationConfig___
  transformation_config___JSON: JSON
  transformation_configs: [QUERY_categorizedBotConfigService___DataTransformationConfig___]
  transformation_configs___JSON: JSON
  condition_expression: QUERY_categorizedBotConfigService___JexlExpressionConfig___
  condition_expression___JSON: JSON
  match_condition: QUERY_categorizedBotConfigService___MatchCondition___
  match_condition___JSON: JSON
}

enum QUERY_categorizedBotConfigService___FieldType___ {
  FIELD_TYPE_UNSPECIFIED
  FIELD_TYPE_STR
  FIELD_TYPE_BOOL
  FIELD_TYPE_LONG
  FIELD_TYPE_DOUBLE
  FIELD_TYPE_LIST
  FIELD_TYPE_MAP
  FIELD_TYPE_TIMESTAMP
  FIELD_TYPE_BINARY
  FIELD_TYPE_INT
}

type QUERY_categorizedBotConfigService___GenericMatchCondition___ {
  key_condition: QUERY_categorizedBotConfigService___KeyCondition___
  key_condition___JSON: JSON
  value_match_condition: QUERY_categorizedBotConfigService___MatchOperatorCondition___
  value_match_condition___JSON: JSON
}

input QUERY_categorizedBotConfigService___GetCategorizedBotConfigEdgeDecisionVariablesRequest___Input {
  """Placeholder field for empty messages"""
  placeholder: String
}

type QUERY_categorizedBotConfigService___GetCategorizedBotConfigEdgeDecisionVariablesResponse___ {
  variable_derivation_mappings: [QUERY_categorizedBotConfigService___VariableDerivationMapping___]
  variable_derivation_mappings___JSON: JSON
}

input QUERY_categorizedBotConfigService___GetCategorizedBotConfigsRequest___Input {
  bot_request_filter: QUERY_categorizedBotConfigService___CategorizedBotRequestFilter___Input
  bot_request_filter___JSON: JSON
}

type QUERY_categorizedBotConfigService___GetCategorizedBotConfigsResponse___ {
  bot_configs: [QUERY_categorizedBotConfigService___CategorizedBotConfig___]
  bot_configs___JSON: JSON
}

type QUERY_categorizedBotConfigService___IpAddressCondition___ {
  ipv4_cidr_ip_ranges: [String]
  ipv4_cidr_ip_ranges___JSON: JSON
  ipv6_cidr_ip_ranges: [String]
  ipv6_cidr_ip_ranges___JSON: JSON
}

type QUERY_categorizedBotConfigService___IpMetadataMatchConditon___ {
  ip_address_condition: QUERY_categorizedBotConfigService___IpAddressCondition___
  ip_address_condition___JSON: JSON
}

type QUERY_categorizedBotConfigService___JexlExpressionConfig___ {
  jexl_expression: String
}

type QUERY_categorizedBotConfigService___JexlScriptConfig___ {
  jexl_script: String
}

type QUERY_categorizedBotConfigService___KeyCondition___ {
  key_type: QUERY_categorizedBotConfigService___KeyType___
  key_match_operator: QUERY_categorizedBotConfigService___MatchOperatorCondition___
  key_match_operator___JSON: JSON
}

enum QUERY_categorizedBotConfigService___KeyType___ {
  KEY_TYPE_UNSPECIFIED
  KEY_TYPE_HEADER
}

type QUERY_categorizedBotConfigService___ListValue___ {
  values: [QUERY_categorizedBotConfigService___Value___]
  values___JSON: JSON
}

type QUERY_categorizedBotConfigService___LogicalMatchCondition___ {
  operator: QUERY_categorizedBotConfigService___LogicalMatchOperator___
  left_operand: QUERY_categorizedBotConfigService___MatchCondition___
  left_operand___JSON: JSON
  right_operand: QUERY_categorizedBotConfigService___MatchCondition___
  right_operand___JSON: JSON
}

enum QUERY_categorizedBotConfigService___LogicalMatchOperator___ {
  LOGICAL_MATCH_OPERATOR_UNSPECIFIED
  LOGICAL_MATCH_OPERATOR_AND
  LOGICAL_MATCH_OPERATOR_OR
}

type QUERY_categorizedBotConfigService___MatchCondition___ {
  generic_match_condition: QUERY_categorizedBotConfigService___GenericMatchCondition___
  generic_match_condition___JSON: JSON
  ip_metadata_match_condition: QUERY_categorizedBotConfigService___IpMetadataMatchConditon___
  ip_metadata_match_condition___JSON: JSON
  logical_match_condition: QUERY_categorizedBotConfigService___LogicalMatchCondition___
  logical_match_condition___JSON: JSON
}

enum QUERY_categorizedBotConfigService___MatchOperator___ {
  MATCH_OPERATOR_UNSPECIFIED
  MATCH_OPERATOR_EQUALS
  MATCH_OPERATOR_NOT_EQUAL
  MATCH_OPERATOR_MATCHES_REGEX
  MATCH_OPERATOR_NOT_MATCH_REGEX
  MATCH_OPERATOR_CONTAINS
  MATCH_OPERATOR_NOT_CONTAINS
}

type QUERY_categorizedBotConfigService___MatchOperatorCondition___ {
  match_operator: QUERY_categorizedBotConfigService___MatchOperator___
  match_value: QUERY_categorizedBotConfigService___Value___
  match_value___JSON: JSON
}

enum QUERY_categorizedBotConfigService___NullValue___ {
  NULL_VALUE
}

type QUERY_categorizedBotConfigService___RegexConfig___ {
  regex: String
  split_regex: String
  group_indices: [Int]
  group_indices___JSON: JSON
  join_delimiter: String
  value_transformation: QUERY_categorizedBotConfigService___DataTransformationConfig___
  value_transformation___JSON: JSON
}

type QUERY_categorizedBotConfigService___Struct___ {
  fields: [QUERY_categorizedBotConfigService_google_protobuf_Struct_FieldsEntry___fields___MapOutput]
  fields___JSON: JSON
}

type QUERY_categorizedBotConfigService___Value___ {
  null_value: QUERY_categorizedBotConfigService___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: QUERY_categorizedBotConfigService___Struct___
  struct_value___JSON: JSON
  list_value: QUERY_categorizedBotConfigService___ListValue___
  list_value___JSON: JSON
}

type QUERY_categorizedBotConfigService___VariableDerivationMapping___ {
  name: String
  rules: [QUERY_categorizedBotConfigService___DerivationRule___]
  rules___JSON: JSON
}

type QUERY_categorizedBotConfigService_google_protobuf_Struct_FieldsEntry___fields___MapOutput {
  key: String
  value: QUERY_categorizedBotConfigService___Value___
}

type QUERY_edgeDecisionConfig___AccessPatternRule___ {
  correlation_key: QUERY_edgeDecisionConfig___CorrelationKey___
  correlation_key___JSON: JSON
  filter: QUERY_edgeDecisionConfig___MatchCondition___
  filter___JSON: JSON
  target_request: QUERY_edgeDecisionConfig___MatchCondition___
  target_request___JSON: JSON
  pre_requests: [QUERY_edgeDecisionConfig___RequestInvocation___]
  pre_requests___JSON: JSON
  time_window: QUERY_edgeDecisionConfig___Duration___
  time_window___JSON: JSON
  check_for_any_pre_requests: Boolean
  trigger_on_all_missing: Boolean
  trigger_on_any_missing: Boolean
  trigger_on_score: Float
}

type QUERY_edgeDecisionConfig___AggregateThresholdRule___ {
  match_condition: QUERY_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
  group_by_dimensions: [QUERY_edgeDecisionConfig___AttributeDerivationMapping___]
  group_by_dimensions___JSON: JSON
  aggregate_without_grouping: Boolean
  time_window: QUERY_edgeDecisionConfig___Duration___
  time_window___JSON: JSON
  value_aggregate_threshold: QUERY_edgeDecisionConfig___ValueAggregateThreshold___
  value_aggregate_threshold___JSON: JSON
}

enum QUERY_edgeDecisionConfig___AggregationType___ {
  AGGREGATION_TYPE_UNSPECIFIED
  AGGREGATION_TYPE_COUNT
  AGGREGATION_TYPE_DISTINCT_COUNT
  AGGREGATION_TYPE_SUM
  AGGREGATION_TYPE_AVG
  AGGREGATION_TYPE_MAX
  AGGREGATION_TYPE_MIN
}

type QUERY_edgeDecisionConfig___AttributeDerivationMapping___ {
  name: String
  type: QUERY_edgeDecisionConfig___FieldType___
  rules: [QUERY_edgeDecisionConfig___DerivationRule___]
  rules___JSON: JSON
}

type QUERY_edgeDecisionConfig___BinaryOperator___ {
  list_value: QUERY_edgeDecisionConfig___ListValue___
  list_value___JSON: JSON
  regex: String
  bloom_filter: String
  number_value: Float
  bool_value: Boolean
  null_value: QUERY_edgeDecisionConfig___NullValue___
  string_value: String
  range_value: QUERY_edgeDecisionConfig___RangeValue___
  range_value___JSON: JSON
  time_range_value: QUERY_edgeDecisionConfig___TimeRangeValue___
  time_range_value___JSON: JSON
  match_operator: QUERY_edgeDecisionConfig___MatchOperator___
}

type QUERY_edgeDecisionConfig___ConditionalConfig___ {
  bool_expression: String
  true_transformation: QUERY_edgeDecisionConfig___DataTransformationConfig___
  true_transformation___JSON: JSON
  false_transformation: QUERY_edgeDecisionConfig___DataTransformationConfig___
  false_transformation___JSON: JSON
}

type QUERY_edgeDecisionConfig___ConfigTtl___ {
  created_at: QUERY_edgeDecisionConfig___Timestamp___
  created_at___JSON: JSON
  expires_at: QUERY_edgeDecisionConfig___Timestamp___
  expires_at___JSON: JSON
}

type QUERY_edgeDecisionConfig___CorrelationKey___ {
  attributes: [QUERY_edgeDecisionConfig___AttributeDerivationMapping___]
  attributes___JSON: JSON
}

type QUERY_edgeDecisionConfig___CustomResponse___ {
  match_condition: QUERY_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
  variables: [QUERY_edgeDecisionConfig___VariableDerivationMapping___]
  variables___JSON: JSON
  status_code: QUERY_edgeDecisionConfig___DataTransformationConfig___
  status_code___JSON: JSON
  response_headers: [QUERY_edgeDecisionConfig___ResponseHeader___]
  response_headers___JSON: JSON
  response_body: QUERY_edgeDecisionConfig___DataTransformationConfig___
  response_body___JSON: JSON
}

type QUERY_edgeDecisionConfig___DataModelEntity___ {
  id: String
  type: String
  name: String
  metadata_attributes: [QUERY_edgeDecisionConfig___AttributeDerivationMapping___]
  metadata_attributes___JSON: JSON
}

type QUERY_edgeDecisionConfig___DataTransformationConfig___ {
  static_value: QUERY_edgeDecisionConfig___Value___
  static_value___JSON: JSON
  jexl_expression: QUERY_edgeDecisionConfig___JexlExpressionConfig___
  jexl_expression___JSON: JSON
  jexl_script: QUERY_edgeDecisionConfig___JexlScriptConfig___
  jexl_script___JSON: JSON
  regex: QUERY_edgeDecisionConfig___RegexConfig___
  regex___JSON: JSON
  conditional: QUERY_edgeDecisionConfig___ConditionalConfig___
  conditional___JSON: JSON
  output_type: QUERY_edgeDecisionConfig___FieldType___
}

type QUERY_edgeDecisionConfig___DerivationRule___ {
  transformation_config: QUERY_edgeDecisionConfig___DataTransformationConfig___
  transformation_config___JSON: JSON
  transformation_configs: [QUERY_edgeDecisionConfig___DataTransformationConfig___]
  transformation_configs___JSON: JSON
  condition_expression: QUERY_edgeDecisionConfig___JexlExpressionConfig___
  condition_expression___JSON: JSON
  match_condition: QUERY_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
}

type QUERY_edgeDecisionConfig___DomainScope___ {
  domains: [String]
  domains___JSON: JSON
}

type QUERY_edgeDecisionConfig___Duration___ {
  seconds: Int
  nanos: Int
}

type QUERY_edgeDecisionConfig___EdgeAttributionRule___ {
  id: String
  name: String
  version: Int
  description: String
  rule_scope: QUERY_edgeDecisionConfig___EdgeDecisionRuleScope___
  rule_scope___JSON: JSON
  rule_definition: QUERY_edgeDecisionConfig___EdgeAttributionRuleDefinition___
  rule_definition___JSON: JSON
  rule_status: QUERY_edgeDecisionConfig___EdgeDecisionRuleStatus___
  rule_status___JSON: JSON
  template_id: String
}

type QUERY_edgeDecisionConfig___EdgeAttributionRuleDefinition___ {
  edge_input_kind: QUERY_edgeDecisionConfig___EdgeInputKind___
  rule_variables: [QUERY_edgeDecisionConfig___VariableDerivationMapping___]
  rule_variables___JSON: JSON
  match_condition: QUERY_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
  span_attributes: [QUERY_edgeDecisionConfig___SpanAttributeDecoration___]
  span_attributes___JSON: JSON
  decorations: [QUERY_edgeDecisionConfig___PayloadDecoration___]
  decorations___JSON: JSON
  custom_fields: QUERY_edgeDecisionConfig___Struct___
  custom_fields___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeCustomResponse___ {
  id: String
  name: String
  version: Int
  description: String
  rule_scope: QUERY_edgeDecisionConfig___EdgeDecisionRuleScope___
  rule_scope___JSON: JSON
  custom_response: QUERY_edgeDecisionConfig___CustomResponse___
  custom_response___JSON: JSON
  rule_status: QUERY_edgeDecisionConfig___EdgeDecisionRuleStatus___
  rule_status___JSON: JSON
  template_id: String
  custom_config: QUERY_edgeDecisionConfig___Struct___
  custom_config___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeDecision___ {
  edge_decision_type: QUERY_edgeDecisionConfig___EdgeDecisionType___
  decision_apply_duration: QUERY_edgeDecisionConfig___Duration___
  decision_apply_duration___JSON: JSON
  decorations: [QUERY_edgeDecisionConfig___PayloadDecoration___]
  decorations___JSON: JSON
  sampling_rate: Float
  threat_type: String
  span_attributes: [QUERY_edgeDecisionConfig___SpanAttributeDecoration___]
  span_attributes___JSON: JSON
  edge_decision_targets: [QUERY_edgeDecisionConfig___EdgeDecisionTarget___]
  edge_decision_targets___JSON: JSON
  rule_info_decorations: [QUERY_edgeDecisionConfig___RuleInfoDecoration___]
  rule_info_decorations___JSON: JSON
  custom_response: QUERY_edgeDecisionConfig___EdgeCustomResponse___
  custom_response___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeDecisionEngineConfig___ {
  id: String
  name: String
  version: Int
  common_variables: [QUERY_edgeDecisionConfig___VariableDerivationMapping___]
  common_variables___JSON: JSON
  decision_rules: [QUERY_edgeDecisionConfig___EdgeDecisionRule___]
  decision_rules___JSON: JSON
  decision_specs: [QUERY_edgeDecisionConfig___EdgeDecisionSpec___]
  decision_specs___JSON: JSON
  disabled: Boolean
  disabled_rule_categories: [QUERY_edgeDecisionConfig___EdgeDecisionRuleCategory___]
  disabled_rule_categories___JSON: JSON
  attribution_rules: [QUERY_edgeDecisionConfig___EdgeAttributionRule___]
  attribution_rules___JSON: JSON
  default_block_response: QUERY_edgeDecisionConfig___EdgeCustomResponse___
  default_block_response___JSON: JSON
  custom_config: QUERY_edgeDecisionConfig___Value___
  custom_config___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeDecisionRule___ {
  id: String
  name: String
  version: Int
  rule_scope: QUERY_edgeDecisionConfig___EdgeDecisionRuleScope___
  rule_scope___JSON: JSON
  rule_category: QUERY_edgeDecisionConfig___EdgeDecisionRuleCategory___
  rule_status: QUERY_edgeDecisionConfig___EdgeDecisionRuleStatus___
  rule_status___JSON: JSON
  rule_definition: QUERY_edgeDecisionConfig___EdgeDecisionRuleDefinition___
  rule_definition___JSON: JSON
  rule_decision: QUERY_edgeDecisionConfig___EdgeDecision___
  rule_decision___JSON: JSON
  policy_kind: QUERY_edgeDecisionConfig___PolicyKind___
  description: String
  template_id: String
  policy_id: String
}

enum QUERY_edgeDecisionConfig___EdgeDecisionRuleCategory___ {
  EDGE_DECISION_RULE_CATEGORY_UNSPECIFIED
  EDGE_DECISION_RULE_CATEGORY_ORIGINAL
  EDGE_DECISION_RULE_CATEGORY_CUSTOM_SIGNATURE
  EDGE_DECISION_RULE_CATEGORY_RATE_LIMIT
  EDGE_DECISION_RULE_CATEGORY_MALICIOUS_SOURCES
  EDGE_DECISION_RULE_CATEGORY_THREAT_ACTOR
  EDGE_DECISION_RULE_CATEGORY_DETECTION_EXCLUSION
  EDGE_DECISION_RULE_CATEGORY_TRACEABLE_CATEGORIZED_BOTS
}

input QUERY_edgeDecisionConfig___EdgeDecisionRuleCategoryFilter___Input {
  edge_decision_rule_categories: [QUERY_edgeDecisionConfig___EdgeDecisionRuleCategory___]
  edge_decision_rule_categories___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeDecisionRuleDefinition___ {
  edge_input_kind: QUERY_edgeDecisionConfig___EdgeInputKind___
  rule_variables: [QUERY_edgeDecisionConfig___VariableDerivationMapping___]
  rule_variables___JSON: JSON
  attribute_projections: [QUERY_edgeDecisionConfig___AttributeDerivationMapping___]
  attribute_projections___JSON: JSON
  signature_rule: QUERY_edgeDecisionConfig___SignatureRule___
  signature_rule___JSON: JSON
  entity_rule: QUERY_edgeDecisionConfig___EntityRule___
  entity_rule___JSON: JSON
  aggregate_threshold_rule: QUERY_edgeDecisionConfig___AggregateThresholdRule___
  aggregate_threshold_rule___JSON: JSON
  access_pattern_rule: QUERY_edgeDecisionConfig___AccessPatternRule___
  access_pattern_rule___JSON: JSON
  logical_rule: QUERY_edgeDecisionConfig___LogicalRule___
  logical_rule___JSON: JSON
  custom_fields: QUERY_edgeDecisionConfig___Value___
  custom_fields___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeDecisionRuleScope___ {
  scope_conditions: [QUERY_edgeDecisionConfig___EdgeDecisionRuleScopeCondition___]
  scope_conditions___JSON: JSON
  scope_exclusion_conditions: [QUERY_edgeDecisionConfig___EdgeDecisionRuleScopeCondition___]
  scope_exclusion_conditions___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeDecisionRuleScopeCondition___ {
  environment_scope: QUERY_edgeDecisionConfig___EnvironmentScope___
  environment_scope___JSON: JSON
  service_scope: QUERY_edgeDecisionConfig___ServiceScope___
  service_scope___JSON: JSON
  url_scope: QUERY_edgeDecisionConfig___UrlScope___
  url_scope___JSON: JSON
  url_regex_scope: QUERY_edgeDecisionConfig___UrlRegexScope___
  url_regex_scope___JSON: JSON
  http_method_scope: QUERY_edgeDecisionConfig___HttpMethodScope___
  http_method_scope___JSON: JSON
  match_condition_scope: QUERY_edgeDecisionConfig___MatchCondition___
  match_condition_scope___JSON: JSON
  domain_scope: QUERY_edgeDecisionConfig___DomainScope___
  domain_scope___JSON: JSON
}

input QUERY_edgeDecisionConfig___EdgeDecisionRuleScopeFilter___Input {
  environment_scope: QUERY_edgeDecisionConfig___EnvironmentScope___Input
  environment_scope___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeDecisionRuleStatus___ {
  disabled: Boolean
  internal: Boolean
  ttl: QUERY_edgeDecisionConfig___ConfigTtl___
  ttl___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeDecisionRuleTarget___ {
  edge_decision_rule_category: QUERY_edgeDecisionConfig___EdgeDecisionRuleCategory___
  rule_ids: [String]
  rule_ids___JSON: JSON
  result_attribute_derivations: [QUERY_edgeDecisionConfig___AttributeDerivationMapping___]
  result_attribute_derivations___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeDecisionSpec___ {
  id: String
  name: String
  version: Int
  edge_input_kind: QUERY_edgeDecisionConfig___EdgeInputKind___
  scope: QUERY_edgeDecisionConfig___EdgeDecisionSpecScope___
  scope___JSON: JSON
  decision_spec_directives: [QUERY_edgeDecisionConfig___EdgeDecisionSpecDirective___]
  decision_spec_directives___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeDecisionSpecDirective___ {
  edge_decision: QUERY_edgeDecisionConfig___EdgeDecision___
  edge_decision___JSON: JSON
  any_rule: Boolean
  all_rules: Boolean
  any_rule_of_type: QUERY_edgeDecisionConfig___EdgeDecisionType___
  specific_rule_ids: QUERY_edgeDecisionConfig___StringList___
  specific_rule_ids___JSON: JSON
  decision_tree_jexl_expression: QUERY_edgeDecisionConfig___JexlExpressionConfig___
  decision_tree_jexl_expression___JSON: JSON
  decision_tree_jexl_script: QUERY_edgeDecisionConfig___JexlScriptConfig___
  decision_tree_jexl_script___JSON: JSON
  custom_response: QUERY_edgeDecisionConfig___EdgeCustomResponse___
  custom_response___JSON: JSON
}

type QUERY_edgeDecisionConfig___EdgeDecisionSpecScope___ {
  environment: String
}

type QUERY_edgeDecisionConfig___EdgeDecisionTarget___ {
  edge_decision_type: QUERY_edgeDecisionConfig___EdgeDecisionType___
  edge_decision_rule_targets: [QUERY_edgeDecisionConfig___EdgeDecisionRuleTarget___]
  edge_decision_rule_targets___JSON: JSON
}

enum QUERY_edgeDecisionConfig___EdgeDecisionType___ {
  EDGE_DECISION_TYPE_UNSPECIFIED
  EDGE_DECISION_TYPE_ALLOW
  EDGE_DECISION_TYPE_BLOCK
  EDGE_DECISION_TYPE_CAPTCHA
  EDGE_DECISION_TYPE_MARK_FOR_TESTING
  EDGE_DECISION_TYPE_EXCLUDE
  EDGE_DECISION_TYPE_ALERT
}

enum QUERY_edgeDecisionConfig___EdgeInputKind___ {
  EDGE_INPUT_KIND_UNSPECIFIED
  EDGE_INPUT_KIND_HTTP_REQUEST
  EDGE_INPUT_KIND_CLIENT_FINGERPRINT_DATA
}

enum QUERY_edgeDecisionConfig___EdgeRuleLogicalOperator___ {
  EDGE_RULE_LOGICAL_OPERATOR_UNSPECIFIED
  EDGE_RULE_LOGICAL_OPERATOR_AND
  EDGE_RULE_LOGICAL_OPERATOR_OR
  EDGE_RULE_LOGICAL_OPERATOR_NOT
}

type QUERY_edgeDecisionConfig___EntityRule___ {
  entity_data: [QUERY_edgeDecisionConfig___EntityRuleData___]
  entity_data___JSON: JSON
}

type QUERY_edgeDecisionConfig___EntityRuleData___ {
  entity: QUERY_edgeDecisionConfig___DataModelEntity___
  entity___JSON: JSON
  match_condition: QUERY_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
}

type QUERY_edgeDecisionConfig___EnvironmentScope___ {
  environments: [String]
  environments___JSON: JSON
}

input QUERY_edgeDecisionConfig___EnvironmentScope___Input {
  environments: [String]
  environments___JSON: JSON
}

enum QUERY_edgeDecisionConfig___FieldType___ {
  FIELD_TYPE_UNSPECIFIED
  FIELD_TYPE_STR
  FIELD_TYPE_BOOL
  FIELD_TYPE_LONG
  FIELD_TYPE_DOUBLE
  FIELD_TYPE_LIST
  FIELD_TYPE_MAP
  FIELD_TYPE_TIMESTAMP
  FIELD_TYPE_BINARY
  FIELD_TYPE_INT
}

input QUERY_edgeDecisionConfig___Filter___Input {
  logical_filter: QUERY_edgeDecisionConfig___LogicalFilter___Input
  logical_filter___JSON: JSON
  custom_fields_filter: QUERY_edgeDecisionConfig___GenericValueFilter___Input
  custom_fields_filter___JSON: JSON
  creation_time_filter: QUERY_edgeDecisionConfig___TimeRangeFilter___Input
  creation_time_filter___JSON: JSON
  last_updated_time_filter: QUERY_edgeDecisionConfig___TimeRangeFilter___Input
  last_updated_time_filter___JSON: JSON
  edge_decision_rule_category_filter: QUERY_edgeDecisionConfig___EdgeDecisionRuleCategoryFilter___Input
  edge_decision_rule_category_filter___JSON: JSON
  include_disabled: Boolean
  scope_filter: QUERY_edgeDecisionConfig___EdgeDecisionRuleScopeFilter___Input
  scope_filter___JSON: JSON
}

type QUERY_edgeDecisionConfig___GenericMatchCondition___ {
  jexl_expression: QUERY_edgeDecisionConfig___JexlExpressionConfig___
  jexl_expression___JSON: JSON
  jexl_script: QUERY_edgeDecisionConfig___JexlScriptConfig___
  jexl_script___JSON: JSON
}

input QUERY_edgeDecisionConfig___GenericValueFilter___Input {
  key: String
  operator: QUERY_edgeDecisionConfig___RelationalOperator___
  value: QUERY_edgeDecisionConfig___Value___Input
  value___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetAllEdgeAttributionRulesRequest___Input {
  """Placeholder field for empty messages"""
  placeholder: String
}

type QUERY_edgeDecisionConfig___GetAllEdgeAttributionRulesResponse___ {
  edge_attribution_rules: [QUERY_edgeDecisionConfig___EdgeAttributionRule___]
  edge_attribution_rules___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetAllEdgeCustomResponsesRequest___Input {
  """Placeholder field for empty messages"""
  placeholder: String
}

type QUERY_edgeDecisionConfig___GetAllEdgeCustomResponsesResponse___ {
  edge_custom_responses: [QUERY_edgeDecisionConfig___EdgeCustomResponse___]
  edge_custom_responses___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetAllEdgeDecisionEngineConfigRequest___Input {
  """Placeholder field for empty messages"""
  placeholder: String
}

type QUERY_edgeDecisionConfig___GetAllEdgeDecisionEngineConfigResponse___ {
  edge_decision_engine_configs: [QUERY_edgeDecisionConfig___EdgeDecisionEngineConfig___]
  edge_decision_engine_configs___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetAllEdgeDecisionRulesRequest___Input {
  filter: QUERY_edgeDecisionConfig___Filter___Input
  filter___JSON: JSON
}

type QUERY_edgeDecisionConfig___GetAllEdgeDecisionRulesResponse___ {
  edge_decision_rules: [QUERY_edgeDecisionConfig___EdgeDecisionRule___]
  edge_decision_rules___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetAllEdgeDecisionSpecsRequest___Input {
  """Placeholder field for empty messages"""
  placeholder: String
}

type QUERY_edgeDecisionConfig___GetAllEdgeDecisionSpecsResponse___ {
  edge_decision_specs: [QUERY_edgeDecisionConfig___EdgeDecisionSpec___]
  edge_decision_specs___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetEdgeAttributionRuleRequest___Input {
  id: String
}

type QUERY_edgeDecisionConfig___GetEdgeAttributionRuleResponse___ {
  edge_attribution_rule: QUERY_edgeDecisionConfig___EdgeAttributionRule___
  edge_attribution_rule___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetEdgeCustomResponseRequest___Input {
  id: String
}

type QUERY_edgeDecisionConfig___GetEdgeCustomResponseResponse___ {
  edge_custom_response: QUERY_edgeDecisionConfig___EdgeCustomResponse___
  edge_custom_response___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetEdgeDecisionConfigsFilter___Input {
  decision_types: [QUERY_edgeDecisionConfig___EdgeDecisionType___]
  decision_types___JSON: JSON
  rule_categories: [QUERY_edgeDecisionConfig___EdgeDecisionRuleCategory___]
  rule_categories___JSON: JSON
  edge_input_kinds: [QUERY_edgeDecisionConfig___EdgeInputKind___]
  edge_input_kinds___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetEdgeDecisionEngineConfigRequest___Input {
  id: String
}

type QUERY_edgeDecisionConfig___GetEdgeDecisionEngineConfigResponse___ {
  edge_decision_engine_config: QUERY_edgeDecisionConfig___EdgeDecisionEngineConfig___
  edge_decision_engine_config___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetEdgeDecisionRuleRequest___Input {
  id: String
}

type QUERY_edgeDecisionConfig___GetEdgeDecisionRuleResponse___ {
  edge_decision_rule: QUERY_edgeDecisionConfig___EdgeDecisionRule___
  edge_decision_rule___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetEdgeDecisionSpecRequest___Input {
  id: String
}

type QUERY_edgeDecisionConfig___GetEdgeDecisionSpecResponse___ {
  edge_decision_spec: QUERY_edgeDecisionConfig___EdgeDecisionSpec___
  edge_decision_spec___JSON: JSON
}

input QUERY_edgeDecisionConfig___GetResolvedEdgeDecisionEngineConfigsRequest___Input {
  filter: QUERY_edgeDecisionConfig___GetEdgeDecisionConfigsFilter___Input
  filter___JSON: JSON
}

type QUERY_edgeDecisionConfig___GetResolvedEdgeDecisionEngineConfigsResponse___ {
  edge_decision_engine_config: QUERY_edgeDecisionConfig___EdgeDecisionEngineConfig___
  edge_decision_engine_config___JSON: JSON
}

type QUERY_edgeDecisionConfig___HttpMethodScope___ {
  http_methods: [String]
  http_methods___JSON: JSON
}

type QUERY_edgeDecisionConfig___JexlExpressionConfig___ {
  jexl_expression: String
}

type QUERY_edgeDecisionConfig___JexlScriptConfig___ {
  jexl_script: String
}

type QUERY_edgeDecisionConfig___ListValue___ {
  values: [QUERY_edgeDecisionConfig___Value___]
  values___JSON: JSON
}

input QUERY_edgeDecisionConfig___ListValue___Input {
  values: [QUERY_edgeDecisionConfig___Value___Input]
  values___JSON: JSON
}

input QUERY_edgeDecisionConfig___LogicalFilter___Input {
  operator: QUERY_edgeDecisionConfig___LogicalOperator___
  filter: [QUERY_edgeDecisionConfig___Filter___Input]
  filter___JSON: JSON
}

type QUERY_edgeDecisionConfig___LogicalMatchCondition___ {
  operator: QUERY_edgeDecisionConfig___LogicalMatchOperator___
  conditions: [QUERY_edgeDecisionConfig___MatchCondition___]
  conditions___JSON: JSON
}

enum QUERY_edgeDecisionConfig___LogicalMatchOperator___ {
  LOGICAL_MATCH_OPERATOR_UNSPECIFIED
  LOGICAL_MATCH_OPERATOR_AND
  LOGICAL_MATCH_OPERATOR_OR
}

enum QUERY_edgeDecisionConfig___LogicalOperator___ {
  LOGICAL_OPERATOR_UNSPECIFIED
  LOGICAL_OPERATOR_AND
  LOGICAL_OPERATOR_OR
}

type QUERY_edgeDecisionConfig___LogicalRule___ {
  operator: QUERY_edgeDecisionConfig___EdgeRuleLogicalOperator___
  rules: [QUERY_edgeDecisionConfig___EdgeDecisionRuleDefinition___]
  rules___JSON: JSON
}

type QUERY_edgeDecisionConfig___MatchCondition___ {
  generic_match_condition: QUERY_edgeDecisionConfig___GenericMatchCondition___
  generic_match_condition___JSON: JSON
  structured_match_condition: QUERY_edgeDecisionConfig___StructuredMatchCondition___
  structured_match_condition___JSON: JSON
  logical_match_condition: QUERY_edgeDecisionConfig___LogicalMatchCondition___
  logical_match_condition___JSON: JSON
  negate: Boolean
}

enum QUERY_edgeDecisionConfig___MatchOperator___ {
  MATCH_OPERATOR_UNSPECIFIED
  MATCH_OPERATOR_IN
  MATCH_OPERATOR_NOT_IN
  MATCH_OPERATOR_LIKE
  MATCH_OPERATOR_NOT_LIKE
  MATCH_OPERATOR_EQ
  MATCH_OPERATOR_NOT_EQ
  MATCH_OPERATOR_GT
  MATCH_OPERATOR_LT
  MATCH_OPERATOR_GTE
  MATCH_OPERATOR_LTE
  MATCH_OPERATOR_BETWEEN
  MATCH_OPERATOR_CONTAINS
  MATCH_OPERATOR_STARTS_WITH
  MATCH_OPERATOR_ENDS_WITH
  MATCH_OPERATOR_EQ_IGNORE_CASE
}

enum QUERY_edgeDecisionConfig___NullValue___ {
  NULL_VALUE
}

type QUERY_edgeDecisionConfig___PayloadDecoration___ {
  request_header_injection: QUERY_edgeDecisionConfig___RequestHeaderInjection___
  request_header_injection___JSON: JSON
  response_header_injection: QUERY_edgeDecisionConfig___ResponseHeaderInjection___
  response_header_injection___JSON: JSON
}

enum QUERY_edgeDecisionConfig___PolicyKind___ {
  POLICY_KIND_UNSPECIFIED
  POLICY_KIND_WAF
  POLICY_KIND_BOT_MITIGATION
  POLICY_KIND_FRAUD_PROTECTION
  POLICY_KIND_CUSTOM
}

type QUERY_edgeDecisionConfig___RangeThreshold___ {
  lower_bound: Float
  upper_bound: Float
}

type QUERY_edgeDecisionConfig___RangeValue___ {
  lower: Float
  upper: Float
}

type QUERY_edgeDecisionConfig___RegexConfig___ {
  regex: String
  split_regex: String
  group_indices: [Int]
  group_indices___JSON: JSON
  join_delimiter: String
  value_transformation: QUERY_edgeDecisionConfig___DataTransformationConfig___
  value_transformation___JSON: JSON
}

enum QUERY_edgeDecisionConfig___RelationalOperator___ {
  RELATIONAL_OPERATOR_UNSPECIFIED
  RELATIONAL_OPERATOR_EQUALS
}

type QUERY_edgeDecisionConfig___RequestHeaderInjection___ {
  header_key: QUERY_edgeDecisionConfig___DataTransformationConfig___
  header_key___JSON: JSON
  header_value: QUERY_edgeDecisionConfig___DataTransformationConfig___
  header_value___JSON: JSON
}

type QUERY_edgeDecisionConfig___RequestInvocation___ {
  request_invocation_id: String
  match_condition: QUERY_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
  weight: Int
  median_percent: Float
}

type QUERY_edgeDecisionConfig___ResponseHeader___ {
  header_key: QUERY_edgeDecisionConfig___DataTransformationConfig___
  header_key___JSON: JSON
  header_value: QUERY_edgeDecisionConfig___DataTransformationConfig___
  header_value___JSON: JSON
}

type QUERY_edgeDecisionConfig___ResponseHeaderInjection___ {
  header_key: QUERY_edgeDecisionConfig___DataTransformationConfig___
  header_key___JSON: JSON
  header_value: QUERY_edgeDecisionConfig___DataTransformationConfig___
  header_value___JSON: JSON
}

type QUERY_edgeDecisionConfig___RuleInfoDecoration___ {
  rule_info_key: QUERY_edgeDecisionConfig___DataTransformationConfig___
  rule_info_key___JSON: JSON
  rule_info_value: QUERY_edgeDecisionConfig___DataTransformationConfig___
  rule_info_value___JSON: JSON
}

type QUERY_edgeDecisionConfig___ServiceScope___ {
  service_names: [String]
  service_names___JSON: JSON
}

type QUERY_edgeDecisionConfig___SignatureRule___ {
  match_condition: QUERY_edgeDecisionConfig___MatchCondition___
  match_condition___JSON: JSON
}

type QUERY_edgeDecisionConfig___SpanAttributeDecoration___ {
  span_attribute_key: QUERY_edgeDecisionConfig___DataTransformationConfig___
  span_attribute_key___JSON: JSON
  span_attribute_value: QUERY_edgeDecisionConfig___DataTransformationConfig___
  span_attribute_value___JSON: JSON
}

type QUERY_edgeDecisionConfig___StringList___ {
  values: [String]
  values___JSON: JSON
}

type QUERY_edgeDecisionConfig___Struct___ {
  fields: [QUERY_edgeDecisionConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput]
  fields___JSON: JSON
}

input QUERY_edgeDecisionConfig___Struct___Input {
  fields: [QUERY_edgeDecisionConfig_google_protobuf_Struct_FieldsEntry___fields___MapInput]
  fields___JSON: JSON
}

type QUERY_edgeDecisionConfig___StructuredMatchCondition___ {
  lhs: QUERY_edgeDecisionConfig___AttributeDerivationMapping___
  lhs___JSON: JSON
  unary_operator: QUERY_edgeDecisionConfig___UnaryOperator___
  binary_operator: QUERY_edgeDecisionConfig___BinaryOperator___
  binary_operator___JSON: JSON
}

enum QUERY_edgeDecisionConfig___ThresholdOperator___ {
  THRESHOLD_OPERATOR_UNSPECIFIED
  THRESHOLD_OPERATOR_ABOVE
  THRESHOLD_OPERATOR_BELOW
  THRESHOLD_OPERATOR_ABOVE_OR_BELOW
}

input QUERY_edgeDecisionConfig___TimeRangeFilter___Input {
  start_time: QUERY_edgeDecisionConfig___Timestamp___Input
  start_time___JSON: JSON
  end_time: QUERY_edgeDecisionConfig___Timestamp___Input
  end_time___JSON: JSON
}

type QUERY_edgeDecisionConfig___TimeRangeValue___ {
  start: QUERY_edgeDecisionConfig___Timestamp___
  start___JSON: JSON
  end: QUERY_edgeDecisionConfig___Timestamp___
  end___JSON: JSON
}

type QUERY_edgeDecisionConfig___Timestamp___ {
  seconds: Int
  nanos: Int
}

input QUERY_edgeDecisionConfig___Timestamp___Input {
  seconds: Int
  nanos: Int
}

type QUERY_edgeDecisionConfig___ToleranceThreshold___ {
  reference_value: Float
  percentage_tolerance: Float
  absolute_tolerance: Float
}

enum QUERY_edgeDecisionConfig___UnaryOperator___ {
  UNARY_OPERATOR_UNSPECIFIED
  UNARY_OPERATOR_IS_NULL
  UNARY_OPERATOR_IS_NOT_NULL
  UNARY_OPERATOR_IS_EMPTY
  UNARY_OPERATOR_IS_NOT_EMPTY
}

type QUERY_edgeDecisionConfig___UrlRegexScope___ {
  url_regexes: [String]
  url_regexes___JSON: JSON
}

type QUERY_edgeDecisionConfig___UrlScope___ {
  urls: [String]
  urls___JSON: JSON
}

type QUERY_edgeDecisionConfig___Value___ {
  null_value: QUERY_edgeDecisionConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: QUERY_edgeDecisionConfig___Struct___
  struct_value___JSON: JSON
  list_value: QUERY_edgeDecisionConfig___ListValue___
  list_value___JSON: JSON
}

input QUERY_edgeDecisionConfig___Value___Input {
  null_value: QUERY_edgeDecisionConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: QUERY_edgeDecisionConfig___Struct___Input
  struct_value___JSON: JSON
  list_value: QUERY_edgeDecisionConfig___ListValue___Input
  list_value___JSON: JSON
}

type QUERY_edgeDecisionConfig___ValueAggregateThreshold___ {
  dimension: QUERY_edgeDecisionConfig___AttributeDerivationMapping___
  dimension___JSON: JSON
  aggregation_type: QUERY_edgeDecisionConfig___AggregationType___
  static_threshold: Float
  range_threshold: QUERY_edgeDecisionConfig___RangeThreshold___
  range_threshold___JSON: JSON
  tolerance_threshold: QUERY_edgeDecisionConfig___ToleranceThreshold___
  tolerance_threshold___JSON: JSON
  threshold_operator: QUERY_edgeDecisionConfig___ThresholdOperator___
  disable_estimated_aggregate: Boolean
}

type QUERY_edgeDecisionConfig___VariableDerivationMapping___ {
  name: String
  rules: [QUERY_edgeDecisionConfig___DerivationRule___]
  rules___JSON: JSON
}

input QUERY_edgeDecisionConfig_google_protobuf_Struct_FieldsEntry___fields___MapInput {
  key: String
  value: QUERY_edgeDecisionConfig___Value___Input
}

type QUERY_edgeDecisionConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput {
  key: String
  value: QUERY_edgeDecisionConfig___Value___
}

input QUERY_edgeDecisionService___AccessPatternRule___Input {
  correlation_key: QUERY_edgeDecisionService___CorrelationKey___Input
  correlation_key___JSON: JSON
  filter: QUERY_edgeDecisionService___MatchCondition___Input
  filter___JSON: JSON
  target_request: QUERY_edgeDecisionService___MatchCondition___Input
  target_request___JSON: JSON
  pre_requests: [QUERY_edgeDecisionService___RequestInvocation___Input]
  pre_requests___JSON: JSON
  time_window: QUERY_edgeDecisionService___Duration___Input
  time_window___JSON: JSON
  check_for_any_pre_requests: Boolean
  trigger_on_all_missing: Boolean
  trigger_on_any_missing: Boolean
  trigger_on_score: Float
}

input QUERY_edgeDecisionService___AggregateThresholdRule___Input {
  match_condition: QUERY_edgeDecisionService___MatchCondition___Input
  match_condition___JSON: JSON
  group_by_dimensions: [QUERY_edgeDecisionService___AttributeDerivationMapping___Input]
  group_by_dimensions___JSON: JSON
  aggregate_without_grouping: Boolean
  time_window: QUERY_edgeDecisionService___Duration___Input
  time_window___JSON: JSON
  value_aggregate_threshold: QUERY_edgeDecisionService___ValueAggregateThreshold___Input
  value_aggregate_threshold___JSON: JSON
}

enum QUERY_edgeDecisionService___AggregationType___ {
  AGGREGATION_TYPE_UNSPECIFIED
  AGGREGATION_TYPE_COUNT
  AGGREGATION_TYPE_DISTINCT_COUNT
  AGGREGATION_TYPE_SUM
  AGGREGATION_TYPE_AVG
  AGGREGATION_TYPE_MAX
  AGGREGATION_TYPE_MIN
}

type QUERY_edgeDecisionService___AssessRiskDebugInfo___ {
  logs: [QUERY_edgeDecisionService___LogEntry___]
  logs___JSON: JSON
  rule_eval_debug_info: [QUERY_edgeDecisionService___RuleEvalDebugInfo___]
  rule_eval_debug_info___JSON: JSON
  additional_fields: [QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_AssessRiskDebugInfo_AdditionalFieldsEntry___additional_fields___MapOutput]
  additional_fields___JSON: JSON
}

input QUERY_edgeDecisionService___AssessRiskRequest___Input {
  timestamp_millis: Int
  deadline_millis: Int
  generic_request: QUERY_edgeDecisionService___GenericRequest___Input
  generic_request___JSON: JSON
  http_request: QUERY_edgeDecisionService___HttpRequest___Input
  http_request___JSON: JSON
  client_fingerprint: QUERY_edgeDecisionService___ClientFingerprint___Input
  client_fingerprint___JSON: JSON
  enable_profiling: Boolean
  additional_fields: [QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_AssessRiskRequest_AdditionalFieldsEntry___additional_fields___MapInput]
  additional_fields___JSON: JSON
}

type QUERY_edgeDecisionService___AssessRiskResponse___ {
  decision: QUERY_edgeDecisionService___Decision___
  status_on_decision: Int
  message_on_decision: String
  span_attributes: [QUERY_edgeDecisionService___KeyValueString___]
  span_attributes___JSON: JSON
  request_header_injections: [QUERY_edgeDecisionService___KeyValueString___]
  request_header_injections___JSON: JSON
  response_header_injections: [QUERY_edgeDecisionService___KeyValueString___]
  response_header_injections___JSON: JSON
  decision_latency_ms: Int
  decision_latency_us: Int
  debug_info: QUERY_edgeDecisionService___AssessRiskDebugInfo___
  debug_info___JSON: JSON
  additional_fields: [QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_AssessRiskResponse_AdditionalFieldsEntry___additional_fields___MapOutput]
  additional_fields___JSON: JSON
}

input QUERY_edgeDecisionService___AttributeDerivationMapping___Input {
  name: String
  type: QUERY_edgeDecisionService___FieldType___
  rules: [QUERY_edgeDecisionService___DerivationRule___Input]
  rules___JSON: JSON
}

input QUERY_edgeDecisionService___BinaryOperator___Input {
  list_value: QUERY_edgeDecisionService___ListValue___Input
  list_value___JSON: JSON
  regex: String
  bloom_filter: String
  number_value: Float
  bool_value: Boolean
  null_value: QUERY_edgeDecisionService___NullValue___
  string_value: String
  range_value: QUERY_edgeDecisionService___RangeValue___Input
  range_value___JSON: JSON
  time_range_value: QUERY_edgeDecisionService___TimeRangeValue___Input
  time_range_value___JSON: JSON
  match_operator: QUERY_edgeDecisionService___MatchOperator___
}

input QUERY_edgeDecisionService___ClientFingerprint___Input {
  request_time_millis: Int
  site_key: String
  visitor_id: String
  captcha_state: String
  environment: String
  is_allowed: Boolean
  ip_address: String
  flows: [String]
  flows___JSON: JSON
  risks: [String]
  risks___JSON: JSON
  fingerprint_data: String
  request_headers: [QUERY_edgeDecisionService___KeyValue___Input]
  request_headers___JSON: JSON
  attributes: [QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_client_fingerprint_v1_ClientFingerprint_AttributesEntry___attributes___MapInput]
  attributes___JSON: JSON
  scores: [QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_client_fingerprint_v1_ClientFingerprint_ScoresEntry___scores___MapInput]
  scores___JSON: JSON
}

input QUERY_edgeDecisionService___ConditionalConfig___Input {
  bool_expression: String
  true_transformation: QUERY_edgeDecisionService___DataTransformationConfig___Input
  true_transformation___JSON: JSON
  false_transformation: QUERY_edgeDecisionService___DataTransformationConfig___Input
  false_transformation___JSON: JSON
}

input QUERY_edgeDecisionService___ConfigTtl___Input {
  created_at: QUERY_edgeDecisionService___Timestamp___Input
  created_at___JSON: JSON
  expires_at: QUERY_edgeDecisionService___Timestamp___Input
  expires_at___JSON: JSON
}

input QUERY_edgeDecisionService___CorrelationKey___Input {
  attributes: [QUERY_edgeDecisionService___AttributeDerivationMapping___Input]
  attributes___JSON: JSON
}

input QUERY_edgeDecisionService___CustomResponse___Input {
  match_condition: QUERY_edgeDecisionService___MatchCondition___Input
  match_condition___JSON: JSON
  variables: [QUERY_edgeDecisionService___VariableDerivationMapping___Input]
  variables___JSON: JSON
  status_code: QUERY_edgeDecisionService___DataTransformationConfig___Input
  status_code___JSON: JSON
  response_headers: [QUERY_edgeDecisionService___ResponseHeader___Input]
  response_headers___JSON: JSON
  response_body: QUERY_edgeDecisionService___DataTransformationConfig___Input
  response_body___JSON: JSON
}

input QUERY_edgeDecisionService___DataModelEntity___Input {
  id: String
  type: String
  name: String
  metadata_attributes: [QUERY_edgeDecisionService___AttributeDerivationMapping___Input]
  metadata_attributes___JSON: JSON
}

input QUERY_edgeDecisionService___DataTransformationConfig___Input {
  static_value: QUERY_edgeDecisionService___Value___Input
  static_value___JSON: JSON
  jexl_expression: QUERY_edgeDecisionService___JexlExpressionConfig___Input
  jexl_expression___JSON: JSON
  jexl_script: QUERY_edgeDecisionService___JexlScriptConfig___Input
  jexl_script___JSON: JSON
  regex: QUERY_edgeDecisionService___RegexConfig___Input
  regex___JSON: JSON
  conditional: QUERY_edgeDecisionService___ConditionalConfig___Input
  conditional___JSON: JSON
  output_type: QUERY_edgeDecisionService___FieldType___
}

input QUERY_edgeDecisionService___DebugAssessRiskRequest___Input {
  request: QUERY_edgeDecisionService___AssessRiskRequest___Input
  request___JSON: JSON
  edge_decision_engine_config: QUERY_edgeDecisionService___EdgeDecisionEngineConfig___Input
  edge_decision_engine_config___JSON: JSON
}

type QUERY_edgeDecisionService___DebugAssessRiskResponse___ {
  response: QUERY_edgeDecisionService___AssessRiskResponse___
  response___JSON: JSON
}

enum QUERY_edgeDecisionService___Decision___ {
  DECISION_UNSPECIFIED
  DECISION_ALLOW
  DECISION_DENY
  DECISION_CAPTCHA
  DECISION_MARK_FOR_TESTING
  DECISION_EXCLUDE
  DECISION_PASSTHROUGH
  DECISION_ALERT
}

input QUERY_edgeDecisionService___DerivationRule___Input {
  transformation_config: QUERY_edgeDecisionService___DataTransformationConfig___Input
  transformation_config___JSON: JSON
  transformation_configs: [QUERY_edgeDecisionService___DataTransformationConfig___Input]
  transformation_configs___JSON: JSON
  condition_expression: QUERY_edgeDecisionService___JexlExpressionConfig___Input
  condition_expression___JSON: JSON
  match_condition: QUERY_edgeDecisionService___MatchCondition___Input
  match_condition___JSON: JSON
}

input QUERY_edgeDecisionService___DomainScope___Input {
  domains: [String]
  domains___JSON: JSON
}

input QUERY_edgeDecisionService___Duration___Input {
  seconds: Int
  nanos: Int
}

input QUERY_edgeDecisionService___EdgeAttributionRule___Input {
  id: String
  name: String
  version: Int
  description: String
  rule_scope: QUERY_edgeDecisionService___EdgeDecisionRuleScope___Input
  rule_scope___JSON: JSON
  rule_definition: QUERY_edgeDecisionService___EdgeAttributionRuleDefinition___Input
  rule_definition___JSON: JSON
  rule_status: QUERY_edgeDecisionService___EdgeDecisionRuleStatus___Input
  rule_status___JSON: JSON
  template_id: String
}

input QUERY_edgeDecisionService___EdgeAttributionRuleDefinition___Input {
  edge_input_kind: QUERY_edgeDecisionService___EdgeInputKind___
  rule_variables: [QUERY_edgeDecisionService___VariableDerivationMapping___Input]
  rule_variables___JSON: JSON
  match_condition: QUERY_edgeDecisionService___MatchCondition___Input
  match_condition___JSON: JSON
  span_attributes: [QUERY_edgeDecisionService___SpanAttributeDecoration___Input]
  span_attributes___JSON: JSON
  decorations: [QUERY_edgeDecisionService___PayloadDecoration___Input]
  decorations___JSON: JSON
  custom_fields: QUERY_edgeDecisionService___Struct___Input
  custom_fields___JSON: JSON
}

input QUERY_edgeDecisionService___EdgeCustomResponse___Input {
  id: String
  name: String
  version: Int
  description: String
  rule_scope: QUERY_edgeDecisionService___EdgeDecisionRuleScope___Input
  rule_scope___JSON: JSON
  custom_response: QUERY_edgeDecisionService___CustomResponse___Input
  custom_response___JSON: JSON
  rule_status: QUERY_edgeDecisionService___EdgeDecisionRuleStatus___Input
  rule_status___JSON: JSON
  template_id: String
  custom_config: QUERY_edgeDecisionService___Struct___Input
  custom_config___JSON: JSON
}

input QUERY_edgeDecisionService___EdgeDecision___Input {
  edge_decision_type: QUERY_edgeDecisionService___EdgeDecisionType___
  decision_apply_duration: QUERY_edgeDecisionService___Duration___Input
  decision_apply_duration___JSON: JSON
  decorations: [QUERY_edgeDecisionService___PayloadDecoration___Input]
  decorations___JSON: JSON
  sampling_rate: Float
  threat_type: String
  span_attributes: [QUERY_edgeDecisionService___SpanAttributeDecoration___Input]
  span_attributes___JSON: JSON
  edge_decision_targets: [QUERY_edgeDecisionService___EdgeDecisionTarget___Input]
  edge_decision_targets___JSON: JSON
  rule_info_decorations: [QUERY_edgeDecisionService___RuleInfoDecoration___Input]
  rule_info_decorations___JSON: JSON
  custom_response: QUERY_edgeDecisionService___EdgeCustomResponse___Input
  custom_response___JSON: JSON
}

input QUERY_edgeDecisionService___EdgeDecisionEngineConfig___Input {
  id: String
  name: String
  version: Int
  common_variables: [QUERY_edgeDecisionService___VariableDerivationMapping___Input]
  common_variables___JSON: JSON
  decision_rules: [QUERY_edgeDecisionService___EdgeDecisionRule___Input]
  decision_rules___JSON: JSON
  decision_specs: [QUERY_edgeDecisionService___EdgeDecisionSpec___Input]
  decision_specs___JSON: JSON
  disabled: Boolean
  disabled_rule_categories: [QUERY_edgeDecisionService___EdgeDecisionRuleCategory___]
  disabled_rule_categories___JSON: JSON
  attribution_rules: [QUERY_edgeDecisionService___EdgeAttributionRule___Input]
  attribution_rules___JSON: JSON
  default_block_response: QUERY_edgeDecisionService___EdgeCustomResponse___Input
  default_block_response___JSON: JSON
  custom_config: QUERY_edgeDecisionService___Value___Input
  custom_config___JSON: JSON
}

input QUERY_edgeDecisionService___EdgeDecisionRule___Input {
  id: String
  name: String
  version: Int
  rule_scope: QUERY_edgeDecisionService___EdgeDecisionRuleScope___Input
  rule_scope___JSON: JSON
  rule_category: QUERY_edgeDecisionService___EdgeDecisionRuleCategory___
  rule_status: QUERY_edgeDecisionService___EdgeDecisionRuleStatus___Input
  rule_status___JSON: JSON
  rule_definition: QUERY_edgeDecisionService___EdgeDecisionRuleDefinition___Input
  rule_definition___JSON: JSON
  rule_decision: QUERY_edgeDecisionService___EdgeDecision___Input
  rule_decision___JSON: JSON
  policy_kind: QUERY_edgeDecisionService___PolicyKind___
  description: String
  template_id: String
  policy_id: String
}

enum QUERY_edgeDecisionService___EdgeDecisionRuleCategory___ {
  EDGE_DECISION_RULE_CATEGORY_UNSPECIFIED
  EDGE_DECISION_RULE_CATEGORY_ORIGINAL
  EDGE_DECISION_RULE_CATEGORY_CUSTOM_SIGNATURE
  EDGE_DECISION_RULE_CATEGORY_RATE_LIMIT
  EDGE_DECISION_RULE_CATEGORY_MALICIOUS_SOURCES
  EDGE_DECISION_RULE_CATEGORY_THREAT_ACTOR
  EDGE_DECISION_RULE_CATEGORY_DETECTION_EXCLUSION
  EDGE_DECISION_RULE_CATEGORY_TRACEABLE_CATEGORIZED_BOTS
}

input QUERY_edgeDecisionService___EdgeDecisionRuleDefinition___Input {
  edge_input_kind: QUERY_edgeDecisionService___EdgeInputKind___
  rule_variables: [QUERY_edgeDecisionService___VariableDerivationMapping___Input]
  rule_variables___JSON: JSON
  attribute_projections: [QUERY_edgeDecisionService___AttributeDerivationMapping___Input]
  attribute_projections___JSON: JSON
  signature_rule: QUERY_edgeDecisionService___SignatureRule___Input
  signature_rule___JSON: JSON
  entity_rule: QUERY_edgeDecisionService___EntityRule___Input
  entity_rule___JSON: JSON
  aggregate_threshold_rule: QUERY_edgeDecisionService___AggregateThresholdRule___Input
  aggregate_threshold_rule___JSON: JSON
  access_pattern_rule: QUERY_edgeDecisionService___AccessPatternRule___Input
  access_pattern_rule___JSON: JSON
  logical_rule: QUERY_edgeDecisionService___LogicalRule___Input
  logical_rule___JSON: JSON
  custom_fields: QUERY_edgeDecisionService___Value___Input
  custom_fields___JSON: JSON
}

input QUERY_edgeDecisionService___EdgeDecisionRuleScope___Input {
  scope_conditions: [QUERY_edgeDecisionService___EdgeDecisionRuleScopeCondition___Input]
  scope_conditions___JSON: JSON
  scope_exclusion_conditions: [QUERY_edgeDecisionService___EdgeDecisionRuleScopeCondition___Input]
  scope_exclusion_conditions___JSON: JSON
}

input QUERY_edgeDecisionService___EdgeDecisionRuleScopeCondition___Input {
  environment_scope: QUERY_edgeDecisionService___EnvironmentScope___Input
  environment_scope___JSON: JSON
  service_scope: QUERY_edgeDecisionService___ServiceScope___Input
  service_scope___JSON: JSON
  url_scope: QUERY_edgeDecisionService___UrlScope___Input
  url_scope___JSON: JSON
  url_regex_scope: QUERY_edgeDecisionService___UrlRegexScope___Input
  url_regex_scope___JSON: JSON
  http_method_scope: QUERY_edgeDecisionService___HttpMethodScope___Input
  http_method_scope___JSON: JSON
  match_condition_scope: QUERY_edgeDecisionService___MatchCondition___Input
  match_condition_scope___JSON: JSON
  domain_scope: QUERY_edgeDecisionService___DomainScope___Input
  domain_scope___JSON: JSON
}

input QUERY_edgeDecisionService___EdgeDecisionRuleStatus___Input {
  disabled: Boolean
  internal: Boolean
  ttl: QUERY_edgeDecisionService___ConfigTtl___Input
  ttl___JSON: JSON
}

input QUERY_edgeDecisionService___EdgeDecisionRuleTarget___Input {
  edge_decision_rule_category: QUERY_edgeDecisionService___EdgeDecisionRuleCategory___
  rule_ids: [String]
  rule_ids___JSON: JSON
  result_attribute_derivations: [QUERY_edgeDecisionService___AttributeDerivationMapping___Input]
  result_attribute_derivations___JSON: JSON
}

input QUERY_edgeDecisionService___EdgeDecisionSpec___Input {
  id: String
  name: String
  version: Int
  edge_input_kind: QUERY_edgeDecisionService___EdgeInputKind___
  scope: QUERY_edgeDecisionService___EdgeDecisionSpecScope___Input
  scope___JSON: JSON
  decision_spec_directives: [QUERY_edgeDecisionService___EdgeDecisionSpecDirective___Input]
  decision_spec_directives___JSON: JSON
}

input QUERY_edgeDecisionService___EdgeDecisionSpecDirective___Input {
  edge_decision: QUERY_edgeDecisionService___EdgeDecision___Input
  edge_decision___JSON: JSON
  any_rule: Boolean
  all_rules: Boolean
  any_rule_of_type: QUERY_edgeDecisionService___EdgeDecisionType___
  specific_rule_ids: QUERY_edgeDecisionService___StringList___Input
  specific_rule_ids___JSON: JSON
  decision_tree_jexl_expression: QUERY_edgeDecisionService___JexlExpressionConfig___Input
  decision_tree_jexl_expression___JSON: JSON
  decision_tree_jexl_script: QUERY_edgeDecisionService___JexlScriptConfig___Input
  decision_tree_jexl_script___JSON: JSON
  custom_response: QUERY_edgeDecisionService___EdgeCustomResponse___Input
  custom_response___JSON: JSON
}

input QUERY_edgeDecisionService___EdgeDecisionSpecScope___Input {
  environment: String
}

input QUERY_edgeDecisionService___EdgeDecisionTarget___Input {
  edge_decision_type: QUERY_edgeDecisionService___EdgeDecisionType___
  edge_decision_rule_targets: [QUERY_edgeDecisionService___EdgeDecisionRuleTarget___Input]
  edge_decision_rule_targets___JSON: JSON
}

enum QUERY_edgeDecisionService___EdgeDecisionType___ {
  EDGE_DECISION_TYPE_UNSPECIFIED
  EDGE_DECISION_TYPE_ALLOW
  EDGE_DECISION_TYPE_BLOCK
  EDGE_DECISION_TYPE_CAPTCHA
  EDGE_DECISION_TYPE_MARK_FOR_TESTING
  EDGE_DECISION_TYPE_EXCLUDE
  EDGE_DECISION_TYPE_ALERT
}

enum QUERY_edgeDecisionService___EdgeInputKind___ {
  EDGE_INPUT_KIND_UNSPECIFIED
  EDGE_INPUT_KIND_HTTP_REQUEST
  EDGE_INPUT_KIND_CLIENT_FINGERPRINT_DATA
}

enum QUERY_edgeDecisionService___EdgeRuleLogicalOperator___ {
  EDGE_RULE_LOGICAL_OPERATOR_UNSPECIFIED
  EDGE_RULE_LOGICAL_OPERATOR_AND
  EDGE_RULE_LOGICAL_OPERATOR_OR
  EDGE_RULE_LOGICAL_OPERATOR_NOT
}

input QUERY_edgeDecisionService___EntityRule___Input {
  entity_data: [QUERY_edgeDecisionService___EntityRuleData___Input]
  entity_data___JSON: JSON
}

input QUERY_edgeDecisionService___EntityRuleData___Input {
  entity: QUERY_edgeDecisionService___DataModelEntity___Input
  entity___JSON: JSON
  match_condition: QUERY_edgeDecisionService___MatchCondition___Input
  match_condition___JSON: JSON
}

input QUERY_edgeDecisionService___EnvironmentScope___Input {
  environments: [String]
  environments___JSON: JSON
}

enum QUERY_edgeDecisionService___FieldType___ {
  FIELD_TYPE_UNSPECIFIED
  FIELD_TYPE_STR
  FIELD_TYPE_BOOL
  FIELD_TYPE_LONG
  FIELD_TYPE_DOUBLE
  FIELD_TYPE_LIST
  FIELD_TYPE_MAP
  FIELD_TYPE_TIMESTAMP
  FIELD_TYPE_BINARY
  FIELD_TYPE_INT
}

input QUERY_edgeDecisionService___GenericMatchCondition___Input {
  jexl_expression: QUERY_edgeDecisionService___JexlExpressionConfig___Input
  jexl_expression___JSON: JSON
  jexl_script: QUERY_edgeDecisionService___JexlScriptConfig___Input
  jexl_script___JSON: JSON
}

input QUERY_edgeDecisionService___GenericRequest___Input {
  input_payload: [QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_GenericRequest_InputPayloadEntry___input_payload___MapInput]
  input_payload___JSON: JSON
  input_source: String
}

input QUERY_edgeDecisionService___HttpMethodScope___Input {
  http_methods: [String]
  http_methods___JSON: JSON
}

input QUERY_edgeDecisionService___HttpRequest___Input {
  timestamp_millis: Int
  method: String
  request_headers: [QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_http_request_v1_HttpRequest_RequestHeadersEntry___request_headers___MapInput]
  request_headers___JSON: JSON
  scheme: String
  path: String
  host: String
  request_body: String
  source_address: String
  source_port: Int
  response_headers: [QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_http_request_v1_HttpRequest_ResponseHeadersEntry___response_headers___MapInput]
  response_headers___JSON: JSON
  response_body: String
  status_code: String
  status_message: String
  prior_eval_results: [QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_http_request_v1_HttpRequest_PriorEvalResultsEntry___prior_eval_results___MapInput]
  prior_eval_results___JSON: JSON
  tags: [QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_http_request_v1_HttpRequest_TagsEntry___tags___MapInput]
  tags___JSON: JSON
  truncated: Boolean
  environment: String
  service_name: String
  additional_fields: QUERY_edgeDecisionService___Value___Input
  additional_fields___JSON: JSON
}

input QUERY_edgeDecisionService___JexlExpressionConfig___Input {
  jexl_expression: String
}

input QUERY_edgeDecisionService___JexlScriptConfig___Input {
  jexl_script: String
}

input QUERY_edgeDecisionService___KeyValue___Input {
  key: String
  value: String
}

type QUERY_edgeDecisionService___KeyValueString___ {
  key: String
  value: String
}

input QUERY_edgeDecisionService___ListValue___Input {
  values: [QUERY_edgeDecisionService___Value___Input]
  values___JSON: JSON
}

type QUERY_edgeDecisionService___LogEntry___ {
  timestamp: Int
  logger: String
  level: String
  message: String
  thread: String
  klass: String
  method: String
  line: String
  mdc: [QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_LogEntry_MdcEntry___mdc___MapOutput]
  mdc___JSON: JSON
  additional_fields: [QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_LogEntry_AdditionalFieldsEntry___additional_fields___MapOutput]
  additional_fields___JSON: JSON
}

input QUERY_edgeDecisionService___LogicalMatchCondition___Input {
  operator: QUERY_edgeDecisionService___LogicalMatchOperator___
  conditions: [QUERY_edgeDecisionService___MatchCondition___Input]
  conditions___JSON: JSON
}

enum QUERY_edgeDecisionService___LogicalMatchOperator___ {
  LOGICAL_MATCH_OPERATOR_UNSPECIFIED
  LOGICAL_MATCH_OPERATOR_AND
  LOGICAL_MATCH_OPERATOR_OR
}

input QUERY_edgeDecisionService___LogicalRule___Input {
  operator: QUERY_edgeDecisionService___EdgeRuleLogicalOperator___
  rules: [QUERY_edgeDecisionService___EdgeDecisionRuleDefinition___Input]
  rules___JSON: JSON
}

input QUERY_edgeDecisionService___MatchCondition___Input {
  generic_match_condition: QUERY_edgeDecisionService___GenericMatchCondition___Input
  generic_match_condition___JSON: JSON
  structured_match_condition: QUERY_edgeDecisionService___StructuredMatchCondition___Input
  structured_match_condition___JSON: JSON
  logical_match_condition: QUERY_edgeDecisionService___LogicalMatchCondition___Input
  logical_match_condition___JSON: JSON
  negate: Boolean
}

enum QUERY_edgeDecisionService___MatchOperator___ {
  MATCH_OPERATOR_UNSPECIFIED
  MATCH_OPERATOR_IN
  MATCH_OPERATOR_NOT_IN
  MATCH_OPERATOR_LIKE
  MATCH_OPERATOR_NOT_LIKE
  MATCH_OPERATOR_EQ
  MATCH_OPERATOR_NOT_EQ
  MATCH_OPERATOR_GT
  MATCH_OPERATOR_LT
  MATCH_OPERATOR_GTE
  MATCH_OPERATOR_LTE
  MATCH_OPERATOR_BETWEEN
  MATCH_OPERATOR_CONTAINS
  MATCH_OPERATOR_STARTS_WITH
  MATCH_OPERATOR_ENDS_WITH
  MATCH_OPERATOR_EQ_IGNORE_CASE
}

enum QUERY_edgeDecisionService___NullValue___ {
  NULL_VALUE
}

input QUERY_edgeDecisionService___PayloadDecoration___Input {
  request_header_injection: QUERY_edgeDecisionService___RequestHeaderInjection___Input
  request_header_injection___JSON: JSON
  response_header_injection: QUERY_edgeDecisionService___ResponseHeaderInjection___Input
  response_header_injection___JSON: JSON
}

enum QUERY_edgeDecisionService___PolicyKind___ {
  POLICY_KIND_UNSPECIFIED
  POLICY_KIND_WAF
  POLICY_KIND_BOT_MITIGATION
  POLICY_KIND_FRAUD_PROTECTION
  POLICY_KIND_CUSTOM
}

input QUERY_edgeDecisionService___RangeThreshold___Input {
  lower_bound: Float
  upper_bound: Float
}

input QUERY_edgeDecisionService___RangeValue___Input {
  lower: Float
  upper: Float
}

input QUERY_edgeDecisionService___RegexConfig___Input {
  regex: String
  split_regex: String
  group_indices: [Int]
  group_indices___JSON: JSON
  join_delimiter: String
  value_transformation: QUERY_edgeDecisionService___DataTransformationConfig___Input
  value_transformation___JSON: JSON
}

input QUERY_edgeDecisionService___RequestHeaderInjection___Input {
  header_key: QUERY_edgeDecisionService___DataTransformationConfig___Input
  header_key___JSON: JSON
  header_value: QUERY_edgeDecisionService___DataTransformationConfig___Input
  header_value___JSON: JSON
}

input QUERY_edgeDecisionService___RequestInvocation___Input {
  request_invocation_id: String
  match_condition: QUERY_edgeDecisionService___MatchCondition___Input
  match_condition___JSON: JSON
  weight: Int
  median_percent: Float
}

input QUERY_edgeDecisionService___ResponseHeader___Input {
  header_key: QUERY_edgeDecisionService___DataTransformationConfig___Input
  header_key___JSON: JSON
  header_value: QUERY_edgeDecisionService___DataTransformationConfig___Input
  header_value___JSON: JSON
}

input QUERY_edgeDecisionService___ResponseHeaderInjection___Input {
  header_key: QUERY_edgeDecisionService___DataTransformationConfig___Input
  header_key___JSON: JSON
  header_value: QUERY_edgeDecisionService___DataTransformationConfig___Input
  header_value___JSON: JSON
}

type QUERY_edgeDecisionService___RuleDecisionInfo___ {
  rule_id: String
  rule_name: String
  rule_category: String
  policy_id: String
  policy_kind: String
  threat_type: String
  decision: QUERY_edgeDecisionService___Decision___
  message: String
  detection_time_millis: Int
  latency_us: Int
  additional_fields: [QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_RuleDecisionInfo_AdditionalFieldsEntry___additional_fields___MapOutput]
  additional_fields___JSON: JSON
}

type QUERY_edgeDecisionService___RuleEvalDebugInfo___ {
  rule_decision_info: QUERY_edgeDecisionService___RuleDecisionInfo___
  rule_decision_info___JSON: JSON
  variables: [QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_RuleEvalDebugInfo_VariablesEntry___variables___MapOutput]
  variables___JSON: JSON
  attributes: [QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_RuleEvalDebugInfo_AttributesEntry___attributes___MapOutput]
  attributes___JSON: JSON
  additional_fields: [QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_RuleEvalDebugInfo_AdditionalFieldsEntry___additional_fields___MapOutput]
  additional_fields___JSON: JSON
}

input QUERY_edgeDecisionService___RuleInfoDecoration___Input {
  rule_info_key: QUERY_edgeDecisionService___DataTransformationConfig___Input
  rule_info_key___JSON: JSON
  rule_info_value: QUERY_edgeDecisionService___DataTransformationConfig___Input
  rule_info_value___JSON: JSON
}

input QUERY_edgeDecisionService___ServiceScope___Input {
  service_names: [String]
  service_names___JSON: JSON
}

input QUERY_edgeDecisionService___SignatureRule___Input {
  match_condition: QUERY_edgeDecisionService___MatchCondition___Input
  match_condition___JSON: JSON
}

input QUERY_edgeDecisionService___SpanAttributeDecoration___Input {
  span_attribute_key: QUERY_edgeDecisionService___DataTransformationConfig___Input
  span_attribute_key___JSON: JSON
  span_attribute_value: QUERY_edgeDecisionService___DataTransformationConfig___Input
  span_attribute_value___JSON: JSON
}

input QUERY_edgeDecisionService___StringList___Input {
  values: [String]
  values___JSON: JSON
}

input QUERY_edgeDecisionService___Struct___Input {
  fields: [QUERY_edgeDecisionService_google_protobuf_Struct_FieldsEntry___fields___MapInput]
  fields___JSON: JSON
}

input QUERY_edgeDecisionService___StructuredMatchCondition___Input {
  lhs: QUERY_edgeDecisionService___AttributeDerivationMapping___Input
  lhs___JSON: JSON
  unary_operator: QUERY_edgeDecisionService___UnaryOperator___
  binary_operator: QUERY_edgeDecisionService___BinaryOperator___Input
  binary_operator___JSON: JSON
}

enum QUERY_edgeDecisionService___ThresholdOperator___ {
  THRESHOLD_OPERATOR_UNSPECIFIED
  THRESHOLD_OPERATOR_ABOVE
  THRESHOLD_OPERATOR_BELOW
  THRESHOLD_OPERATOR_ABOVE_OR_BELOW
}

input QUERY_edgeDecisionService___TimeRangeValue___Input {
  start: QUERY_edgeDecisionService___Timestamp___Input
  start___JSON: JSON
  end: QUERY_edgeDecisionService___Timestamp___Input
  end___JSON: JSON
}

input QUERY_edgeDecisionService___Timestamp___Input {
  seconds: Int
  nanos: Int
}

input QUERY_edgeDecisionService___ToleranceThreshold___Input {
  reference_value: Float
  percentage_tolerance: Float
  absolute_tolerance: Float
}

enum QUERY_edgeDecisionService___UnaryOperator___ {
  UNARY_OPERATOR_UNSPECIFIED
  UNARY_OPERATOR_IS_NULL
  UNARY_OPERATOR_IS_NOT_NULL
  UNARY_OPERATOR_IS_EMPTY
  UNARY_OPERATOR_IS_NOT_EMPTY
}

input QUERY_edgeDecisionService___UrlRegexScope___Input {
  url_regexes: [String]
  url_regexes___JSON: JSON
}

input QUERY_edgeDecisionService___UrlScope___Input {
  urls: [String]
  urls___JSON: JSON
}

input QUERY_edgeDecisionService___Value___Input {
  null_value: QUERY_edgeDecisionService___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: QUERY_edgeDecisionService___Struct___Input
  struct_value___JSON: JSON
  list_value: QUERY_edgeDecisionService___ListValue___Input
  list_value___JSON: JSON
}

input QUERY_edgeDecisionService___ValueAggregateThreshold___Input {
  dimension: QUERY_edgeDecisionService___AttributeDerivationMapping___Input
  dimension___JSON: JSON
  aggregation_type: QUERY_edgeDecisionService___AggregationType___
  static_threshold: Float
  range_threshold: QUERY_edgeDecisionService___RangeThreshold___Input
  range_threshold___JSON: JSON
  tolerance_threshold: QUERY_edgeDecisionService___ToleranceThreshold___Input
  tolerance_threshold___JSON: JSON
  threshold_operator: QUERY_edgeDecisionService___ThresholdOperator___
  disable_estimated_aggregate: Boolean
}

input QUERY_edgeDecisionService___VariableDerivationMapping___Input {
  name: String
  rules: [QUERY_edgeDecisionService___DerivationRule___Input]
  rules___JSON: JSON
}

type QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_AssessRiskDebugInfo_AdditionalFieldsEntry___additional_fields___MapOutput {
  key: String
  value: String
}

input QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_AssessRiskRequest_AdditionalFieldsEntry___additional_fields___MapInput {
  key: String
  value: String
}

type QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_AssessRiskResponse_AdditionalFieldsEntry___additional_fields___MapOutput {
  key: String
  value: String
}

input QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_GenericRequest_InputPayloadEntry___input_payload___MapInput {
  key: String
  value: String
}

type QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_LogEntry_AdditionalFieldsEntry___additional_fields___MapOutput {
  key: String
  value: String
}

type QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_LogEntry_MdcEntry___mdc___MapOutput {
  key: String
  value: String
}

type QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_RuleDecisionInfo_AdditionalFieldsEntry___additional_fields___MapOutput {
  key: String
  value: String
}

type QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_RuleEvalDebugInfo_AdditionalFieldsEntry___additional_fields___MapOutput {
  key: String
  value: String
}

type QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_RuleEvalDebugInfo_AttributesEntry___attributes___MapOutput {
  key: String
  value: String
}

type QUERY_edgeDecisionService_ai_traceable_edge_decision_engine_api_v1_RuleEvalDebugInfo_VariablesEntry___variables___MapOutput {
  key: String
  value: String
}

input QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_client_fingerprint_v1_ClientFingerprint_AttributesEntry___attributes___MapInput {
  key: String
  value: String
}

input QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_client_fingerprint_v1_ClientFingerprint_ScoresEntry___scores___MapInput {
  key: String
  value: Float
}

input QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_http_request_v1_HttpRequest_PriorEvalResultsEntry___prior_eval_results___MapInput {
  key: String
  value: String
}

input QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_http_request_v1_HttpRequest_RequestHeadersEntry___request_headers___MapInput {
  key: String
  value: String
}

input QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_http_request_v1_HttpRequest_ResponseHeadersEntry___response_headers___MapInput {
  key: String
  value: String
}

input QUERY_edgeDecisionService_ai_traceable_edge_decision_input_model_http_request_v1_HttpRequest_TagsEntry___tags___MapInput {
  key: String
  value: String
}

input QUERY_edgeDecisionService_google_protobuf_Struct_FieldsEntry___fields___MapInput {
  key: String
  value: QUERY_edgeDecisionService___Value___Input
}

type QUERY_fraudPolicyConfig___ApiAccessAnomalyConfig___ {
  id: String
  grouped_configs: [QUERY_fraudPolicyConfig___GroupedConfig___]
  grouped_configs___JSON: JSON
}

type QUERY_fraudPolicyConfig___ApiCollection___ {
  apis: [QUERY_fraudPolicyConfig___APISpec___]
  apis___JSON: JSON
}

type QUERY_fraudPolicyConfig___ApiOccurenceStats___ {
  prob_no_api_median: Float
  prob_no_api_median_absolute_deviation: Float
}

type QUERY_fraudPolicyConfig___ApiReference___ {
  api_id: String
  api_type: String
  api_name: String
}

type QUERY_fraudPolicyConfig___APISpec___ {
  api_reference: QUERY_fraudPolicyConfig___ApiReference___
  api_reference___JSON: JSON
  weight: Int
  request_attributes: QUERY_fraudPolicyConfig___RequestAttributes___
  request_attributes___JSON: JSON
  median_pct: Float
}

type QUERY_fraudPolicyConfig___AutoThreshold___ {
  """Placeholder field for empty messages"""
  placeholder: String
}

type QUERY_fraudPolicyConfig___BaselineConfig___ {
  baseline_spec: QUERY_fraudPolicyConfig___BaselineSpec___
  baseline_spec___JSON: JSON
  baseline_data_config: QUERY_fraudPolicyConfig___BaselineDataConfig___
  baseline_data_config___JSON: JSON
}

type QUERY_fraudPolicyConfig___BaselineDataConfig___ {
  num_periods: Int
  seasonality: QUERY_fraudPolicyConfig___Seasonality___
}

type QUERY_fraudPolicyConfig___BaselineSpec___ {
  simple_aggregation_baseline: QUERY_fraudPolicyConfig___SimpleAggregationBaseline___
  simple_aggregation_baseline___JSON: JSON
  linear_regression_baseline: QUERY_fraudPolicyConfig___LinearRegressionBaseline___
  linear_regression_baseline___JSON: JSON
  sma_baseline: QUERY_fraudPolicyConfig___SMABaseline___
  sma_baseline___JSON: JSON
  ewma_baseline: QUERY_fraudPolicyConfig___EWMABaseline___
  ewma_baseline___JSON: JSON
}

type QUERY_fraudPolicyConfig___CorrelationKey___ {
  attributes: [String]
  attributes___JSON: JSON
}

type QUERY_fraudPolicyConfig___CountFieldVersions___ {
  field_name: String
}

type QUERY_fraudPolicyConfig___CountRelatedEntities___ {
  rel_type: String
}

type QUERY_fraudPolicyConfig___DataQuery___ {
  entity_graph_data_query: QUERY_fraudPolicyConfig___EntityGraphDataQuery___
  entity_graph_data_query___JSON: JSON
  entity_metric_data_query: QUERY_fraudPolicyConfig___EntityMetricDataQuery___
  entity_metric_data_query___JSON: JSON
  metric_data_query: QUERY_fraudPolicyConfig___MetricDataQuery___
  metric_data_query___JSON: JSON
}

enum QUERY_fraudPolicyConfig___Dialect___ {
  DIALECT_UNSPECIFIED
  DIALECT_TRINO
  DIALECT_SPARK
  DIALECT_PINOT
  DIALECT_MONGO
  DIALECT_POSTGRES
}

type QUERY_fraudPolicyConfig___DimensionList___ {
  dimensions: [String]
  dimensions___JSON: JSON
}

enum QUERY_fraudPolicyConfig___EntityFieldType___ {
  ENTITY_FIELD_TYPE_UNSPECIFIED
  ENTITY_FIELD_TYPE_FIELD
  ENTITY_FIELD_TYPE_TAG
}

type QUERY_fraudPolicyConfig___EntityGraphBasedFraudRule___ {
  entity_graph_data_query: QUERY_fraudPolicyConfig___EntityGraphDataQuery___
  entity_graph_data_query___JSON: JSON
  threshold_definition: QUERY_fraudPolicyConfig___ThresholdDefinition___
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityGraphBasedFraudRule_MessageParamsEntry___message_params___MapOutput]
  message_params___JSON: JSON
}

type QUERY_fraudPolicyConfig___EntityGraphDataQuery___ {
  entity_graph_query: QUERY_fraudPolicyConfig___EntityGraphQuery___
  entity_graph_query___JSON: JSON
  raw_sql_query: String
  dialect: QUERY_fraudPolicyConfig___Dialect___
  query_params: QUERY_fraudPolicyConfig___QueryParams___
  query_params___JSON: JSON
}

type QUERY_fraudPolicyConfig___EntityGraphQuery___ {
  entity_query: QUERY_fraudPolicyConfig___EntityQuery___
  entity_query___JSON: JSON
  relationship_navs: [QUERY_fraudPolicyConfig___RelationshipQuery___]
  relationship_navs___JSON: JSON
  sort_and_limit: QUERY_fraudPolicyConfig___SortAndLimit___
  sort_and_limit___JSON: JSON
}

type QUERY_fraudPolicyConfig___EntityMetricBasedFraudRule___ {
  entity_metric_data_query: QUERY_fraudPolicyConfig___EntityMetricDataQuery___
  entity_metric_data_query___JSON: JSON
  threshold_definition: QUERY_fraudPolicyConfig___ThresholdDefinition___
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityMetricBasedFraudRule_MessageParamsEntry___message_params___MapOutput]
  message_params___JSON: JSON
}

type QUERY_fraudPolicyConfig___EntityMetricDataQuery___ {
  entity_metric_query: QUERY_fraudPolicyConfig___EntityMetricQuery___
  entity_metric_query___JSON: JSON
  raw_sql_query: String
  dialect: QUERY_fraudPolicyConfig___Dialect___
  query_params: QUERY_fraudPolicyConfig___QueryParams___
  query_params___JSON: JSON
}

type QUERY_fraudPolicyConfig___EntityMetricQuery___ {
  entity_query: QUERY_fraudPolicyConfig___EntityQuery___
  entity_query___JSON: JSON
  count_related_entities: QUERY_fraudPolicyConfig___CountRelatedEntities___
  count_related_entities___JSON: JSON
  count_field_versions: QUERY_fraudPolicyConfig___CountFieldVersions___
  count_field_versions___JSON: JSON
  granularity: QUERY_fraudPolicyConfig___TimeObj___
  granularity___JSON: JSON
  single_aggregate_value: Boolean
  time_frame: QUERY_fraudPolicyConfig___TimeFrame___
  time_frame___JSON: JSON
}

type QUERY_fraudPolicyConfig___EntityQuery___ {
  type_id: String
  entity_ids: [String]
  entity_ids___JSON: JSON
  predicates: [QUERY_fraudPolicyConfig___EntityQueryPredicate___]
  predicates___JSON: JSON
  projections: [QUERY_fraudPolicyConfig___EntityQueryProjection___]
  projections___JSON: JSON
  rel_predicates: [QUERY_fraudPolicyConfig___RelationshipPredicate___]
  rel_predicates___JSON: JSON
}

type QUERY_fraudPolicyConfig___EntityQueryPredicate___ {
  field_type: QUERY_fraudPolicyConfig___EntityFieldType___
  key: String
  map_key: String
  op: QUERY_fraudPolicyConfig___Operation___
  value: QUERY_fraudPolicyConfig___FieldValue___
  value___JSON: JSON
  range_values: [QUERY_fraudPolicyConfig___FieldValue___]
  range_values___JSON: JSON
}

type QUERY_fraudPolicyConfig___EntityQueryProjection___ {
  field_type: QUERY_fraudPolicyConfig___EntityFieldType___
  name: String
}

type QUERY_fraudPolicyConfig___EnvironmentScope___ {
  environment_ids: [String]
  environment_ids___JSON: JSON
}

type QUERY_fraudPolicyConfig___EWMABaseline___ {
  alpha: Float
}

enum QUERY_fraudPolicyConfig___FieldType___ {
  FIELD_TYPE_UNSPECIFIED
  FIELD_TYPE_STR
  FIELD_TYPE_BOOL
  FIELD_TYPE_LONG
  FIELD_TYPE_DOUBLE
  FIELD_TYPE_LIST
  FIELD_TYPE_MAP
  FIELD_TYPE_TIMESTAMP
  FIELD_TYPE_BINARY
  FIELD_TYPE_INT
}

type QUERY_fraudPolicyConfig___FieldValue___ {
  list_val: QUERY_fraudPolicyConfig___ListValue___
  list_val___JSON: JSON
  map_val: QUERY_fraudPolicyConfig___MapValue___
  map_val___JSON: JSON
  primitive_val: QUERY_fraudPolicyConfig___PrimitiveFieldValue___
  primitive_val___JSON: JSON
}

type QUERY_fraudPolicyConfig___FraudBizImpactRule___ {
  fraud_data_query: QUERY_fraudPolicyConfig___FraudDataQuery___
  fraud_data_query___JSON: JSON
}

type QUERY_fraudPolicyConfig___FraudDataQuery___ {
  data_query: QUERY_fraudPolicyConfig___DataQuery___
  data_query___JSON: JSON
  message_format: String
  message_params: [QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_FraudDataQuery_MessageParamsEntry___message_params___MapOutput]
  message_params___JSON: JSON
}

type QUERY_fraudPolicyConfig___FraudPolicy___ {
  id: String
  name: String
  fraud_policy_rule: QUERY_fraudPolicyConfig___FraudPolicyRule___
  fraud_policy_rule___JSON: JSON
  category: QUERY_fraudPolicyConfig___FraudPolicyCategory___
  primary_entity_type: String
  time_window: QUERY_fraudPolicyConfig___TimeWindow___
  time_window___JSON: JSON
  watcher_policy: QUERY_fraudPolicyConfig___FraudWatcherPolicy___
  watcher_policy___JSON: JSON
  biz_impact_rules: [QUERY_fraudPolicyConfig___FraudBizImpactRule___]
  biz_impact_rules___JSON: JSON
  disabled: Boolean
  labels: [String]
  labels___JSON: JSON
  fraud_policy_stage: QUERY_fraudPolicyConfig___FraudPolicyStage___
  description: String
  risk_spec: QUERY_fraudPolicyConfig___FraudRiskSpec___
  risk_spec___JSON: JSON
  fraud_risk_category: String
  scope: QUERY_fraudPolicyConfig___FraudPolicyScope___
  scope___JSON: JSON
  schedule: QUERY_fraudPolicyConfig___Schedule___
  schedule___JSON: JSON
  version: Int
  policy_group: QUERY_fraudPolicyConfig___PolicyGroup___
  policy_type: QUERY_fraudPolicyConfig___PolicyType___
  template_id: String
  incident_config: QUERY_fraudPolicyConfig___Value___
  incident_config___JSON: JSON
  triage_config: QUERY_fraudPolicyConfig___Value___
  triage_config___JSON: JSON
  execution_status: QUERY_fraudPolicyConfig___Value___
  execution_status___JSON: JSON
  additional_fields: QUERY_fraudPolicyConfig___Value___
  additional_fields___JSON: JSON
}

enum QUERY_fraudPolicyConfig___FraudPolicyCategory___ {
  FRAUD_POLICY_CATEGORY_UNSPECIFIED
  FRAUD_POLICY_CATEGORY_RISK
  FRAUD_POLICY_CATEGORY_FRAUD
  FRAUD_POLICY_CATEGORY_BOT
}

type QUERY_fraudPolicyConfig___FraudPolicyRule___ {
  fraud_rule: QUERY_fraudPolicyConfig___FraudRule___
  fraud_rule___JSON: JSON
  logical_fraud_rule: QUERY_fraudPolicyConfig___LogicalFraudRule___
  logical_fraud_rule___JSON: JSON
}

type QUERY_fraudPolicyConfig___FraudPolicyScope___ {
  environment_scope: QUERY_fraudPolicyConfig___EnvironmentScope___
  environment_scope___JSON: JSON
  tenant_scope: QUERY_fraudPolicyConfig___TenantScope___
  tenant_scope___JSON: JSON
}

enum QUERY_fraudPolicyConfig___FraudPolicyStage___ {
  FRAUD_POLICY_STAGE_UNSPECIFIED
  FRAUD_POLICY_STAGE_PRODUCTION
  FRAUD_POLICY_STAGE_STAGING
  FRAUD_POLICY_STAGE_INTERNAL
  FRAUD_POLICY_STAGE_SIMULATION
}

enum QUERY_fraudPolicyConfig___FraudRiskSeverity___ {
  FRAUD_RISK_SEVERITY_UNSPECIFIED
  FRAUD_RISK_SEVERITY_LOW
  FRAUD_RISK_SEVERITY_MEDIUM
  FRAUD_RISK_SEVERITY_HIGH
}

type QUERY_fraudPolicyConfig___FraudRiskSpec___ {
  score: Int
  severity: QUERY_fraudPolicyConfig___FraudRiskSeverity___
}

type QUERY_fraudPolicyConfig___FraudRule___ {
  fraud_rule_id: String
  entity_graph_fraud_rule: QUERY_fraudPolicyConfig___EntityGraphBasedFraudRule___
  entity_graph_fraud_rule___JSON: JSON
  entity_metric_fraud_rule: QUERY_fraudPolicyConfig___EntityMetricBasedFraudRule___
  entity_metric_fraud_rule___JSON: JSON
  metric_fraud_rule: QUERY_fraudPolicyConfig___MetricBasedFraudRule___
  metric_fraud_rule___JSON: JSON
  inline_detection_config: String
  transformation_config: String
  transformation_config_fraud_rule: QUERY_fraudPolicyConfig___TransformationConfigBasedFraudRule___
  transformation_config_fraud_rule___JSON: JSON
}

enum QUERY_fraudPolicyConfig___FraudRuleLogicalOperator___ {
  FRAUD_RULE_LOGICAL_OPERATOR_UNSPECIFIED
  FRAUD_RULE_LOGICAL_OPERATOR_AND
  FRAUD_RULE_LOGICAL_OPERATOR_OR
}

type QUERY_fraudPolicyConfig___FraudWatcherPolicy___ {
  watcher_policy: QUERY_fraudPolicyConfig___FraudPolicy___
  watcher_policy___JSON: JSON
  ttl: QUERY_fraudPolicyConfig___TimeObj___
  ttl___JSON: JSON
}

input QUERY_fraudPolicyConfig___GetApiAccessAnomalyConfigRequest___Input {
  id: String
}

type QUERY_fraudPolicyConfig___GetApiAccessAnomalyConfigResponse___ {
  config: QUERY_fraudPolicyConfig___ApiAccessAnomalyConfig___
  config___JSON: JSON
}

input QUERY_fraudPolicyConfig___GetApiAccessAnomalyConfigsRequest___Input {
  """Placeholder field for empty messages"""
  placeholder: String
}

type QUERY_fraudPolicyConfig___GetApiAccessAnomalyConfigsResponse___ {
  configs: [QUERY_fraudPolicyConfig___ApiAccessAnomalyConfig___]
  configs___JSON: JSON
}

input QUERY_fraudPolicyConfig___GetFraudPolicyListRequest___Input {
  fraud_policy_id: [String]
  fraud_policy_id___JSON: JSON
  include_disabled: Boolean
}

type QUERY_fraudPolicyConfig___GetFraudPolicyListResponse___ {
  fraud_policy_list: [QUERY_fraudPolicyConfig___FraudPolicy___]
  fraud_policy_list___JSON: JSON
}

input QUERY_fraudPolicyConfig___GetFraudPolicyRequest___Input {
  fraud_policy_id: String
  include_disabled: Boolean
}

type QUERY_fraudPolicyConfig___GetFraudPolicyResponse___ {
  fraud_policy: QUERY_fraudPolicyConfig___FraudPolicy___
  fraud_policy___JSON: JSON
}

type QUERY_fraudPolicyConfig___GroupedConfig___ {
  pre: QUERY_fraudPolicyConfig___ApiCollection___
  pre___JSON: JSON
  post: QUERY_fraudPolicyConfig___ApiCollection___
  post___JSON: JSON
  correlation_key: QUERY_fraudPolicyConfig___CorrelationKey___
  correlation_key___JSON: JSON
  api_reference: QUERY_fraudPolicyConfig___ApiReference___
  api_reference___JSON: JSON
  lookback_time_window: QUERY_fraudPolicyConfig___TimeWindow___
  lookback_time_window___JSON: JSON
  request_attributes: QUERY_fraudPolicyConfig___RequestAttributes___
  request_attributes___JSON: JSON
  pre_occurence_stats: QUERY_fraudPolicyConfig___ApiOccurenceStats___
  pre_occurence_stats___JSON: JSON
  post_occurence_stats: QUERY_fraudPolicyConfig___ApiOccurenceStats___
  post_occurence_stats___JSON: JSON
  grouping_kv: [QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_GroupedConfig_GroupingKvEntry___grouping_kv___MapOutput]
  grouping_kv___JSON: JSON
}

type QUERY_fraudPolicyConfig___LinearRegressionBaseline___ {
  regressor: QUERY_fraudPolicyConfig___Regressor___
}

type QUERY_fraudPolicyConfig___ListValue___ {
  values: [QUERY_fraudPolicyConfig___PrimitiveFieldValue___]
  values___JSON: JSON
}

type QUERY_fraudPolicyConfig___LiteralParam___ {
  name: String
  value: String
}

type QUERY_fraudPolicyConfig___LogicalFraudRule___ {
  operator: QUERY_fraudPolicyConfig___FraudRuleLogicalOperator___
  rules: [QUERY_fraudPolicyConfig___FraudPolicyRule___]
  rules___JSON: JSON
}

type QUERY_fraudPolicyConfig___ManualThreshold___ {
  static_value: Float
  query_based_threshold: QUERY_fraudPolicyConfig___QueryBasedThreshold___
  query_based_threshold___JSON: JSON
}

type QUERY_fraudPolicyConfig___MapValue___ {
  entries: [QUERY_fraudPolicyConfig_ai_traceable_fraud_datamodel_config_service_v1_MapValue_EntriesEntry___entries___MapOutput]
  entries___JSON: JSON
}

type QUERY_fraudPolicyConfig___MetricBasedFraudRule___ {
  metric_data_query: QUERY_fraudPolicyConfig___MetricDataQuery___
  metric_data_query___JSON: JSON
  threshold_definition: QUERY_fraudPolicyConfig___ThresholdDefinition___
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_MetricBasedFraudRule_MessageParamsEntry___message_params___MapOutput]
  message_params___JSON: JSON
}

type QUERY_fraudPolicyConfig___MetricDataQuery___ {
  metric_query: QUERY_fraudPolicyConfig___MetricQuery___
  metric_query___JSON: JSON
  raw_sql_query: String
  dialect: QUERY_fraudPolicyConfig___Dialect___
  query_params: QUERY_fraudPolicyConfig___QueryParams___
  query_params___JSON: JSON
}

type QUERY_fraudPolicyConfig___MetricQuery___ {
  field_to_aggregate: String
  metric_id: String
  dimensions: QUERY_fraudPolicyConfig___DimensionList___
  dimensions___JSON: JSON
  group_by: [String]
  group_by___JSON: JSON
  granularity: QUERY_fraudPolicyConfig___TimeObj___
  granularity___JSON: JSON
  single_aggregate_value: Boolean
  time_frame: QUERY_fraudPolicyConfig___TimeFrame___
  time_frame___JSON: JSON
  filters: [QUERY_fraudPolicyConfig___MetricQueryFilter___]
  filters___JSON: JSON
}

type QUERY_fraudPolicyConfig___MetricQueryFilter___ {
  key: String
  op: QUERY_fraudPolicyConfig___Operation___
  value: QUERY_fraudPolicyConfig___FieldValue___
  value___JSON: JSON
}

enum QUERY_fraudPolicyConfig___NullValue___ {
  NULL_VALUE
}

enum QUERY_fraudPolicyConfig___Operation___ {
  OPERATION_UNSPECIFIED
  OPERATION_EQ
  OPERATION_LT
  OPERATION_GT
  OPERATION_CONTAINS
  OPERATION_STARTS_WITH
  OPERATION_EXISTS
  OPERATION_DOES_NOT_EXIST
  OPERATION_REGEX
  OPERATION_NEQ
  OPERATION_GTE
  OPERATION_LTE
  OPERATION_NOT_CONTAINS
  OPERATION_NOT_REGEX
  OPERATION_GTE_NUM_VERSIONS
}

type QUERY_fraudPolicyConfig___Param___ {
  literal_param: QUERY_fraudPolicyConfig___LiteralParam___
  literal_param___JSON: JSON
  typed_param: QUERY_fraudPolicyConfig___TypedParam___
  typed_param___JSON: JSON
}

enum QUERY_fraudPolicyConfig___PolicyGroup___ {
  POLICY_GROUP_UNSPECIFIED
  POLICY_GROUP_BOT
  POLICY_GROUP_WAF
  POLICY_GROUP_MODSEC
  POLICY_GROUP_CUSTOM
  POLICY_GROUP_FRAUD
}

enum QUERY_fraudPolicyConfig___PolicyType___ {
  POLICY_TYPE_UNSPECIFIED
  POLICY_TYPE_VOLUMETRIC
  POLICY_TYPE_API_ACCESS
  POLICY_TYPE_ACCOUNT_TAKEOVER
  POLICY_TYPE_CUSTOM
}

type QUERY_fraudPolicyConfig___PrimitiveFieldValue___ {
  long_val: Int
  double_val: Float
  string_val: String
  boolean_val: Boolean
  timestamp_val: Int
  binary_val: String
  int_val: Int
}

type QUERY_fraudPolicyConfig___QuantileFunc___ {
  quantile: Float
}

type QUERY_fraudPolicyConfig___QueryBasedThreshold___ {
  copy_query_from_rule: Boolean
  threshold_query: QUERY_fraudPolicyConfig___DataQuery___
  threshold_query___JSON: JSON
  threshold_operation: QUERY_fraudPolicyConfig___ThresholdOperation___
  threshold_operation___JSON: JSON
  baseline_config: QUERY_fraudPolicyConfig___BaselineConfig___
  baseline_config___JSON: JSON
}

type QUERY_fraudPolicyConfig___QueryParams___ {
  query_params: [QUERY_fraudPolicyConfig___Param___]
  query_params___JSON: JSON
}

enum QUERY_fraudPolicyConfig___Regressor___ {
  REGRESSOR_UNSPECIFIED
  REGRESSOR_LINEAR
  REGRESSOR_THEIL_SEN
  REGRESSOR_HUBER
}

type QUERY_fraudPolicyConfig___RelationshipPredicate___ {
  type_id: String
  op: QUERY_fraudPolicyConfig___Operation___
  predicates: [QUERY_fraudPolicyConfig___EntityQueryPredicate___]
  predicates___JSON: JSON
  nav_name: String
  entity_type_id: String
  entity_ids: [String]
  entity_ids___JSON: JSON
}

type QUERY_fraudPolicyConfig___RelationshipQuery___ {
  type_id: String
  op: QUERY_fraudPolicyConfig___Operation___
  predicates: [QUERY_fraudPolicyConfig___EntityQueryPredicate___]
  predicates___JSON: JSON
  projections: [QUERY_fraudPolicyConfig___EntityQueryProjection___]
  projections___JSON: JSON
  entity_type_id: String
  nav_name: String
}

type QUERY_fraudPolicyConfig___RequestAttributes___ {
  request_method: [String]
  request_method___JSON: JSON
  status_code: Int
  status_code_regex: String
  request_body_type: [String]
  request_body_type___JSON: JSON
  domain_names: [String]
  domain_names___JSON: JSON
  environment: String
  host_header: [String]
  host_header___JSON: JSON
}

type QUERY_fraudPolicyConfig___Schedule___ {
  cron_expression: String
  interval: QUERY_fraudPolicyConfig___TimeObj___
  interval___JSON: JSON
  start_time: Int
  end_time: Int
}

enum QUERY_fraudPolicyConfig___Seasonality___ {
  SEASONALITY_UNSPECIFIED
  SEASONALITY_HOURLY
  SEASONALITY_DAILY
  SEASONALITY_WEEKLY
}

type QUERY_fraudPolicyConfig___SimpleAggregationBaseline___ {
  func: QUERY_fraudPolicyConfig___SimpleAggregationFunc___
  quantile_func: QUERY_fraudPolicyConfig___QuantileFunc___
  quantile_func___JSON: JSON
}

enum QUERY_fraudPolicyConfig___SimpleAggregationFunc___ {
  SIMPLE_AGGREGATION_FUNC_UNSPECIFIED
  SIMPLE_AGGREGATION_FUNC_SUM
  SIMPLE_AGGREGATION_FUNC_AVG
  SIMPLE_AGGREGATION_FUNC_COUNT
  SIMPLE_AGGREGATION_FUNC_MIN
  SIMPLE_AGGREGATION_FUNC_MAX
  SIMPLE_AGGREGATION_FUNC_LATEST
}

type QUERY_fraudPolicyConfig___SMABaseline___ {
  window_size: Int
}

type QUERY_fraudPolicyConfig___SortAndLimit___ {
  field_name: String
  sort_order: QUERY_fraudPolicyConfig___SortOrder___
  sort_options: QUERY_fraudPolicyConfig___SortOptions___
  limit: Int
}

enum QUERY_fraudPolicyConfig___SortOptions___ {
  SORT_OPTIONS_UNSPECIFIED
  SORT_OPTIONS_NUMERIC
  SORT_OPTIONS_IGNORE_CASE
}

enum QUERY_fraudPolicyConfig___SortOrder___ {
  SORT_ORDER_UNSPECIFIED
  SORT_ORDER_ASC
  SORT_ORDER_DESC
}

type QUERY_fraudPolicyConfig___Struct___ {
  fields: [QUERY_fraudPolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput]
  fields___JSON: JSON
}

type QUERY_fraudPolicyConfig___TenantScope___ {
  """Placeholder field for empty messages"""
  placeholder: String
}

type QUERY_fraudPolicyConfig___ThresholdAbsolute___ {
  """Placeholder field for empty messages"""
  placeholder: String
}

type QUERY_fraudPolicyConfig___ThresholdDefinition___ {
  threshold_name: String
  auto_threshold: QUERY_fraudPolicyConfig___AutoThreshold___
  auto_threshold___JSON: JSON
  manual_threshold: QUERY_fraudPolicyConfig___ManualThreshold___
  manual_threshold___JSON: JSON
  threshold_operator: QUERY_fraudPolicyConfig___ThresholdOperator___
}

type QUERY_fraudPolicyConfig___ThresholdDelta___ {
  delta: Float
}

type QUERY_fraudPolicyConfig___ThresholdOperation___ {
  threshold_delta: QUERY_fraudPolicyConfig___ThresholdDelta___
  threshold_delta___JSON: JSON
  threshold_percent: QUERY_fraudPolicyConfig___ThresholdPercent___
  threshold_percent___JSON: JSON
  threshold_std_dev: QUERY_fraudPolicyConfig___ThresholdStdDev___
  threshold_std_dev___JSON: JSON
  threshold_abs: QUERY_fraudPolicyConfig___ThresholdAbsolute___
  threshold_abs___JSON: JSON
}

enum QUERY_fraudPolicyConfig___ThresholdOperator___ {
  THRESHOLD_OPERATOR_UNSPECIFIED
  THRESHOLD_OPERATOR_ABOVE
  THRESHOLD_OPERATOR_BELOW
  THRESHOLD_OPERATOR_ABOVE_OR_BELOW
}

type QUERY_fraudPolicyConfig___ThresholdPercent___ {
  percent: Float
}

type QUERY_fraudPolicyConfig___ThresholdStdDev___ {
  num_std_devs: Float
}

type QUERY_fraudPolicyConfig___TimeFrame___ {
  start_time: Int
  end_time: Int
}

type QUERY_fraudPolicyConfig___TimeObj___ {
  value: Int
  unit: QUERY_fraudPolicyConfig___TimeUnit___
}

enum QUERY_fraudPolicyConfig___TimeUnit___ {
  TIME_UNIT_UNSPECIFIED
  TIME_UNIT_HOURS
  TIME_UNIT_DAYS
  TIME_UNIT_WEEKS
}

type QUERY_fraudPolicyConfig___TimeWindow___ {
  relative_time: QUERY_fraudPolicyConfig___TimeObj___
  relative_time___JSON: JSON
  time_frame: QUERY_fraudPolicyConfig___TimeFrame___
  time_frame___JSON: JSON
}

type QUERY_fraudPolicyConfig___TransformationConfigBasedFraudRule___ {
  transformation_config: String
  threshold_definition: QUERY_fraudPolicyConfig___ThresholdDefinition___
  threshold_definition___JSON: JSON
  message_format: String
  message_params: [QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_TransformationConfigBasedFraudRule_MessageParamsEntry___message_params___MapOutput]
  message_params___JSON: JSON
}

type QUERY_fraudPolicyConfig___TypedParam___ {
  name: String
  type: QUERY_fraudPolicyConfig___FieldType___
  value: QUERY_fraudPolicyConfig___FieldValue___
  value___JSON: JSON
}

type QUERY_fraudPolicyConfig___Value___ {
  null_value: QUERY_fraudPolicyConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: QUERY_fraudPolicyConfig___Struct___
  struct_value___JSON: JSON
  list_value: QUERY_fraudPolicyConfig___ListValue___
  list_value___JSON: JSON
}

type QUERY_fraudPolicyConfig_ai_traceable_fraud_datamodel_config_service_v1_MapValue_EntriesEntry___entries___MapOutput {
  key: String
  value: QUERY_fraudPolicyConfig___PrimitiveFieldValue___
}

type QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityGraphBasedFraudRule_MessageParamsEntry___message_params___MapOutput {
  key: String
  value: QUERY_fraudPolicyConfig___FieldType___
}

type QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_EntityMetricBasedFraudRule_MessageParamsEntry___message_params___MapOutput {
  key: String
  value: QUERY_fraudPolicyConfig___FieldType___
}

type QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_FraudDataQuery_MessageParamsEntry___message_params___MapOutput {
  key: String
  value: QUERY_fraudPolicyConfig___FieldType___
}

type QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_GroupedConfig_GroupingKvEntry___grouping_kv___MapOutput {
  key: String
  value: String
}

type QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_MetricBasedFraudRule_MessageParamsEntry___message_params___MapOutput {
  key: String
  value: QUERY_fraudPolicyConfig___FieldType___
}

type QUERY_fraudPolicyConfig_ai_traceable_fraud_policy_config_service_v1_TransformationConfigBasedFraudRule_MessageParamsEntry___message_params___MapOutput {
  key: String
  value: QUERY_fraudPolicyConfig___FieldType___
}

type QUERY_fraudPolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput {
  key: String
  value: QUERY_fraudPolicyConfig___Value___
}

type QUERY_traceableEdgeBotConfig___AttributeDerivationMapping___ {
  name: String
  type: QUERY_traceableEdgeBotConfig___FieldType___
  rules: [QUERY_traceableEdgeBotConfig___DerivationRule___]
  rules___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___BinaryOperator___ {
  list_value: QUERY_traceableEdgeBotConfig___ListValue___
  list_value___JSON: JSON
  regex: String
  bloom_filter: String
  number_value: Float
  bool_value: Boolean
  null_value: QUERY_traceableEdgeBotConfig___NullValue___
  string_value: String
  range_value: QUERY_traceableEdgeBotConfig___RangeValue___
  range_value___JSON: JSON
  time_range_value: QUERY_traceableEdgeBotConfig___TimeRangeValue___
  time_range_value___JSON: JSON
  match_operator: QUERY_traceableEdgeBotConfig___MatchOperator___
}

type QUERY_traceableEdgeBotConfig___ConditionalConfig___ {
  bool_expression: String
  true_transformation: QUERY_traceableEdgeBotConfig___DataTransformationConfig___
  true_transformation___JSON: JSON
  false_transformation: QUERY_traceableEdgeBotConfig___DataTransformationConfig___
  false_transformation___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___DataTransformationConfig___ {
  static_value: QUERY_traceableEdgeBotConfig___Value___
  static_value___JSON: JSON
  jexl_expression: QUERY_traceableEdgeBotConfig___JexlExpressionConfig___
  jexl_expression___JSON: JSON
  jexl_script: QUERY_traceableEdgeBotConfig___JexlScriptConfig___
  jexl_script___JSON: JSON
  regex: QUERY_traceableEdgeBotConfig___RegexConfig___
  regex___JSON: JSON
  conditional: QUERY_traceableEdgeBotConfig___ConditionalConfig___
  conditional___JSON: JSON
  output_type: QUERY_traceableEdgeBotConfig___FieldType___
}

type QUERY_traceableEdgeBotConfig___DerivationRule___ {
  transformation_config: QUERY_traceableEdgeBotConfig___DataTransformationConfig___
  transformation_config___JSON: JSON
  transformation_configs: [QUERY_traceableEdgeBotConfig___DataTransformationConfig___]
  transformation_configs___JSON: JSON
  condition_expression: QUERY_traceableEdgeBotConfig___JexlExpressionConfig___
  condition_expression___JSON: JSON
  match_condition: QUERY_traceableEdgeBotConfig___MatchCondition___
  match_condition___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___EnvironmentScope___ {
  environments: [String]
  environments___JSON: JSON
}

enum QUERY_traceableEdgeBotConfig___FieldType___ {
  FIELD_TYPE_UNSPECIFIED
  FIELD_TYPE_STR
  FIELD_TYPE_BOOL
  FIELD_TYPE_LONG
  FIELD_TYPE_DOUBLE
  FIELD_TYPE_LIST
  FIELD_TYPE_MAP
  FIELD_TYPE_TIMESTAMP
  FIELD_TYPE_BINARY
  FIELD_TYPE_INT
}

type QUERY_traceableEdgeBotConfig___FlowConfig___ {
  id: String
  name: String
  disabled: Boolean
  page_ids: [String]
  page_ids___JSON: JSON
  api_ids: [String]
  api_ids___JSON: JSON
  pages: [QUERY_traceableEdgeBotConfig___PageDerivationRules___]
  pages___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___GenericMatchCondition___ {
  jexl_expression: QUERY_traceableEdgeBotConfig___JexlExpressionConfig___
  jexl_expression___JSON: JSON
  jexl_script: QUERY_traceableEdgeBotConfig___JexlScriptConfig___
  jexl_script___JSON: JSON
}

input QUERY_traceableEdgeBotConfig___GetAllFlowConfigsRequest___Input {
  """Placeholder field for empty messages"""
  placeholder: String
}

type QUERY_traceableEdgeBotConfig___GetAllFlowConfigsResponse___ {
  configs: [QUERY_traceableEdgeBotConfig___FlowConfig___]
  configs___JSON: JSON
}

input QUERY_traceableEdgeBotConfig___GetFlowConfigRequest___Input {
  id: String
}

type QUERY_traceableEdgeBotConfig___GetFlowConfigResponse___ {
  config: QUERY_traceableEdgeBotConfig___FlowConfig___
  config___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___HttpMethodScope___ {
  http_methods: [String]
  http_methods___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___JexlExpressionConfig___ {
  jexl_expression: String
}

type QUERY_traceableEdgeBotConfig___JexlScriptConfig___ {
  jexl_script: String
}

type QUERY_traceableEdgeBotConfig___ListValue___ {
  values: [QUERY_traceableEdgeBotConfig___Value___]
  values___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___LogicalMatchCondition___ {
  operator: QUERY_traceableEdgeBotConfig___LogicalMatchOperator___
  conditions: [QUERY_traceableEdgeBotConfig___MatchCondition___]
  conditions___JSON: JSON
}

enum QUERY_traceableEdgeBotConfig___LogicalMatchOperator___ {
  LOGICAL_MATCH_OPERATOR_UNSPECIFIED
  LOGICAL_MATCH_OPERATOR_AND
  LOGICAL_MATCH_OPERATOR_OR
}

type QUERY_traceableEdgeBotConfig___MatchCondition___ {
  generic_match_condition: QUERY_traceableEdgeBotConfig___GenericMatchCondition___
  generic_match_condition___JSON: JSON
  structured_match_condition: QUERY_traceableEdgeBotConfig___StructuredMatchCondition___
  structured_match_condition___JSON: JSON
  logical_match_condition: QUERY_traceableEdgeBotConfig___LogicalMatchCondition___
  logical_match_condition___JSON: JSON
  negate: Boolean
}

enum QUERY_traceableEdgeBotConfig___MatchOperator___ {
  MATCH_OPERATOR_UNSPECIFIED
  MATCH_OPERATOR_IN
  MATCH_OPERATOR_NOT_IN
  MATCH_OPERATOR_LIKE
  MATCH_OPERATOR_NOT_LIKE
  MATCH_OPERATOR_EQ
  MATCH_OPERATOR_NOT_EQ
  MATCH_OPERATOR_GT
  MATCH_OPERATOR_LT
  MATCH_OPERATOR_GTE
  MATCH_OPERATOR_LTE
  MATCH_OPERATOR_BETWEEN
  MATCH_OPERATOR_CONTAINS
  MATCH_OPERATOR_STARTS_WITH
  MATCH_OPERATOR_ENDS_WITH
  MATCH_OPERATOR_EQ_IGNORE_CASE
}

enum QUERY_traceableEdgeBotConfig___NullValue___ {
  NULL_VALUE
}

type QUERY_traceableEdgeBotConfig___PageDerivationRule___ {
  url_based_rule: QUERY_traceableEdgeBotConfig___UrlBasedDerivationRule___
  url_based_rule___JSON: JSON
  window_location_based_rule: QUERY_traceableEdgeBotConfig___WindowLocationBasedDerivationRule___
  window_location_based_rule___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___PageDerivationRules___ {
  page_id: String
  scope_conditions: [QUERY_traceableEdgeBotConfig___ScopeCondition___]
  scope_conditions___JSON: JSON
  rules: [QUERY_traceableEdgeBotConfig___PageDerivationRule___]
  rules___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___RangeValue___ {
  lower: Float
  upper: Float
}

type QUERY_traceableEdgeBotConfig___RegexConfig___ {
  regex: String
  split_regex: String
  group_indices: [Int]
  group_indices___JSON: JSON
  join_delimiter: String
  value_transformation: QUERY_traceableEdgeBotConfig___DataTransformationConfig___
  value_transformation___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___ScopeCondition___ {
  environment_scope: QUERY_traceableEdgeBotConfig___EnvironmentScope___
  environment_scope___JSON: JSON
  service_scope: QUERY_traceableEdgeBotConfig___ServiceScope___
  service_scope___JSON: JSON
  url_scope: QUERY_traceableEdgeBotConfig___UrlScope___
  url_scope___JSON: JSON
  url_regex_scope: QUERY_traceableEdgeBotConfig___UrlRegexScope___
  url_regex_scope___JSON: JSON
  http_method_scope: QUERY_traceableEdgeBotConfig___HttpMethodScope___
  http_method_scope___JSON: JSON
  match_condition_scope: QUERY_traceableEdgeBotConfig___MatchCondition___
  match_condition_scope___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___ServiceScope___ {
  service_names: [String]
  service_names___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___Struct___ {
  fields: [QUERY_traceableEdgeBotConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput]
  fields___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___StructuredMatchCondition___ {
  lhs: QUERY_traceableEdgeBotConfig___AttributeDerivationMapping___
  lhs___JSON: JSON
  unary_operator: QUERY_traceableEdgeBotConfig___UnaryOperator___
  binary_operator: QUERY_traceableEdgeBotConfig___BinaryOperator___
  binary_operator___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___TimeRangeValue___ {
  start: QUERY_traceableEdgeBotConfig___Timestamp___
  start___JSON: JSON
  end: QUERY_traceableEdgeBotConfig___Timestamp___
  end___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___Timestamp___ {
  seconds: Int
  nanos: Int
}

enum QUERY_traceableEdgeBotConfig___UnaryOperator___ {
  UNARY_OPERATOR_UNSPECIFIED
  UNARY_OPERATOR_IS_NULL
  UNARY_OPERATOR_IS_NOT_NULL
  UNARY_OPERATOR_IS_EMPTY
  UNARY_OPERATOR_IS_NOT_EMPTY
}

type QUERY_traceableEdgeBotConfig___UrlBasedDerivationRule___ {
  match_condition: QUERY_traceableEdgeBotConfig___MatchCondition___
  match_condition___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___UrlRegexScope___ {
  url_regexes: [String]
  url_regexes___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___UrlScope___ {
  urls: [String]
  urls___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___Value___ {
  null_value: QUERY_traceableEdgeBotConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: QUERY_traceableEdgeBotConfig___Struct___
  struct_value___JSON: JSON
  list_value: QUERY_traceableEdgeBotConfig___ListValue___
  list_value___JSON: JSON
}

type QUERY_traceableEdgeBotConfig___WindowLocationBasedDerivationRule___ {
  match_condition: QUERY_traceableEdgeBotConfig___MatchCondition___
  match_condition___JSON: JSON
}

type QUERY_traceableEdgeBotConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput {
  key: String
  value: QUERY_traceableEdgeBotConfig___Value___
}

type QUERY_traceableEdgeConfig___AgentCapabilities___ {
  components: [QUERY_traceableEdgeConfig___Component___]
  components___JSON: JSON
  additional_fields: [QUERY_traceableEdgeConfig_ai_traceable_edge_config_service_v1_AgentCapabilities_AdditionalFieldsEntry___additional_fields___MapOutput]
  additional_fields___JSON: JSON
}

input QUERY_traceableEdgeConfig___AgentCapabilities___Input {
  components: [QUERY_traceableEdgeConfig___Component___Input]
  components___JSON: JSON
  additional_fields: [QUERY_traceableEdgeConfig_ai_traceable_edge_config_service_v1_AgentCapabilities_AdditionalFieldsEntry___additional_fields___MapInput]
  additional_fields___JSON: JSON
}

type QUERY_traceableEdgeConfig___Component___ {
  traceable_platform_agent_version: String
  traceable_edge_bot_service_version: String
  traceable_edge_decision_engine_version: String
}

input QUERY_traceableEdgeConfig___Component___Input {
  traceable_platform_agent_version: String
  traceable_edge_bot_service_version: String
  traceable_edge_decision_engine_version: String
}

type QUERY_traceableEdgeConfig___ConfigPayloads___ {
  config_bytes: [String]
  config_bytes___JSON: JSON
}

input QUERY_traceableEdgeConfig___ConfigRequestElement___Input {
  config_type: String
  previous_hash: String
  agent_capabilities: QUERY_traceableEdgeConfig___AgentCapabilities___Input
  agent_capabilities___JSON: JSON
}

type QUERY_traceableEdgeConfig___ConfigResponseElement___ {
  hash: String
  config_type: String
  config_payloads: QUERY_traceableEdgeConfig___ConfigPayloads___
  config_payloads___JSON: JSON
  refresh_after_duration: QUERY_traceableEdgeConfig___Duration___
  refresh_after_duration___JSON: JSON
  enabled: Boolean
  supported_agent_capabilities: [QUERY_traceableEdgeConfig___AgentCapabilities___]
  supported_agent_capabilities___JSON: JSON
}

type QUERY_traceableEdgeConfig___Duration___ {
  seconds: Int
  nanos: Int
}

input QUERY_traceableEdgeConfig___GetConfigsRequest___Input {
  environment: String
  previous_hash: String
  config_requests: [QUERY_traceableEdgeConfig___ConfigRequestElement___Input]
  config_requests___JSON: JSON
}

type QUERY_traceableEdgeConfig___GetConfigsResponse___ {
  hash: String
  config_responses: [QUERY_traceableEdgeConfig___ConfigResponseElement___]
  config_responses___JSON: JSON
}

input QUERY_traceableEdgeConfig_ai_traceable_edge_config_service_v1_AgentCapabilities_AdditionalFieldsEntry___additional_fields___MapInput {
  key: String
  value: String
}

type QUERY_traceableEdgeConfig_ai_traceable_edge_config_service_v1_AgentCapabilities_AdditionalFieldsEntry___additional_fields___MapOutput {
  key: String
  value: String
}

type QUERY_traceablePolicyConfig___BotFingerprintEvalRule___ {
  enabled: Boolean
  weight: Float
  config: QUERY_traceablePolicyConfig___Value___
  config___JSON: JSON
  rule_type: String
  scores: QUERY_traceablePolicyConfig___BotFingerprintScore___
  scores___JSON: JSON
}

type QUERY_traceablePolicyConfig___BotFingerprintScore___ {
  high_score: Float
  medium_score: Float
  low_score: Float
}

type QUERY_traceablePolicyConfig___ClientBotFingerprintPolicy___ {
  use_default: Boolean
  bot_suspicion_threshold: Float
  default_scores: QUERY_traceablePolicyConfig___BotFingerprintScore___
  default_scores___JSON: JSON
  rules: [QUERY_traceablePolicyConfig___BotFingerprintEvalRule___]
  rules___JSON: JSON
  site_key: String
}

input QUERY_traceablePolicyConfig___GetAllRequest___Input {
  policy_kind: String
}

type QUERY_traceablePolicyConfig___GetAllResponse___ {
  policies: [QUERY_traceablePolicyConfig___TraceablePolicy___]
  policies___JSON: JSON
}

input QUERY_traceablePolicyConfig___GetRequest___Input {
  policy_kind: String
  id: String
}

type QUERY_traceablePolicyConfig___GetResponse___ {
  policy: QUERY_traceablePolicyConfig___TraceablePolicy___
  policy___JSON: JSON
}

type QUERY_traceablePolicyConfig___ListValue___ {
  values: [QUERY_traceablePolicyConfig___Value___]
  values___JSON: JSON
}

enum QUERY_traceablePolicyConfig___NullValue___ {
  NULL_VALUE
}

type QUERY_traceablePolicyConfig___Struct___ {
  fields: [QUERY_traceablePolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput]
  fields___JSON: JSON
}

type QUERY_traceablePolicyConfig___TraceablePolicy___ {
  policy_kind: String
  id: String
  name: String
  disabled: Boolean
  labels: [QUERY_traceablePolicyConfig_ai_traceable_policy_config_service_v1_TraceablePolicy_LabelsEntry___labels___MapOutput]
  labels___JSON: JSON
  client_bot_fingerprint_policy: QUERY_traceablePolicyConfig___ClientBotFingerprintPolicy___
  client_bot_fingerprint_policy___JSON: JSON
  template_id: String
}

type QUERY_traceablePolicyConfig___Value___ {
  null_value: QUERY_traceablePolicyConfig___NullValue___
  number_value: Float
  string_value: String
  bool_value: Boolean
  struct_value: QUERY_traceablePolicyConfig___Struct___
  struct_value___JSON: JSON
  list_value: QUERY_traceablePolicyConfig___ListValue___
  list_value___JSON: JSON
}

type QUERY_traceablePolicyConfig_ai_traceable_policy_config_service_v1_TraceablePolicy_LabelsEntry___labels___MapOutput {
  key: String
  value: String
}

type QUERY_traceablePolicyConfig_google_protobuf_Struct_FieldsEntry___fields___MapOutput {
  key: String
  value: QUERY_traceablePolicyConfig___Value___
}

type QUERY_traceableThreatScoringConfig___ActorMaliciousConfidenceConfig___ {
  ip_reputation_factor_mapping: QUERY_traceableThreatScoringConfig___IpReputationFactorMapping___
  ip_reputation_factor_mapping___JSON: JSON
  actor_trend_factor: Int
  level_config: QUERY_traceableThreatScoringConfig___ScoringLevelConfig___
  level_config___JSON: JSON
}

type QUERY_traceableThreatScoringConfig___AnomalousEventConfidenceConfig___ {
  level_config: QUERY_traceableThreatScoringConfig___ScoringLevelConfig___
  level_config___JSON: JSON
  min_number_of_unlearnt_params_in_api: Int
  min_number_of_unique_unexpected_characters: Int
}

type QUERY_traceableThreatScoringConfig___ApiTrendConfidenceConfig___ {
  level_config: QUERY_traceableThreatScoringConfig___ScoringLevelConfig___
  level_config___JSON: JSON
}

type QUERY_traceableThreatScoringConfig___EnvironmentScope___ {
  environment_id: String
}

input QUERY_traceableThreatScoringConfig___EnvironmentScope___Input {
  environment_id: String
}

type QUERY_traceableThreatScoringConfig___EventConfidenceMapping___ {
  actor_confidence: QUERY_traceableThreatScoringConfig___ScoringLevel___
  malicious_span_confidence: QUERY_traceableThreatScoringConfig___ScoringLevel___
  anomalous_confidence: QUERY_traceableThreatScoringConfig___ScoringLevel___
  trend_confidence: QUERY_traceableThreatScoringConfig___ScoringLevel___
  response_confidence: QUERY_traceableThreatScoringConfig___ScoringLevel___
  event_confidence: QUERY_traceableThreatScoringConfig___ScoringLevel___
}

type QUERY_traceableThreatScoringConfig___EventConfidenceMatrixConfig___ {
  event_confidence_mapping: [QUERY_traceableThreatScoringConfig___EventConfidenceMapping___]
  event_confidence_mapping___JSON: JSON
}

type QUERY_traceableThreatScoringConfig___EventConfidenceScoringConfig___ {
  event_confidence_matrix_config: QUERY_traceableThreatScoringConfig___EventConfidenceMatrixConfig___
  event_confidence_matrix_config___JSON: JSON
  malicious_span_confidence_scoring: QUERY_traceableThreatScoringConfig___MaliciousSpanConfidenceScoring___
  malicious_span_confidence_scoring___JSON: JSON
  anomalous_event_confidence_config: QUERY_traceableThreatScoringConfig___AnomalousEventConfidenceConfig___
  anomalous_event_confidence_config___JSON: JSON
  response_confidence_config: QUERY_traceableThreatScoringConfig___ResponseConfidenceConfig___
  response_confidence_config___JSON: JSON
  api_trend_confidence_config: QUERY_traceableThreatScoringConfig___ApiTrendConfidenceConfig___
  api_trend_confidence_config___JSON: JSON
  actor_malicious_confidence_config: QUERY_traceableThreatScoringConfig___ActorMaliciousConfidenceConfig___
  actor_malicious_confidence_config___JSON: JSON
}

input QUERY_traceableThreatScoringConfig___GetScopedThreatScoringConfigsFilter___Input {
  config_type: QUERY_traceableThreatScoringConfig___ThreatScoringConfigType___
}

input QUERY_traceableThreatScoringConfig___GetScopedThreatScoringConfigsRequest___Input {
  config_scope: QUERY_traceableThreatScoringConfig___ThreatScoringConfigScope___Input
  config_scope___JSON: JSON
  filter: QUERY_traceableThreatScoringConfig___GetScopedThreatScoringConfigsFilter___Input
  filter___JSON: JSON
}

type QUERY_traceableThreatScoringConfig___GetScopedThreatScoringConfigsResponse___ {
  scoped_threat_scoring_configs: QUERY_traceableThreatScoringConfig___ScopedThreatScoringConfigs___
  scoped_threat_scoring_configs___JSON: JSON
  default_threat_scoring_configs: QUERY_traceableThreatScoringConfig___ThreatScoringConfigs___
  default_threat_scoring_configs___JSON: JSON
}

type QUERY_traceableThreatScoringConfig___IpReputationFactorMapping___ {
  low_ip_reputation_factor: Float
  medium_ip_reputation_factor: Float
  high_ip_reputation_factor: Float
  critical_ip_reputation_factor: Float
}

type QUERY_traceableThreatScoringConfig___MaliciousSpanConfidenceScoring___ {
  level_config: QUERY_traceableThreatScoringConfig___ScoringLevelConfig___
  level_config___JSON: JSON
}

type QUERY_traceableThreatScoringConfig___ResponseConfidenceConfig___ {
  level_config: QUERY_traceableThreatScoringConfig___ScoringLevelConfig___
  level_config___JSON: JSON
}

type QUERY_traceableThreatScoringConfig___ScopedThreatScoringConfigs___ {
  config_scope: QUERY_traceableThreatScoringConfig___ThreatScoringConfigScope___
  config_scope___JSON: JSON
  configs: QUERY_traceableThreatScoringConfig___ThreatScoringConfigs___
  configs___JSON: JSON
}

enum QUERY_traceableThreatScoringConfig___ScoringLevel___ {
  SCORING_LEVEL_UNSPECIFIED
  SCORING_LEVEL_LOW
  SCORING_LEVEL_MEDIUM
  SCORING_LEVEL_HIGH
}

type QUERY_traceableThreatScoringConfig___ScoringLevelConfig___ {
  medium_level_min_score: Int
  high_level_min_score: Int
  max_normalized_score: Int
}

type QUERY_traceableThreatScoringConfig___ThreatActivityConfidenceMapping___ {
  current_event_confidence: QUERY_traceableThreatScoringConfig___ScoringLevel___
  previous_activity_confidence: QUERY_traceableThreatScoringConfig___ScoringLevel___
  previous_activity_event_count: QUERY_traceableThreatScoringConfig___ScoringLevel___
  previous_unique_params_count: QUERY_traceableThreatScoringConfig___ScoringLevel___
  new_activity_confidence: QUERY_traceableThreatScoringConfig___ScoringLevel___
}

type QUERY_traceableThreatScoringConfig___ThreatActivityConfidenceMatrixConfig___ {
  threat_activity_confidence_mapping: [QUERY_traceableThreatScoringConfig___ThreatActivityConfidenceMapping___]
  threat_activity_confidence_mapping___JSON: JSON
}

type QUERY_traceableThreatScoringConfig___ThreatActivityConfidenceScoringConfig___ {
  threat_activity_confidence_matrix_config: QUERY_traceableThreatScoringConfig___ThreatActivityConfidenceMatrixConfig___
  threat_activity_confidence_matrix_config___JSON: JSON
  previous_activity_event_count_level_config: QUERY_traceableThreatScoringConfig___ScoringLevelConfig___
  previous_activity_event_count_level_config___JSON: JSON
  previous_unique_params_count_level_config: QUERY_traceableThreatScoringConfig___ScoringLevelConfig___
  previous_unique_params_count_level_config___JSON: JSON
}

type QUERY_traceableThreatScoringConfig___ThreatScoringConfigs___ {
  event_confidence_scoring_config: QUERY_traceableThreatScoringConfig___EventConfidenceScoringConfig___
  event_confidence_scoring_config___JSON: JSON
  threat_activity_confidence_scoring_config: QUERY_traceableThreatScoringConfig___ThreatActivityConfidenceScoringConfig___
  threat_activity_confidence_scoring_config___JSON: JSON
}

type QUERY_traceableThreatScoringConfig___ThreatScoringConfigScope___ {
  environment_scope: QUERY_traceableThreatScoringConfig___EnvironmentScope___
  environment_scope___JSON: JSON
}

input QUERY_traceableThreatScoringConfig___ThreatScoringConfigScope___Input {
  environment_scope: QUERY_traceableThreatScoringConfig___EnvironmentScope___Input
  environment_scope___JSON: JSON
}

enum QUERY_traceableThreatScoringConfig___ThreatScoringConfigType___ {
  THREAT_SCORING_CONFIG_TYPE_UNSPECIFIED
  THREAT_SCORING_CONFIG_TYPE_EVENT_CONFIDENCE_SCORING
  THREAT_SCORING_CONFIG_TYPE_THREAT_ACTIVITY_CONFIDENCE_SCORING
}

"""Info of user who saved the query"""
type QueryAuthor {
  """User id"""
  userId: String!

  """user name"""
  userName: String
}

enum QueryBatchExecutionMode {
  """ASYNC"""
  ASYNC

  """SYNC"""
  SYNC
}

enum QueryType {
  """SHADOW_ENDPOINT"""
  SHADOW_ENDPOINT

  """ORPHAN_ENDPOINT"""
  ORPHAN_ENDPOINT

  """API_ENDPOINT_DIFF"""
  API_ENDPOINT_DIFF

  """SHADOW_PARAMETER"""
  SHADOW_PARAMETER

  """ORPHAN_PARAMETER"""
  ORPHAN_PARAMETER

  """PARAMETER_DIFF"""
  PARAMETER_DIFF

  """SUMMARY"""
  SUMMARY

  """API_ENDPOINT_NO_DIFF"""
  API_ENDPOINT_NO_DIFF

  """EXPECTED_SECURITY_SCHEME"""
  EXPECTED_SECURITY_SCHEME

  """OBSERVED_SECURITY_SCHEME"""
  OBSERVED_SECURITY_SCHEME

  """EXPECTED_REQUEST_MEDIA_TYPE"""
  EXPECTED_REQUEST_MEDIA_TYPE

  """OBSERVED_REQUEST_MEDIA_TYPE"""
  OBSERVED_REQUEST_MEDIA_TYPE
}

type QueueAstScanResponse {
  """Id of the scan created"""
  scanId: String!
}

type QuickScanCommandLineDetails {
  scanCommands: [ScanCommand]!
}

type QuickScanCommandResponse {
  commandLineDetails: QuickScanCommandLineDetails!
}

"""Region identifier schema for rate limit region condition"""
type RateLimitingRegionIdentifier {
  """Country ISO code for region identifier"""
  countryIsoCode: String!
}

"""
Custom rule to protect endpoints and other services from brute-force attacks
"""
type RateLimitingRule {
  """Rate limit rule ID"""
  id: String!

  """Rate limit rule category"""
  category: RateLimitingRuleCategory!

  """List of rate limit rule conditions"""
  conditions: [RateLimitingRuleCondition] @deprecated(reason: "The field RateLimitingRuleCondition should be used as it supports logical condition schema")

  """Rate limit rule description"""
  description: String

  """Rate limit rule enabled status"""
  enabled: Boolean!

  """Rate limit rule custom labels"""
  labels: [RateLimitingRuleLabel]

  """Rate limit rule name"""
  name: String!

  """Rate limit rule condition"""
  rateLimitingRuleCondition: RateLimitingRuleCondition

  """Rate limit rule scope"""
  ruleConfigScope: RuleConfigScope

  """Rate limit rule status"""
  ruleStatus: RateLimitingRuleStatus

  """
  List of configs containing thresholds and actions for a rate limit rule
  """
  thresholdActionConfigs: [RateLimitingRuleThresholdActionConfig]

  """Transaction action config for DLP rule"""
  transactionActionConfigs: RateLimitingTransactionActionConfig
}

"""Action to take if a rate limit rule is applicable"""
type RateLimitingRuleAction {
  """Type of action"""
  actionType: RateLimitingRuleActionType!

  """Details regarding alert action"""
  alert: RateLimitingRuleAlertAction

  """Details regarding allow action"""
  allow: RateLimitingRuleAllowAction

  """Details regarding block action"""
  block: RateLimitingRuleBlockAction

  """Details regarding mark for testing action"""
  markForTesting: RateLimitingRuleMarkForTestingAction
}

enum RateLimitingRuleActionType {
  """ALERT"""
  ALERT

  """BLOCK"""
  BLOCK

  """ALLOW"""
  ALLOW

  """MARK_FOR_TESTING"""
  MARK_FOR_TESTING
}

"""Details regarding agent effect applicable on a rate limit rule"""
type RateLimitingRuleAgentEffect {
  """
  List of agent modifications to be done as part of rate limiting rule action
  """
  agentModifications: [RateLimitingRuleAgentModification]!
}

"""Details regarding agent modification applicable on a rate limit rule"""
type RateLimitingRuleAgentModification {
  """Type of agent modification to be performed"""
  agentModificationType: RateLimitingRuleAgentModificationType!

  """Details of header injection action"""
  headerInjection: RateLimitingRuleHeaderInjection!
}

enum RateLimitingRuleAgentModificationType {
  """Add a header with inline processing of request on matching conditions"""
  HEADER_INJECTION
}

"""Details regarding alert action applicable on a rate limit rule"""
type RateLimitingRuleAlertAction {
  """Agent effect associated with this action"""
  agentEffect: RateLimitingRuleAgentEffect

  """Severity of alert to be generated"""
  eventSeverity: RateLimitingRuleEventSeverity!
}

"""Details regarding allow action applicable on a rate limit rule"""
type RateLimitingRuleAllowAction {
  """Duration to allow the malicious actor"""
  duration: Duration
}

enum RateLimitingRuleApiAggregateType {
  """PER_ENDPOINT"""
  PER_ENDPOINT

  """ACROSS_ENDPOINTS"""
  ACROSS_ENDPOINTS
}

"""Details regarding block action applicable on a rate limit rule"""
type RateLimitingRuleBlockAction {
  """Duration to block the malicious actor"""
  duration: Duration

  """Severity of blocked event to be generated"""
  eventSeverity: RateLimitingRuleEventSeverity!

  """Use duration in threshold config"""
  useThresholdDuration: Boolean
}

enum RateLimitingRuleCategory {
  """ENDPOINT_RATE_LIMITING"""
  ENDPOINT_RATE_LIMITING

  """DATA_EXFILTRATION"""
  DATA_EXFILTRATION

  """ENUMERATION"""
  ENUMERATION
}

"""Condition applicable for a rate limit rule"""
type RateLimitingRuleCondition {
  """RateLimitingRuleCondition type"""
  conditionType: RateLimitingRuleConditionType

  """Rate limit rule leaf condition"""
  leafCondition: RateLimitingRuleLeafCondition

  """Rate limit rule logical condition"""
  logicalCondition: RateLimitingRuleLogicalCondition
}

"""Info regarding an enum"""
type RateLimitingRuleConditionEnumInfo {
  """Display name of enum"""
  displayName: String!

  """Name of enum"""
  name: String!
}

"""Details regarding condition option applicable"""
type RateLimitingRuleConditionOption {
  """Info regarding operator of condition"""
  conditionOperator: RateLimitingRuleConditionEnumInfo!

  """Validation type of condition"""
  conditionValidationType: RateLimitingRuleKeyValueConditionValidationType!
}

enum RateLimitingRuleConditionType {
  """LOGICAL_CONDITION"""
  LOGICAL_CONDITION

  """LEAF_CONDITION"""
  LEAF_CONDITION
}

"""
List of supported key combinations for the specified custom location for a rate limit rule
"""
type RateLimitingRuleCustomLocationCombinations {
  """List of combinations where operation is supported only on key"""
  keyCombinations: [RateLimitingRuleKeyOnlyConditionCombination]!

  """List of metadata with no key option"""
  noKeyMetadata: [RateLimitingRuleConditionEnumInfo]!
}

"""Rate limiting rule data location"""
enum RateLimitingRuleDataLocation {
  """REQUEST"""
  REQUEST

  """RESPONSE"""
  RESPONSE
}

"""Rate limiting rule data sensitivity"""
enum RateLimitingRuleDataSensitivityLevel {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

"""Dataset and datatype condition for a rate limit rule"""
type RateLimitingRuleDatatypeCondition {
  """data location type"""
  dataLocation: RateLimitingRuleDataLocation

  """List of data sensitivity levels"""
  dataSensitivityLevels: [RateLimitingRuleDataSensitivityLevel]

  """List of dataset ids applicable"""
  datasetIds: [String]

  """List of datatype ids applicable"""
  datatypeIds: [String]

  """datatype matching"""
  datatypeMatching: RateLimitingRuleDatatypeMatching
}

"""Rate limiting datatype matching"""
type RateLimitingRuleDatatypeMatching {
  """datatype matching type"""
  datatypeMatchingType: RateLimitingRuleDatatypeMatchingType

  """regex based matching"""
  regexBasedMatching: RateLimitingRuleRegexBasedMatching
}

"""Rate limiting rule datatype matching type"""
enum RateLimitingRuleDatatypeMatchingType {
  """REGEX_BASED_MATCHING"""
  REGEX_BASED_MATCHING

  """LEARNED_TYPES_MATCHING"""
  LEARNED_TYPES_MATCHING
}

"""Email domain condition for a rate limit rule"""
type RateLimitingRuleEmailDomainCondition {
  """List of email domains"""
  emailDomains: [String]

  """List of email regexes"""
  emailRegexes: [String]

  """boolean denoting exclude condition"""
  exclude: Boolean
}

"""Entity scope condition applicable on a rate limit rule"""
type RateLimitingRuleEntityScope {
  """List of entity ids applicable"""
  entityIds: [String]!

  """Entity type"""
  entityType: RateLimitingRuleEntityType!
}

enum RateLimitingRuleEntityType {
  """API"""
  API

  """SERVICE"""
  SERVICE
}

enum RateLimitingRuleEventSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

"""Details regarding header injection applicable on a rate limit rule"""
type RateLimitingRuleHeaderInjection {
  """Category defining where the header needs to be injected"""
  headerCategory: RateLimitingRuleMatchCategory!

  """Header name to be injected"""
  key: String!

  """Header value to be injected"""
  value: String!
}

enum RateLimitingRuleIpAbuseVelocity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH
}

"""Ip abuse velocity condition applicable on a rate limit rule"""
type RateLimitingRuleIpAbuseVelocityCondition {
  """Minimum Ip abuse velocity applicable"""
  minIpAbuseVelocity: RateLimitingRuleIpAbuseVelocity!
}

"""IP address condition applicable on a rate limit rule"""
type RateLimitingRuleIpAddressCondition {
  """List of CIDR IP ranges"""
  cidrIpRanges: [String]

  """boolean denoting exclude condition"""
  exclude: Boolean

  """ip address condition type"""
  ipAddressConditionType: RateLimitingRuleIpAddressConditionType

  """List of IP addresses"""
  ipAddresses: [String]

  """List of IP addresses and CIDR IP ranges"""
  rawInputIpData: [String]
}

"""Ip address condition type"""
enum RateLimitingRuleIpAddressConditionType {
  """All internal ip address condition type"""
  ALL_INTERNAL

  """All external ip address condition type"""
  ALL_EXTERNAL
}

"""Ip asn condition for a rate limit rule"""
type RateLimitingRuleIpAsnCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip asn regexes"""
  ipAsnRegexes: [String]!
}

"""IP connection types for rate limit rule IP connection type condition"""
enum RateLimitingRuleIpConnectionType {
  """RESIDENTIAL"""
  RESIDENTIAL

  """MOBILE"""
  MOBILE

  """CORPORATE"""
  CORPORATE

  """DATA_CENTER"""
  DATA_CENTER

  """EDUCATION"""
  EDUCATION
}

"""IP connection type condition for a rate limit rule"""
type RateLimitingRuleIpConnectionTypeCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip connection types"""
  ipConnectionTypes: [RateLimitingRuleIpConnectionType]!
}

enum RateLimitingRuleIpLocationType {
  """RESIDENTIAL"""
  RESIDENTIAL

  """ANONYMOUS"""
  ANONYMOUS

  """ANONYMOUS_VPN"""
  ANONYMOUS_VPN

  """HOSTING_PROVIDER"""
  HOSTING_PROVIDER

  """PUBLIC_PROXY"""
  PUBLIC_PROXY

  """TOR_EXIT_NODE"""
  TOR_EXIT_NODE

  """BOT"""
  BOT

  """SCANNER"""
  SCANNER
}

"""IP location type condition applicable on a rate limit rule"""
type RateLimitingRuleIpLocationTypeCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of IP locations types applicable"""
  ipLocationTypes: [RateLimitingRuleIpLocationType]
}

"""Ip organisation condition for a rate limit rule"""
type RateLimitingRuleIpOrganisationCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of ip organisation regexes"""
  ipOrganisationRegexes: [String]!
}

"""IP reputation condition applicable on a rate limit rule"""
type RateLimitingRuleIpReputationCondition {
  """Minimum IP reputation severity applicable"""
  minIpReputationSeverity: RateLimitingRuleIpReputationSeverity!
}

enum RateLimitingRuleIpReputationSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

"""Combination which supports operation on both key and value"""
type RateLimitingRuleKeyAndValueConditionCombinations {
  """List of conditions applicable on key"""
  keyConditionOptions: [RateLimitingRuleConditionOption]!

  """List of conditions applicable on value"""
  valueConditionOptions: [RateLimitingRuleConditionOption]!
}

"""Combination which supports operation on only value"""
type RateLimitingRuleKeyNullConditionCombination {
  """Info regarding metadata type of combination"""
  metadataType: RateLimitingRuleConditionEnumInfo!

  """List of conditions applicable on value"""
  valueConditionOptions: [RateLimitingRuleConditionOption]!
}

"""Combination which supports operation on only key"""
type RateLimitingRuleKeyOnlyConditionCombination {
  """List of conditions applicable on key"""
  keyConditionOptions: [RateLimitingRuleConditionOption]!

  """Info regarding metadata type of combination"""
  metadataType: RateLimitingRuleConditionEnumInfo!
}

"""Key value condition applicable on a rate limit rule"""
type RateLimitingRuleKeyValueCondition {
  """Key condition"""
  keyCondition: RateLimitingRuleStringCondition

  """Key value condition metadata type"""
  metadataType: RateLimitingRuleKeyValueConditionMetadataType!

  """Value condition"""
  valueCondition: RateLimitingRuleStringCondition
}

"""
List of supported combinations for the specified key value condition category for a rate limit rule
"""
type RateLimitingRuleKeyValueConditionCategoryCombinations {
  """Info regarding category of combinations"""
  conditionCategory: RateLimitingRuleConditionEnumInfo!

  """List of combinations where operation is supported only on value"""
  keyNullCombinations: [RateLimitingRuleKeyNullConditionCombination]!

  """
  List of combinations where operation is supported on both key and value
  """
  keyValueCombinations: [RateLimitingRuleKeyValueConditionCombination]!
}

"""Combination which supports operation on both key and value"""
type RateLimitingRuleKeyValueConditionCombination {
  """List of conditions applicable on key"""
  keyConditionOptions: [RateLimitingRuleConditionOption]!

  """Info regarding metadata type of combination"""
  metadataType: RateLimitingRuleConditionEnumInfo!

  """List of conditions applicable on value"""
  valueConditionOptions: [RateLimitingRuleConditionOption]!
}

type RateLimitingRuleKeyValueConditionCombinationResultSet {
  count: Long! @deprecated(reason: "Deprecated")
  total: Long! @deprecated(reason: "Deprecated")
  results: [RateLimitingRuleKeyValueConditionCategoryCombinations]! @deprecated(reason: "Deprecated")
}

enum RateLimitingRuleKeyValueConditionMetadataType {
  """URL"""
  URL

  """HOST"""
  HOST

  """HTTP_METHOD"""
  HTTP_METHOD

  """USER_AGENT"""
  USER_AGENT

  """QUERY_PARAMETER"""
  QUERY_PARAMETER

  """STATUS_CODE"""
  STATUS_CODE

  """REQUEST_BODY"""
  REQUEST_BODY

  """RESPONSE_BODY"""
  RESPONSE_BODY

  """REQUEST_HEADER"""
  REQUEST_HEADER

  """RESPONSE_HEADER"""
  RESPONSE_HEADER

  """REQUEST_COOKIE"""
  REQUEST_COOKIE

  """RESPONSE_COOKIE"""
  RESPONSE_COOKIE

  """REQUEST_BODY_PARAMETER"""
  REQUEST_BODY_PARAMETER

  """RESPONSE_BODY_PARAMETER"""
  RESPONSE_BODY_PARAMETER

  """TAG"""
  TAG

  """REQUEST_BODY_SIZE"""
  REQUEST_BODY_SIZE

  """RESPONSE_BODY_SIZE"""
  RESPONSE_BODY_SIZE

  """QUERY_PARAMS_COUNT"""
  QUERY_PARAMS_COUNT

  """REQUEST_HEADERS_COUNT"""
  REQUEST_HEADERS_COUNT

  """RESPONSE_HEADERS_COUNT"""
  RESPONSE_HEADERS_COUNT

  """REQUEST_COOKIES_COUNT"""
  REQUEST_COOKIES_COUNT

  """RESPONSE_COOKIES_COUNT"""
  RESPONSE_COOKIES_COUNT
}

enum RateLimitingRuleKeyValueConditionValidationType {
  """NONE"""
  NONE

  """REGEX"""
  REGEX

  """STRING"""
  STRING

  """INTEGER"""
  INTEGER
}

enum RateLimitingRuleKeyValueMatchOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUAL"""
  NOT_EQUAL

  """MATCHES_REGEX"""
  MATCHES_REGEX

  """NOT_MATCH_REGEX"""
  NOT_MATCH_REGEX

  """CONTAINS"""
  CONTAINS

  """NOT_CONTAIN"""
  NOT_CONTAIN

  """GREATER_THAN"""
  GREATER_THAN

  """LESS_THAN"""
  LESS_THAN
}

"""Key-value pair for labels"""
type RateLimitingRuleLabel {
  """Key"""
  key: String!

  """Value"""
  value: String!
}

"""Label scope condition applicable on a rate limit rule"""
type RateLimitingRuleLabelScope {
  """List of label ids applicable"""
  labelIds: [String]!

  """Label type"""
  labelType: RateLimitingRuleLabelType!
}

enum RateLimitingRuleLabelType {
  """SERVICE"""
  SERVICE

  """API"""
  API
}

"""Leaf condition applicable on a rate limit rule"""
type RateLimitingRuleLeafCondition {
  """Leaf condition type"""
  conditionType: RateLimitingRuleLeafConditionType!

  """Dataset and datatype condition applicable on a rate limit rule"""
  datatypeCondition: RateLimitingRuleDatatypeCondition

  """Email domain condition applicable on a rate limit rule"""
  emailDomainCondition: RateLimitingRuleEmailDomainCondition

  """Ip abuse velocity condition applicable on a rate limit rule"""
  ipAbuseVelocityCondition: RateLimitingRuleIpAbuseVelocityCondition

  """IP address condition applicable on a rate limit rule"""
  ipAddressCondition: RateLimitingRuleIpAddressCondition

  """Ip asn condition applicable on a rate limit rule"""
  ipAsnCondition: RateLimitingRuleIpAsnCondition

  """IP connection type condition applicable on a rate limit rule"""
  ipConnectionTypeCondition: RateLimitingRuleIpConnectionTypeCondition

  """IP location type condition applicable on a rate limit rule"""
  ipLocationTypeCondition: RateLimitingRuleIpLocationTypeCondition

  """Ip organisation condition applicable on a rate limit rule"""
  ipOrganisationCondition: RateLimitingRuleIpOrganisationCondition

  """IP reputation condition applicable on a rate limit rule"""
  ipReputationCondition: RateLimitingRuleIpReputationCondition

  """Key value condition applicable on a rate limit rule"""
  keyValueCondition: RateLimitingRuleKeyValueCondition

  """Region condition applicable on a rate limit rule"""
  regionCondition: RateLimitingRuleRegionCondition

  """Request scanner type condition applicable on a rate limit rule"""
  requestScannerTypeCondition: RateLimitingRuleRequestScannerTypeCondition

  """Scope condition applicable on a rate limit rule"""
  scopeCondition: RateLimitingRuleScopeCondition

  """User agent condition applicable on a rate limit rule"""
  userAgentCondition: RateLimitingRuleUserAgentCondition

  """User ID condition applicable on a rate limit rule"""
  userIdCondition: RateLimitingRuleUserIdCondition
}

enum RateLimitingRuleLeafConditionType {
  """SCOPE"""
  SCOPE

  """DATATYPE"""
  DATATYPE

  """IP_ADDRESS"""
  IP_ADDRESS

  """KEY_VALUE"""
  KEY_VALUE

  """IP_LOCATION_TYPE"""
  IP_LOCATION_TYPE

  """IP_REPUTATION"""
  IP_REPUTATION

  """REGION"""
  REGION

  """EMAIL_DOMAIN"""
  EMAIL_DOMAIN

  """IP_CONNECTION_TYPE"""
  IP_CONNECTION_TYPE

  """USER_AGENT"""
  USER_AGENT

  """USER_ID"""
  USER_ID

  """IP_ORGANISATION"""
  IP_ORGANISATION

  """IP_ASN"""
  IP_ASN

  """IP_ABUSE_VELOCITY"""
  IP_ABUSE_VELOCITY

  """REQUEST_SCANNER_TYPE"""
  REQUEST_SCANNER_TYPE
}

"""Logical condition for a rate limited rule"""
type RateLimitingRuleLogicalCondition {
  """Child conditions of rate limit rule logical condition"""
  childRateLimitingRuleConditions: [RateLimitingRuleCondition]!

  """Rate limit rule logical condition operator"""
  logicalOperator: LogicalOperator!
}

"""
Details regarding mark for testing action applicable on a rate limit rule
"""
type RateLimitingRuleMarkForTestingAction {
  """Agent effect associated with this action"""
  agentEffect: RateLimitingRuleAgentEffect

  """Severity of blocked event to be generated"""
  eventSeverity: RateLimitingRuleEventSeverity!
}

enum RateLimitingRuleMatchCategory {
  """REQUEST"""
  REQUEST

  """RESPONSE"""
  RESPONSE
}

type RateLimitingRuleOptions {
  customLocationCombinations: RateLimitingRuleCustomLocationCombinations!
  thresholdActionKeyValueCombinations: [RateLimitingRuleKeyValueConditionCategoryCombinations]!
  tagKeyValueCombinations: RateLimitingRuleKeyAndValueConditionCombinations!
  transactionActionKeyValueCombinations: [RateLimitingRuleKeyValueConditionCategoryCombinations]!
}

"""Rate limiting rule regex based matching"""
type RateLimitingRuleRegexBasedMatching {
  """custom matching location key value condition"""
  customMatchingLocation: RateLimitingRuleKeyValueCondition
}

"""Region condition applicable on a rate limit rule"""
type RateLimitingRuleRegionCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of region identifiers"""
  regionIdentifiers: [RateLimitingRegionIdentifier]

  """List of regions"""
  regions: [String] @deprecated(reason: "Use region identifiers argument")
}

"""Request scanner type condition for a rate limit rule"""
type RateLimitingRuleRequestScannerTypeCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of scanner types"""
  scannerTypes: [String]!
}

type RateLimitingRuleResultSet {
  count: Long!
  results: [RateLimitingRule]!
  total: Long!
}

"""Scope condition applicable on a rate limit rule"""
type RateLimitingRuleScopeCondition {
  """Entity scope condition"""
  entityScope: RateLimitingRuleEntityScope

  """Label scope condition"""
  labelScope: RateLimitingRuleLabelScope

  """Scope condition type"""
  scopeType: RateLimitingRuleScopeConditionType!

  """Url scope condition"""
  urlScope: RateLimitingRuleUrlScope
}

enum RateLimitingRuleScopeConditionType {
  """ENTITY"""
  ENTITY

  """LABEL"""
  LABEL

  """URL"""
  URL
}

enum RateLimitingRuleSource {
  """DEFAULT"""
  DEFAULT

  """CUSTOMER"""
  CUSTOMER

  """TRACEABLE"""
  TRACEABLE
}

"""Status of rate limit rule"""
type RateLimitingRuleStatus {
  """Boolean denoting if rule should generate internal events"""
  generateInternalEvents: Boolean @deprecated(reason: "Deprecated")

  """Boolean denoting if rule should be hidden"""
  hidden: Boolean @deprecated(reason: "Deprecated")

  """
  Boolean denoting if rule should be internal and generate internal events
  """
  internal: Boolean

  """Source of rule creation"""
  ruleCreationSource: RateLimitingRuleSource
}

"""
String condition which matches a string value using the specified operator
"""
type RateLimitingRuleStringCondition {
  """Operator to be used to match the string value"""
  operator: RateLimitingRuleKeyValueMatchOperator!

  """String value to be matched"""
  value: String!
}

"""Config for thresholds and actions applicable on a rate limit rule"""
type RateLimitingRuleThresholdActionConfig {
  """List of rate limit rule actions"""
  actions: [RateLimitingRuleAction]!

  """List of rate limit rule threshold configs"""
  thresholdConfigs: [RateLimitingRuleThresholdConfig]!
}

"""Threshold config for rate limit rule"""
type RateLimitingRuleThresholdConfig {
  """API aggregation type"""
  apiAggregateType: RateLimitingRuleApiAggregateType!

  """Dynamic threshold config"""
  dynamicThresholdConfig: DynamicThresholdConfig

  """Rolling window threshold config"""
  rollingWindowThresholdConfig: RollingWindowThresholdConfig

  """Threshold config type"""
  thresholdConfigType: RateLimitingRuleThresholdConfigType!

  """User aggregation type"""
  userAggregateType: RateLimitingRuleUserAggregateType!

  """Value based threshold config"""
  valueBasedThresholdConfig: ValueBasedThresholdConfig
}

enum RateLimitingRuleThresholdConfigType {
  """ROLLING_WINDOW"""
  ROLLING_WINDOW

  """VALUE_BASED"""
  VALUE_BASED

  """DYNAMIC"""
  DYNAMIC
}

"""Url scope condition applicable on a rate limit rule"""
type RateLimitingRuleUrlScope {
  """List of url regex"""
  urlRegexes: [String]!
}

"""User agent condition for a rate limit rule"""
type RateLimitingRuleUserAgentCondition {
  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of user agent regexes"""
  userAgentRegexes: [String]

  """List of user agents"""
  userAgents: [String]
}

enum RateLimitingRuleUserAggregateType {
  """PER_USER"""
  PER_USER

  """ACROSS_USERS"""
  ACROSS_USERS
}

"""User ID condition for a rate limit rule"""
type RateLimitingRuleUserIdCondition {
  """List of actor entity IDs"""
  actorEntityIds: [String]

  """boolean denoting exclude condition"""
  exclude: Boolean

  """List of user ID regexes"""
  userIdRegexes: [String]

  """List of user IDs"""
  userIds: [String]
}

"""Rate limit rule transaction action config"""
type RateLimitingTransactionActionConfig {
  """Rate limit rule action"""
  action: RateLimitingRuleAction!

  """Requested expiration timestamp for the rule"""
  expirationTimestamp: DateTime
}

type RedactionRule {
  category: String!
  complexDataKey: ComplexDataKey
  description: String!
  id: String!
  isSessionIdentifier: Boolean @deprecated(reason: "Deprecated")
  matchType: MatchType!
  name: String!
  redactionStrategy: RedactionStrategy!
  regex: String!
}

type RedactionRuleResultSet {
  count: Long!
  results: [RedactionRule]!
  total: Long!
}

enum RedactionStrategy {
  """RAW"""
  RAW

  """OBFUSCATE"""
  OBFUSCATE

  """REDACT"""
  REDACT
}

type RedactionStrategyResponse {
  redactionStrategy: RedactionStrategy!
}

enum ReferencedScanScopeType {
  """TEST_LEVEL_SCOPE"""
  TEST_LEVEL_SCOPE
}

enum ReferenceType {
  """UNSPECIFIED"""
  UNSPECIFIED

  """MAIN"""
  MAIN

  """REFERENCE"""
  REFERENCE
}

type Region {
  """Country data for region"""
  country: Country
  id: String!

  """Region name"""
  name: String!
}

type RegionEnvironmentScope {
  environmentIds: [String]!
}

type RegionResultSet {
  count: Long!
  results: [Region]!
  total: Long!
}

type RegionRule {
  description: String
  disabled: Boolean!
  effects: [RegionRuleEffectWithModification]
  eventSeverity: RegionRuleEventSeverity
  expiration: RegionRuleExpiration
  id: String!
  internal: Boolean!
  name: String!
  regions: [Region]!
  ruleScope: RegionRuleScope
  type: RegionRuleActionType!
}

enum RegionRuleActionType {
  """BLOCK"""
  BLOCK

  """BLOCK_ALL_EXCEPT"""
  BLOCK_ALL_EXCEPT

  """ALERT"""
  ALERT
}

type RegionRuleAgentEffect {
  agentModifications: [RegionRuleAgentModification]!
}

type RegionRuleAgentModification {
  agentModificationType: RegionRuleAgentModificationType!
  headerInjection: RegionRuleHeaderInjection!
}

enum RegionRuleAgentModificationType {
  """Add a header with inline processing of request on matching conditions"""
  HEADER_INJECTION
}

enum RegionRuleEffectModificationType {
  """Modifications to be done on agent"""
  AGENT_EFFECT
}

type RegionRuleEffectWithModification {
  """Effects enforced for agent while inline processing of requests"""
  agentEffect: RegionRuleAgentEffect!
  ruleEffectType: RegionRuleEffectModificationType!
}

enum RegionRuleEventSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

type RegionRuleExpiration {
  duration: Duration!
  timestamp: DateTime!
}

enum RegionRuleHeaderCategory {
  """REQUEST"""
  REQUEST

  """RESPONSE"""
  RESPONSE
}

type RegionRuleHeaderInjection {
  headerCategory: RegionRuleHeaderCategory!
  key: String!
  value: String!
}

type RegionRuleResultSet {
  count: Long!
  results: [RegionRule]!
  total: Long!
}

type RegionRuleScope {
  environmentScope: RegionEnvironmentScope
}

type ReplayConfigSpanFilterKeyValuePredicate {
  """Key Pattern"""
  keyPredicate: ReplayConfigSpanFilterStringPredicate!

  """Value Pattern"""
  valuePredicate: ReplayConfigSpanFilterStringPredicate
}

type ReplayConfigSpanFilterKeyValuePredicateWithLocation {
  """Key - Value String Predicate"""
  keyValuePredicate: ReplayConfigSpanFilterKeyValuePredicate!

  """Enum for locations(attribute, request cookie and header)"""
  location: ReplayConfigSpanFilterLocation!
}

enum ReplayConfigSpanFilterLocation {
  """REQUEST_HEADER"""
  REQUEST_HEADER

  """REQUEST_COOKIE"""
  REQUEST_COOKIE

  """ATTRIBUTE"""
  ATTRIBUTE
}

enum ReplayConfigSpanFilterRelationalOperator {
  """EQUALS"""
  EQUALS

  """MATCHES_REGEX"""
  MATCHES_REGEX

  """CONTAINS"""
  CONTAINS

  """NOT_CONTAINS"""
  NOT_CONTAINS

  """NOT_MATCHES_REGEX"""
  NOT_MATCHES_REGEX
}

type ReplayConfigSpanFilters {
  """List of conditions each consisting of location and key-value predicate"""
  conditions: [ReplayConfigSpanFilterKeyValuePredicateWithLocation]!
}

type ReplayConfigSpanFilterStringPredicate {
  relationalOperator: ReplayConfigSpanFilterRelationalOperator!
  value: String!
}

type ReplayTraffic {
  """The time duration over which the replay traffic is considered"""
  trafficDuration: Duration
}

type Report {
  channelIds: [String]
  enabled: Boolean!
  id: String!
  reportFrequency: ReportFrequency!
  scheduledDay: DayOfWeek
  scheduledTime: OffsetTime
}

enum ReportFormat {
  """PDF"""
  PDF

  """CSV"""
  CSV
}

enum ReportFrequency {
  """INTERVAL"""
  INTERVAL

  """WEEKLY"""
  WEEKLY

  """DAILY"""
  DAILY
}

type ReportResultSet {
  count: Long!
  results: [Report]!
  total: Long!
}

enum ReportTemplate {
  """THREATS"""
  THREATS

  """SUMMARY"""
  SUMMARY
}

type RequestBodySensitiveDataCard {
  highestSensitiveDataTypes: ValueTypeDistributionResultSet!
  numParams: Long!
  numSensitiveParams: Long!
  totalApis: Long!
}

type RequestHeaderSessionIdentificationData {
  location: SessionHeaderLocation!
}

type RequestHeaderUserAttributionRuleData {
  authentication: Authentication
  roleLocation: HeaderLocation
  userIdLocation: HeaderLocation!
}

"""
List of supported combinations for the specified key value condition category for a detection exclusion rule
"""
type RequestResponseConditionOptions {
  """Info regarding category of combinations"""
  conditionCategory: DetectionExclusionRuleConditionEnumInfo!

  """List of combinations where operation is supported only on value"""
  keyNullCombinations: [DetectionExclusionRuleKeyNullConditionCombination]!

  """
  List of combinations where operation is supported on both key and value
  """
  keyValueCombinations: [DetectionExclusionRuleKeyValueConditionCombination]!
}

type RequestTokenInfo {
  tokenKey: String!
  tokenPlacement: TokenPlacement!
  tokenValueTemplate: String
}

type ResolvedDatatype {
  """A transformation to be applied to data that matches this datatype"""
  dataSuppression: DataSuppression!

  """
  A list of identifiers for datasets that this datatype belongs to. May be empty.
  """
  datasetIds: [String]!

  """Optional description"""
  description: String

  """Whether this data should be used to match against incoming data"""
  enabled: Boolean!

  """Unique Identifier for the datatype. This cannot be changed"""
  id: String!

  """The configured name for the datatype"""
  name: String!

  """
  One or more rules used to control which data matches or does not match this datatype
  """
  scopedPatterns: [DataTypeScopedPattern]

  """The sensitivity of the matched data"""
  sensitivity: DataSensitivity!

  """
  An optional regex pattern, which uses a match group to signify which part of the matching value to suppress
  """
  suppressionPattern: String

  """An list of datasets that this datatype belongs to. May be empty"""
  datasets: [DataSet]!
}

type ResponseBodySensitiveDataCard {
  highestSensitiveDataTypes: ValueTypeDistributionResultSet!
  numParams: Long!
  numSensitiveParams: Long!
  totalApis: Long!
}

type ResponseBodySessionIdentificationData {
  sessionJsonPath: String!
  urlRegex: String!
}

type ResponseBodyUserAttributionData {
  authentication: Authentication
  condition: UserAttributionRuleCondition
  roleLocation: DataLocation
  userIdLocation: DataLocation!
}

type ReVerifyCommand {
  curlCommand: String!
}

type RiskCategoryChange {
  currentMetadata: RiskScoreMetadata!
  previousMetadata: RiskScoreMetadata!
  riskDelta: RiskChange!
}

enum RiskChange {
  """INCREASE"""
  INCREASE

  """DECREASE"""
  DECREASE

  """UNSPECIFIED"""
  UNSPECIFIED
}

type RiskElementScoringChange {
  previousScore: Long!
  updatedScore: Long!
}

type RiskFactorGridConfigChange {
  riskElementConfigs: [ActivityLogRiskElementConfig]!
  riskFactorCategory: InsightsApiRiskFactorCategory!
}

enum RiskScoreCategory {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

"""Risk Score Configuration change details"""
type RiskScoreConfigurationChange {
  environmentIdentity: ActivityLogIdentity
  riskFactorConfigurationChange: RiskFactorGridConfigChange
  riskFactorGridConfigurationChange: ActivityLogRiskFactorGridConfigUpdate
  type: RiskScoreConfigurationType!
}

enum RiskScoreConfigurationType {
  """RISK_FACTOR_GRID_CONFIG"""
  RISK_FACTOR_GRID_CONFIG

  """RISK_FACTOR_CONFIG"""
  RISK_FACTOR_CONFIG
}

type RiskScoreMetadata {
  apiRiskFactors: [InsightsApiRiskFactor]!
  apiRiskScoringGridCells: [InsightsApiRiskScoringGridCell]!
  riskImpactScoreCategory: RiskScoreCategory
  riskLikelihoodScoreCategory: RiskScoreCategory
  riskScore: Float!
  riskScoreCategory: RiskScoreCategory!
}

"""Event type condition for Risk Scoring Config"""
type RiskScoringConfigChangeCondition {
  """Represents operation on Risk Scoring Config i.e Create/Update/Delete """
  riskScoringConfigChangeTypes: [RiskScoringConfigChangeType]!
}

"""Represents operation of config """
enum RiskScoringConfigChangeType {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE

  """DELETE"""
  DELETE
}

type Role {
  """Description of the role"""
  description: String!

  """Unique identifier for the role"""
  id: String!

  """Name of the role"""
  name: String!

  """Permissions granted by the role (with scope applied, if applicable)"""
  permissionGrants: [PermissionGrant]!

  """
  Scope of the role. Only applicable for predefined roles. Null if unscoped
  """
  scope: RoleScope
}

"""Role change details"""
type RoleChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!

  """Only for update events"""
  oldRoleName: String
}

type RoleEntityScope {
  """List of entity ids"""
  ids: [String]!

  """Entity type"""
  type: String!
}

type RoleInput {
  id: String
  scope: RoleScope
}

type RoleMetadata {
  """Is this role editable by the calling user"""
  editable: Boolean!

  """
  Can this role be assigned or removed from other users by the calling user
  """
  manageable: Boolean!

  """The ID of the role being described"""
  roleId: String!

  """The total count of users who have at least one assignment to this role"""
  userCount: Long!
}

type RoleResultSet {
  count: Long
  total: Long
  results: [Role]!
  roleIdToUserCount: [RoleMetadata]! @deprecated(reason: "Deprecated")
  roleMetadata: [RoleMetadata]!
}

type RoleScope {
  """List of entity scopes"""
  entityScopes: [RoleEntityScope]
}

"""
Threshold config which specifies count allowed over the given time range
"""
type RollingWindowThresholdConfig {
  """Count allowed for specified time range"""
  countAllowed: Long!

  """Time range during which counts are calculated"""
  duration: Duration!
}

"""Rate limit rule scope"""
type RuleConfigScope {
  """Environment scope applicable on rate limit rule"""
  environmentScope: EnvironmentScope
}

type RunnerLogMessage {
  """Log message level"""
  logLevel: RunnerLogMessageLogLevel!

  """Log message payload"""
  message: String!

  """Log message timestamp"""
  timestamp: DateTime!
}

enum RunnerLogMessageLogLevel {
  """TRACE"""
  TRACE

  """INFO"""
  INFO

  """DEBUG"""
  DEBUG

  """WARNING"""
  WARNING

  """ERROR"""
  ERROR

  """PROGRESS"""
  PROGRESS
}

"""Result Set of Runner log messages"""
type RunnerLogMessageResultSet {
  count: Long
  total: Long

  """Runner log messages matching the request"""
  results: [RunnerLogMessage]!
}

"""Runner logs persistence config"""
type RunnerLogsPersistenceConfig {
  """AST Scan logs persistence config"""
  astScanLogsPersistenceConfig: AstScanLogsPersistenceConfig!
}

"""Runner logs purge config"""
type RunnerLogsPurgeConfig {
  """AST Scan logs purge config"""
  astScanLogsPurgeConfig: AstScanLogsPurgeConfig!
}

enum RunnerTaskStatus {
  """PENDING"""
  PENDING

  """ASSIGNED_TO_RUNNER"""
  ASSIGNED_TO_RUNNER

  """COMPLETED"""
  COMPLETED
}

"""Authentication credential type for S3 bucket"""
enum S3AuthenticationCredentialType {
  """WEB_IDENTITY"""
  WEB_IDENTITY
}

"""S3 Bucket Channel Config"""
type S3BucketChannelConfig {
  """S3 authentication credential type"""
  authenticationCredentialType: S3AuthenticationCredentialType!

  """S3 bucket name"""
  bucketName: String!

  """S3 bucket region"""
  region: String!

  """Web Identity Authentication Credential"""
  webIdentityAuthenticationCredential: S3WebIdentityAuthenticationCredential
}

"""Web Identity Authentication Credential for S3 Bucket"""
type S3WebIdentityAuthenticationCredential {
  """ARN of the role to be assumed to upload to S3 bucket"""
  roleArn: String!
}

type SamlAuth {
  enabled: Boolean!
  samlConnectionIds: [String]
  ssoBasedProvisioningEnabled: Boolean!
}

type SamplingConfigsResultSet {
  count: Long!
  results: [SpanProcessingSamplingConfig]!
  total: Long!
}

"""Array Filter condition in filter criteria"""
type SavedArrayFilterCondition {
  """The array operator to be applied for the filter"""
  operator: SavedFilterArrayOperator!

  """The relational filter with an array LHS"""
  relationalFilterWithExpressionCondition: SavedRelationalFilterWithExpressionCondition

  """The type in the array filter"""
  type: SavedArrayFilterType!
}

enum SavedArrayFilterType {
  """RELATIONAL_WITH_EXPRESSION"""
  RELATIONAL_WITH_EXPRESSION
}

"""
A saved filter can be shared and is used to filter queries in a matching scope
"""
type SavedFilter {
  """Saved filter ID"""
  id: String!

  """Creation timestamp of saved filter"""
  creationTimestamp: DateTime!

  """Criteria for filter to match"""
  filterCriteria: SavedFilterCriteria!

  """Name of the saved filter"""
  name: String!

  """Scope of the saved filter"""
  scope: String!

  """Username of creator of saved filter"""
  username: String!

  """Field describing visibility scope of a filter"""
  visibility: SavedFilterVisibility!
}

enum SavedFilterArrayOperator {
  """ALL"""
  ALL

  """ANY"""
  ANY
}

"""Filter criteria present in saved filter"""
type SavedFilterCriteria {
  """Array Filter Condition inside saved filter criteria"""
  arrayFilterCondition: SavedArrayFilterCondition

  """
  The type of Filter condition populated. Only one filter condition field should be assigned corresponding to this type.
  """
  criteriaType: SavedFilterCriteriaType!

  """
  Relational Filter Condition with expression inside saved filter criteria
  """
  relationalFilterWithExpressionCondition: SavedRelationalFilterWithExpressionCondition

  """Logical Filter Condition inside saved filter criteria"""
  logicalFilterCondition: SavedFilterLogicalFilterCondition

  """Relational Filter Condition inside saved filter criteria"""
  relationalFilterCondition: SavedFilterRelationalFilterCondition
}

enum SavedFilterCriteriaType {
  """LOGICAL"""
  LOGICAL

  """RELATIONAL"""
  RELATIONAL

  """RELATIONAL_WITH_EXPRESSION"""
  RELATIONAL_WITH_EXPRESSION

  """ARRAY"""
  ARRAY
}

enum SavedFilterExpressionType {
  """FIELD"""
  FIELD

  """CONSTANT"""
  CONSTANT
}

"""Logical Filter condition in filter criteria"""
type SavedFilterLogicalFilterCondition {
  """
  These are child filters that will be evaluated and combined with the designated operator
  """
  filterCriteria: [SavedFilterCriteria]!

  """Logical operator applied amongst child filters"""
  operator: LogicalOperator!
}

"""Relational Filter condition in filter criteria"""
type SavedFilterRelationalFilterCondition {
  """Name of the field to match against"""
  fieldName: String!

  """Value of the field"""
  fieldValue: Unknown!

  """Filter Condition Operator"""
  operator: SavedFilterRelationalOperator!
}

enum SavedFilterRelationalOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS

  """IN"""
  IN

  """NOT_IN"""
  NOT_IN

  """LESS_THAN"""
  LESS_THAN

  """LESS_THAN_OR_EQUAL_TO"""
  LESS_THAN_OR_EQUAL_TO

  """GREATER_THAN"""
  GREATER_THAN

  """GREATER_THAN_OR_EQUAL_TO"""
  GREATER_THAN_OR_EQUAL_TO
}

"""Saved Filters results"""
type SavedFiltersResultSet {
  count: Long
  total: Long

  """List of Saved Filters"""
  results: [SavedFilter]!
}

"""Visibility scope of saved filter"""
type SavedFilterVisibility {
  """Filter Visibility Type"""
  visibilityType: SavedFilterVisibilityType!
}

"""Visibility scope of a filter"""
enum SavedFilterVisibilityType {
  """A private filter can only be seen or used by its author"""
  PRIVATE

  """
  A public filter can be used by everyone in the organization but can be deleted or edited only by its author
  """
  PUBLIC
}

"""A saved query allows users to save their commonly helpful queries"""
type SavedQuery {
  """Unique ID generated for a saved query"""
  id: String!

  """Comments around query"""
  comments: String

  """Creation timestamp of the saved query"""
  creationTimestamp: DateTime!

  """Name of the saved query"""
  name: String!

  """User info"""
  queryAuthor: QueryAuthor!

  """Saved query clauses"""
  queryClauses: SavedQueryClauses!

  """The category against which the saved query is associated with"""
  scope: String!

  """Last updated timestamp of the saved query"""
  updatedTimestamp: DateTime!

  """User who created the saved query"""
  username: String!
}

type SavedQueryAuthorsResult {
  count: Long
  total: Long
  results: [QueryAuthor]!
}

"""Saved query clauses"""
type SavedQueryClauses {
  """Saved query filtering criteria"""
  filter: [String]

  """Saved query group by clause"""
  groupBy: [String]

  """Saved query number of groups limit"""
  groupLimit: String

  """Includes the remaining ungrouped data as "others" group"""
  includeOtherGroups: String

  """Time interval across which metrics are calculated"""
  interval: String

  """Saved query order by clause"""
  orderBy: [String]

  """Saved query selection clause"""
  selection: [String]!

  """Time range for the query"""
  timeRange: String
}

"""Saved query results"""
type SavedQueryResultSet {
  count: Long
  total: Long

  """List of saved queries"""
  results: [SavedQuery]!
}

type SavedRelationalFilterExpression {
  """Saved filter constant expression"""
  constant: Unknown

  """Saved filter field expression"""
  field: SavedRelationalFilterExpressionField

  """Type of expression"""
  type: SavedFilterExpressionType!
}

type SavedRelationalFilterExpressionField {
  """Name of the key to match against"""
  key: String!

  """Scope of the key"""
  scope: String
}

"""Relational Filter condition in filter criteria"""
type SavedRelationalFilterWithExpressionCondition {
  """LHS expression"""
  lhsExpression: SavedRelationalFilterExpression!

  """Filter Condition Operator"""
  operator: SavedFilterRelationalOperator!

  """RHS expression"""
  rhsExpression: SavedRelationalFilterExpression!
}

type Scan {
  buildId: String @deprecated(reason: "Deprecated")
  buildUrl: String @deprecated(reason: "Deprecated")
  creationTimestamp: DateTime!
  id: String!
  initiatedBy: String!
  initiationSource: ScanInitiationSource
  name: String!
  status: ScanStatus!
  vulnerabilitiesStats: VulnerabilitiesV2Statistics!
}

type ScanCommand {
  commandHelpSegments: [CommandHelpSegment]!
  commandType: ScanCommandType!
  commands: [String]!
}

type ScanCommandResult {
  scanCommands: [ScanCommand]!
}

enum ScanCommandType {
  """PYTHON"""
  PYTHON

  """DOCKER"""
  DOCKER

  """LINUX_INSTALL"""
  LINUX_INSTALL
}

type ScanDetails {
  """Total scanned apis"""
  apisScannedCount: Long!

  """Ci Build Url"""
  ciBuildUrl: String

  """Cli Version"""
  cliVersion: String!

  """Environment name"""
  environmentName: String!

  """Scan Creation Instant"""
  scanCreationInstant: DateTime!

  """Scan execution time"""
  scanExecutionTime: Duration!

  """Scan id"""
  scanId: String!

  """Scan initiated by """
  scanInitiatedBy: String!

  """Scan initiation source"""
  scanInitiationSource: ScanInitiationSource

  """Scan Name"""
  scanName: String!

  """Scan state details"""
  scanStateDetails: ScanStateDetails

  """Scan status"""
  scanStatus: ScanStatus!

  """Total tests generated count"""
  testsGeneratedCount: Long!

  """Total eligible apis"""
  totalEligibleApis: Long!
}

type ScanEvaluationCriteria {
  id: String!
  description: String!
  expression: ScanEvaluationCriteriaEvaluationExpression!
  generationSource: ScanEvaluationCriteriaGenerationSource!
  name: String!
  owner: String!
  rules: [ScanEvaluationCriteriaRule]!
}

type ScanEvaluationCriteriaAssetScope {
  """Asset Selection ( Select all / Select new )"""
  assetSelection: ScanEvaluationCriteriaAssetSelection!

  """Asset Type of Scan Evaluation Criteria"""
  assetType: ScanEvaluationCriteriaAssetType!
}

type ScanEvaluationCriteriaAssetSelection {
  """Select all assets"""
  selectAllAssets: ScanEvaluationCriteriaSelectAllAssets

  """Select new assets"""
  selectNewAssets: ScanEvaluationCriteriaSelectNewAssets
}

enum ScanEvaluationCriteriaAssetType {
  """ENDPOINT"""
  ENDPOINT

  """SERVICE"""
  SERVICE
}

type ScanEvaluationCriteriaEvaluationExpression {
  """Takes logical AND of all rules if true"""
  allEvaluateTrue: Boolean
}

enum ScanEvaluationCriteriaFilterKey {
  """OWNER"""
  OWNER

  """CRITERIA_ID"""
  CRITERIA_ID
}

enum ScanEvaluationCriteriaGenerationSource {
  """USER"""
  USER

  """SYSTEM"""
  SYSTEM
}

enum ScanEvaluationCriteriaOperator {
  """GREATER_THAN"""
  GREATER_THAN

  """GREATER_THAN_OR_EQUALS"""
  GREATER_THAN_OR_EQUALS

  """LESS_THAN"""
  LESS_THAN

  """LESS_THAN_OR_EQUALS"""
  LESS_THAN_OR_EQUALS
}

type ScanEvaluationCriteriaResultSet {
  count: Long!
  total: Long!
  results: [ScanEvaluationCriteria]!
}

"""Rule of Scan Evaluation Criteria"""
type ScanEvaluationCriteriaRule {
  """Asset Scope of Scan Evaluation Criteria"""
  assetScope: ScanEvaluationCriteriaAssetScope!

  """Vulnerability Scope and Evaluation of Scan Evaluation Criteria"""
  vulnerabilityScopeAndEvaluation: ScanEvaluationCriteriaVulnerabilityScopeAndEvaluation!
}

type ScanEvaluationCriteriaSelectAllAssets {
  """Whether select all is enabled"""
  isEnabled: Boolean!
}

type ScanEvaluationCriteriaSelectAnyVulnerability {
  """Whether select any is enabled"""
  isEnabled: Boolean!
}

type ScanEvaluationCriteriaSelectNewAssets {
  """Whether select new assets is enabled"""
  isEnabled: Boolean!
}

type ScanEvaluationCriteriaSelectNewVulnerabilities {
  """Whether select new is enabled"""
  isEnabled: Boolean!
}

type ScanEvaluationCriteriaVulnerabilityScopeAndEvaluation {
  """Vulnerability duration scope"""
  vulnerabilityDurationScope: DurationScope

  """Scan Evaluation Criteria Operator Type"""
  operator: ScanEvaluationCriteriaOperator!

  """Vulnerability Severity level"""
  severity: VulnerabilityV2Severity!

  """Threshold value"""
  threshold: Int!

  """Vulnerability Selection (Select all / Select any)"""
  vulnerabilitySelection: ScanEvaluationCriteriaVulnerabilitySelection!
}

type ScanEvaluationCriteriaVulnerabilitySelection {
  """Select any Vulnerability"""
  selectAnyVulnerability: ScanEvaluationCriteriaSelectAnyVulnerability

  """Select new Vulnerabilities"""
  selectNewVulnerabilities: ScanEvaluationCriteriaSelectNewVulnerabilities
}

enum ScanFilterField {
  """SCAN_ID"""
  SCAN_ID

  """SCAN_STATUS"""
  SCAN_STATUS

  """ENVIRONMENT_ID"""
  ENVIRONMENT_ID

  """ENVIRONMENT_NAME"""
  ENVIRONMENT_NAME

  """HAS_NON_ZERO_VULNERABILITIES"""
  HAS_NON_ZERO_VULNERABILITIES

  """INITIATED_BY"""
  INITIATED_BY

  """CATEGORIES"""
  CATEGORIES

  """SUB_CATEGORIES"""
  SUB_CATEGORIES

  """VULNERABILITY_STATUS"""
  VULNERABILITY_STATUS

  """VULNERABILITY_SEVERITY"""
  VULNERABILITY_SEVERITY

  """SCAN_POLICY_IDS"""
  SCAN_POLICY_IDS

  """SCAN_SCHEDULE_IDS"""
  SCAN_SCHEDULE_IDS
}

type ScanInfo {
  id: String
  executedTests: Long!
  generatedTests: Long!
  initiatedBy: String!
  initiationSource: ScanInitiationSource!
  name: String!
  scanCompletionTime: DateTime!
  scanStartTime: DateTime!
  scanStateDetails: ScanStateDetails
  status: ScanStatus!
  totalVulnerabilities: Long!
}

enum ScanInfoFilterField {
  """ENVIRONMENT_ID"""
  ENVIRONMENT_ID

  """SCAN_STATUS"""
  SCAN_STATUS

  """INITIATED_BY"""
  INITIATED_BY

  """SCAN_ID"""
  SCAN_ID

  """SUB_CATEGORIES"""
  SUB_CATEGORIES

  """HAS_NON_ZERO_VULNERABILITIES"""
  HAS_NON_ZERO_VULNERABILITIES

  """SUITE_IDENTIFIER"""
  SUITE_IDENTIFIER

  """SCAN_SUITE_ID"""
  SCAN_SUITE_ID

  """SCAN_SUITE_TYPE"""
  SCAN_SUITE_TYPE

  """SCAN_NAME"""
  SCAN_NAME
}

type ScanInfoResultSet {
  count: Long!
  total: Long!
  results: [ScanInfo]!
}

enum ScanInfoSource {
  """SCAN_POLICY"""
  SCAN_POLICY

  """SCAN_SUITE"""
  SCAN_SUITE

  """SCAN_ID"""
  SCAN_ID

  """REFERENCED_SCAN_SCOPE"""
  REFERENCED_SCAN_SCOPE
}

enum ScanInitiationSource {
  """CLI"""
  CLI

  """PLATFORM"""
  PLATFORM

  """CICD"""
  CICD
}

type ScannedApiStat {
  entity(type: String!): Entity
  id: String
  executedTestsCount: Long!
  generatedTestsCount: Long!
  apiId: String!
  responseCodeInfo: [ScannedApiStatResponseCodeInfo]!
  vulnerabilitiesCount: Long!
}

enum ScannedApiStatFilterKey {
  """SCAN_ID"""
  SCAN_ID

  """HAS_NON_ZERO_VULNERABILITIES"""
  HAS_NON_ZERO_VULNERABILITIES

  """API_NAME"""
  API_NAME

  """API_ID"""
  API_ID
}

type ScannedApiStatResponseCodeInfo {
  count: Long!
  responseCode: Long!
}

type ScannedApiStatResultSet {
  count: Long!
  total: Long!
  results: [ScannedApiStat]!
}

enum ScannedApiStatSortField {
  """VULNERABILITY_COUNT"""
  VULNERABILITY_COUNT

  """GENERATED_TEST_COUNT"""
  GENERATED_TEST_COUNT

  """EXECUTED_TEST_COUNT"""
  EXECUTED_TEST_COUNT
}

"""Scanner Identification details"""
type ScannerIdentification {
  actorEntityId: String!
  ipAddress: String!
}

type ScanOverview {
  """Clone Scan Details for a particular scan id"""
  cloneScanDetails: CloneScanDetails

  """Policy Details for a particular scan id"""
  policyDetails: PolicyDetails

  """Scan Details for a particular scan id"""
  scanDetails: ScanDetails!

  """Suite Details for a scan created from suite"""
  scanSuiteDetails: ScanOverviewSuite

  """Schedule Details for a particular scan id"""
  scheduleDetails: ScheduleDetails

  """Traffic Configuration for a particular scan id"""
  trafficConfiguration: TrafficConfiguration!
}

type ScanOverviewResultSet {
  """List of Scan Overview"""
  results: [ScanOverview]!
}

type ScanOverviewSuite {
  scanSuiteId: String!
  scanSuiteName: String!
}

type ScanPolicy {
  id: String
  configuration: PolicyConfiguration!
  integrationDetails: IntegrationDetails!
  metadata: PolicyMetadata!
  name: String!
}

enum ScanPolicyFilterField {
  """POLICY_IDS"""
  POLICY_IDS

  """ENVIRONMENTS"""
  ENVIRONMENTS
}

type ScanPolicyResultSet {
  count: Long!
  total: Long!
  results: [ScanPolicy]!
}

"""Scan purge config"""
type ScanPurgeConfig {
  """Duration before which scans should be purged"""
  createdBeforeDuration: Duration!
}

type ScanResultSet {
  count: Long!
  total: Long!
  results: [Scan]!
}

type ScanRuntimeStatusResponse {
  executedTests: Long!
  generatedTests: Long!
  scannedApis: Long!
}

type ScanStateDetails {
  """Scan status reason"""
  reason: String

  """Scan status"""
  scanStatus: ScanStatus!
}

enum ScanStatus {
  """INITIALIZED"""
  INITIALIZED

  """RUNNING"""
  RUNNING

  """QUEUED"""
  QUEUED

  """SCHEDULED"""
  SCHEDULED

  """COMPLETED"""
  COMPLETED

  """TIMED_OUT"""
  TIMED_OUT

  """CLI_IDLE_TIMED_OUT"""
  CLI_IDLE_TIMED_OUT

  """MAX_TEST_LIMIT_REACHED"""
  MAX_TEST_LIMIT_REACHED

  """ABORTED"""
  ABORTED

  """ERROR"""
  ERROR

  """NO_HEARTBEAT"""
  NO_HEARTBEAT

  """PAUSED_EXECUTION_STOPPED_GENERATION"""
  PAUSED_EXECUTION_STOPPED_GENERATION

  """RESUME_EXECUTION"""
  RESUME_EXECUTION
}

type ScanSuite {
  advanceConfiguration: AdvanceScanSuiteConfiguration
  configuration: ScanSuiteConfiguration
  description: String
  environment: String
  hookConfiguration: ScanSuiteHookConfiguration
  id: String!
  integrationDetails: [IntegrationDetails]
  metadata: ScanSuiteMetadata
  name: String!
  priorityDetails: ScanSuitePriorityDetails
  scanEvaluationCriteriaConfiguration: ScanSuiteScanEvaluationCriteriaConfiguration
  scanSuiteTypeDetails: ScanSuiteTypeDetails!
  scheduleJobConfiguration: ScanSuiteScheduleJobConfiguration
}

type ScanSuiteCommandResponse {
  scanCommands: [ScanCommand]!
}

type ScanSuiteConfiguration {
  assetSelections: [AssetSelection]!
  baseScanId: String

  """Config to run scans in incremental mode"""
  incrementalScanConfiguration: IncrementalScanConfiguration
  policyId: String!

  """Filters Spans based on location and key-value predicate"""
  spanFilters: ScanSuiteSpanFilters
  targetUrl: String
  trafficConfiguration: TrafficConfiguration!
  trafficEnvironment: String!
}

type ScanSuiteDetails {
  scanSuite: ScanSuite!
  scanSuiteMetaDetails: ScanSuiteMetaDetails!
}

type ScanSuiteHookConfiguration {
  hookDetails: [ScanSuiteHookDetails]!
}

type ScanSuiteHookDetails {
  hookId: String!
  hookName: String
}

type ScanSuiteMetadata {
  createdBy: String!
  creationTimestamp: DateTime!
  lastEditTimestamp: DateTime
  lastEditedBy: String
}

type ScanSuiteMetaDetails {
  scanSuitePolicyDetails: ScanSuitePolicyDetails!
  scanSuiteScanDetails: ScanSuiteScanDetails!
  scanSuiteVulnerabilityDetails: ScanSuiteVulnerabilityDetails!
}

type ScanSuitePolicyDetails {
  policyName: String!
  totalAttacks: Int!
}

type ScanSuitePriorityDetails {
  priority: Int!
}

enum ScanSuiteResetType {
  """INCREMENTAL_SCAN_RESET"""
  INCREMENTAL_SCAN_RESET
}

type ScanSuiteScanDetails {
  lastSuiteScanDetails: LastSuiteScanDetails!
  scanStats: ScanSuiteScanStats!
}

type ScanSuiteScanEvaluationCriteriaConfiguration {
  scanEvaluationCriteriaDetails: [ScanSuiteScanEvaluationCriteriaDetails]!
}

type ScanSuiteScanEvaluationCriteriaDetails {
  scanEvaluationCriteriaId: String!
}

type ScanSuiteScanStats {
  totalScannedApis: Long!
}

type ScanSuiteScheduleJobConfiguration {
  dailySchedule: DailySchedule
  monthlySchedule: MonthlySchedule
  name: String
  runnerIds: [String]
  runnerNames: [String]
  status: ScanSuiteScheduleJobStatus
  weeklySchedule: WeeklySchedule
}

enum ScanSuiteScheduleJobStatus {
  """ENABLED"""
  ENABLED

  """DISABLED"""
  DISABLED
}

enum ScanSuitesFilterKey {
  """ENVIRONMENT_IDS"""
  ENVIRONMENT_IDS

  """SCAN_SUITE_IDS"""
  SCAN_SUITE_IDS

  """POLICY_IDS"""
  POLICY_IDS

  """SCAN_EVALUATION_CRITERIA_IDS"""
  SCAN_EVALUATION_CRITERIA_IDS

  """HOOK_IDS"""
  HOOK_IDS

  """SCAN_SUITE_TYPES"""
  SCAN_SUITE_TYPES
}

type ScanSuiteSpanFilterKeyValuePredicate {
  """Key Pattern"""
  keyPredicate: StringPredicate!

  """Value Pattern"""
  valuePredicate: StringPredicate
}

type ScanSuiteSpanFilterKeyValuePredicateWithLocation {
  """Key - Value String Predicate"""
  keyValuePredicate: ScanSuiteSpanFilterKeyValuePredicate!

  """Enum for locations(attribute, request cookie and header)"""
  location: ScanSuiteSpanFilterLocation!
}

enum ScanSuiteSpanFilterLocation {
  """REQUEST_HEADER"""
  REQUEST_HEADER

  """REQUEST_COOKIE"""
  REQUEST_COOKIE

  """ATTRIBUTE"""
  ATTRIBUTE
}

type ScanSuiteSpanFilters {
  """List of conditions each consisting of location and key-value predicate"""
  conditions: [ScanSuiteSpanFilterKeyValuePredicateWithLocation]!
}

type ScanSuitesResultSet {
  count: Long!
  results: [ScanSuiteDetails]!
  total: Long!
}

enum ScanSuitesStatsFilterKey {
  """ENVIRONMENT_IDS"""
  ENVIRONMENT_IDS
}

type ScanSuitesStatsResult {
  scanDetails: ScanSuitesStatsResultScanDetails!
}

type ScanSuitesStatsResultScanDetails {
  scanStateDetails: [ScanSuitesStatsResultScanStateDetails]!
}

type ScanSuitesStatsResultScanStateDetails {
  scanStatus: ScanStatus
  totalScans: Int!
}

enum ScanSuiteType {
  """CUSTOM"""
  CUSTOM

  """QUICK_SCAN"""
  QUICK_SCAN
}

type ScanSuiteTypeDetails {
  scanSuiteType: ScanSuiteType!
}

type ScanSuiteVulnerabilityDetails {
  vulnerabilityStats: ScanSuiteVulnerabilityStats!
}

type ScanSuiteVulnerabilitySeverityInfo {
  count: Long!
  severity: VulnerabilityV2Severity!
}

type ScanSuiteVulnerabilityStats {
  vulnerabilitySeverityInfo: [ScanSuiteVulnerabilitySeverityInfo]!
}

type ScanSummary {
  apisScannedCount: Long!
  cliVersion: String
  environmentName: String!
  scanCreationTimestamp: DateTime!
  scanExecutionTime: Duration!
  scanInitiatedBy: String!
  scanInitiationSource: ScanInitiationSource
  scanName: String!
  scanStateDetails: ScanStateDetails
  scanStatus: ScanStatus!
  scanSummaryEntryList: [ScanSummaryEntry]!
  sourceScanId: String
  testsGeneratedCount: Long!
  totalEligibleApis: Long!
  totalVulnerabilities: Long!
}

type ScanSummaryEntry {
  key: String!
  valueList: [String]!
}

type ScanSummaryReport {
  pluginTestStatsList: [PluginTestStats]!
  policyDetails: PolicyDetails
  scanSummary: ScanSummary!

  """
  Contains schedule and runner info for scan, applicable only for scheduled scans
  """
  scheduleDetails: ScheduleDetails
  trafficDetails: TrafficDetails!
  vulnerableApiStatsList: [VulnerableApiStats]!
}

"""Schedule"""
type Schedule {
  """daily schedule configuration"""
  dailySchedule: DailySchedule

  """weekly schedule configuration"""
  weeklySchedule: WeeklySchedule
}

type ScheduleDetails {
  """runner id for scan"""
  runnerId: String

  """Schedule name for id"""
  scheduleId: String

  """Schedule name for scan"""
  scheduleName: String
}

enum ScheduledJobField {
  """SCHEDULED_JOB_FIELD_ID"""
  SCHEDULED_JOB_FIELD_ID

  """SCHEDULED_JOB_FIELD_NAME"""
  SCHEDULED_JOB_FIELD_NAME

  """SCHEDULED_JOB_FIELD_CREATOR"""
  SCHEDULED_JOB_FIELD_CREATOR

  """SCHEDULED_JOB_FIELD_SOURCE"""
  SCHEDULED_JOB_FIELD_SOURCE

  """SCHEDULED_JOB_FIELD_STATUS"""
  SCHEDULED_JOB_FIELD_STATUS

  """SCHEDULED_JOB_FIELD_DURATION"""
  SCHEDULED_JOB_FIELD_DURATION

  """SCHEDULED_JOB_FIELD_CRON_EXPRESSION"""
  SCHEDULED_JOB_FIELD_CRON_EXPRESSION

  """SCHEDULED_JOB_FIELD_CREATED_TIMESTAMP"""
  SCHEDULED_JOB_FIELD_CREATED_TIMESTAMP

  """SCHEDULED_JOB_FIELD_LAST_UPDATED_TIMESTAMP"""
  SCHEDULED_JOB_FIELD_LAST_UPDATED_TIMESTAMP

  """SCHEDULED_JOB_FIELD_LAST_JOB_EXECUTION_TIMESTAMP"""
  SCHEDULED_JOB_FIELD_LAST_JOB_EXECUTION_TIMESTAMP

  """SCHEDULED_JOB_FIELD_NEXT_JOB_EXECUTION_TIMESTAMP"""
  SCHEDULED_JOB_FIELD_NEXT_JOB_EXECUTION_TIMESTAMP

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_ENVIRONMENT"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_ENVIRONMENT

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_CHARACTERISTIC_TYPE"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_CHARACTERISTIC_TYPE

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_DOCUMENTATION_ID"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_DOCUMENTATION_ID

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_API_ID"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_API_ID

  """SPEC_CONFORMANCE_JOB_SPEC_FIELD_API_NAME"""
  SPEC_CONFORMANCE_JOB_SPEC_FIELD_API_NAME

  """SCHEDULED_JOB_FIELD_SCHEDULE"""
  SCHEDULED_JOB_FIELD_SCHEDULE
}

type ScheduledJobQueryResult {
  selection(key: ScheduledJobField!): ScheduledJobValue
}

type ScheduledJobQueryResultSet {
  count: Long!
  results: [ScheduledJobQueryResult]!
  total: Long!
}

enum ScheduledJobStatus {
  """ENABLED"""
  ENABLED

  """DISABLED"""
  DISABLED
}

type ScheduledJobValue {
  """schedule configuration"""
  schedule: Schedule

  """scheduled job field data type"""
  type: AttributeType

  """scheduled job field value"""
  value: Unknown
}

enum ScheduleFrequencyType {
  """WEEKLY"""
  WEEKLY

  """DAILY"""
  DAILY
}

type ScopedAnomalyAggregationConfig {
  anomalyEventAggregationConfig: EventAggregationConfig!
  anomalyScope: AnomalyScope!
}

type ScopedAnomalyAggregationConfigsResultSet {
  count: Long!
  total: Long!
  results: [ScopedAnomalyAggregationConfig]!
}

type ScopedAnomalyDetectionConfig {
  anomalyDetectionConfigs: [AnomalyDetectionConfig]!
  anomalyScope: AnomalyScope!
}

type ScopedAnomalyDetectionConfigsResultSet {
  count: Long!
  total: Long!
  results: [ScopedAnomalyDetectionConfig]!
}

"""Scoped config for global anomaly detection"""
type ScopedAnomalyGlobalConfig {
  """API config related to modsec"""
  apiGlobalConfig: ApiGlobalConfig

  """Scope of the config"""
  anomalyScope: AnomalyScope!

  """Status of the config"""
  configStatus: AnomalyConfigStatus! @deprecated(reason: "Deprecated")

  """Boolean denoting if detection is enabled for exit spans or not"""
  enabledForExitSpans: Boolean! @deprecated(reason: "Deprecated")

  """Config for excluding events"""
  excludedEventsGenerationConfig: ExcludedEventsGenerationConfig @deprecated(reason: "Deprecated")

  """Minimum anomaly confidence level"""
  minConfidenceLevel: AnomalyConfidenceLevel @deprecated(reason: "Deprecated")

  """Global config related to modsec"""
  modsecGlobalConfig: ModsecGlobalConfig

  """List of scopes whose config is overriding this scope config"""
  overriddenParentScopes: [AnomalyScope]! @deprecated(reason: "Deprecated")

  """Scopes details whose config is overriding this scope config"""
  overriddenParentScopesDetails: OverriddenScopesDetails @deprecated(reason: "Deprecated")

  """List of scopes whose config is getting overridden by this scope config"""
  overridingChildrenScopes: [AnomalyScope]! @deprecated(reason: "Deprecated")

  """Scopes details whose config is getting overridden by this scope config"""
  overridingChildrenScopesDetails: OverriddenScopesDetails @deprecated(reason: "Deprecated")
}

"""Scoped config change for global anomaly detection"""
type ScopedAnomalyGlobalConfigChange {
  """API config related to modsec"""
  apiGlobalConfig: ApiGlobalConfig

  """Scope of the config"""
  anomalyScope: AnomalyScope!

  """Status change of the config"""
  configStatusChange: AnomalyConfigStatusChange

  """Boolean denoting if detection is enabled for exit spans or not"""
  enabledForExitSpans: Boolean

  """Config for excluding events"""
  excludedEventsGenerationConfig: ExcludedEventsGenerationConfig

  """Minimum anomaly confidence level"""
  minConfidenceLevel: AnomalyConfidenceLevel

  """Global config related to modsec"""
  modsecGlobalConfig: ModsecGlobalConfig
}

type ScopedAnomalyGlobalConfigsChangeResultSet {
  count: Long!
  total: Long!
  results: [ScopedAnomalyGlobalConfigChange]!
}

type ScopedAnomalyGlobalConfigsResultSet {
  count: Long!
  total: Long!
  results: [ScopedAnomalyGlobalConfig]!
}

type ScopedApiRiskData {
  """The list of risk factors"""
  apiRiskFactors: [InsightsApiRiskFactor]!

  """The impact score"""
  apiRiskImpactScore: Float

  """The impact score category"""
  apiRiskImpactScoreCategory: ApiRiskScoreCategory!

  """The risk level values"""
  apiRiskLevelValues: InsightsApiRiskLevelValues!

  """The likelihood score"""
  apiRiskLikelihoodScore: Float

  """The likelihood score category"""
  apiRiskLikelihoodScoreCategory: ApiRiskScoreCategory!

  """The overall risk score"""
  apiRiskScore: Float!

  """The list of grid cells"""
  apiRiskScoringGridCells: [InsightsApiRiskScoringGridCell]!

  """The risk score category"""
  apiRiskScoreCategory: ApiRiskScoreCategory
}

type ScopedApiRiskElement {
  """Whether application of this element is disabled"""
  disabled: Boolean

  """The element id"""
  id: String!

  """The element predicate"""
  predicate: ApiRiskElementPredicate!

  """The integer score value"""
  score: Int!
}

type ScopedApiRiskFactor {
  """The config scope"""
  apiRiskConfigScope: ApiRiskConfigScope!

  """The risk contributor category"""
  apiRiskContributorCategory: ApiRiskContributorCategory!

  """The list of risk elements"""
  apiRiskElements: [ScopedApiRiskElement]!

  """The risk score category"""
  apiRiskFactorCategory: ApiRiskFactorCategory!

  """Whether application of this factor is disabled"""
  disabled: Boolean!

  """Whether the factor is default or not"""
  isDefault: Boolean!
}

enum ScopedApiRiskScoreCategory {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

"""Scoped training action configuration"""
type ScopedTrainingActionConfig {
  """Anomaly scope for the training action"""
  configScope: AnomalyScope!

  """List of training action configurations"""
  trainingActionConfigs: [TrainingActionConfig]!
}

type ScopedTrainingConfig {
  anomalyScope: AnomalyScope!
  trainingConfigs: [TrainingConfig]!
}

type ScopedTrainingConfigsResultSet {
  count: Long!
  total: Long!
  results: [ScopedTrainingConfig]!
}

type SecurityConfigChangeEventCondition {
  securityConfigurationTypes: [AlertingSecurityConfigurationType]!
}

enum SecurityConfigurationAction {
  """ADD"""
  ADD

  """REMOVE"""
  REMOVE

  """UPDATE"""
  UPDATE

  """ENABLE"""
  ENABLE

  """DISABLE"""
  DISABLE

  """MONITOR"""
  MONITOR

  """BLOCK"""
  BLOCK
}

"""Security Configuration change details"""
type SecurityConfigurationChange {
  ruleId: String
  ruleName: String
  securityConfigurationAction: SecurityConfigurationAction!
  securityConfigurationType: SecurityConfigurationType
}

enum SecurityConfigurationType {
  """SIGNATURE_BASED_BLOCKING_RULE"""
  SIGNATURE_BASED_BLOCKING_RULE

  """RATE_LIMITING_RULE"""
  RATE_LIMITING_RULE

  """IP_RANGE_RULE"""
  IP_RANGE_RULE

  """LOCATION_RULE"""
  LOCATION_RULE

  """CUSTOM_SIGNATURE_RULE"""
  CUSTOM_SIGNATURE_RULE

  """DETECTION_EXCLUSION_RULE"""
  DETECTION_EXCLUSION_RULE

  """DATA_LOSS_PREVENTION_RULE"""
  DATA_LOSS_PREVENTION_RULE

  """ENUMERATION_RULE"""
  ENUMERATION_RULE

  """DETECTION_RULE"""
  DETECTION_RULE

  """THREAT_AUTO_BLOCKING"""
  THREAT_AUTO_BLOCKING

  """GLOBAL_DETECTION_CONFIG"""
  GLOBAL_DETECTION_CONFIG

  """MALICIOUS_SOURCES_IP_RANGE_RULE"""
  MALICIOUS_SOURCES_IP_RANGE_RULE

  """MALICIOUS_SOURCES_REGION_RULE"""
  MALICIOUS_SOURCES_REGION_RULE

  """MALICIOUS_SOURCES_EMAIL_DOMAIN_RULE"""
  MALICIOUS_SOURCES_EMAIL_DOMAIN_RULE

  """MALICIOUS_SOURCES_IP_TYPE_RULE"""
  MALICIOUS_SOURCES_IP_TYPE_RULE

  """WAF_THREAT_RULE"""
  WAF_THREAT_RULE

  """WAF_THREAT_TYPE"""
  WAF_THREAT_TYPE

  """API_PROTECTION_THREAT_RULE"""
  API_PROTECTION_THREAT_RULE

  """API_PROTECTION_THREAT_TYPE"""
  API_PROTECTION_THREAT_TYPE
}

"""Security event confidence level"""
enum SecurityEventConfidenceLevel {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH
}

"""Security event impact level"""
enum SecurityEventImpactLevel {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH
}

enum SecurityEventSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

type SecurityEventsInfoJob {
  createdBy: String!
  createdTimestamp: DateTime!
  executionMode: JobExecutionMode
  id: String!
  messages: [String]
  name: String
  securityEventsInfoJobResult: SecurityEventsInfoJobResult!
  securityEventsInfoJobSpec: SecurityEventsInfoJobSpec!
  source: JobSource
  status: JobStatus!
  statusUpdatedTimestamp: DateTime!
}

type SecurityEventsInfoJobResult {
  downloadUrl: String!
}

type SecurityEventsInfoJobSpec {
  endTime: DateTime!
  environment: String
  eventRuleCategory: String
  limit: Int!
  startTime: DateTime!
}

"""Security Event Threat Score Contribution update details"""
type SecurityEventThreatScoreContributionUpdate {
  highSeverityScoreUpdate: LongChange
  lowSeverityScoreUpdate: LongChange
  mediumSeverityScoreUpdate: LongChange
}

"""Security testing vulnerability auto resolution criteria"""
type SecurityTestingVulnerabilityAutoResolutionCriteria {
  """Logical operator to apply to the rules"""
  logicalOperator: LogicalOperator!

  """Security testing vulnerability auto resolution criteria rules"""
  securityTestingVulnerabilityAutoResolutionCriteriaRules: [SecurityTestingVulnerabilityAutoResolutionCriteriaRule]!
}

"""
Security testing vulnerability auto resolution criteria rule. Set either
'unseenDurationRule' or 'consecutiveScanDetectionRule', but not both
"""
type SecurityTestingVulnerabilityAutoResolutionCriteriaRule {
  """Consecutive scan detection rule"""
  consecutiveScanDetectionRule: SecurityTestingVulnerabilityConsecutiveScanDetectionRule

  """Unseen duration rule"""
  unseenDurationRule: SecurityTestingVulnerabilityUnseenDurationRule
}

"""Security testing vulnerability consecutive scan detection rule"""
type SecurityTestingVulnerabilityConsecutiveScanDetectionRule {
  """Minimum consecutive not detected scan"""
  minimumConsecutiveNotDetectedScan: Int!
}

"""Security testing vulnerability unseen duration rule"""
type SecurityTestingVulnerabilityUnseenDurationRule {
  """Max unseen duration"""
  maxUnseenDuration: Duration!
}

type SegmentFilterConfig {
  segmentLengthThreshold: Int!
  urlPartsThreshold: Int!
}

"""Segment matching based api naming rule config"""
type SegmentMatchingBasedRuleConfig {
  """Regex patterns to be matched against"""
  regexes: [String]!

  """Values with which the corresponding regexes are to be replaces with"""
  values: [String]!
}

type SegmentMergeConfig {
  disabled: Boolean!
  filterConfig: EntitySpanAttributeFilter
  levelThresholdConfigs: [LevelThresholdConfig]
  nonMergeableDepth: Int!
  segmentDepth: String!
}

enum SelectedAsset {
  """ENDPOINT"""
  ENDPOINT

  """SERVICE"""
  SERVICE

  """DOMAIN"""
  DOMAIN

  """FILTER_RULE"""
  FILTER_RULE
}

type SelectedDomainAsset {
  idPredicates: [StringPredicate]
  namePredicates: [StringPredicate]
}

type SelectedEndpointAsset {
  apiTypePredicates: [StringPredicate]
  idPredicates: [StringPredicate]
  labelPredicates: [StringPredicate]
  methodTypePredicates: [StringPredicate]
  namePredicates: [StringPredicate]
  ownerPredicates: [StringPredicate]
  protocolTypePredicates: [StringPredicate]
  urlPredicates: [StringPredicate]
}

type SelectedLevelPlugin {
  idPredicates: [StringPredicate]
  labelPredicates: [StringPredicate]
  namePredicates: [StringPredicate]
}

type SelectedLevelPluginCategory {
  idPredicates: [StringPredicate]
  namePredicates: [StringPredicate]
}

enum SelectedLevelPluginSelectionGroup {
  """ALL"""
  ALL

  """TRACEABLE_RECOMMENDED"""
  TRACEABLE_RECOMMENDED
}

type SelectedLevelVulnerabilityType {
  namePredicates: [StringPredicate]!
}

type SelectedServiceAsset {
  idPredicates: [StringPredicate]
  labelPredicates: [StringPredicate]
  namePredicates: [StringPredicate]
}

type Selection {
  type: AttributeType!
  value: Unknown
}

"""Aggregation type to be performed on the selected field"""
enum SelectionAggregationType {
  """AVG"""
  AVG

  """MIN"""
  MIN

  """MAX"""
  MAX

  """SUM"""
  SUM

  """COUNT"""
  COUNT

  """DISTINCT_COUNT"""
  DISTINCT_COUNT

  """DISTINCT"""
  DISTINCT
}

enum SelectionMode {
  """INCLUDE"""
  INCLUDE

  """EXCLUDE"""
  EXCLUDE
}

"""Event type condition for sensitive data"""
type SensitiveDataConfigChangeCondition {
  """Represents operation on Data configuration i.e Create/Update/Delete """
  sensitiveDataConfigChangeTypes: [SensitiveDataConfigChangeType]!

  """Represents type of data configuration"""
  sensitiveDataConfigTypes: [SensitiveDataConfigType]!
}

"""Represents operation of config """
enum SensitiveDataConfigChangeType {
  """CREATE"""
  CREATE

  """UPDATE"""
  UPDATE

  """DELETE"""
  DELETE
}

"""Represents type of config"""
enum SensitiveDataConfigType {
  """USER_ATTRIBUTION"""
  USER_ATTRIBUTION

  """SESSION_IDENTIFICATION"""
  SESSION_IDENTIFICATION

  """DATA_SET"""
  DATA_SET

  """DATA_TYPE"""
  DATA_TYPE
}

type SensitiveDataTrainingConfig {
  keyValuePairs: [TrainingConfigKeyValuePair]
  name: SensitiveDataTrainingConfigName!
}

enum SensitiveDataTrainingConfigName {
  """PII_SENSITIVE_DATA"""
  PII_SENSITIVE_DATA
}

type SensitiveParam {
  count: Long!
  dataSetIds: [String]!
  dataSetNames: [String]!
  dataTypeId: String
  type: String
}

enum SensitiveParameterType {
  """HEADER"""
  HEADER

  """BODY"""
  BODY

  """QUERY"""
  QUERY
}

type SensitiveParamResultSet {
  count: Long!
  results: [SensitiveParam]!
  total: Long!
}

"""
Sensitive params evaluation type for it's corresponding value based threshold config
"""
enum SensitiveParamsEvaluationType {
  """ALL"""
  ALL

  """SELECTED_DATA_TYPES"""
  SELECTED_DATA_TYPES
}

type SensitivityChange {
  currentSensitivity: DataSensitivity!
  oldSensitivity: DataSensitivity!
}

"""Service Entity change details"""
type ServiceEntityChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
}

type ServiceInsight {
  id: String!
  riskScoreHistogram: [Histogram]
}

"""A rule describing how to identify the service name from a span"""
type ServiceNamingRule {
  """Rule ID"""
  id: String!

  """Naming action to take if satisfied"""
  action: ServiceNamingRuleAction!

  """Conditions must all be satisfied for a naming rule to apply"""
  conditions: [ServiceNamingRuleCondition]!

  """Creation Timestamp"""
  creationTimestamp: DateTime!

  """Rule Description"""
  description: String

  """Indicates if the rule is enabled for processing"""
  enabled: Boolean!

  """Last Updated Timestamp"""
  lastUpdatedTimestamp: DateTime!

  """Rule Name"""
  name: String!

  """
  Scope for which the rule applies. If scope is unset, a rule is always applicable
  """
  scope: ServiceNamingRuleScope
}

"""Action to perform on rule match"""
type ServiceNamingRuleAction {
  """
  Assign the service name using a value captured by regex from an attribute
  """
  regexCaptureGroupNaming: ServiceNamingRuleRegexCaptureGroupNamingAction

  """Assign the service name using a static value"""
  staticNaming: ServiceNamingRuleStaticNamingAction

  """
  The type of action populated. Only one action field should be assigned corresponding to this type
  """
  type: ServiceNamingRuleActionType!
}

"""Type of action to perform on rule match"""
enum ServiceNamingRuleActionType {
  """Use a static value to populate the service name"""
  STATIC

  """
  Use a regex capture group from an attribute to populate the service name
  """
  REGEX_CAPTURE_GROUP
}

"""A condition that matches a specific attribute's value"""
type ServiceNamingRuleAttributeCondition {
  """Span Attribute Key"""
  attributeKey: String!

  """Operator"""
  operator: ServiceNamingRuleConditionOperator!

  """Value to match"""
  value: String!
}

"""Condition to match a span"""
type ServiceNamingRuleCondition {
  """A condition matching an attribute value"""
  attributeCondition: ServiceNamingRuleAttributeCondition

  """
  The type of condition populated. Only one condition field should be assigned corresponding to this type
  """
  predicateType: ServiceNamingRuleConditionType!
}

"""Operator to use for condition matching"""
enum ServiceNamingRuleConditionOperator {
  """Exact match (case-sensitive)"""
  EQUALS

  """Matching regex"""
  MATCHES_REGEX
}

"""Type of condition to use for matching a span"""
enum ServiceNamingRuleConditionType {
  """Matches based on the value of an attribute"""
  ATTRIBUTE
}

"""Assigns a service name based on a regex capture"""
type ServiceNamingRuleRegexCaptureGroupNamingAction {
  """Attribute key to apply the regex capture against"""
  attributeKey: String!

  """
  Regex containing exactly one capture group to apply to the value of the attribute specified by provided key
  """
  regexCaptureGroup: String!
}

type ServiceNamingRuleResultSet {
  count: Long
  total: Long

  """Matching service naming rules"""
  results: [ServiceNamingRule]!
}

"""Scope for which a ServiceNamingRule applies"""
type ServiceNamingRuleScope {
  """A list of environment names where the rule is applicable"""
  environmentNames: [String]!
}

"""Assigns a static service name"""
type ServiceNamingRuleStaticNamingAction {
  """Service name to assign"""
  serviceName: String!
}

"""a set of servicenow itsm assignee groups"""
type ServiceNowItsmIntegrationAssigneeGroup {
  """The name of the assignee group."""
  assigneeGroupDisplayName: String!

  """The user info of the default assignee for this assignee group."""
  defaultAssignee: ServiceNowItsmIntegrationUserInfo

  """
  The "sys-id" of the assignee group. Servicenow identifies the assignee group by this ID
  """
  sysId: String!
}

"""a set of servicenow itsm assignee groups"""
type ServiceNowItsmIntegrationAssigneeGroupsResultSet {
  """a set of assignee groups"""
  assigneeGroups: [ServiceNowItsmIntegrationAssigneeGroup]!
}

"""A set containing the details of servicenow itsm assignees"""
type ServiceNowItsmIntegrationAssigneesResultSet {
  """The details of servicenow itsm assignees"""
  assignees: [ServiceNowItsmIntegrationUserInfo]!
}

"""A set containing the details of servicenow itsm callers"""
type ServiceNowItsmIntegrationCallersResultSet {
  """The details of servicenow itsm callers"""
  callers: [ServiceNowItsmIntegrationUserInfo]!
}

"""Fields that correspond to enum mapping for servicenow"""
type ServiceNowItsmIntegrationEnumeratedChoiceValue {
  """A human readable name for the value"""
  displayName: String!

  """The corresponding index number recognized by servicenow"""
  index: Int!
}

"""A mapping from an incident reference to the incident details"""
type ServiceNowItsmIntegrationIncidentMapping {
  """The associated incident."""
  incident: ServiceNowItsmIntegrationIncidentResponse!

  """The incident reference corresponding to the incident."""
  incidentReference: ServiceNowItsmIntegrationIncidentReference!
}

"""A link to the entity associated to a servicenow itsm incident"""
type ServiceNowItsmIntegrationIncidentReference {
  """The ID of entity for associated with this servicenow itsm incident"""
  referenceId: String!

  """The type of entity for associated with this servicenow itsm incident"""
  referenceType: ServiceNowItsmIntegrationIncidentReferenceType!
}

"""
The types of entities for which a servicenow itsm incident can be created
"""
enum ServiceNowItsmIntegrationIncidentReferenceType {
  """API_SPEC_CONFORMANCE"""
  API_SPEC_CONFORMANCE

  """API_ENDPOINT_DETAIL"""
  API_ENDPOINT_DETAIL

  """AST_SCAN_VULNERABILITY"""
  AST_SCAN_VULNERABILITY

  """EVENT"""
  EVENT

  """SENSITIVE_DATA"""
  SENSITIVE_DATA

  """THREAT_ACTIVITY"""
  THREAT_ACTIVITY

  """VULNERABILITY"""
  VULNERABILITY
}

"""The details corresponding to a servicenow itsm integration"""
type ServiceNowItsmIntegrationIncidentResponse {
  """The url to the created servicenow itsm incident"""
  incidentUrl: String!
}

"""A set of servicenow itsm incident details"""
type ServiceNowItsmIntegrationIncidentsResultSet {
  """This list contains incidents mapped from references to details"""
  incidentMappings: [ServiceNowItsmIntegrationIncidentMapping]!
}

"""The details corresponding to a servicenow itsm integration"""
type ServiceNowItsmIntegrationResponse {
  """A suitable description about this integration"""
  description: String!

  """The associated set of environment as IDs"""
  environmentIds: [String]!

  """The ID corresponding to this servicenow itsm integration"""
  integrationConfigId: String!

  """The name of this servicenow itsm integration"""
  name: String!

  """The configured url of the servicenow instance"""
  serverUrl: String!

  """
  The metadata about tables and corresponding fields details which are accessible
  """
  targetTableMetadataList: [ServiceNowItsmIntegrationTargetTableMetadata]!
}

"""A configured servicenow reference value."""
type ServiceNowItsmIntegrationServiceNowReferenceValue {
  """A human readable name of the reference."""
  displayName: String!

  """The "sysId" of the reference"""
  sysId: String!
}

"""A set of table reference values"""
type ServiceNowItsmIntegrationServiceNowReferenceValuesResultSet {
  """The reference values"""
  referenceValues: [ServiceNowItsmIntegrationServiceNowReferenceValue]!
}

"""a set of configured servicenow itsm integrations"""
type ServiceNowItsmIntegrationsResultSet {
  """a set of configured servicenow itsm integrations"""
  serviceNowItsmIntegrations: [ServiceNowItsmIntegrationResponse]!
}

"""A configured value corresponding to a servicenow table field"""
type ServiceNowItsmIntegrationTableFieldValue {
  """A servicenow itsm assignee group value"""
  assigneeGroupValue: ServiceNowItsmIntegrationAssigneeGroup

  """A servicenow itsm assignee value"""
  assigneeValue: ServiceNowItsmIntegrationUserInfo

  """A servicenow itsm caller value"""
  callerValue: ServiceNowItsmIntegrationUserInfo

  """An enum value"""
  enumeratedChoiceValue: ServiceNowItsmIntegrationEnumeratedChoiceValue

  """A servicenow itsm reference value"""
  serviceNowReferenceValue: ServiceNowItsmIntegrationServiceNowReferenceValue

  """A string value"""
  stringValue: String
}

"""The kind of entity (data) that the corresponding field supports"""
enum ServiceNowItsmIntegrationTableFieldValueType {
  """
  use the getServiceNowItsmCallers query to fetch values for the corresponding field. The sysId will be accepted.
  """
  SERVICENOW_ITSM_CALLER_REFERENCE

  """
  use the getServiceNowItsmAssignees query to fetch values for the corresponding field. The sysId will be accepted.
  """
  SERVICENOW_ITSM_ASSIGNEE_REFERENCE

  """
  use the getServiceNowItsmAssigneeGroups query to fetch values for the corresponding field. The sysId will be accepted.
  """
  SERVICENOW_ITSM_ASSIGNEE_GROUP_REFERENCE

  """
  corresponding field will accept an ID - typically sysId present in the
  configured value(s). Use getServiceNowItsmTableFieldReferenceValues to fetch
  corresponding values.
  """
  SERVICENOW_REFERENCE

  """corresponding field accepts string values"""
  STRING

  """
  corresponding field accepts the corresponding enum index. The configured value(s) will contain an "index" field.
  """
  ENUMERATED_CHOICE
}

"""Configurations corresponding to fields in a servicenow table"""
type ServiceNowItsmIntegrationTargetTableFieldMetadata {
  """The configured allowed values for this field"""
  allowedValues: [ServiceNowItsmIntegrationTableFieldValue]

  """The configured default for this field"""
  defaultValue: ServiceNowItsmIntegrationTableFieldValue

  """A human readable name of the field"""
  fieldDisplayName: String!

  """The name of the field as recognized by the backend logic."""
  fieldName: String!

  """The kind of data for this field"""
  fieldValueType: ServiceNowItsmIntegrationTableFieldValueType!
}

"""Configurations for table"""
type ServiceNowItsmIntegrationTargetTableMetadata {
  """Metadata corresponding to accessible fields in the table"""
  tableFieldMetadataList: [ServiceNowItsmIntegrationTargetTableFieldMetadata]!

  """The ID of this metadata"""
  tableMetadataId: String!

  """The name of the servicenow table"""
  tableName: String!
}

"""The information corresponding to a servicenow itsm user"""
type ServiceNowItsmIntegrationUserInfo {
  """The name of the user."""
  displayName: String!

  """The email of the user."""
  email: String

  """The "sys-id" of the user. Servicenow identifies the user by this ID"""
  sysId: String!
}

"""Expiration Attribute to get expiration details"""
type SessionAttributeExpiration {
  """Expiration format for extracting expiration details"""
  expirationFormat: SessionExpirationFormat!

  """Root projection for extracting session identification attributes"""
  projectionRoot: SessionProjectionRoot!

  """
  Attribute key location in response for extracting Session identification attributes
  """
  responseAttributeKeyLocation: SessionResponseAttributeKeyLocation!
}

"""Location type from which we try to extract session token"""
enum SessionAttributeKeyLocationType {
  """Extract session attribute key from request"""
  REQUEST

  """Extract session attribute key from response"""
  RESPONSE
}

"""
Session token conditional predicate for matching against a request/response
"""
type SessionAttributePredicate {
  """Location type from which we try to extract session token"""
  attributeKeyLocationType: SessionAttributeKeyLocationType!

  """Attribute projection for extracting session identification attributes"""
  attributeProjection: SessionAttributeProjection!

  """Matching condition for the attribute projected"""
  matchCondition: SessionMatchCondition!

  """
  Attribute key location in request for extracting Session identification attributes
  """
  requestAttributeKeyLocation: SessionRequestAttributeKeyLocation

  """
  Attribute key location in response for extracting Session identification attributes
  """
  responseAttributeKeyLocation: SessionResponseAttributeKeyLocation
}

"""Attribute projection for extracting session identification attributes"""
type SessionAttributeProjection {
  """Matching condition for the attribute key"""
  matchCondition: SessionMatchCondition

  """List of value projections in order to extract value from session token"""
  valueProjections: [SessionValueProjection]
}

type sessionConfiguration {
  """Maximum absolute duration for session"""
  maxAbsoluteSessionDuration: Duration!

  """Maximum idle duration for session"""
  maxIdleSessionDuration: Duration!
}

"""Custom attribute rule which would extract the value"""
type SessionCustomAttributeRule {
  """Custom attribute rule type from where value would be extracted"""
  customAttributeRuleType: SessionCustomAttributeRuleType!

  """JWT attribution rule from where values would be extracted"""
  jwtAttributionRule: SessionJwtAttributionRule

  """JWT attribute type from where value would be extracted"""
  jwtClaimAttribute: String @deprecated(reason: "Deprecated")
}

"""Custom attribute type from where value would be extracted"""
enum SessionCustomAttributeRuleType {
  """JWT_ATTRIBUTE"""
  JWT_ATTRIBUTE
}

"""Custom projection for extracting session identification attributes"""
type SessionCustomProjection {
  """
  Custom json projection for extracting session identification attributes
  """
  customJson: String!
}

type SessionDefinitionMetadataAnomalyDetectionConfig {
  keyValuePairs: [AnomalyDetectionConfigKeyValuePair]
  name: SessionDefinitionMetadataAnomalyDetectionConfigName!
  ruleId: String
}

enum SessionDefinitionMetadataAnomalyDetectionConfigName {
  """OBJECT_BOLA_ANOMALY_CONFIG"""
  OBJECT_BOLA_ANOMALY_CONFIG

  """USER_ID_BOLA_ANOMALY_CONFIG"""
  USER_ID_BOLA_ANOMALY_CONFIG

  """SEQUENCE_ANOMALY_CONFIG"""
  SEQUENCE_ANOMALY_CONFIG

  """SESSION_VIOLATION_CONFIG"""
  SESSION_VIOLATION_CONFIG
}

"""Expiration format for extracting expiration details"""
enum SessionExpirationFormat {
  """Extract expiration details in duration seconds"""
  DURATION_SECONDS

  """Extract expiration details in timestamp epoch seconds"""
  TIMESTAMP_EPOCH_SECONDS

  """Extract expiration details in duration millis"""
  DURATION_MILLIS

  """Extract expiration details in timestamp epoch millis"""
  TIMESTAMP_EPOCH_MILLIS
}

"""Expiration type from where we need to extract expiration details"""
enum SessionExpirationType {
  """Get expiration details from jwt"""
  JWT

  """Get expiration details by extracting from attributes"""
  ATTRIBUTE
}

type SessionExpiryConfig {
  """Allowed buffer of time difference for session expiry"""
  timeDifferenceBufferMillis: Long
}

type SessionHeaderLocation {
  cookieName: String
  headerName: String
  type: SessionHeaderLocationType!
}

enum SessionHeaderLocationType {
  """HEADER"""
  HEADER

  """COOKIE"""
  COOKIE
}

"""Details regarding condition option applicable"""
type SessionIdentificationConditionOperatorOption {
  """Info regarding operator of condition"""
  conditionOperator: SessionIdentificationEnumInfo!

  """Validation type of condition"""
  conditionValidationType: SessionMatchConditionValueValidationType!
}

type SessionIdentificationConfigOptions {
  requestTypeKeyValueCombinations: SessionIdentificationKeyValueCategoryCombinations!
  responseTypeKeyValueCombinations: SessionIdentificationKeyValueCategoryCombinations!
}

"""Session Identification Configuration change details"""
type SessionIdentificationConfigurationChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
  oldIdentity: ActivityLogIdentity
  oldSessionIdentificationRuleType: SessionIdentificationRuleType
  sessionIdentificationRequestHeaderRule: SessionIdentificationRequestHeaderRule
  sessionIdentificationRuleType: SessionIdentificationRuleType
}

type SessionIdentificationEnumInfo {
  """Enum  value display name provided"""
  displayName: String!

  """Enum name"""
  name: String!
}

"""Combination which supports operation on only value"""
type SessionIdentificationKeyNullConditionCombination {
  """Info regarding location"""
  attributeLocation: SessionIdentificationEnumInfo!

  """List of conditions applicable on value"""
  valueConditionOptions: [SessionIdentificationConditionOperatorOption]!
}

type SessionIdentificationKeyValueCategoryCombinations {
  """List of null key location condition combination"""
  keyNullCombinations: [SessionIdentificationKeyNullConditionCombination]!

  """List of key value location condition combination"""
  keyValueCombinations: [SessionIdentificationKeyValueConditionCombination]!
}

"""Combination which supports operation on both key and value"""
type SessionIdentificationKeyValueConditionCombination {
  """Info regarding location"""
  attributeLocation: SessionIdentificationEnumInfo!

  """List of conditions applicable on key"""
  keyConditionOptions: [SessionIdentificationConditionOperatorOption]!

  """List of conditions applicable on session token key"""
  sessionTokenKeyConditionOptions: [SessionIdentificationConditionOperatorOption]!

  """List of conditions applicable on value"""
  valueConditionOptions: [SessionIdentificationConditionOperatorOption]!
}

type SessionIdentificationRequestHeaderRule {
  oldSessionHeaderLocationType: SessionHeaderLocationType
  sessionHeaderLocationType: SessionHeaderLocationType!
}

type SessionIdentificationRule {
  disabled: Boolean
  id: String!
  name: String!
  obfuscated: Boolean!
  requestHeader: RequestHeaderSessionIdentificationData
  responseBody: ResponseBodySessionIdentificationData
  type: SessionIdentificationRuleType!
}

type SessionIdentificationRuleResultSet {
  count: Long!
  results: [SessionIdentificationRule]!
  total: Long!
}

"""Session Identification rules results"""
type SessionIdentificationRuleResultSetV2 {
  count: Long
  total: Long

  """List of Session Identification rules"""
  results: [SessionIdentificationRuleV2]!
}

"""Scope of the Session Identification rule"""
type SessionIdentificationRuleScope {
  """List of environment names on which the rule should apply"""
  environmentNames: [String]

  """List of service name regexes on which the rule should apply"""
  serviceNameRegexes: [String]

  """List of service names on which the rule should apply"""
  serviceNames: [String]

  """List of url match regexes on which the rule should apply"""
  urlMatchRegexes: [String]
}

"""Status of the Session Identification rule"""
type SessionIdentificationRuleStatus {
  """Flag to disable Session Identification rule"""
  disabled: Boolean!
}

enum SessionIdentificationRuleType {
  """REQUEST_HEADER"""
  REQUEST_HEADER

  """RESPONSE_BODY"""
  RESPONSE_BODY
}

"""
A rule describing how to extract session identification attributes from a request/response
"""
type SessionIdentificationRuleV2 {
  """Session Identification rule ID"""
  id: String!

  """Description for the Session Identification rule"""
  description: String

  """Session Identification rule name"""
  name: String!

  """Scope of the Session Identification rule"""
  scope: SessionIdentificationRuleScope

  """List of session token rules for the session identification rule"""
  sessionTokenRules: [SessionTokenRule]!

  """Status of the Session Identification rule"""
  status: SessionIdentificationRuleStatus
}

"""Json path projection for the attribute value"""
type SessionJsonPathProjection {
  """Json path for getting attribute value"""
  path: String!
}

"""JWT attribution Extraction details extracting values"""
type SessionJwtAttributeExtraction {
  """Header key in jwt to extract from"""
  header: String

  """Type of capture from jwt field"""
  jwtAttributionCaptureType: SessionJwtAttributionCaptureType!

  """JWT attribution source from where values would be extracted"""
  jwtAttributionSourceType: SessionJwtAttributionSourceType!

  """Payload claim in jwt to extract from"""
  payloadClaimName: String

  """Regex with single capture group for capturing value"""
  regexCaptureGroup: String
}

"""JWT attribution capture type for the values to be extracted"""
enum SessionJwtAttributionCaptureType {
  """REGEX_CAPTURE_GROUP"""
  REGEX_CAPTURE_GROUP

  """RAW_VALUE"""
  RAW_VALUE
}

"""JWT attribution rule from where values would be extracted"""
type SessionJwtAttributionRule {
  """JWT attribute extraction list"""
  jwtAttributeExtractionList: [SessionJwtAttributeExtraction]!
}

"""JWT attribution source from where values would be extracted"""
enum SessionJwtAttributionSourceType {
  """HEADER"""
  HEADER

  """PAYLOAD_CLAIM"""
  PAYLOAD_CLAIM
}

"""Jwt payload claim projection for the attribute value"""
type SessionJwtPayloadClaimProjection {
  """key for getting attribute value from jwt"""
  claim: String!
}

"""Logical predicate for matching against a request/response"""
type SessionLogicalPredicate {
  """Child predicates for matching against a request/response"""
  children: [SessionPredicate]!

  """Logical operator for children"""
  operator: LogicalOperator!
}

"""Matching condition for the attribute projected"""
type SessionMatchCondition {
  """Matching operator for the value which needs to be matched"""
  matchOperator: SessionMatchOperator!

  """String value which will be matched against some attribute"""
  stringValue: String
}

"""Value type which would we matched in the match condition"""
enum SessionMatchConditionValueValidationType {
  """REGEX"""
  REGEX

  """STRING"""
  STRING
}

"""Matching operator for the value which needs to be matched"""
enum SessionMatchOperator {
  """Attribute matches exactly with the value"""
  EQUALS

  """Attribute does not matches with the value"""
  NOT_EQUALS

  """Attribute should start with the value"""
  STARTS_WITH

  """Attribute should contain the value"""
  CONTAINS

  """Attribute should match the value regex"""
  MATCHES_REGEX

  """Attribute should not start with the value"""
  NOT_STARTS_WITH

  """Attribute should not contain the value"""
  NOT_CONTAINS

  """Attribute should not match the value regex"""
  NOT_MATCHES_REGEX
}

"""
Obfuscation strategy for the extracted session identification attributes
"""
enum SessionObfuscationStrategy {
  """HASH"""
  HASH
}

"""
Session token conditional predicate for matching against a request/response
"""
type SessionPredicate {
  """Attribute predicate for matching against a request/response"""
  attributePredicate: SessionAttributePredicate

  """Custom projection predicate for matching against a request/response"""
  customProjection: SessionCustomProjection

  """Logical predicate for matching against a request/response"""
  logicalPredicate: SessionLogicalPredicate

  """Predicate type for Session token rule"""
  predicateType: SessionPredicateType!
}

"""Session token type for session identification rule"""
enum SessionPredicateType {
  """
  Predicate type Attribute for the predicate matching against a request/response
  """
  ATTRIBUTE

  """CUSTOM"""
  CUSTOM

  """LOGICAL"""
  LOGICAL
}

"""Root projection for extracting session identification attributes"""
type SessionProjectionRoot {
  """Attribute projection for extracting session identification attributes"""
  attributeProjection: SessionAttributeProjection

  """Custom projection for extracting session identification attributes"""
  customProjection: SessionCustomProjection

  """Projection type for extracting session identification attributes"""
  projectionType: SessionProjectionType!
}

"""Projection type for extracting session identification attributes"""
enum SessionProjectionType {
  """Custom projection for extracting session identification attributes"""
  CUSTOM

  """Attribute projection for extracting session identification attributes"""
  ATTRIBUTE
}

"""Regex capture group projection for the attribute value"""
type SessionRegexCaptureGroupProjection {
  """Regex capture group for getting attribute value"""
  regexCaptureGroup: String!
}

"""Attribute key location in request for extracting Session attributes"""
enum SessionRequestAttributeKeyLocation {
  """Extract session attribute key from request header"""
  HEADER

  """Extract session attribute key from request cookie"""
  COOKIE

  """Extract session attribute key from request body"""
  BODY

  """Extract session attribute key from request query parameter"""
  QUERY_PARAMETER
}

"""Request session token details for the session token rule"""
type SessionRequestSessionTokenDetails {
  """List of custom attributes rule which would extract the values"""
  customAttributeRule: [SessionCustomAttributeRule]

  """Expiration type from where we need to extract expiration details"""
  expirationType: SessionExpirationType

  """Attribute key location in request for extracting Session attributes"""
  requestAttributeKeyLocation: SessionRequestAttributeKeyLocation!
}

"""
Attribute key location in response for extracting Session identification attributes
"""
enum SessionResponseAttributeKeyLocation {
  """Extract session attribute key from response header"""
  HEADER

  """Extract session attribute key from response cookie"""
  COOKIE

  """Extract session attribute key from response body"""
  BODY
}

"""Response session token details for the session token rule"""
type SessionResponseSessionTokenDetails {
  """Expiration Attribute to get expiration details"""
  attributeExpiration: SessionAttributeExpiration

  """List of custom attributes rule which would extract the values"""
  customAttributeRule: [SessionCustomAttributeRule]

  """Expiration type from where we need to extract expiration details"""
  expirationType: SessionExpirationType

  """
  Attribute key location in response for extracting Session identifcation attributes
  """
  responseAttributeKeyLocation: SessionResponseAttributeKeyLocation!
}

"""Class to identify Session Identification rule"""
type SessionTokenRule {
  """Session token conditional predicate"""
  predicate: SessionPredicate

  """Request session token details for the session token rule"""
  requestSessionTokenDetails: SessionRequestSessionTokenDetails

  """Response session token details for the session token rule"""
  responseSessionTokenDetails: SessionResponseSessionTokenDetails

  """Rule for extracting session token value"""
  sessionTokenValueRule: SessionTokenValueRule!

  """Session token type for session identification rule"""
  tokenType: SessionTokenType!
}

"""Session token type for session identification rule"""
enum SessionTokenType {
  """Get session token details from request session token"""
  REQUEST

  """Get session token details from response session token"""
  RESPONSE

  """Get session token details from custom projection"""
  CUSTOM
}

"""Rule for extracting session token value"""
type SessionTokenValueRule {
  """Obfuscation strategy for the extracted session attribute"""
  obfuscationStrategy: SessionObfuscationStrategy

  """Root projection for extracting session attributes"""
  projectionRoot: SessionProjectionRoot!
}

type SessionTrainingConfig {
  keyValuePairs: [TrainingConfigKeyValuePair]
  name: SessionTrainingConfigName!
}

enum SessionTrainingConfigName {
  """OBJECT_BOLA"""
  OBJECT_BOLA

  """USER_ID_BOLA"""
  USER_ID_BOLA
}

"""Value projection to extract value from session token"""
type SessionValueProjection {
  """Json path projection for the attribute value"""
  jsonPathProjection: SessionJsonPathProjection

  """Jwt payload claim projection for the attribute value"""
  jwtPayloadClaimProjection: SessionJwtPayloadClaimProjection

  """Regex capture group projection for the attribute value"""
  regexCaptureGroupProjection: SessionRegexCaptureGroupProjection

  """Projection type for the attribute value"""
  valueProjectionType: SessionValueProjectionType!
}

"""Projection type for the attribute value"""
enum SessionValueProjectionType {
  """Projection type regex capture group for the attribute value projection"""
  REGEX_CAPTURE_GROUP

  """Projection type json path for the attribute value projection"""
  JSON_PATH

  """Projection type jwt pay load for the attribute value projection"""
  JWT_PAYLOAD_CLAIM

  """Projection type base 64 for the attribute value projection"""
  BASE64
}

type SetupSubscriptionResponse {
  clientSecret: String!
}

"""Initiator Attributes for the SIM Box Fraud"""
type SimBoxFraudInitiatorAttributes {
  """AES Key"""
  aesKey: String!

  """Phone Manufacturer"""
  phoneManufacturer: String

  """Phone Model"""
  phoneModel: String

  """Phone OS Version"""
  phoneOsVersion: String

  """RDS Data"""
  rdsData: String!
}

type SkippedApi {
  entity(type: String!): Entity
  apiId: String!
  reasonDisplayName: String!
  skippedApiReason: SkippedApiCategory!
}

enum SkippedApiCategory {
  """NO_TRAFFIC_RECEIVED"""
  NO_TRAFFIC_RECEIVED

  """REJECTED_BY_URL_REGEX_FILTER"""
  REJECTED_BY_URL_REGEX_FILTER

  """USER_ID_NOT_SUPPORTED"""
  USER_ID_NOT_SUPPORTED

  """EXTERNAL_API_NOT_SUPPORTED"""
  EXTERNAL_API_NOT_SUPPORTED

  """IP_ADDRESS_NOT_SUPPORTED"""
  IP_ADDRESS_NOT_SUPPORTED

  """REQUEST_HEADER_NOT_SUPPORTED"""
  REQUEST_HEADER_NOT_SUPPORTED

  """RESPONSE_CODE_NOT_SUPPORTED"""
  RESPONSE_CODE_NOT_SUPPORTED

  """ENVIRONMENT_NOT_SUPPORTED"""
  ENVIRONMENT_NOT_SUPPORTED

  """API_TYPE_NOT_SUPPORTED"""
  API_TYPE_NOT_SUPPORTED

  """NO_TESTS_GENERATED"""
  NO_TESTS_GENERATED

  """NO_TESTS_EXECUTED_SCAN_IN_PROGRESS"""
  NO_TESTS_EXECUTED_SCAN_IN_PROGRESS

  """NO_TESTS_EXECUTED_SCAN_ABORTED"""
  NO_TESTS_EXECUTED_SCAN_ABORTED

  """EMPTY_URL_FOR_TRACE"""
  EMPTY_URL_FOR_TRACE

  """ERROR_GENERATING_TEST_SUITE"""
  ERROR_GENERATING_TEST_SUITE

  """NO_TESTS_GENERATED_SCAN_IN_PROGRESS"""
  NO_TESTS_GENERATED_SCAN_IN_PROGRESS

  """MAX_TEST_SUITE_LIMIT"""
  MAX_TEST_SUITE_LIMIT

  """MAX_TEST_LIMIT"""
  MAX_TEST_LIMIT

  """NO_PAST_TRAFFIC_FOUND"""
  NO_PAST_TRAFFIC_FOUND

  """API_NOT_REACHABLE"""
  API_NOT_REACHABLE

  """API_NOT_ELIGIBLE_FOR_INCREMENTAL_SCAN"""
  API_NOT_ELIGIBLE_FOR_INCREMENTAL_SCAN
}

type SkippedApiResultSet {
  count: Long!
  total: Long!
  results: [SkippedApi]!
}

enum SkippedApisFilterField {
  """SCAN_ID"""
  SCAN_ID

  """SKIPPED_API_REASON"""
  SKIPPED_API_REASON

  """API_NAME"""
  API_NAME
}

type SlackWebhookChannelConfig {
  url: String!
}

type SnykIntegrationCorrelation {
  issueId: String!
  organizationId: String!
  projectId: String!
}

type SnykIntegrationDetails {
  organizationId: String!
  projectIds: [String]!
}

"""Snyk issue"""
type SnykIssue {
  """Link to snyk code analysis"""
  codeAnalysisLink: String!

  """Snyk code issue code region"""
  codeRegion: CodeRegion!

  """Snyk code issue file path"""
  filePath: String!

  """Github permalink to the code issue region"""
  githubPermalink: String!

  """Snyk issue id"""
  id: String!

  """Specifies if Snyk issue has been ignored"""
  ignored: Boolean!

  """Snyk code issue details link"""
  issueDetailsLink: String!

  """Snyk issue title"""
  title: String!
}

"""Snyk issue response"""
type SnykIssuesResponse {
  """List of snyk code issues"""
  snykIssues: [SnykIssue]!
}

"""Snyk issues Summary response"""
type SnykIssuesSummaryResponse {
  """List of snyk code issue summaries"""
  snykIssueSummaries: [SnykIssueSummary]!
}

"""Snyk issue Summary"""
type SnykIssueSummary {
  """List of Snyk issue CWEs"""
  cwes: [String]!

  """Snyk issue id"""
  id: String!

  """Specifies if Snyk issue has been ignored"""
  ignored: Boolean!

  """Snyk code issue details link"""
  issueDetailsLink: String!

  """Snyk Organization id"""
  organizationId: String!

  """Snyk Project id"""
  projectId: String!

  """Snyk code issue severity"""
  severity: String!

  """Snyk issue title"""
  title: String!
}

"""Snyk organization"""
type SnykOrganization {
  """Snyk organization id"""
  id: String!

  """Snyk organization name"""
  name: String!
}

"""Snyk organizations response"""
type SnykOrganizationsResponse {
  """List of snyk organizations"""
  snykOrganizations: [SnykOrganization]!
}

"""Snyk project"""
type SnykProject {
  """Snyk project id"""
  id: String!

  """Snyk project name"""
  name: String!
}

"""Snyk projects response"""
type SnykProjectsResponse {
  """List of snyk projects"""
  snykProjects: [SnykProject]!
}

type SonarAssetSelection {
  """Asset id"""
  assetId: String!

  """include or exclude asset"""
  selectionMode: SonarSelectionMode!
}

"""Sonar asset selection type"""
enum SonarAssetV2SelectionType {
  """NEW_ASSETS"""
  NEW_ASSETS

  """EXISTING_ASSETS"""
  EXISTING_ASSETS
}

type SonarAttackSelection {
  """Plugin Config"""
  pluginConfig: [PluginConfig]

  """plugin name"""
  plugin: String!

  """include or exclude plugin"""
  selectionMode: SonarSelectionMode!
}

type SonarDiscoveryScanConfig {
  """Root asset name and type pair to start asset discovery from"""
  assetNameToTypeList: [AssetNameToAssetTypePair]!
}

"""Sonar plugin mode"""
enum SonarPluginV2Mode {
  """SAFE"""
  SAFE

  """UNRESTRICTED"""
  UNRESTRICTED

  """GENERAL"""
  GENERAL
}

"""Sonar plugin selection type"""
enum SonarPluginV2SelectionType {
  """ALL_PLUGINS"""
  ALL_PLUGINS

  """DEFAULT_PLUGINS"""
  DEFAULT_PLUGINS

  """CUSTOM_PLUGINS"""
  CUSTOM_PLUGINS
}

type SonarScan {
  """Scan id"""
  id: String!

  """asset selection"""
  assetSelection: [SonarAssetSelection] @deprecated(reason: "Deprecated")

  """Attack selection"""
  attackSelection: [SonarAttackSelection] @deprecated(reason: "Deprecated")

  """creation timestamp of the scan"""
  creationTimestamp: DateTime!

  """environment name"""
  environment: String!

  """To be set if scan is of type discovery"""
  sonarDiscoveryScanConfig: SonarDiscoveryScanConfig

  """Scan name"""
  scanName: String!

  """Scan state"""
  scanState: SonarScanState!

  """Sonar scan type"""
  sonarScanType: SonarScanType!

  """To be set if scan is of type vulnerability"""
  sonarVulnerabilityScanConfig: SonarVulnerabilityScanConfig
}

type SonarScanSelectionConfig {
  """asset selection"""
  assetSelection: [SonarAssetSelection]!

  """Attack selection"""
  attackSelection: [SonarAttackSelection]
}

type SonarScansResultSet {
  count: Long!
  total: Long!
  results: [SonarScan]!
}

"""Scan state"""
enum SonarScanState {
  """INITIALIZED"""
  INITIALIZED

  """RUNNING"""
  RUNNING

  """COMPLETED"""
  COMPLETED

  """ABORTED"""
  ABORTED

  """ERROR"""
  ERROR
}

"""Sonar Scan Type"""
enum SonarScanType {
  """DISCOVERY"""
  DISCOVERY

  """VULNERABILITY"""
  VULNERABILITY
}

type SonarScanV2 {
  """Scan id"""
  id: String!

  """Sonar asset selections"""
  assetSelectionType: SonarAssetV2SelectionType!

  """Scan creation timestamp"""
  creationTimestamp: DateTime!

  """Sonar custom included plugins"""
  customIncludedPlugins: [SonarV2Plugin]

  """Existing assets excluded in scan"""
  excludedExistingAssets: [SonarV2ExistingAsset]

  """Sonar scan excluded assets"""
  excludedNewAssets: [SonarV2NewAsset]

  """Sonar excluded plugins"""
  excludedPlugins: [String]

  """Existing assets included in scan"""
  existingAssets: [SonarV2ExistingAsset]

  """Sonar scan included assets"""
  newAssets: [SonarV2NewAsset]

  """Parent scan id"""
  parentScan: SonarScanV2

  """Sonar plugin mode"""
  pluginMode: SonarPluginV2Mode!

  """Sonar plugin selections"""
  pluginSelectionType: SonarPluginV2SelectionType!

  """Sonar scan modes"""
  scanModes: [SonarScanV2Mode]!

  """Scan name"""
  scanName: String!

  """Sonar scan state"""
  scanState: SonarScanV2State!
}

"""Sonar scan mode"""
enum SonarScanV2Mode {
  """ASSET"""
  ASSET

  """VULNERABILITY"""
  VULNERABILITY
}

type SonarScanV2ResultSet {
  count: Long!
  total: Long!
  results: [SonarScanV2]!
}

"""Sonar scan state"""
enum SonarScanV2State {
  """INITIALIZED"""
  INITIALIZED

  """RUNNING"""
  RUNNING

  """COMPLETED"""
  COMPLETED

  """ABORTED"""
  ABORTED

  """ERROR"""
  ERROR
}

"""Exclude or include selected item"""
enum SonarSelectionMode {
  """INCLUDE"""
  INCLUDE

  """EXCLUDE"""
  EXCLUDE
}

"""Sonar asset type"""
enum SonarV2AssetType {
  """DOMAIN"""
  DOMAIN
}

type SonarV2ExistingAsset {
  """Sonar asset id"""
  id: String!
}

type SonarV2NewAsset {
  """Sonar asset name"""
  assetName: String!

  """Sonar asset type"""
  assetType: SonarV2AssetType
}

type SonarV2Plugin {
  """Sonar plugin mode"""
  pluginMode: SonarPluginV2Mode

  """Sonar plugin name"""
  pluginName: String
}

type SonarVulnerabilityScanConfig {
  """Selection configurations"""
  sonarScanSelectionConfig: SonarScanSelectionConfig
}

"""An API Spec derived from Source Code Analysis"""
type SourceCodeApiSpec {
  """The spec contents, in JSON format"""
  json: String!

  """The spec contents, in YAML format"""
  yaml: String!
}

type SourceIdentity {
  astOverrideId: String
  originalSource: OriginalSource!
}

type Span {
  attribute(key: String, expression: InputAttributeExpression): Unknown
  id: String!
  logEvents: LogEventResultSet!
}

type SpanIngestionAttributeRuleSet {
  """Default rule action"""
  defaultRuleAction: KeyValueRetentionRuleRetentionAction!

  """Matching attribute span ingestion rules"""
  rules: [SpanIngestionRule]!
}

type SpanIngestionConfig {
  """Matching attribute rules"""
  attributeRules: SpanIngestionAttributeRuleSet!

  """Matching request header rules"""
  requestHeaderRules: SpanIngestionRequestHeaderRuleSet!

  """Matching response header rules"""
  responseHeaderRules: SpanIngestionResponseHeaderRuleSet!
}

type SpanIngestionRequestHeaderRuleSet {
  """Default rule action"""
  defaultRuleAction: KeyValueRetentionRuleRetentionAction!

  """Matching request header span ingestion rules"""
  rules: [SpanIngestionRule]!
}

type SpanIngestionResponseHeaderRuleSet {
  """Default rule action"""
  defaultRuleAction: KeyValueRetentionRuleRetentionAction!

  """Matching response header span ingestion rules"""
  rules: [SpanIngestionRule]!
}

"""Rule defining how configuration can be defined for span ingestion"""
type SpanIngestionRule {
  """Id of the span ingestion Rule"""
  id: String!

  """Expiration for the rule"""
  expiration: DateTime

  """
  Provide a predicate to specify which data to act on. If no predicate is set, this rule will apply to all data
  """
  predicate: KeyValueRetentionRulePredicate

  """Define the type of retention action for the rule"""
  retentionAction: KeyValueRetentionRuleRetentionAction!

  """Describes the scope for which the rule applies. Unscoped if unset."""
  scope: KeyValueRetentionRuleScope
}

"""Ingestion stage to be where the span rule will be applied"""
enum SpanIngestionRuleIngestionStage {
  """INGESTION_STAGE_QUERY_STORE_PERSISTENCE"""
  INGESTION_STAGE_QUERY_STORE_PERSISTENCE
}

"""Operators for key value match rule"""
enum SpanIngestionRuleKeyMatchOperator {
  """EQUALS"""
  EQUALS

  """STARTS_WITH"""
  STARTS_WITH

  """ENDS_WITH"""
  ENDS_WITH

  """CONTAINS"""
  CONTAINS
}

enum SpanProcessingFilterField {
  """URL"""
  URL

  """URL_PATH"""
  URL_PATH

  """SERVICE_NAME"""
  SERVICE_NAME

  """ENVIRONMENT_NAME"""
  ENVIRONMENT_NAME
}

type SpanProcessingLogicalFilter {
  logicalOperator: LogicalOperator!
  spanFilters: [SpanProcessingRuleFilter]!
}

type SpanProcessingRateLimit {
  fixedWindowLimit: SpanProcessingWindowedRateLimit
  rateLimitType: SpanProcessingRateLimitType!
}

type SpanProcessingRateLimitConfig {
  apiEndpointCacheDuration: Duration!
  rateLimitStrategy: SpanProcessingRateLimitStrategy!
  traceLimitGlobal: SpanProcessingRateLimit!
  traceLimitPerEndpoint: SpanProcessingRateLimit!
}

enum SpanProcessingRateLimitStrategy {
  """DROP"""
  DROP

  """BARESPAN"""
  BARESPAN

  """DO_NOT_PERSIST"""
  DO_NOT_PERSIST
}

enum SpanProcessingRateLimitType {
  """WINDOWED"""
  WINDOWED
}

type SpanProcessingRelationalFilter {
  field: SpanProcessingFilterField
  key: String
  relationalOperator: SpanProcessingRelationalOperator!
  value: Unknown!
}

enum SpanProcessingRelationalOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS

  """CONTAINS"""
  CONTAINS

  """NOT_CONTAINS"""
  NOT_CONTAINS

  """STARTS_WITH"""
  STARTS_WITH

  """ENDS_WITH"""
  ENDS_WITH

  """REGEX_MATCH"""
  REGEX_MATCH

  """IN"""
  IN
}

type SpanProcessingRuleFilter {
  logicalSpanFilter: SpanProcessingLogicalFilter
  relationalSpanFilter: SpanProcessingRelationalFilter
}

type SpanProcessingSamplingConfig {
  creationTime: DateTime!
  id: String!
  lastUpdatedTime: DateTime!
  rateLimitConfig: SpanProcessingRateLimitConfig!
  spanFilter: TraceableSpanProcessingRuleFilter!
}

type SpanProcessingWindowedRateLimit {
  quantityAllowed: Long!
  windowDuration: Duration!
}

type SpanResultSet {
  count: Long!
  results: [Span]!
  total: Long!
}

type SpecInfo {
  id: String!
  specName: String
}

enum SpecType {
  """OPEN_API"""
  OPEN_API

  """WSDL"""
  WSDL
}

type SplunkIntegration {
  """Splunk Integration ID"""
  id: String!

  """API access token to be used to authorize the Splunk integration"""
  apiToken: String

  """Description of the Splunk integration"""
  description: String

  """HEC URL of the Splunk integration"""
  httpEventCollectorUrl: String!

  """Name of the Splunk integration"""
  name: String!
}

"""Splunk integration config for notification channel"""
type SplunkIntegrationChannelConfig {
  """Splunk Integration ID"""
  splunkIntegrationId: String
}

type SplunkIntegrationsResultSet {
  count: Long!
  results: [SplunkIntegration]!
  total: Long!
}

enum StaticApiDiscoveryAction {
  """SHOW"""
  SHOW

  """HIDE"""
  HIDE

  """REJECT"""
  REJECT
}

type StatsKeyCount {
  count: Long!
  key: String!
}

type StatusCodeFilterConfig {
  rangeFilterConfigs: [IntRangeFilterConfig]!
}

type StatusCodeThreatScoreConfig {
  errorStatusCodeRegex: String!
  protocol: StatusCodeThreatScoreConfigProtocol!
  severityDowngradePolicy: StatusCodeThreatScoreConfigSeverityDowngradePolicy!
}

enum StatusCodeThreatScoreConfigProtocol {
  """HTTP"""
  HTTP

  """GRPC"""
  GRPC
}

type StatusCodeThreatScoreConfigs {
  statusCodeThreatScoreConfigs: [StatusCodeThreatScoreConfig]!
}

enum StatusCodeThreatScoreConfigSeverityDowngradePolicy {
  """IGNORE_FOR_SCORING"""
  IGNORE_FOR_SCORING

  """DOWNGRADE_ONE_STEP"""
  DOWNGRADE_ONE_STEP

  """DOWNGRADE_TWO_STEPS"""
  DOWNGRADE_TWO_STEPS
}

type StatusDetails {
  """Jira status id for the status."""
  statusId: String!

  """Jira status name."""
  statusName: String!
}

type StatusMapping {
  jiraStatus: String!
  traceableEntityStatus: TraceableEntityStatus!
}

type StringChange {
  currentValue: String
  oldValue: String
}

enum StringConditionOperator {
  """OPERATOR_EQUALS"""
  OPERATOR_EQUALS

  """OPERATOR_MATCHES_REGEX"""
  OPERATOR_MATCHES_REGEX

  """OPERATOR_MATCHES_IPS"""
  OPERATOR_MATCHES_IPS

  """OPERATOR_NOT_MATCHES_IPS"""
  OPERATOR_NOT_MATCHES_IPS
}

enum StringConditionValueType {
  """VALUE"""
  VALUE

  """VALUES"""
  VALUES
}

type StringPredicate {
  relationalOperator: AstRelationalOperator!
  value: String!
}

type SubmitRunnerTaskResponse {
  id: String!
}

"""A set of code analysis jobs submitted for execution"""
type SubmittedCodeAnalysisJobResultSet {
  count: Long
  total: Long
  results: [CodeScanJobSubmissionResult]!
}

type SubscriptionCancelResponse {
  cancelAt: DateTime!
}

enum SubscriptionTier {
  """TEAM"""
  TEAM
}

type SubscriptionUpdateResponse {
  effectiveFrom: DateTime!
}

type summarizeResult {
  """Summary of the vulnerability received from the LLM orchestrator"""
  summary: String!
}

type SynchronizeLicenseFromSubscriptionResponse {
  effectiveFrom: DateTime!
}

"""Syslog integration config for notification channel"""
type SyslogIntegrationChannelConfig {
  """Syslog Integration ID"""
  syslogIntegrationId: String!
}

enum SyslogLogFormat {
  """RFC_5424"""
  RFC_5424

  """RFC_3164"""
  RFC_3164
}

type SyslogServerAccountTokenDetails {
  """Private Enterprise Number"""
  privateEnterpriseNumber: Long!

  """Token ID"""
  tokenId: String!
}

type SyslogServerConnectionDetails {
  """Syslog server connection host"""
  host: String!

  """Syslog server connection port"""
  port: Int!

  """Syslog server connection credential for authorization"""
  syslogServerCredential: SyslogServerCredentials
}

type SyslogServerCredentials {
  """Ssl ca credential for authorization"""
  sslCaCredential: String

  """syslog serve account details"""
  syslogServerAccountTokenDetails: SyslogServerAccountTokenDetails
}

type SyslogServerIntegration {
  """Syslog Server Integration ID"""
  id: String!

  """Description of the Syslog server integration"""
  description: String

  """Name of the Syslog server integration"""
  name: String!

  """Syslog log format"""
  syslogLogFormat: SyslogLogFormat!

  """Syslog server connection details"""
  syslogServerConnectionDetails: SyslogServerConnectionDetails!
}

"""Syslog Server Integration results"""
type SyslogServerIntegrationsResultSet {
  count: Long
  total: Long
  results: [SyslogServerIntegration]!
}

type SystemComplianceIssueConfig {
  enabled: Boolean
  scopeOfDetection: PolicyScope

  """
  Parameters that control how issue detection is performed for system compliance.
  """
  issueDetectionParameters: [IssueDetectionParameter]!
}

"""The version to use for system datasets"""
enum SystemDataSetsVersion {
  """VERSION_1"""
  VERSION_1

  """DEFAULT"""
  DEFAULT
}

"""
List of supported combinations for the tag attribute key value condition category for a detection exclusion rule
"""
type TagAttributeKeyValueConditionOptions {
  """Tag attribute key condition options"""
  keyConditionOptions: [DetectionExclusionRuleConditionOption]!

  """Tag attribute value condition options"""
  valueConditionOptions: [DetectionExclusionRuleConditionOption]!
}

type TagData {
  description: String
  name: String
}

"""Config for tagged events"""
type TaggedEventsAggregationConfig {
  """minimum tagged events to create actor"""
  minTaggedEventToCreateActor: Int!
}

type TagValue {
  key: String!
  values: [String]!
}

"""Report based on a template that consists of multiple widgets"""
type TemplatedReport {
  """Notification channels to which report output should be sent"""
  channelIds: [String]

  """Creator of report"""
  creator: String!

  """Schedule configuration of report in case of daily schedule"""
  dailySchedule: DailySchedule

  """Email addresses to which report output should be sent"""
  emailAddresses: [String]

  """Whether scheduling is enabled for report"""
  enabled: Boolean!

  """Environment to which report belongs"""
  environmentId: String @deprecated(reason: "Deprecated")

  """Environments to which report belongs"""
  environmentIds: [String]

  """Report output format"""
  format: ReportFormat!
  id: String!

  """Schedule configuration of report in case of interval schedule"""
  intervalSchedule: IntervalSchedule

  """Timestamp when the report schedule was last executed"""
  lastExecutionTimestamp: DateTime

  """Report name"""
  name: String!

  """Configuration of various widget templates within the report"""
  templatesConfiguration: String!

  """Schedule configuration of report in case of weekly schedule"""
  weeklySchedule: WeeklySchedule
}

"""Template based reports result"""
type TemplatedReportResultSet {
  count: Long!

  """List of template based reports"""
  results: [TemplatedReport]!
  total: Long!
}

"""Tenant type"""
enum TenantType {
  """STANDARD"""
  STANDARD

  """PLAYGROUND"""
  PLAYGROUND
}

"""User specific tenant info"""
type TenantUserContext {
  """Requires re-authentication"""
  requiresReauthentication: Boolean!

  """Tenant id of the tenant"""
  tenantId: String!

  """Tenant name of the tenant"""
  tenantName: String!

  """Tenant type of the tenant"""
  tenantType: TenantType!
}

type TestAssertion {
  actualRhsValue: String @deprecated(reason: "Deprecated")
  actualValue: String
  assertionResult: AssertionResult

  """Data map"""
  dataMap: [AstMapData]!

  """Description of assertion"""
  description: String
  expectedLhsValue: String @deprecated(reason: "Deprecated")

  """Fixed assertion Id"""
  fixedAssertionId: String

  """Specifies if Assertion is enabled"""
  isEnabled: Boolean
  key: String!
  lhs: String
  matchOperator: AssertionMatchOperator!
  referenceValue: String
  rhs: String

  """Source identity"""
  sourceIdentity: SourceIdentity
}

type TestDetails {
  testAssertions: [TestAssertion]!
  testMutations: [TestMutation]!
}

type TestInfoResultSet {
  count: Long!
  total: Long!
  results: [TestResultInfo]!
}

type TestLevelScope {
  """Scan run number within the suite which contains the tests to verify"""
  scanRunNumber: Long!

  """ID of the suite which contains the tests to verify"""
  suiteId: String!

  """IDs of the tests to verify"""
  testIds: [String]!
}

type TestMetadata {
  apiId: String
  apiName: String
  originalSpanId: String
  serviceId: String!
  serviceName: String!
  spanPath: String
  testVector: String
  title: String
  vulnerabilityDetectionMethodologyType: VulnerabilityDetectionType!
}

type TestMutation {
  action: MutationAction!

  """Data map"""
  dataMap: [AstMapData]!

  """Description of mutation"""
  description: String

  """Fixed Mutation Id"""
  fixedMutationId: String

  """Specifies if mutation is enabled"""
  isEnabled: Boolean
  key: String!
  mutatedValue: String
  originalValue: String

  """Source identity"""
  sourceIdentity: SourceIdentity
}

type TestReference {
  spanId: String
  spanStartTime: String
  testId: String!
}

type TestRequestDetails {
  body: String!
  cookies: [KeyValue]!
  headers: [KeyValue]!
  methodType: String!
  url: String!
}

type TestResponseDetails {
  body: String!
  cookies: [KeyValue]!
  duration: Duration!
  headers: [KeyValue]!
  statusCode: Int!
}

type TestResult {
  duration: Duration!

  """Fixed test id"""
  fixedTestId: String!
  id: String!
  parentResultsChain: [AncestorTestResultDetails]!

  """The scan ID for the test."""
  scanId: String!

  """The timestamp when the test was created."""
  testCreationTimestamp: DateTime!
  testMetadata: TestMetadata!
  testRequestDetails: TestRequestDetails!
  testResponseDetails: TestResponseDetails!
}

type TestResultDetailsResponse {
  testDetails: TestDetails!
  testResult: TestResult!
}

type TestResultInfo {
  entity(type: String!): Entity
  id: String!
  apiId: String!
  apiName: String!
  categoryDisplayName: String!
  description: String!
  reason: String
  responseCode: String
  status: TestResultInfoStatus!
  subcategoryDisplayName: String!
  title: String!
  vulnerabilityCategory: String!
  vulnerabilitySubcategory: String!
}

enum TestResultInfoFilterField {
  """SCAN_ID"""
  SCAN_ID

  """API_NAME"""
  API_NAME

  """TEST_STATUS"""
  TEST_STATUS

  """VULNERABILITY_CATEGORY"""
  VULNERABILITY_CATEGORY

  """VULNERABILITY_SUBCATEGORY"""
  VULNERABILITY_SUBCATEGORY

  """TEST_TITLE"""
  TEST_TITLE

  """TEST_SUITE_TYPE"""
  TEST_SUITE_TYPE

  """TEST_RESULT_RESPONSE_CODE"""
  TEST_RESULT_RESPONSE_CODE

  """NON_VULNERABILITY_REPORTING"""
  NON_VULNERABILITY_REPORTING
}

enum TestResultInfoSortField {
  """API_NAME"""
  API_NAME
}

enum TestResultInfoStatus {
  """VULNERABLE"""
  VULNERABLE

  """NOT_VULNERABLE"""
  NOT_VULNERABLE

  """ERROR"""
  ERROR

  """REACHABLE"""
  REACHABLE

  """NOT_REACHABLE"""
  NOT_REACHABLE
}

type TestResultSet {
  testResults: [TestResult]!
}

"""
Threat activity representing a life cycle bound interpretation of threats
"""
type ThreatActivity {
  """threat activity aggregation argument"""
  aggregation(key: ThreatActivityAggregationField!, aggregation: ThreatActivityMetricAggregationType!): ThreatActivityValue

  """threat activity function argument"""
  function(key: ThreatActivitySelectionField!, function: ThreatActivityMetricFunctionType!): ThreatActivityValue

  """threat activity selection argument"""
  selection(key: ThreatActivitySelectionField!): ThreatActivityValue
}

"""Threat activity aggregation field"""
enum ThreatActivityAggregationField {
  """ID"""
  ID

  """ACTOR_ENTITY_ID"""
  ACTOR_ENTITY_ID

  """API_ID"""
  API_ID

  """IS_BLOCKED"""
  IS_BLOCKED

  """IS_ACTIVE"""
  IS_ACTIVE

  """ACTIVITY_STATUS"""
  ACTIVITY_STATUS

  """BEHAVIOUR"""
  BEHAVIOUR

  """TYPE"""
  TYPE

  """API_IS_AUTHENTICATED"""
  API_IS_AUTHENTICATED

  """API_RISK_CATEGORY"""
  API_RISK_CATEGORY

  """API_NAME"""
  API_NAME

  """API_IS_EXTERNAL"""
  API_IS_EXTERNAL

  """API_LEARNING_STATE"""
  API_LEARNING_STATE

  """API_HAS_PII"""
  API_HAS_PII

  """CATEGORY"""
  CATEGORY

  """CATEGORIES"""
  CATEGORIES

  """STATUS_CODE"""
  STATUS_CODE

  """STATUS_CODES"""
  STATUS_CODES

  """USER_IP_ADDRESS"""
  USER_IP_ADDRESS

  """USER_IP_ADDRESSES"""
  USER_IP_ADDRESSES

  """USER_COUNTRY_ISO_CODE"""
  USER_COUNTRY_ISO_CODE

  """USER_COUNTRY_ISO_CODES"""
  USER_COUNTRY_ISO_CODES

  """USER_COUNTRY"""
  USER_COUNTRY

  """USER_COUNTRIES"""
  USER_COUNTRIES

  """IP_REPUTATION_LEVEL"""
  IP_REPUTATION_LEVEL

  """IP_REPUTATION_LEVELS"""
  IP_REPUTATION_LEVELS

  """IP_CONNECTION_TYPE"""
  IP_CONNECTION_TYPE

  """IP_CONNECTION_TYPES"""
  IP_CONNECTION_TYPES

  """IP_TYPE"""
  IP_TYPE

  """IP_TYPES"""
  IP_TYPES

  """IP_ASN"""
  IP_ASN

  """IP_ASNS"""
  IP_ASNS

  """IP_ORGANISATION"""
  IP_ORGANISATION

  """IP_ORGANISATIONS"""
  IP_ORGANISATIONS

  """IP_ABUSE_VELOCITY"""
  IP_ABUSE_VELOCITY

  """IP_ABUSE_VELOCITIES"""
  IP_ABUSE_VELOCITIES

  """HAS_EXTERNAL_IP"""
  HAS_EXTERNAL_IP

  """CONFIDENCE_LEVEL"""
  CONFIDENCE_LEVEL

  """IMPACT_LEVEL"""
  IMPACT_LEVEL

  """SEVERITY_LEVEL"""
  SEVERITY_LEVEL

  """SEVERITY_SCORE"""
  SEVERITY_SCORE

  """SERVICE_ID"""
  SERVICE_ID

  """SERVICE_NAME"""
  SERVICE_NAME

  """API_IDS"""
  API_IDS

  """API_NAMES"""
  API_NAMES

  """API_URIS"""
  API_URIS

  """ACTOR_ENTITY_IDS"""
  ACTOR_ENTITY_IDS

  """THREAT_SOURCE_TYPE"""
  THREAT_SOURCE_TYPE

  """THREAT_SOURCE_VALUES"""
  THREAT_SOURCE_VALUES

  """SERVICE_IDS"""
  SERVICE_IDS

  """SERVICE_NAMES"""
  SERVICE_NAMES

  """SCANNER_TYPES"""
  SCANNER_TYPES

  """TAG"""
  TAG

  """TAGS"""
  TAGS

  """ANY_API_IS_AUTHENTICATED"""
  ANY_API_IS_AUTHENTICATED

  """ANY_API_HAS_SENSITIVE_DATA"""
  ANY_API_HAS_SENSITIVE_DATA

  """ANY_API_IS_SHADOW"""
  ANY_API_IS_SHADOW

  """API_DATASET_ID"""
  API_DATASET_ID

  """API_DATASET_IDS"""
  API_DATASET_IDS

  """API_AUTH_TYPE"""
  API_AUTH_TYPE

  """API_AUTH_TYPES"""
  API_AUTH_TYPES

  """API_TYPE"""
  API_TYPE

  """API_TYPES"""
  API_TYPES

  """SENSITIVE_DATA_TYPE"""
  SENSITIVE_DATA_TYPE

  """SENSITIVE_DATA_TYPES"""
  SENSITIVE_DATA_TYPES

  """HTTP_REQUEST_METHOD"""
  HTTP_REQUEST_METHOD

  """HTTP_REQUEST_METHODS"""
  HTTP_REQUEST_METHODS

  """DOMAIN_ID"""
  DOMAIN_ID

  """DOMAIN_IDS"""
  DOMAIN_IDS

  """DOMAIN_NAME"""
  DOMAIN_NAME

  """DOMAIN_NAMES"""
  DOMAIN_NAMES

  """THREAT_STATUS"""
  THREAT_STATUS

  """ANOMALOUS_ATTRIBUTE"""
  ANOMALOUS_ATTRIBUTE

  """ANOMALOUS_ATTRIBUTES"""
  ANOMALOUS_ATTRIBUTES

  """ENVIRONMENT"""
  ENVIRONMENT
}

"""Threat Activity field"""
enum ThreatActivityField {
  """ID"""
  ID

  """IS_BLOCKED"""
  IS_BLOCKED

  """TYPE"""
  TYPE

  """BEHAVIOUR"""
  BEHAVIOUR

  """BEHAVIOUR_ID"""
  BEHAVIOUR_ID

  """SECURITY_FAMILY"""
  SECURITY_FAMILY

  """SECURITY_RELEVANCE"""
  SECURITY_RELEVANCE

  """CATEGORIES"""
  CATEGORIES

  """START_TIME_MILLIS"""
  START_TIME_MILLIS

  """LAST_SEEN_MILLIS"""
  LAST_SEEN_MILLIS

  """ACTOR_ENTITY_ID"""
  ACTOR_ENTITY_ID

  """ACTOR_SCORE"""
  ACTOR_SCORE

  """API_ID"""
  API_ID

  """API_NAME"""
  API_NAME

  """API_URI"""
  API_URI

  """API_IS_EXTERNAL"""
  API_IS_EXTERNAL

  """API_LEARNING_STATE"""
  API_LEARNING_STATE

  """API_HAS_PII"""
  API_HAS_PII

  """API_IS_AUTHENTICATED"""
  API_IS_AUTHENTICATED

  """API_RISK_CATEGORY"""
  API_RISK_CATEGORY

  """DOMAIN_IDS"""
  DOMAIN_IDS

  """DOMAIN_NAMES"""
  DOMAIN_NAMES

  """ENVIRONMENT"""
  ENVIRONMENT

  """CONFIDENCE_DETAILS"""
  CONFIDENCE_DETAILS

  """CONFIDENCE_SCORE"""
  CONFIDENCE_SCORE

  """CONFIDENCE_LEVEL"""
  CONFIDENCE_LEVEL

  """IMPACT_DETAILS"""
  IMPACT_DETAILS

  """IMPACT_SCORE"""
  IMPACT_SCORE

  """IMPACT_LEVEL"""
  IMPACT_LEVEL

  """STATUS_CODE_DETAILS"""
  STATUS_CODE_DETAILS

  """STATUS_CODES"""
  STATUS_CODES

  """SEVERITY_SCORE"""
  SEVERITY_SCORE

  """SEVERITY_LEVEL"""
  SEVERITY_LEVEL

  """SERVICE_ID"""
  SERVICE_ID

  """SERVICE_NAME"""
  SERVICE_NAME

  """STATUS"""
  STATUS

  """IS_ACTIVE"""
  IS_ACTIVE

  """ACTIVITY_STATUS"""
  ACTIVITY_STATUS

  """USER_IP_ADDRESSES"""
  USER_IP_ADDRESSES

  """USER_DEVICES"""
  USER_DEVICES

  """USER_COUNTRY_ISO_CODES"""
  USER_COUNTRY_ISO_CODES

  """USER_COUNTRIES"""
  USER_COUNTRIES

  """SESSION_IDS"""
  SESSION_IDS

  """IP_REPUTATION_LEVELS"""
  IP_REPUTATION_LEVELS

  """IP_CONNECTION_TYPES"""
  IP_CONNECTION_TYPES

  """IP_TYPES"""
  IP_TYPES

  """HAS_EXTERNAL_IP"""
  HAS_EXTERNAL_IP

  """IP_ASNS"""
  IP_ASNS

  """IP_ORGANISATIONS"""
  IP_ORGANISATIONS

  """IP_ABUSE_VELOCITIES"""
  IP_ABUSE_VELOCITIES

  """ANOMALOUS_ATTRIBUTES"""
  ANOMALOUS_ATTRIBUTES

  """TAGS"""
  TAGS

  """EVENTS_COUNT"""
  EVENTS_COUNT

  """API_IDS"""
  API_IDS

  """API_NAMES"""
  API_NAMES

  """API_URIS"""
  API_URIS

  """ACTOR_ENTITY_IDS"""
  ACTOR_ENTITY_IDS

  """THREAT_SOURCE_TYPE"""
  THREAT_SOURCE_TYPE

  """THREAT_SOURCE_VALUES"""
  THREAT_SOURCE_VALUES

  """SERVICE_IDS"""
  SERVICE_IDS

  """SERVICE_NAMES"""
  SERVICE_NAMES

  """SCANNER_TYPES"""
  SCANNER_TYPES

  """READ_ONLY_FIELDS"""
  READ_ONLY_FIELDS

  """ANY_API_IS_AUTHENTICATED"""
  ANY_API_IS_AUTHENTICATED

  """ANY_API_HAS_SENSITIVE_DATA"""
  ANY_API_HAS_SENSITIVE_DATA

  """ANY_API_IS_SHADOW"""
  ANY_API_IS_SHADOW

  """API_DATASET_IDS"""
  API_DATASET_IDS

  """API_AUTH_TYPES"""
  API_AUTH_TYPES

  """API_TYPES"""
  API_TYPES

  """SENSITIVE_DATA_TYPES"""
  SENSITIVE_DATA_TYPES

  """HTTP_REQUEST_METHODS"""
  HTTP_REQUEST_METHODS

  """THREAT_STATUS"""
  THREAT_STATUS

  """LAST_THREAT_STATUS_CHANGE_DETAILS"""
  LAST_THREAT_STATUS_CHANGE_DETAILS

  """LAST_THREAT_STATUS_CHANGE_TIMESTAMP"""
  LAST_THREAT_STATUS_CHANGE_TIMESTAMP

  """ACTOR_ID_TYPES"""
  ACTOR_ID_TYPES
}

"""Threat activity aggregation field"""
enum ThreatActivityFieldType {
  """STRING"""
  STRING

  """BOOLEAN"""
  BOOLEAN

  """INTEGER"""
  INTEGER

  """STRING_LIST"""
  STRING_LIST

  """STRING_MAP_JSON"""
  STRING_MAP_JSON
}

"""Threat activity graph intervalBucket details"""
type ThreatActivityGraphIntervalBucketCount {
  """Grouping key if a group by argument is provided"""
  groupingKey: String

  """Bucket of interval"""
  intervalBucket: Long!

  """Count of the interval bucket"""
  intervalBucketCount: Long!
}

type ThreatActivityGraphResultSet {
  count: Long!
  results: [ThreatActivityGraphIntervalBucketCount]!
  total: Long!
}

"""Threat activity field supporting group by"""
enum ThreatActivityGroupByField {
  """ACTOR_ENTITY_ID"""
  ACTOR_ENTITY_ID

  """ACTOR_ENTITY_IDS"""
  ACTOR_ENTITY_IDS

  """API_ID"""
  API_ID

  """API_IDS"""
  API_IDS

  """IS_BLOCKED"""
  IS_BLOCKED

  """IS_ACTIVE"""
  IS_ACTIVE

  """ACTIVITY_STATUS"""
  ACTIVITY_STATUS

  """BEHAVIOUR"""
  BEHAVIOUR

  """TYPE"""
  TYPE

  """API_IS_AUTHENTICATED"""
  API_IS_AUTHENTICATED

  """API_RISK_CATEGORY"""
  API_RISK_CATEGORY

  """API_NAME"""
  API_NAME

  """API_NAMES"""
  API_NAMES

  """API_IS_EXTERNAL"""
  API_IS_EXTERNAL

  """API_LEARNING_STATE"""
  API_LEARNING_STATE

  """API_HAS_PII"""
  API_HAS_PII

  """CATEGORY"""
  CATEGORY

  """CATEGORIES"""
  CATEGORIES

  """STATUS_CODE"""
  STATUS_CODE

  """STATUS_CODES"""
  STATUS_CODES

  """USER_IP_ADDRESS"""
  USER_IP_ADDRESS

  """USER_IP_ADDRESSES"""
  USER_IP_ADDRESSES

  """USER_COUNTRY_ISO_CODE"""
  USER_COUNTRY_ISO_CODE

  """USER_COUNTRY_ISO_CODES"""
  USER_COUNTRY_ISO_CODES

  """USER_COUNTRY"""
  USER_COUNTRY

  """USER_COUNTRIES"""
  USER_COUNTRIES

  """IP_REPUTATION_LEVEL"""
  IP_REPUTATION_LEVEL

  """IP_REPUTATION_LEVELS"""
  IP_REPUTATION_LEVELS

  """IP_CONNECTION_TYPE"""
  IP_CONNECTION_TYPE

  """IP_CONNECTION_TYPES"""
  IP_CONNECTION_TYPES

  """IP_TYPE"""
  IP_TYPE

  """IP_TYPES"""
  IP_TYPES

  """HAS_EXTERNAL_IP"""
  HAS_EXTERNAL_IP

  """IP_ASN"""
  IP_ASN

  """IP_ASNS"""
  IP_ASNS

  """IP_ORGANISATION"""
  IP_ORGANISATION

  """IP_ORGANISATIONS"""
  IP_ORGANISATIONS

  """IP_ABUSE_VELOCITY"""
  IP_ABUSE_VELOCITY

  """IP_ABUSE_VELOCITIES"""
  IP_ABUSE_VELOCITIES

  """CONFIDENCE_LEVEL"""
  CONFIDENCE_LEVEL

  """IMPACT_LEVEL"""
  IMPACT_LEVEL

  """SEVERITY_LEVEL"""
  SEVERITY_LEVEL

  """SERVICE_ID"""
  SERVICE_ID

  """SERVICE_IDS"""
  SERVICE_IDS

  """SERVICE_NAME"""
  SERVICE_NAME

  """SERVICE_NAMES"""
  SERVICE_NAMES

  """SCANNER_TYPE"""
  SCANNER_TYPE

  """SCANNER_TYPES"""
  SCANNER_TYPES

  """TAG"""
  TAG

  """TAGS"""
  TAGS

  """ANY_API_IS_AUTHENTICATED"""
  ANY_API_IS_AUTHENTICATED

  """ANY_API_HAS_SENSITIVE_DATA"""
  ANY_API_HAS_SENSITIVE_DATA

  """ANY_API_IS_SHADOW"""
  ANY_API_IS_SHADOW

  """API_DATASET_ID"""
  API_DATASET_ID

  """API_DATASET_IDS"""
  API_DATASET_IDS

  """API_AUTH_TYPE"""
  API_AUTH_TYPE

  """API_AUTH_TYPES"""
  API_AUTH_TYPES

  """API_TYPE"""
  API_TYPE

  """API_TYPES"""
  API_TYPES

  """SENSITIVE_DATA_TYPE"""
  SENSITIVE_DATA_TYPE

  """SENSITIVE_DATA_TYPES"""
  SENSITIVE_DATA_TYPES

  """HTTP_REQUEST_METHOD"""
  HTTP_REQUEST_METHOD

  """HTTP_REQUEST_METHODS"""
  HTTP_REQUEST_METHODS

  """DOMAIN_ID"""
  DOMAIN_ID

  """DOMAIN_IDS"""
  DOMAIN_IDS

  """DOMAIN_NAME"""
  DOMAIN_NAME

  """DOMAIN_NAMES"""
  DOMAIN_NAMES

  """THREAT_STATUS"""
  THREAT_STATUS

  """ANOMALOUS_ATTRIBUTE"""
  ANOMALOUS_ATTRIBUTE

  """ANOMALOUS_ATTRIBUTES"""
  ANOMALOUS_ATTRIBUTES

  """ENVIRONMENT"""
  ENVIRONMENT
}

type ThreatActivityMetadata {
  """Threat activity field display name"""
  displayName: String!

  """Threat activity field name"""
  field: ThreatActivityField!

  """Threat activity field type"""
  fieldType: ThreatActivityFieldType!

  """Boolean denoting whether the threat activity field is internal or not"""
  isInternal: Boolean!

  """Supported aggregation types for the threat activity field"""
  supportedAggregationTypes: [ThreatActivityMetricAggregationType]!

  """
  Boolean denoting whether the threat activity field supports aggregation or not
  """
  supportsAggregation: Boolean!

  """
  Boolean denoting whether the threat activity field supports grouping or not
  """
  supportsGrouping: Boolean!
}

type ThreatActivityMetadataResultSet {
  count: Long
  total: Long
  results: [ThreatActivityMetadata]!
}

"""Threat activity aggregation type for metrics"""
enum ThreatActivityMetricAggregationType {
  """AVG"""
  AVG

  """SUM"""
  SUM

  """MIN"""
  MIN

  """MAX"""
  MAX

  """DISTINCT"""
  DISTINCT

  """COUNT"""
  COUNT

  """DISTINCT_COUNT"""
  DISTINCT_COUNT
}

"""Threat activity function type for metrics"""
enum ThreatActivityMetricFunctionType {
  """LENGTH"""
  LENGTH
}

"""Threat activity result set"""
type ThreatActivityResultSet {
  count: Long!
  results: [ThreatActivity]!
  total: Long!
}

"""Threat activity field supporting selections"""
enum ThreatActivitySelectionField {
  """ID"""
  ID

  """IS_BLOCKED"""
  IS_BLOCKED

  """TYPE"""
  TYPE

  """BEHAVIOUR"""
  BEHAVIOUR

  """BEHAVIOUR_ID"""
  BEHAVIOUR_ID

  """SECURITY_FAMILY"""
  SECURITY_FAMILY

  """SECURITY_RELEVANCE"""
  SECURITY_RELEVANCE

  """CATEGORIES"""
  CATEGORIES

  """START_TIME_MILLIS"""
  START_TIME_MILLIS

  """LAST_SEEN_MILLIS"""
  LAST_SEEN_MILLIS

  """ACTOR_ENTITY_ID"""
  ACTOR_ENTITY_ID

  """ACTOR_SCORE"""
  ACTOR_SCORE

  """API_ID"""
  API_ID

  """API_NAME"""
  API_NAME

  """API_URI"""
  API_URI

  """API_IS_EXTERNAL"""
  API_IS_EXTERNAL

  """API_LEARNING_STATE"""
  API_LEARNING_STATE

  """API_HAS_PII"""
  API_HAS_PII

  """API_IS_AUTHENTICATED"""
  API_IS_AUTHENTICATED

  """API_RISK_CATEGORY"""
  API_RISK_CATEGORY

  """DOMAIN_IDS"""
  DOMAIN_IDS

  """DOMAIN_NAMES"""
  DOMAIN_NAMES

  """ENVIRONMENT"""
  ENVIRONMENT

  """CONFIDENCE_DETAILS"""
  CONFIDENCE_DETAILS

  """CONFIDENCE_SCORE"""
  CONFIDENCE_SCORE

  """CONFIDENCE_LEVEL"""
  CONFIDENCE_LEVEL

  """IMPACT_DETAILS"""
  IMPACT_DETAILS

  """IMPACT_SCORE"""
  IMPACT_SCORE

  """IMPACT_LEVEL"""
  IMPACT_LEVEL

  """STATUS_CODE_DETAILS"""
  STATUS_CODE_DETAILS

  """STATUS_CODES"""
  STATUS_CODES

  """SEVERITY_SCORE"""
  SEVERITY_SCORE

  """SEVERITY_LEVEL"""
  SEVERITY_LEVEL

  """SERVICE_ID"""
  SERVICE_ID

  """SERVICE_NAME"""
  SERVICE_NAME

  """STATUS"""
  STATUS

  """IS_ACTIVE"""
  IS_ACTIVE

  """ACTIVITY_STATUS"""
  ACTIVITY_STATUS

  """USER_IP_ADDRESSES"""
  USER_IP_ADDRESSES

  """USER_DEVICES"""
  USER_DEVICES

  """USER_COUNTRY_ISO_CODES"""
  USER_COUNTRY_ISO_CODES

  """USER_COUNTRIES"""
  USER_COUNTRIES

  """SESSION_IDS"""
  SESSION_IDS

  """IP_REPUTATION_LEVELS"""
  IP_REPUTATION_LEVELS

  """IP_CONNECTION_TYPES"""
  IP_CONNECTION_TYPES

  """IP_TYPES"""
  IP_TYPES

  """HAS_EXTERNAL_IP"""
  HAS_EXTERNAL_IP

  """IP_ASNS"""
  IP_ASNS

  """IP_ORGANISATIONS"""
  IP_ORGANISATIONS

  """IP_ABUSE_VELOCITIES"""
  IP_ABUSE_VELOCITIES

  """ANOMALOUS_ATTRIBUTES"""
  ANOMALOUS_ATTRIBUTES

  """TAGS"""
  TAGS

  """EVENTS_COUNT"""
  EVENTS_COUNT

  """API_IDS"""
  API_IDS

  """API_NAMES"""
  API_NAMES

  """API_URIS"""
  API_URIS

  """ACTOR_ENTITY_IDS"""
  ACTOR_ENTITY_IDS

  """THREAT_SOURCE_TYPE"""
  THREAT_SOURCE_TYPE

  """THREAT_SOURCE_VALUES"""
  THREAT_SOURCE_VALUES

  """SERVICE_IDS"""
  SERVICE_IDS

  """SERVICE_NAMES"""
  SERVICE_NAMES

  """TIME_SERIES_GRAPH_TIMESTAMP_IN_MILLIS_DATAPOINTS"""
  TIME_SERIES_GRAPH_TIMESTAMP_IN_MILLIS_DATAPOINTS

  """TIME_SERIES_GRAPH_SPAN_COUNTS_DATAPOINTS"""
  TIME_SERIES_GRAPH_SPAN_COUNTS_DATAPOINTS

  """TIME_SERIES_GRAPH_IS_ANOMALOUS_DATAPOINTS"""
  TIME_SERIES_GRAPH_IS_ANOMALOUS_DATAPOINTS

  """SCANNER_TYPES"""
  SCANNER_TYPES

  """READ_ONLY_FIELDS"""
  READ_ONLY_FIELDS

  """ANY_API_IS_AUTHENTICATED"""
  ANY_API_IS_AUTHENTICATED

  """ANY_API_HAS_SENSITIVE_DATA"""
  ANY_API_HAS_SENSITIVE_DATA

  """ANY_API_IS_SHADOW"""
  ANY_API_IS_SHADOW

  """API_DATASET_IDS"""
  API_DATASET_IDS

  """API_AUTH_TYPES"""
  API_AUTH_TYPES

  """API_TYPES"""
  API_TYPES

  """SENSITIVE_DATA_TYPES"""
  SENSITIVE_DATA_TYPES

  """HTTP_REQUEST_METHODS"""
  HTTP_REQUEST_METHODS

  """SUCCESSFUL_LOGIN_USER_NAMES"""
  SUCCESSFUL_LOGIN_USER_NAMES

  """SUCCESSFUL_LOGIN_COUNT"""
  SUCCESSFUL_LOGIN_COUNT

  """FAILED_LOGIN_COUNT"""
  FAILED_LOGIN_COUNT

  """TOTAL_ATTEMPTED_LOGIN_COUNT"""
  TOTAL_ATTEMPTED_LOGIN_COUNT

  """TOTAL_USER_COUNT"""
  TOTAL_USER_COUNT

  """FAILED_USER_COUNT"""
  FAILED_USER_COUNT

  """SUCCESSFUL_USER_COUNT"""
  SUCCESSFUL_USER_COUNT

  """THREAT_SOURCE_DETAILS"""
  THREAT_SOURCE_DETAILS

  """FINGERPRINT"""
  FINGERPRINT

  """BOT_IPS_SPANS_PERCENTAGE"""
  BOT_IPS_SPANS_PERCENTAGE

  """TOR_IPS_SPANS_PERCENTAGE"""
  TOR_IPS_SPANS_PERCENTAGE

  """VPN_IPS_SPANS_PERCENTAGE"""
  VPN_IPS_SPANS_PERCENTAGE

  """PROXY_IPS_SPANS_PERCENTAGE"""
  PROXY_IPS_SPANS_PERCENTAGE

  """FAILED_LOGIN_USER_NAMES"""
  FAILED_LOGIN_USER_NAMES

  """THREAT_STATUS"""
  THREAT_STATUS

  """LAST_THREAT_STATUS_CHANGE_DETAILS"""
  LAST_THREAT_STATUS_CHANGE_DETAILS

  """LAST_THREAT_STATUS_CHANGE_TIMESTAMP"""
  LAST_THREAT_STATUS_CHANGE_TIMESTAMP
}

"""Threat activity value containing attribute and its type"""
type ThreatActivityValue {
  type: AttributeType!
  value: Unknown
}

"""Threat Actor change details"""
type ThreatActorChange {
  actorEntityId: String!
  actorId: String!
  actorIp: String!
  changeReason: String
  newState: ActorState!
  oldState: ActorState
}

enum ThreatActorSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

"""Threat Actor Severity change details"""
type ThreatActorSeverityChange {
  actorEntityId: String!
  actorId: String!
  actorIp: String!
  newSeverity: ThreatActorSeverity!
  oldSeverity: ThreatActorSeverity!
}

enum ThreatActorState {
  """NORMAL"""
  NORMAL

  """THREAT_ACTOR"""
  THREAT_ACTOR

  """RESOLVED"""
  RESOLVED

  """ALWAYS_ALLOWED"""
  ALWAYS_ALLOWED

  """ALWAYS_DENIED"""
  ALWAYS_DENIED

  """SUSPENDED"""
  SUSPENDED

  """SNOOZED"""
  SNOOZED
}

type ThreatActorStateChangeEventCondition {
  actorStates: [ThreatActorState]
}

"""Attributes associated with the Threat module"""
type ThreatAttributes {
  """
  A score between 0 and 100 indicating the threat caused by the user. Higher the score, higher is the threat.
  """
  score: Int!

  """Threat status of the user"""
  status: UserThreatStatus!
}

type ThreatAutoBlocking {
  actionType: ThreatAutoBlockingActionType!

  """List of configs to exclude from auto blocking."""
  excludeConfigs: [ExcludeAutoBlockingConfig]!
  expiration: ThreatAutoBlockingExpiration
}

enum ThreatAutoBlockingActionType {
  """NO_ACTION"""
  NO_ACTION

  """BLOCK"""
  BLOCK
}

"""Threat Auto Blocking Configuration change details"""
type ThreatAutoBlockingConfigurationChange {
  toggleAction: ToggleAction!
}

type ThreatAutoBlockingExpiration {
  duration: Duration!
  timestamp: DateTime
}

type ThreatScoreBounds {
  defaultHighScoreUpperBound: Int!
  defaultLowScoreUpperBound: Int!
  defaultMediumScoreUpperBound: Int!
  highScoreUpperBound: Int!
  lowScoreUpperBound: Int!
  mediumScoreUpperBound: Int!
}

"""Threat scoring config change event condition"""
type ThreatScoringConfigChangeEventCondition {
  """Threat scoring config types"""
  threatScoringConfigTypes: [ThreatScoringConfigType]!
}

"""Threat scoring config type"""
enum ThreatScoringConfigType {
  """ANOMALY_SCORE_CONTRIBUTION"""
  ANOMALY_SCORE_CONTRIBUTION

  """SECURITY_EVENT_SCORE_CONTRIBUTION"""
  SECURITY_EVENT_SCORE_CONTRIBUTION

  """THREAT_SCORE_BOUND"""
  THREAT_SCORE_BOUND

  """SECURITY_EVENT_TYPE_CONTRIBUTION"""
  SECURITY_EVENT_TYPE_CONTRIBUTION

  """IP_REPUTATION_SCORE_CONTRIBUTION"""
  IP_REPUTATION_SCORE_CONTRIBUTION

  """STATUS_CODE_SCORE_CONTRIBUTION"""
  STATUS_CODE_SCORE_CONTRIBUTION

  """THREAT_AUTO_BLOCKING"""
  THREAT_AUTO_BLOCKING
}

type ThresholdCountConfig {
  requiredCallsCount: Int
  requiredUniqueIpsCount: Int
  requiredUniqueUserIdsCount: Int
}

"""Threshold family"""
enum ThresholdFamily {
  """DIVERSE_IP_DIVERSE_USER"""
  DIVERSE_IP_DIVERSE_USER

  """DIVERSE_IP_LIMITED_USER"""
  DIVERSE_IP_LIMITED_USER

  """LIMITED_IP"""
  LIMITED_IP

  """LIMITED_IP_DIVERSE_USER"""
  LIMITED_IP_DIVERSE_USER
}

type ThresholdFamilyConfig {
  diverseIpDiverseUserFamilyConfig: ThresholdCountConfig
  diverseIpLimitedUserFamilyConfig: ThresholdCountConfig
  limitedIpDiverseUserFamilyConfig: ThresholdCountConfig
  limitedIpFamilyConfig: ThresholdCountConfig
}

type ThresholdOverrideConfig {
  requiredCallsCount: Int
}

type ThresholdRegexConfig {
  regexList: [String]
  threshold: Int
}

type TimeRange {
  endTime: DateTime!
  startTime: DateTime!
}

enum TimeUnit {
  """MILLISECONDS"""
  MILLISECONDS

  """SECONDS"""
  SECONDS

  """MINUTES"""
  MINUTES

  """HOURS"""
  HOURS

  """DAYS"""
  DAYS
}

enum ToggleAction {
  """ENABLE"""
  ENABLE

  """DISABLE"""
  DISABLE
}

type TokenExtractionRule {
  """
  Optionally define and use alias for the attribute key in the expression
  """
  alias: String

  """The attribute key to be used to get value"""
  key: String!

  """
  Optionally define regex capture rule to extract token value from the attribute
  value. It should have only one capture group. Ex: "(.*)\..*"
  """
  regexCapture: String
}

enum TokenPlacement {
  """HEADER"""
  HEADER

  """QUERY"""
  QUERY

  """COOKIE"""
  COOKIE
}

type Trace {
  attribute(key: String, expression: InputAttributeExpression): Unknown
  id: String!
}

type TraceableAuth {
  enabled: Boolean!
}

enum TraceableEntityStatus {
  """TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_OPEN"""
  TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_OPEN

  """TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_REOPENED"""
  TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_REOPENED

  """TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_ACCEPTED_RISK"""
  TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_ACCEPTED_RISK

  """TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_NOT_AN_ISSUE"""
  TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_NOT_AN_ISSUE

  """TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_UNDER_REVIEW"""
  TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_UNDER_REVIEW

  """TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_FIXED"""
  TRACEABLE_ENTITY_STATUS_ISSUES_COMMON_FIXED

  """TRACEABLE_ENTITY_STATUS_THREAT_ACTIVITY_OPEN"""
  TRACEABLE_ENTITY_STATUS_THREAT_ACTIVITY_OPEN

  """TRACEABLE_ENTITY_STATUS_THREAT_ACTIVITY_FALSE_THREAT"""
  TRACEABLE_ENTITY_STATUS_THREAT_ACTIVITY_FALSE_THREAT

  """TRACEABLE_ENTITY_STATUS_THREAT_ACTIVITY_ACCEPTED_THREAT"""
  TRACEABLE_ENTITY_STATUS_THREAT_ACTIVITY_ACCEPTED_THREAT

  """TRACEABLE_ENTITY_STATUS_THREAT_ACTIVITY_ACTIONABLE_THREAT"""
  TRACEABLE_ENTITY_STATUS_THREAT_ACTIVITY_ACTIONABLE_THREAT

  """TRACEABLE_ENTITY_STATUS_THREAT_ACTIVITY_UNDER_REVIEW"""
  TRACEABLE_ENTITY_STATUS_THREAT_ACTIVITY_UNDER_REVIEW

  """TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_OPEN"""
  TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_OPEN

  """TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_REOPENED"""
  TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_REOPENED

  """TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_ACCEPTED_RISK"""
  TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_ACCEPTED_RISK

  """TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_NOT_AN_ISSUE"""
  TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_NOT_AN_ISSUE

  """TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_UNDER_REVIEW"""
  TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_UNDER_REVIEW

  """TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_FIXED"""
  TRACEABLE_ENTITY_STATUS_AST_VULNERABILITY_FIXED

  """TRACEABLE_ENTITY_STATUS_VULNERABILITY_OPEN"""
  TRACEABLE_ENTITY_STATUS_VULNERABILITY_OPEN

  """TRACEABLE_ENTITY_STATUS_VULNERABILITY_REOPENED"""
  TRACEABLE_ENTITY_STATUS_VULNERABILITY_REOPENED

  """TRACEABLE_ENTITY_STATUS_VULNERABILITY_ACCEPTED_RISK"""
  TRACEABLE_ENTITY_STATUS_VULNERABILITY_ACCEPTED_RISK

  """TRACEABLE_ENTITY_STATUS_VULNERABILITY_NOT_AN_ISSUE"""
  TRACEABLE_ENTITY_STATUS_VULNERABILITY_NOT_AN_ISSUE

  """TRACEABLE_ENTITY_STATUS_VULNERABILITY_UNDER_REVIEW"""
  TRACEABLE_ENTITY_STATUS_VULNERABILITY_UNDER_REVIEW

  """TRACEABLE_ENTITY_STATUS_VULNERABILITY_FIXED"""
  TRACEABLE_ENTITY_STATUS_VULNERABILITY_FIXED
}

type TraceableProtectionEntityDetails {
  """Type of the entity"""
  entityType: TraceableProtectionEntityType!
  id: String!

  """Name of the entity"""
  name: String!
}

enum TraceableProtectionEntityType {
  """IP_RANGE_RULE"""
  IP_RANGE_RULE

  """CUSTOM_SIGNATURE_RULE"""
  CUSTOM_SIGNATURE_RULE

  """INTEGRATION_CONFIG"""
  INTEGRATION_CONFIG

  """THREAT_ACTOR"""
  THREAT_ACTOR
}

enum TraceableSpanProcessingFilterField {
  """URL"""
  URL

  """URL_PATH"""
  URL_PATH

  """SERVICE_NAME"""
  SERVICE_NAME

  """ENVIRONMENT_NAME"""
  ENVIRONMENT_NAME
}

type TraceableSpanProcessingLogicalFilter {
  logicalOperator: LogicalOperator!
  spanFilters: [TraceableSpanProcessingRuleFilter]!
}

type TraceableSpanProcessingRelationalFilter {
  field: TraceableSpanProcessingFilterField
  key: String
  relationalOperator: TraceableSpanProcessingRelationalOperator!
  value: Unknown!
}

enum TraceableSpanProcessingRelationalOperator {
  """EQUALS"""
  EQUALS

  """NOT_EQUALS"""
  NOT_EQUALS

  """CONTAINS"""
  CONTAINS

  """NOT_CONTAINS"""
  NOT_CONTAINS

  """STARTS_WITH"""
  STARTS_WITH

  """ENDS_WITH"""
  ENDS_WITH

  """REGEX_MATCH"""
  REGEX_MATCH

  """IN"""
  IN
}

type TraceableSpanProcessingRuleFilter {
  logicalSpanFilter: TraceableSpanProcessingLogicalFilter
  relationalSpanFilter: TraceableSpanProcessingRelationalFilter
}

type TraceResultSet {
  count: Long!
  results: [Trace]!
  total: Long!
}

enum TraceType {
  """TRACE"""
  TRACE

  """API_TRACE"""
  API_TRACE

  """BACKEND_TRACE"""
  BACKEND_TRACE
}

type TrafficConfiguration {
  """Traffic type of the scan - Live/Generated/Replay"""
  generationTrafficType: GenerationTrafficType

  """
  List of GraphQl Schemas to be used for GENERATED traffic, other types of generated traffic must not be set
  """
  graphqlSchemaDetailsList: [GraphqlSchemaDetails]

  """
  Optional open api spec dependency graph as yaml text that can be set in case of open api spec based generated traffic scan
  """
  openApiSpecDependencyGraphYaml: String

  """
  List of Open API spec IDS to be used for GENERATED traffic, other types of generated traffic must not be set
  """
  openApiSpecsIds: [String]

  """
  List of Postman collections to be used for GENERATED traffic, other types of generated traffic must not be set
  """
  postmanCollectionDetailsList: [PostmanCollectionDetails]
  replayTraffic: ReplayTraffic

  """
  Web Crawler configuration that can be set for web crawler discovery generated traffic scan
  """
  webCrawlerDiscoveryConfiguration: WebCrawlerConfiguration
}

type TrafficDetails {
  generatedTrafficDetails: GeneratedTrafficDetails
  trafficType: GenerationTrafficType!
  openApiSpecDetails: [SpecInfo] @deprecated(reason: "Deprecated")
}

"""Training action"""
enum TrainingAction {
  """PAUSE"""
  PAUSE

  """RESUME"""
  RESUME

  """RESET"""
  RESET

  """FORCE_LEARN"""
  FORCE_LEARN

  """USER_ROLE"""
  USER_ROLE

  """USER_SCOPE"""
  USER_SCOPE
}

"""Training action configuration"""
type TrainingActionConfig {
  """Force learn action configuration"""
  forceLearnActionConfig: ForceLearnActionConfig

  """Timestamp of the action"""
  timestamp: DateTime!

  """Training action"""
  trainingAction: TrainingAction!

  """User role action configuration"""
  userRoleActionConfig: UserRoleActionConfig

  """User scope action configuration"""
  userScopeActionConfig: UserScopeActionConfig
}

type TrainingActionsResultSet {
  count: Long!
  total: Long!
  results: [ScopedTrainingActionConfig]!
}

type TrainingConfig {
  """API Discovery Config"""
  apiDiscoveryConfig: ApiDiscoveryConfig
  apiNamingTrainingConfig: ApiNamingTrainingConfig
  demoApplicationConfig: DemoApplicationConfig
  disabled: Boolean
  localTrainingConfig: LocalTrainingConfig
  metadataTrainingConfig: MetadataTrainingConfig
  sensitiveDataTrainingConfig: SensitiveDataTrainingConfig
  sessionTrainingConfig: SessionTrainingConfig
  type: TrainingConfigType!
  volumetricTrainingConfig: VolumetricTrainingConfig
  vulnerabilityTrainingConfig: VulnerabilityTrainingConfig
}

type TrainingConfigKeyValuePair {
  configKey: String!
  configValue: TrainingConfigValue!
}

enum TrainingConfigType {
  """METADATA"""
  METADATA

  """SENSITIVE_DATA"""
  SENSITIVE_DATA

  """SESSION"""
  SESSION

  """API_NAMING"""
  API_NAMING

  """LOCAL_TRAINING"""
  LOCAL_TRAINING

  """VOLUMETRIC"""
  VOLUMETRIC

  """DEMO_APPLICATION"""
  DEMO_APPLICATION

  """API_DISCOVERY"""
  API_DISCOVERY
}

type TrainingConfigValue {
  apiCallSpikeTrainingConfigList: [ApiCallSpikeTrainingConfig]
  customRulesConfigList: [CustomRuleConfig]
  demoApplicationDetection: DemoApplicationAutomaticDetection
  demoApplicationDefinition: DemoApplicationDefinition

  """Span Attribute Filter"""
  discoveryFilter: EntitySpanAttributeFilter
  entitySpanAttributeFilterConfigList: [EntitySpanAttributeFilterConfig]
  gibberishConfig: GibberishConfig
  int32: Int
  intList: [Int]
  minOccurrenceConfig: MinOccurrenceConfig
  modsecFilterConfig: ModsecFilterConfig
  multiValuedStringParamRuleList: [MultiValuedStringParamRule]
  paramSusceptibilityConfig: ParamSusceptibilityConfig
  segmentFilterConfig: SegmentFilterConfig
  segmentMergeConfig: [SegmentMergeConfig]

  """Static API Discovery Action"""
  staticApiDiscoveryAction: StaticApiDiscoveryAction
  statusCodeFilterConfig: StatusCodeFilterConfig
  stringList: [String]
  thresholdCountConfig: ThresholdCountConfig
  thresholdFamilyConfig: ThresholdFamilyConfig
  thresholdOverrideConfig: ThresholdOverrideConfig
  thresholdRegexConfig: ThresholdRegexConfig
  urlPathFilterConfig: UrlPathFilterConfig
  userAgentFilterConfig: UserAgentFilterConfig

  """User ID data config list"""
  userIdDataConfigList: [TrainingUserIdDataConfig]
  value: String
}

type TrainingModelJsonKeyValueNode {
  key: String!
  nestedValue: [TrainingModelJsonKeyValueNode]
  stringValue: String
}

type TrainingModelJsonKeyValueNodes {
  jsonKeyValueNodes: [TrainingModelJsonKeyValueNode]!
  jsonKeysCount: Long!
  modelJsonString: String!
}

enum TrainingModelType {
  """API_DEFINITION"""
  API_DEFINITION

  """API_NAMING"""
  API_NAMING

  """SESSION"""
  SESSION

  """VULNERABILITY"""
  VULNERABILITY

  """API_NAMING_DNA"""
  API_NAMING_DNA
}

type TrainingScopeConfig {
  endpointIds: [String]!
  endpointLabels: [String]!
  urlRegexes: [String]!
}

type TrainingUserIdDataConfig {
  """User attribution extracted ID"""
  userAttributionExtractedId: Boolean

  """User attribution extracted ID from JWT"""
  userAttributionExtractedIdFromJwt: Boolean

  """User ID custom attribute"""
  userIdCustomAttribute: String

  """User ID source type"""
  userIdSourceType: TrainingUserIdSourceType!
}

"""User ID source type"""
enum TrainingUserIdSourceType {
  """USER_ATTRIBUTION_EXTRACTED_ID"""
  USER_ATTRIBUTION_EXTRACTED_ID

  """USER_ATTRIBUTION_EXTRACTED_ID_FROM_JWT"""
  USER_ATTRIBUTION_EXTRACTED_ID_FROM_JWT

  """USER_ID_CUSTOM_ATTRIBUTE"""
  USER_ID_CUSTOM_ATTRIBUTE
}

type TransformationFunction {
  """Json extraction transform function"""
  jsonExtract: JsonExtractTransformationFunction
}

enum TypeSpecificField {
  """API_ID"""
  API_ID

  """API_NAME"""
  API_NAME

  """SERVICE_ID"""
  SERVICE_ID

  """BACKEND_API_ID"""
  BACKEND_API_ID

  """BACKEND_ID"""
  BACKEND_ID

  """VULNERABILITY_TYPE"""
  VULNERABILITY_TYPE

  """VULNERABILITY_CATEGORY"""
  VULNERABILITY_CATEGORY

  """DATA_TYPE_ID"""
  DATA_TYPE_ID

  """RISK_DELTA"""
  RISK_DELTA

  """API_INTELLIGENCE_CHANGE_TYPE"""
  API_INTELLIGENCE_CHANGE_TYPE

  """AGENT_ENTITY_ID"""
  AGENT_ENTITY_ID

  """VULNERABILITY_SOURCE"""
  VULNERABILITY_SOURCE

  """DOMAIN_ID"""
  DOMAIN_ID

  """BACKEND_CHANGE_TYPE"""
  BACKEND_CHANGE_TYPE

  """BACKEND_API_CHANGE_TYPE"""
  BACKEND_API_CHANGE_TYPE

  """VULNERABILITY_CHANGE_TYPE"""
  VULNERABILITY_CHANGE_TYPE
}

enum UnaryConditionOperator {
  """OPERATOR_EXISTS"""
  OPERATOR_EXISTS
}

"""
A value of unknown type: A string, int, float, boolean, array, enum or object
"""
scalar Unknown

type UnlinkJiraIssueReferencesResponse {
  success: Boolean!
}

"""Response for updating the status of the fraud incident component"""
type UpdateAllIncidentComponentsStatusResponse {
  """Indicates whether the update was successful or not"""
  success: Boolean!
}

type UpdateApiInsightsResponse {
  success: Boolean!
}

type UpdateAutomaticSecretRedactionResponse {
  success: Boolean!
}

"""Response For Custom vulnerability type update"""
type UpdateCustomVulnerabilityTypeResponse {
  vulnerabilityV2Metadata: VulnerabilityV2Metadata!
}

type UpdatedActorStatus {
  expiration: DateTime
  id: String @deprecated(reason: "Should use `ids` argument")
  ids: [String]
  status: ActorStatusMutationType!
  statusChangeReason: String
}

type UpdatedEntity {
  attribute(key: String, expression: InputAttributeExpression): Unknown
  id: String!
  type: String!
}

"""Response for updating an action on the fraud incident"""
type UpdateFraudIncidentActionResponse {
  """Indicates whether the update was successful or not"""
  success: Boolean!
}

"""Response for updating the status of the fraud incident component"""
type UpdateFraudIncidentComponentStatusResponse {
  """Indicates whether the update was successful or not"""
  success: Boolean!
}

"""Response for updating the status of the fraud incident"""
type UpdateFraudIncidentStatusResponse {
  """Indicates whether the update was successful or not"""
  success: Boolean!
}

type UpdateFullPrivacyModeResponse {
  success: Boolean!
}

type UpdateRedactionStrategyResponse {
  success: Boolean!
}

type UpdateScanPolicyResponse {
  success: Boolean!
}

type UpdateScanStatusResponse {
  success: Boolean!
}

type UpdateThreatActivitiesResponse {
  success: Boolean!
}

type UpdateVulnerabilityStatusResponse {
  success: Boolean!
}

type UpdateVulnerabilityV2StatusResponse {
  success: Boolean!
}

type UrlPathFilterConfig {
  urlPathRegexPatterns: [String]!
}

"""user details"""
type User {
  """email for the user"""
  email: String!

  """authentication type for the user"""
  loginType: LoginType

  """Roles granted to the user"""
  roles: [Role]!
}

type UserAgentFilterConfig {
  botAgentList: [String]!
}

"""User Attribution Configuration change details"""
type UserAttributionConfigurationChange {
  crudAction: CrudAction!
  identity: ActivityLogIdentity!
  oldIdentity: ActivityLogIdentity
  oldUserAttributionRuleType: UserAttributionRuleType
  userAttributionRuleType: UserAttributionRuleType!
}

"""Class to identify user attribution custom token rule"""
type UserAttributionCustomTokenRule {
  """Name of the attribute to be added"""
  attributeName: String!

  """Attribute projection for extracting user attribution attributes"""
  attributeProjection: UserAttributionTokenAttributeProjection

  """Custom projection for extracting user attribution attributes"""
  customProjection: UserAttributionTokenCustomProjection

  """Literal value projection"""
  literalValueProjection: UserAttributionTokenLiteralValueProjection

  """Obfuscation strategy for the extracted user attribute"""
  obfuscationStrategy: UserAttributionTokenObfuscationStrategy

  """UserAttributionToken token conditional predicate"""
  predicate: UserAttributionTokenPredicate

  """Projection type for extracting user attribution attributes"""
  projectionType: UserAttributionTokenProjectionType!

  """Projection relative to root projection"""
  rootRelativeProjection: UserAttributionTokenRootRelativeProjection
}

"""Class to identify user attribution root token rule"""
type UserAttributionRootTokenRule {
  """Attribute projection for extracting user attribution attributes"""
  attributeProjection: UserAttributionTokenAttributeProjection!

  """User attribution token conditional predicate"""
  predicate: UserAttributionTokenPredicate
}

type UserAttributionRule {
  custom: CustomUserAttributionData

  """User attribution rule data in JSON format"""
  customJson: CustomJsonUserAttributionData
  customScope: UserAttributionRuleCustomScope
  customToken: CustomTokenData
  disabled: Boolean
  id: String!
  jwt: JwtUserAttributionData
  name: String!
  rank: Int!
  requestHeader: RequestHeaderUserAttributionRuleData
  responseBody: ResponseBodyUserAttributionData
  scopeType: UserAttributionRuleScopeType
  type: UserAttributionRuleType!
}

type UserAttributionRuleCondition {
  type: UserAttributionRuleConditionType!
  urlMatchRegex: String!
}

enum UserAttributionRuleConditionType {
  """URL_MATCH_REGEX"""
  URL_MATCH_REGEX
}

type UserAttributionRuleCustomScope {
  environmentScopes: [UserAttributionRuleEnvironmentScope]
  urlScopes: [UserAttributionRuleUrlScope]
}

type UserAttributionRuleEnvironmentScope {
  environmentName: String!
}

type UserAttributionRuleResultSet {
  count: Long!
  results: [UserAttributionRule]!
  total: Long!
}

"""User Attribution rules results"""
type UserAttributionRuleResultSetV2 {
  count: Long
  total: Long

  """List of User Attribution rules"""
  results: [UserAttributionRuleV2]!
}

enum UserAttributionRuleScopeType {
  """SYSTEM_WIDE"""
  SYSTEM_WIDE

  """CUSTOM"""
  CUSTOM
}

"""Scope of the User Attribution rule"""
type UserAttributionRuleScopeV2 {
  """List of environment names on which the rule should apply"""
  environmentNames: [String]

  """List of service name regexes on which the rule should apply"""
  serviceNameRegexes: [String]

  """List of service names on which the rule should apply"""
  serviceNames: [String]

  """List of url match regexes on which the rule should apply"""
  urlMatchRegexes: [String]
}

"""To determine if rule is user created or automatically created"""
enum UserAttributionRuleSource {
  """USER source used when user attribution rule is created by user"""
  USER

  """
  AUTOMATIC source used when user attribution rule is automatically created
  """
  AUTOMATIC
}

"""Status of the User Attribution rule"""
type UserAttributionRuleStatus {
  """Flag to disable User Attribution rule"""
  disabled: Boolean!
}

"""Template used to create user attribution rule"""
enum UserAttributionRuleTemplate {
  """Basic template used to create user attribution rule"""
  BASIC

  """JWT template used to create user attribution rule"""
  JWT

  """Custom template used to create user attribution rule"""
  CUSTOM
}

enum UserAttributionRuleType {
  """BASIC_AUTH"""
  BASIC_AUTH

  """JWT"""
  JWT

  """REQUEST_HEADER"""
  REQUEST_HEADER

  """RESPONSE_BODY"""
  RESPONSE_BODY

  """Custom YAML rule"""
  CUSTOM

  """Custom JSON rule"""
  CUSTOM_JSON

  """CUSTOM_TOKEN"""
  CUSTOM_TOKEN
}

type UserAttributionRuleUrlScope {
  urlMatchRegex: String!
}

"""
A rule describing how to extract user attribution attributes from a request/response
"""
type UserAttributionRuleV2 {
  """User Attribution rule ID"""
  id: String!

  """Rule to extract authentication type"""
  authTypeRule: UserAttributionTokenRule

  """List of custom token rules"""
  customTokenRules: [UserAttributionCustomTokenRule]!

  """Description for the User Attribution rule"""
  description: String

  """User Attribution rule name"""
  name: String!

  """Root token rule to extract root token in cases like JWT"""
  rootTokenRule: UserAttributionRootTokenRule

  """Scope of the User Attribution rule"""
  scope: UserAttributionRuleScopeV2

  """To determine if rule is user created or automatically created"""
  source: UserAttributionRuleSource

  """Status of the User Attribution rule"""
  status: UserAttributionRuleStatus!

  """Template used for the User Attribution rule"""
  template: UserAttributionRuleTemplate!

  """Rule to extract user id"""
  userIdRule: UserAttributionTokenRule

  """Rule to extract user role"""
  userRoleRule: UserAttributionTokenRule

  """Rule to extract user scope"""
  userScopeRule: UserAttributionTokenRule
}

"""Attribute projection for extracting user attributes"""
type UserAttributionTokenAttributeProjection {
  """Attribute key location for predicate matching"""
  attributeKeyLocation: UserAttributionTokenKeyLocation!

  """Matching condition for the attribute key"""
  matchCondition: UserAttributionTokenKeyMatchCondition

  """
  List of value projections in order to extract value from user attribute
  """
  valueProjections: [UserAttributionTokenValueProjection]
}

"""Custom projection for extracting user attribution attributes"""
type UserAttributionTokenCustomProjection {
  """Custom json projection for extracting user attribution attributes"""
  customJson: String!
}

"""Json path projection for the attribute value"""
type UserAttributionTokenJsonPathProjection {
  """Json path for getting attribute value"""
  path: String!
}

"""Jwt payload claim projection for the attribute value"""
type UserAttributionTokenJwtPayloadClaimProjection {
  """key for getting attribute value from jwt"""
  claim: String!
}

"""Attribute key location in request for extracting user attributes"""
enum UserAttributionTokenKeyLocation {
  """Attribute key is request header"""
  REQUEST_HEADER

  """Attribute key is request cookie"""
  REQUEST_COOKIE

  """Attribute key is request body"""
  REQUEST_BODY

  """Attribute key is request query parameter"""
  REQUEST_QUERY_PARAMETER

  """Attribute key is response header"""
  RESPONSE_HEADER

  """Attribute key is response cookie"""
  RESPONSE_COOKIE

  """Attribute key is response body"""
  RESPONSE_BODY

  """Attribute key is span attribute"""
  SPAN_ATTRIBUTE
}

"""Matching condition for the attribute key"""
type UserAttributionTokenKeyMatchCondition {
  """Matching operator for the value which needs to be matched"""
  matchOperator: UserAttributionTokenKeyMatchOperator!

  """String value which will be matched against some attribute"""
  stringValue: String
}

"""Matching operator for the key which needs to be matched"""
enum UserAttributionTokenKeyMatchOperator {
  """Attribute key matches exactly with the value"""
  EQUALS

  """Attribute key should start with the value"""
  STARTS_WITH

  """Attribute key should contain the value"""
  CONTAINS

  """Attribute key should match the value regex"""
  MATCHES_REGEX
}

"""
UserAttributionToken token conditional predicate for matching against a request/response
"""
type UserAttributionTokenKeyPredicate {
  """Attribute projection for the key"""
  attributeProjection: UserAttributionTokenAttributeProjection!

  """Matching condition for the value"""
  valueMatchCondition: UserAttributionTokenValueMatchCondition
}

"""Literal value projection"""
type UserAttributionTokenLiteralValueProjection {
  """Literal value to be used as projection"""
  literalValue: String!
}

"""Logical predicate for matching against a request/response"""
type UserAttributionTokenLogicalPredicate {
  """Child predicates for matching against a request/response"""
  children: [UserAttributionTokenPredicate]!

  """Logical operator for children"""
  operator: LogicalOperator!
}

"""Obfuscation strategy for the extracted user attributes"""
enum UserAttributionTokenObfuscationStrategy {
  """HASH"""
  HASH
}

"""
UserAttributionToken token conditional predicate for matching against a request/response
"""
type UserAttributionTokenPredicate {
  """Attribute predicate for matching against a request/response"""
  attributePredicate: UserAttributionTokenKeyPredicate

  """Logical predicate for matching against a request/response"""
  logicalPredicate: UserAttributionTokenLogicalPredicate

  """Predicate type for UserAttributionToken token rule"""
  predicateType: UserAttributionTokenPredicateType!
}

"""UserAttributionToken token type for user attribution rule"""
enum UserAttributionTokenPredicateType {
  """
  Predicate type Attribute for the predicate matching against a request/response
  """
  ATTRIBUTE

  """LOGICAL"""
  LOGICAL
}

"""Projection type for extracting user attribution attributes"""
enum UserAttributionTokenProjectionType {
  """Custom projection for extracting user attribution attributes"""
  CUSTOM

  """Attribute projection for extracting user attribution attributes"""
  ATTRIBUTE

  """Literal value projection"""
  LITERAL_VALUE

  """Projections relative to root projection"""
  ROOT_RELATIVE
}

"""Regex capture group projection for the attribute value"""
type UserAttributionTokenRegexCaptureGroupProjection {
  """Regex capture group for getting attribute value"""
  regexCaptureGroup: String!
}

"""Projections relative to root projection"""
type UserAttributionTokenRootRelativeProjection {
  """
  List of value projections in order to extract value from root projection
  """
  valueProjections: [UserAttributionTokenValueProjection]
}

"""Class to identify user attribute rule"""
type UserAttributionTokenRule {
  """Attribute projection for extracting user attribution attributes"""
  attributeProjection: UserAttributionTokenAttributeProjection

  """Custom projection for extracting user attribution attributes"""
  customProjection: UserAttributionTokenCustomProjection

  """Literal value projection"""
  literalValueProjection: UserAttributionTokenLiteralValueProjection

  """Obfuscation strategy for the extracted user attribute"""
  obfuscationStrategy: UserAttributionTokenObfuscationStrategy

  """UserAttributionToken token conditional predicate"""
  predicate: UserAttributionTokenPredicate

  """Projection type for extracting user attribution attributes"""
  projectionType: UserAttributionTokenProjectionType!

  """Projection relative to root projection"""
  rootRelativeProjection: UserAttributionTokenRootRelativeProjection
}

"""Matching condition for the attribute value"""
type UserAttributionTokenValueMatchCondition {
  """Matching operator for the value which needs to be matched"""
  matchOperator: UserAttributionTokenValueMatchOperator!

  """String value which will be matched against some attribute"""
  stringValue: String
}

"""Matching operator for the value which needs to be matched"""
enum UserAttributionTokenValueMatchOperator {
  """Attribute value matches exactly with the value"""
  EQUALS

  """Attribute value does not matches with the value"""
  NOT_EQUALS

  """Attribute value should start with the value"""
  STARTS_WITH

  """Attribute value should contain the value"""
  CONTAINS

  """Attribute value should match the value regex"""
  MATCHES_REGEX
}

"""Value projection to extract value from user attribute"""
type UserAttributionTokenValueProjection {
  """Json path projection for the attribute value"""
  jsonPathProjection: UserAttributionTokenJsonPathProjection

  """Jwt payload claim projection for the attribute value"""
  jwtPayloadClaimProjection: UserAttributionTokenJwtPayloadClaimProjection

  """Regex capture group projection for the attribute value"""
  regexCaptureGroupProjection: UserAttributionTokenRegexCaptureGroupProjection

  """Projection type for the attribute value"""
  valueProjectionType: UserAttributionTokenValueProjectionType!
}

"""Projection type for the attribute value"""
enum UserAttributionTokenValueProjectionType {
  """Projection type regex capture group for the attribute value projection"""
  REGEX_CAPTURE_GROUP

  """Projection type json path for the attribute value projection"""
  JSON_PATH

  """Projection type jwt pay load for the attribute value projection"""
  JWT_PAYLOAD_CLAIM

  """Projection type base 64 for the attribute value projection"""
  BASE64
}

"""User change details"""
type UserChange {
  affectedUserEmail: String!
  crudAction: CrudAction!
}

type UserChangeEventCondition {
  userChangeTypes: [UserChangeType]!
}

enum UserChangeType {
  """USER_CHANGE_TYPE_CREATE"""
  USER_CHANGE_TYPE_CREATE

  """USER_CHANGE_TYPE_UPDATE"""
  USER_CHANGE_TYPE_UPDATE

  """USER_CHANGE_TYPE_DELETE"""
  USER_CHANGE_TYPE_DELETE

  """USER_CHANGE_TYPE_INVITE"""
  USER_CHANGE_TYPE_INVITE

  """USER_CHANGE_TYPE_ACCEPT_INVITE"""
  USER_CHANGE_TYPE_ACCEPT_INVITE

  """USER_CHANGE_TYPE_LOGIN"""
  USER_CHANGE_TYPE_LOGIN

  """USER_CHANGE_TYPE_LOGOUT"""
  USER_CHANGE_TYPE_LOGOUT
}

type UserInfo {
  customerInfo: CustomerInfo
  email: String
  familyName: String
  givenName: String
  locale: String
  name: String
  nickname: String

  """List of alternate tenants available to the current user"""
  otherTenants: [TenantUserContext]!
  picture: String
  roles: [Role]
}

"""User login method (SAML/Google/Local)."""
type UserLoginEvent {
  loginMethod: LoginType
}

type UserProvisionInfo {
  domains: [String]!
  isDomainBasedProvisioningEnabled: Boolean!
  isSsoBasedProvisioningEnabled: Boolean!
  samlConnectionIds: [String]
}

type UserProvisionInfoV2 {
  googleAuth: GoogleAuth!
  samlAuth: SamlAuth!
  traceableAuth: TraceableAuth!
}

"""Reputation of the user"""
type UserReputation {
  """Attributes associated with the Fraud module"""
  fraud: FraudAttributes!

  """Attributes associated with the Threat module"""
  threat: ThreatAttributes!
}

type UserResponse {
  info: UserInfo
}

type UserResultSet {
  count: Long
  total: Long
  results: [User]!
}

"""User role action"""
enum UserRoleAction {
  """PAUSE"""
  PAUSE

  """RESUME"""
  RESUME
}

"""User role action configuration"""
type UserRoleActionConfig {
  """Pause entity learn action configuration"""
  pauseEntityLearnAction: PauseEntityLearnActionConfig

  """User role action"""
  userRoleAction: UserRoleAction!
}

"""User scope action"""
enum UserScopeAction {
  """PAUSE"""
  PAUSE

  """RESUME"""
  RESUME
}

"""User scope action configuration"""
type UserScopeActionConfig {
  """Pause entity learn action configuration"""
  pauseEntityLearnAction: PauseEntityLearnActionConfig

  """User scope action"""
  userScopeAction: UserScopeAction!
}

"""Threat status of the user"""
enum UserThreatStatus {
  """NORMAL"""
  NORMAL

  """ACTIVE"""
  ACTIVE

  """DENIED"""
  DENIED

  """ALLOWED"""
  ALLOWED

  """UNKNOWN"""
  UNKNOWN
}

"""
Threshold config which specifies unique values allowed over the given time range
"""
type ValueBasedThresholdConfig {
  """Time range during which unique values are calculated"""
  duration: Duration!

  """
  Type of sensitive params evaluation, only applicable for sensitive params value type
  """
  sensitiveParamsEvaluationType: SensitiveParamsEvaluationType

  """Unique values allowed for specified time range"""
  uniqueValuesAllowed: Long!

  """Type of value based threshold config"""
  valueType: ValueBasedThresholdConfigType!
}

"""Type of value based threshold config"""
enum ValueBasedThresholdConfigType {
  """REQUEST_BODY"""
  REQUEST_BODY

  """SENSITIVE_PARAMS"""
  SENSITIVE_PARAMS

  """PATH_PARAMS"""
  PATH_PARAMS
}

enum ValueConditionType {
  """STRING_CONDITION"""
  STRING_CONDITION

  """UNARY_CONDITION"""
  UNARY_CONDITION
}

type ValueTypeDistributionResultSet {
  count: Long!
  results: [CardValueTypeDistribution]!
  total: Long!
}

enum ViolationSeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

type VolumetricAnomalyDetectionConfig {
  keyValuePairs: [AnomalyDetectionConfigKeyValuePair]
  name: VolumetricAnomalyDetectionConfigName!
  ruleId: String
}

enum VolumetricAnomalyDetectionConfigName {
  """API_CALL_SPIKE_ANOMALY_CONFIG"""
  API_CALL_SPIKE_ANOMALY_CONFIG
}

type VolumetricTrainingConfig {
  keyValuePairs: [TrainingConfigKeyValuePair]
  name: VolumetricTrainingConfigName!
}

enum VolumetricTrainingConfigName {
  """API_CALL_SPIKE_ANOMALY_CONFIG"""
  API_CALL_SPIKE_ANOMALY_CONFIG
}

type VulnerabilitiesV2Statistics {
  vulnerabilitiesCountBySelections: [StatsKeyCount]!
}

type Vulnerability {
  cve: String
  description: String
  detectionTimestamp: DateTime
  entity(type: String!): Entity
  id: String!
  mitigation: String
  name: String
  severity: String
  status: String
}

enum VulnerabilityAggregationField {
  """API_ID"""
  API_ID

  """NAME"""
  NAME

  """TYPE"""
  TYPE

  """SEVERITY"""
  SEVERITY

  """STATUS"""
  STATUS

  """SERVICE_ID"""
  SERVICE_ID
}

type VulnerabilityAutoResolutionConfig {
  disabled: Boolean
}

"""Vulnerability burn down chart response"""
type VulnerabilityBurnDownChartResponse {
  """
  Number of vulnerabilities having the specified status at the end of the time interval
  """
  count: Long!

  """
  The starting timestamp of the interval for which the count is mentioned per status
  """
  intervalStartTimestamp: DateTime!

  """
  The latest status of the counted issues at the end of the time interval
  """
  status: VulnerabilityV3Status!
}

"""Vulnerability burn down chart result set"""
type VulnerabilityBurnDownChartResultSet {
  count: Long!
  total: Long!

  """List of requested vulnerability counts"""
  results: [VulnerabilityBurnDownChartResponse]!
}

"""Vulnerability change details"""
type VulnerabilityChange {
  apiIdentity: ActivityLogIdentity!
  category: String!
  identity: ActivityLogIdentity!
  severity: VulnerabilityV2Severity!
  sourceTypes: [VulnerabilitySourceType]!
  status: VulnerabilityStatus!
  statusChange: VulnerabilityStatusChange
  type: VulnerabilityChangeType
}

enum VulnerabilityChangeType {
  """DISCOVERY"""
  DISCOVERY

  """STATUS_CHANGE"""
  STATUS_CHANGE
}

enum VulnerabilityDetectionType {
  """ACTIVE"""
  ACTIVE

  """PASSIVE"""
  PASSIVE

  """UNDEFINED"""
  UNDEFINED
}

enum VulnerabilityField {
  """NAME"""
  NAME

  """TYPE"""
  TYPE

  """SEVERITY"""
  SEVERITY

  """ASSET"""
  ASSET

  """API"""
  API

  """ASSET_ID"""
  ASSET_ID

  """API_ID"""
  API_ID

  """STATUS"""
  STATUS

  """DETECTED"""
  DETECTED

  """ASSET_TYPE"""
  ASSET_TYPE

  """TRAFFIC_TYPE_IS_EXTERNAL"""
  TRAFFIC_TYPE_IS_EXTERNAL

  """SERVICE_ID"""
  SERVICE_ID

  """ENVIRONMENT"""
  ENVIRONMENT

  """STATUS_UPDATE_TIMESTAMP"""
  STATUS_UPDATE_TIMESTAMP

  """CVE"""
  CVE

  """CWE"""
  CWE

  """CVSS"""
  CVSS

  """CVSS_SCORE"""
  CVSS_SCORE

  """API_DISCOVERY_STATE"""
  API_DISCOVERY_STATE

  """IS_LEARNT"""
  IS_LEARNT
}

enum VulnerabilityFilterField {
  """SCAN_ID"""
  SCAN_ID

  """VULNERABILITY_ID"""
  VULNERABILITY_ID

  """VULNERABILITY_CATEGORY"""
  VULNERABILITY_CATEGORY

  """VULNERABILITY_SUB_CATEGORY"""
  VULNERABILITY_SUB_CATEGORY

  """VULNERABILITY_SEVERITY"""
  VULNERABILITY_SEVERITY

  """VULNERABILITY_STATUS"""
  VULNERABILITY_STATUS

  """SERVICE_ID"""
  SERVICE_ID

  """ENVIRONMENT_ID"""
  ENVIRONMENT_ID
}

enum VulnerabilityGroupByField {
  """NAME"""
  NAME

  """TYPE"""
  TYPE

  """SEVERITY"""
  SEVERITY

  """STATUS"""
  STATUS

  """SERVICE_ID"""
  SERVICE_ID

  """ENTITY_ID"""
  ENTITY_ID

  """CVSS_SCORE"""
  CVSS_SCORE
}

type VulnerabilityInsight {
  aggregation(key: VulnerabilityAggregationField!, aggregation: VulnerabilityMetricAggregationType!): VulnerabilityValue!
  entity(type: String!): Entity
  selection(key: VulnerabilitySelectionField!): VulnerabilityValue
}

type VulnerabilityInsightResultSet {
  count: Long!
  results: [VulnerabilityInsight]!
  total: Long!
}

enum VulnerabilityMetadataFilterField {
  """VULNERABILITY_TYPE"""
  VULNERABILITY_TYPE

  """VULNERABILITY_SEVERITY"""
  VULNERABILITY_SEVERITY

  """VULNERABILITY_CATEGORY"""
  VULNERABILITY_CATEGORY

  """VULNERABILITY_LABEL"""
  VULNERABILITY_LABEL

  """SOURCE_PLUGIN"""
  SOURCE_PLUGIN

  """SOURCE_PLUGIN_TYPE"""
  SOURCE_PLUGIN_TYPE

  """SOURCE_PLUGIN_SAFETY_TYPE"""
  SOURCE_PLUGIN_SAFETY_TYPE

  """CUSTOM_LABEL"""
  CUSTOM_LABEL

  """VULNERABILITY_TYPE_DISPLAY_NAME"""
  VULNERABILITY_TYPE_DISPLAY_NAME

  """VULNERABILITY_CATEGORY_DISPLAY_NAME"""
  VULNERABILITY_CATEGORY_DISPLAY_NAME
}

type VulnerabilityMetadataResultSet {
  count: Long!
  total: Long!
  results: [VulnerabilityV2Metadata]!
}

enum VulnerabilityMetricAggregationType {
  """AVG"""
  AVG

  """SUM"""
  SUM

  """MIN"""
  MIN

  """MAX"""
  MAX

  """DISTINCT"""
  DISTINCT

  """COUNT"""
  COUNT

  """DISTINCTCOUNT"""
  DISTINCTCOUNT
}

type VulnerabilityResultSet {
  count: Long!
  results: [Vulnerability]!
  total: Long!
}

enum VulnerabilitySelectionField {
  """ID"""
  ID

  """NAME"""
  NAME

  """TYPE"""
  TYPE

  """SEVERITY"""
  SEVERITY

  """STATUS"""
  STATUS

  """DETECTION_TIMESTAMP"""
  DETECTION_TIMESTAMP

  """CVE"""
  CVE

  """CVSS_SCORE"""
  CVSS_SCORE
}

"""Vulnerability severity"""
enum VulnerabilitySeverity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

enum VulnerabilitySortField {
  """SEVERITY"""
  SEVERITY
}

"""Vulnerability source type"""
enum VulnerabilitySourceType {
  """SONAR"""
  SONAR

  """COMPLIANCE"""
  COMPLIANCE

  """RUNTIME_PROTECTION"""
  RUNTIME_PROTECTION

  """ACTIVE_SECURITY_TESTING"""
  ACTIVE_SECURITY_TESTING

  """GATEWAY_MISCONFIGURATIONS"""
  GATEWAY_MISCONFIGURATIONS
}

"""Specifies state of vulnerability"""
enum VulnerabilityState {
  """RESOLVED"""
  RESOLVED

  """UNRESOLVED"""
  UNRESOLVED
}

enum VulnerabilityStatus {
  """OPEN"""
  OPEN

  """UNDER_REVIEW"""
  UNDER_REVIEW

  """RESOLVED"""
  RESOLVED

  """FIXED"""
  FIXED

  """IGNORED"""
  IGNORED

  """NOT_A_VULNERABILITY"""
  NOT_A_VULNERABILITY

  """ACCEPTED_RISK"""
  ACCEPTED_RISK

  """REOPENED"""
  REOPENED

  """UNSPECIFIED"""
  UNSPECIFIED
}

"""User change details"""
type VulnerabilityStatusChange {
  newStatus: VulnerabilityStatus!
  oldStatus: VulnerabilityStatus!
}

type VulnerabilityStatusChangeConfig {
  vulnerabilityStatusChangeCriteria: VulnerabilityStatusChangeCriteria!
  id: String!
}

"""Vulnerability status change config result set"""
type VulnerabilityStatusChangeConfigResultSet {
  """Count of vulnerability status change configs"""
  count: Long!

  """Total number of vulnerability status change configs"""
  total: Long!

  """List of vulnerability status change configs"""
  results: [VulnerabilityStatusChangeConfig]!
}

"""Vulnerability status change criteria"""
type VulnerabilityStatusChangeCriteria {
  """Security testing vulnerability auto resolution criteria"""
  securityTestingVulnerabilityAutoResolutionCriteria: SecurityTestingVulnerabilityAutoResolutionCriteria!
}

type VulnerabilityStatusCount {
  count: Long!
  vulnerabilityStatus: VulnerabilityStatus!
}

enum VulnerabilitySummarizeRequestContextType {
  """RUNTIME_PROTECTION"""
  RUNTIME_PROTECTION

  """SECURITY_TESTING"""
  SECURITY_TESTING
}

type VulnerabilityTrainingConfig {
  autoResolutionConfig: VulnerabilityAutoResolutionConfig
  keyValuePairs: [TrainingConfigKeyValuePair]
  name: VulnerabilityTrainingConfigName!
}

enum VulnerabilityTrainingConfigName {
  """PARAM_CONTAINS_SENSITIVE_DATA"""
  PARAM_CONTAINS_SENSITIVE_DATA

  """LACK_OF_ENCRYPTION"""
  LACK_OF_ENCRYPTION

  """API_PARAM_CONTAINS_URL"""
  API_PARAM_CONTAINS_URL

  """CONTENT_TYPE_OPTIONS_SECURITY_HEADER"""
  CONTENT_TYPE_OPTIONS_SECURITY_HEADER

  """HSTS_SECURITY_HEADER"""
  HSTS_SECURITY_HEADER

  """JAVA_SERIALIZED_OBJECT"""
  JAVA_SERIALIZED_OBJECT

  """SERVICE_USES_BASIC_AUTH"""
  SERVICE_USES_BASIC_AUTH

  """ENUMERABLE_PARAM"""
  ENUMERABLE_PARAM

  """CSP_SECURITY_HEADER"""
  CSP_SECURITY_HEADER

  """DIRECTORY_LISTING"""
  DIRECTORY_LISTING

  """DEPRECATED_API_ROUTE"""
  DEPRECATED_API_ROUTE

  """MULTIPLE_API_VERSIONS"""
  MULTIPLE_API_VERSIONS

  """EXCESSIVE_DATA_EXPOSURE"""
  EXCESSIVE_DATA_EXPOSURE

  """OPEN_REDIRECT"""
  OPEN_REDIRECT

  """MASS_PARAMETER_ASSIGNMENT"""
  MASS_PARAMETER_ASSIGNMENT

  """SQL_INJECTION_ERROR_BASED"""
  SQL_INJECTION_ERROR_BASED

  """JWT_EXPIRY_ISSUE"""
  JWT_EXPIRY_ISSUE

  """JWT_ALGO_WEAKNESS"""
  JWT_ALGO_WEAKNESS

  """MISSING_GATEWAY_POLICIES"""
  MISSING_GATEWAY_POLICIES
}

type VulnerabilityV2 {
  entity(type: String!): Entity
  id: String!
  affectedEntityId: String!
  affectedSpanPath: String!

  """List of Api Ids on which vulnerability was found"""
  apiIds: [String]
  closedTimestamp: DateTime
  creationTimestamp: DateTime!
  cvssScore: Float!
  cvssVectorString: String!
  environmentId: String!
  metadata: VulnerabilityV2Metadata!
  serviceId: String!
  status: VulnerabilityV2Status!
  testReferences: [TestReference]!
  title: String!
  vulnerabilityV2Severity: VulnerabilityV2Severity!
  vulnerableEntityType: VulnerableEntityType!
}

type VulnerabilityV2Metadata {
  categoryDisplayName: String!
  categoryName: String!
  customTags: CustomTags

  """
  If custom vulnerability type, this contains details related to the custom vulnerability type
  """
  customVulnerabilityTypeDetails: CustomVulnerabilityTypeDetails
  cvssScore: Float
  cvssVectorString: String
  description: String
  estimatedBountyValue: Long
  estimatedFixTime: Duration
  metadataId: String!
  impact: String
  integrationCorrelations: IntegrationCorrelations @deprecated(reason: "Deprecated")
  mitigation: String
  pluginDetails: String @deprecated(reason: "Deprecated")
  references: String
  sourcePlugins: [String]
  subCategoryDisplayName: String!
  subCategoryName: String!
  tags: [KeyValue]
  vulnerabilityDetectionType: VulnerabilityDetectionType @deprecated(reason: "Deprecated")
  vulnerabilityV2Severity: VulnerabilityV2Severity
}

type VulnerabilityV2ResultSet {
  count: Long!
  total: Long!
  results: [VulnerabilityV2]!
}

enum VulnerabilityV2Severity {
  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

enum VulnerabilityV2StatsGroupByField {
  """SEVERITY"""
  SEVERITY

  """STATUS"""
  STATUS
}

enum VulnerabilityV2Status {
  """OPEN"""
  OPEN

  """ACCEPTED_RISK"""
  ACCEPTED_RISK

  """NOT_A_VULNERABILITY"""
  NOT_A_VULNERABILITY

  """UNDER_REVIEW"""
  UNDER_REVIEW

  """FIXED"""
  FIXED

  """REOPENED"""
  REOPENED
}

type VulnerabilityV3 {
  """vulnerability aggregation specification"""
  aggregation(key: VulnerabilityV3Field!, aggregation: VulnerabilityV3AggregationType!): VulnerabilityV3Value
  entity(type: String!): Entity

  """vulnerability field selection specification"""
  selection(key: VulnerabilityV3Field!): VulnerabilityV3Value
}

"""Vulnerability aggregation type"""
enum VulnerabilityV3AggregationType {
  """AVG"""
  AVG

  """SUM"""
  SUM

  """MIN"""
  MIN

  """MAX"""
  MAX

  """DISTINCT"""
  DISTINCT

  """COUNT"""
  COUNT

  """DISTINCTCOUNT"""
  DISTINCTCOUNT

  """CUMULATIVE_SUM_DISTINCT_COUNT"""
  CUMULATIVE_SUM_DISTINCT_COUNT

  """LAST"""
  LAST
}

"""Vulnerability fields"""
enum VulnerabilityV3Field {
  """SCAN_ID"""
  SCAN_ID

  """SUITE_ID"""
  SUITE_ID

  """SUITE_TYPE"""
  SUITE_TYPE

  """VULNERABILITY_ID"""
  VULNERABILITY_ID

  """VULNERABILITY_CATEGORY"""
  VULNERABILITY_CATEGORY

  """VULNERABILITY_SUB_CATEGORY"""
  VULNERABILITY_SUB_CATEGORY

  """VULNERABILITY_TITLE"""
  VULNERABILITY_TITLE

  """OWASP"""
  OWASP

  """OWASP_API_TOP10"""
  OWASP_API_TOP10

  """SEVERITY"""
  SEVERITY

  """STATUS"""
  STATUS

  """CVSS_SCORE"""
  CVSS_SCORE

  """CVE"""
  CVE

  """CWE"""
  CWE

  """ENTITY_ID"""
  ENTITY_ID

  """ENTITY_NAME"""
  ENTITY_NAME

  """AFFECTED_ENTITY_TYPE"""
  AFFECTED_ENTITY_TYPE

  """SERVICE_ID"""
  SERVICE_ID

  """ENVIRONMENT_ID"""
  ENVIRONMENT_ID

  """DESCRIPTION"""
  DESCRIPTION

  """MITIGATION"""
  MITIGATION

  """IMPACT"""
  IMPACT

  """REFERENCES"""
  REFERENCES

  """SOURCES"""
  SOURCES

  """DISPLAY_NAME"""
  DISPLAY_NAME

  """CREATED_TIMESTAMP_MILLIS"""
  CREATED_TIMESTAMP_MILLIS

  """CLOSED_TIMESTAMP_MILLIS"""
  CLOSED_TIMESTAMP_MILLIS

  """LAST_SEEN_TIMESTAMP_MILLIS"""
  LAST_SEEN_TIMESTAMP_MILLIS

  """AFFECTED_SPAN_PATH"""
  AFFECTED_SPAN_PATH

  """TEST_IDS"""
  TEST_IDS

  """API_ID"""
  API_ID

  """API_IS_LEARNT"""
  API_IS_LEARNT

  """API_DISCOVERY_STATE"""
  API_DISCOVERY_STATE

  """VULNERABILITY_CATEGORY_DISPLAY_NAME"""
  VULNERABILITY_CATEGORY_DISPLAY_NAME

  """SECURITY_TESTING_DETECTION_TYPE"""
  SECURITY_TESTING_DETECTION_TYPE

  """ATTACK_METHODOLOGY"""
  ATTACK_METHODOLOGY

  """RUNTIME_VULNERABILITY_EVIDENCE_FIELD_SPAN_ID"""
  RUNTIME_VULNERABILITY_EVIDENCE_FIELD_SPAN_ID

  """RUNTIME_VULNERABILITY_EVIDENCE_FIELD_TIMESTAMP"""
  RUNTIME_VULNERABILITY_EVIDENCE_FIELD_TIMESTAMP

  """VULNERABILITY_STATUS_CHANGED_TIMESTAMP_MILLIS"""
  VULNERABILITY_STATUS_CHANGED_TIMESTAMP_MILLIS

  """VULNERABILITY_STATUS_CHANGE_SOURCE_USER_NAMES"""
  VULNERABILITY_STATUS_CHANGE_SOURCE_USER_NAMES

  """VULNERABILITY_STATUS_CHANGE_SOURCE_USER_EMAILS"""
  VULNERABILITY_STATUS_CHANGE_SOURCE_USER_EMAILS

  """VULNERABILITY_CHANGE_LOGS_STATUS"""
  VULNERABILITY_CHANGE_LOGS_STATUS

  """VULNERABILITY_CHANGE_LOG_DAY"""
  VULNERABILITY_CHANGE_LOG_DAY

  """LACK_OF_ENCRYPTION_EVIDENCE_FIELD_SPAN_ID"""
  LACK_OF_ENCRYPTION_EVIDENCE_FIELD_SPAN_ID

  """LACK_OF_ENCRYPTION_EVIDENCE_FIELD_TIMESTAMP"""
  LACK_OF_ENCRYPTION_EVIDENCE_FIELD_TIMESTAMP

  """LACK_OF_ENCRYPTION_EVIDENCE_FIELD_PROTOCOL"""
  LACK_OF_ENCRYPTION_EVIDENCE_FIELD_PROTOCOL

  """LACK_OF_ENCRYPTION_EVIDENCE_FIELD_URL"""
  LACK_OF_ENCRYPTION_EVIDENCE_FIELD_URL

  """LACK_OF_ENCRYPTION_EVIDENCE_FIELD_RESPONSE_STATUS_CODE"""
  LACK_OF_ENCRYPTION_EVIDENCE_FIELD_RESPONSE_STATUS_CODE

  """API_PARAM_CONTAINS_URL_EVIDENCE_FIELD_SPAN_ID"""
  API_PARAM_CONTAINS_URL_EVIDENCE_FIELD_SPAN_ID

  """API_PARAM_CONTAINS_URL_EVIDENCE_FIELD_TIMESTAMP"""
  API_PARAM_CONTAINS_URL_EVIDENCE_FIELD_TIMESTAMP

  """API_PARAM_CONTAINS_URL_EVIDENCE_FIELD_PARAMETER_FQN"""
  API_PARAM_CONTAINS_URL_EVIDENCE_FIELD_PARAMETER_FQN

  """QUERY_PARAM_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_SPAN_ID"""
  QUERY_PARAM_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_SPAN_ID

  """QUERY_PARAM_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_TIMESTAMP"""
  QUERY_PARAM_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_TIMESTAMP

  """QUERY_PARAM_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_PARAMETER_FQN"""
  QUERY_PARAM_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_PARAMETER_FQN

  """QUERY_PARAM_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_DATA_TYPE_ID"""
  QUERY_PARAM_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_DATA_TYPE_ID

  """QUERY_PARAM_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_SENSITIVITY"""
  QUERY_PARAM_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_SENSITIVITY

  """BASIC_AUTHENTICATION_USED_EVIDENCE_FIELD_SPAN_ID"""
  BASIC_AUTHENTICATION_USED_EVIDENCE_FIELD_SPAN_ID

  """BASIC_AUTHENTICATION_USED_EVIDENCE_FIELD_TIMESTAMP"""
  BASIC_AUTHENTICATION_USED_EVIDENCE_FIELD_TIMESTAMP

  """BASIC_AUTHENTICATION_USED_EVIDENCE_FIELD_URL"""
  BASIC_AUTHENTICATION_USED_EVIDENCE_FIELD_URL

  """BASIC_AUTHENTICATION_USED_EVIDENCE_FIELD_RESPONSE_STATUS_CODE"""
  BASIC_AUTHENTICATION_USED_EVIDENCE_FIELD_RESPONSE_STATUS_CODE

  """STRICT_TRANSPORT_SECURITY_HEADER_NOT_SET_EVIDENCE_FIELD_SPAN_ID"""
  STRICT_TRANSPORT_SECURITY_HEADER_NOT_SET_EVIDENCE_FIELD_SPAN_ID

  """STRICT_TRANSPORT_SECURITY_HEADER_NOT_SET_EVIDENCE_FIELD_TIMESTAMP"""
  STRICT_TRANSPORT_SECURITY_HEADER_NOT_SET_EVIDENCE_FIELD_TIMESTAMP

  """STRICT_TRANSPORT_SECURITY_HEADER_NOT_SET_EVIDENCE_FIELD_URL"""
  STRICT_TRANSPORT_SECURITY_HEADER_NOT_SET_EVIDENCE_FIELD_URL

  """
  STRICT_TRANSPORT_SECURITY_HEADER_NOT_SET_EVIDENCE_FIELD_RESPONSE_STATUS_CODE
  """
  STRICT_TRANSPORT_SECURITY_HEADER_NOT_SET_EVIDENCE_FIELD_RESPONSE_STATUS_CODE

  """MISSING_CSP_SECURITY_HEADER_EVIDENCE_FIELD_SPAN_ID"""
  MISSING_CSP_SECURITY_HEADER_EVIDENCE_FIELD_SPAN_ID

  """MISSING_CSP_SECURITY_HEADER_EVIDENCE_FIELD_TIMESTAMP"""
  MISSING_CSP_SECURITY_HEADER_EVIDENCE_FIELD_TIMESTAMP

  """MISSING_CSP_SECURITY_HEADER_EVIDENCE_FIELD_URL"""
  MISSING_CSP_SECURITY_HEADER_EVIDENCE_FIELD_URL

  """MISSING_CSP_SECURITY_HEADER_EVIDENCE_FIELD_RESPONSE_STATUS_CODE"""
  MISSING_CSP_SECURITY_HEADER_EVIDENCE_FIELD_RESPONSE_STATUS_CODE

  """MISSING_NO_SNIFF_IN_CONTENT_TYPE_OPTIONS_EVIDENCE_FIELD_SPAN_ID"""
  MISSING_NO_SNIFF_IN_CONTENT_TYPE_OPTIONS_EVIDENCE_FIELD_SPAN_ID

  """MISSING_NO_SNIFF_IN_CONTENT_TYPE_OPTIONS_EVIDENCE_FIELD_TIMESTAMP"""
  MISSING_NO_SNIFF_IN_CONTENT_TYPE_OPTIONS_EVIDENCE_FIELD_TIMESTAMP

  """MISSING_NO_SNIFF_IN_CONTENT_TYPE_OPTIONS_EVIDENCE_FIELD_URL"""
  MISSING_NO_SNIFF_IN_CONTENT_TYPE_OPTIONS_EVIDENCE_FIELD_URL

  """
  MISSING_NO_SNIFF_IN_CONTENT_TYPE_OPTIONS_EVIDENCE_FIELD_RESPONSE_STATUS_CODE
  """
  MISSING_NO_SNIFF_IN_CONTENT_TYPE_OPTIONS_EVIDENCE_FIELD_RESPONSE_STATUS_CODE

  """PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_SPAN_ID"""
  PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_SPAN_ID

  """PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_TIMESTAMP"""
  PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_TIMESTAMP

  """PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_PARAMETER_FQN"""
  PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_PARAMETER_FQN

  """PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_DATA_TYPE_ID"""
  PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_DATA_TYPE_ID

  """PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_SENSITIVITY"""
  PERSISTENT_COOKIE_CONTAINS_SENSITIVE_DATA_EVIDENCE_FIELD_SENSITIVITY

  """DIRECTORY_LISTING_EVIDENCE_FIELD_SPAN_ID"""
  DIRECTORY_LISTING_EVIDENCE_FIELD_SPAN_ID

  """DIRECTORY_LISTING_EVIDENCE_FIELD_TIMESTAMP"""
  DIRECTORY_LISTING_EVIDENCE_FIELD_TIMESTAMP

  """DIRECTORY_LISTING_EVIDENCE_FIELD_URL"""
  DIRECTORY_LISTING_EVIDENCE_FIELD_URL

  """DIRECTORY_LISTING_EVIDENCE_FIELD_RESPONSE_STATUS_CODE"""
  DIRECTORY_LISTING_EVIDENCE_FIELD_RESPONSE_STATUS_CODE

  """JAVA_SERIALIZATION_OBJECT_EVIDENCE_FIELD_SPAN_ID"""
  JAVA_SERIALIZATION_OBJECT_EVIDENCE_FIELD_SPAN_ID

  """JAVA_SERIALIZATION_OBJECT_EVIDENCE_FIELD_TIMESTAMP"""
  JAVA_SERIALIZATION_OBJECT_EVIDENCE_FIELD_TIMESTAMP

  """JAVA_SERIALIZATION_OBJECT_EVIDENCE_FIELD_URL"""
  JAVA_SERIALIZATION_OBJECT_EVIDENCE_FIELD_URL

  """JAVA_SERIALIZATION_OBJECT_EVIDENCE_FIELD_RESPONSE_STATUS_CODE"""
  JAVA_SERIALIZATION_OBJECT_EVIDENCE_FIELD_RESPONSE_STATUS_CODE

  """MULTIPLE_VERSIONS_OF_API_EVIDENCE_FIELD_SPAN_ID"""
  MULTIPLE_VERSIONS_OF_API_EVIDENCE_FIELD_SPAN_ID

  """MULTIPLE_VERSIONS_OF_API_EVIDENCE_FIELD_TIMESTAMP"""
  MULTIPLE_VERSIONS_OF_API_EVIDENCE_FIELD_TIMESTAMP

  """MULTIPLE_VERSIONS_OF_API_EVIDENCE_FIELD_ENDPOINT_ID"""
  MULTIPLE_VERSIONS_OF_API_EVIDENCE_FIELD_ENDPOINT_ID

  """MULTIPLE_VERSIONS_OF_API_EVIDENCE_FIELD_ENDPOINT_NAME"""
  MULTIPLE_VERSIONS_OF_API_EVIDENCE_FIELD_ENDPOINT_NAME

  """EXCESSIVE_DATA_EXPOSURE_EVIDENCE_FIELD_SPAN_ID"""
  EXCESSIVE_DATA_EXPOSURE_EVIDENCE_FIELD_SPAN_ID

  """EXCESSIVE_DATA_EXPOSURE_EVIDENCE_FIELD_TIMESTAMP"""
  EXCESSIVE_DATA_EXPOSURE_EVIDENCE_FIELD_TIMESTAMP

  """EXCESSIVE_DATA_EXPOSURE_EVIDENCE_FIELD_PARAMETER_FQN"""
  EXCESSIVE_DATA_EXPOSURE_EVIDENCE_FIELD_PARAMETER_FQN

  """EXCESSIVE_DATA_EXPOSURE_EVIDENCE_FIELD_DATA_TYPE_ID"""
  EXCESSIVE_DATA_EXPOSURE_EVIDENCE_FIELD_DATA_TYPE_ID

  """EXCESSIVE_DATA_EXPOSURE_EVIDENCE_FIELD_SENSITIVITY"""
  EXCESSIVE_DATA_EXPOSURE_EVIDENCE_FIELD_SENSITIVITY

  """MASS_PARAMETER_ASSIGNMENT_EVIDENCE_FIELD_SPAN_ID"""
  MASS_PARAMETER_ASSIGNMENT_EVIDENCE_FIELD_SPAN_ID

  """MASS_PARAMETER_ASSIGNMENT_EVIDENCE_FIELD_TIMESTAMP"""
  MASS_PARAMETER_ASSIGNMENT_EVIDENCE_FIELD_TIMESTAMP

  """MASS_PARAMETER_ASSIGNMENT_EVIDENCE_FIELD_PARAMETER_FQN"""
  MASS_PARAMETER_ASSIGNMENT_EVIDENCE_FIELD_PARAMETER_FQN

  """OPEN_REDIRECT_EVIDENCE_FIELD_SPAN_ID"""
  OPEN_REDIRECT_EVIDENCE_FIELD_SPAN_ID

  """OPEN_REDIRECT_EVIDENCE_FIELD_TIMESTAMP"""
  OPEN_REDIRECT_EVIDENCE_FIELD_TIMESTAMP

  """OPEN_REDIRECT_EVIDENCE_FIELD_PARAMETER_FQN"""
  OPEN_REDIRECT_EVIDENCE_FIELD_PARAMETER_FQN

  """SQL_INJECTION_EVIDENCE_FIELD_SPAN_ID"""
  SQL_INJECTION_EVIDENCE_FIELD_SPAN_ID

  """SQL_INJECTION_EVIDENCE_FIELD_TIMESTAMP"""
  SQL_INJECTION_EVIDENCE_FIELD_TIMESTAMP

  """SQL_INJECTION_EVIDENCE_FIELD_URL"""
  SQL_INJECTION_EVIDENCE_FIELD_URL

  """SQL_INJECTION_EVIDENCE_FIELD_RESPONSE_STATUS_CODE"""
  SQL_INJECTION_EVIDENCE_FIELD_RESPONSE_STATUS_CODE

  """JWT_TOKEN_EXPIRY_EVIDENCE_FIELD_SPAN_ID"""
  JWT_TOKEN_EXPIRY_EVIDENCE_FIELD_SPAN_ID

  """JWT_TOKEN_EXPIRY_EVIDENCE_FIELD_TIMESTAMP"""
  JWT_TOKEN_EXPIRY_EVIDENCE_FIELD_TIMESTAMP

  """JWT_TOKEN_EXPIRY_EVIDENCE_FIELD_URL"""
  JWT_TOKEN_EXPIRY_EVIDENCE_FIELD_URL

  """JWT_TOKEN_EXPIRY_EVIDENCE_FIELD_RESPONSE_STATUS_CODE"""
  JWT_TOKEN_EXPIRY_EVIDENCE_FIELD_RESPONSE_STATUS_CODE

  """JWT_ALGO_WEAKNESS_EVIDENCE_FIELD_SPAN_ID"""
  JWT_ALGO_WEAKNESS_EVIDENCE_FIELD_SPAN_ID

  """JWT_ALGO_WEAKNESS_EVIDENCE_FIELD_TIMESTAMP"""
  JWT_ALGO_WEAKNESS_EVIDENCE_FIELD_TIMESTAMP

  """JWT_ALGO_WEAKNESS_EVIDENCE_FIELD_URL"""
  JWT_ALGO_WEAKNESS_EVIDENCE_FIELD_URL

  """JWT_ALGO_WEAKNESS_EVIDENCE_FIELD_RESPONSE_STATUS_CODE"""
  JWT_ALGO_WEAKNESS_EVIDENCE_FIELD_RESPONSE_STATUS_CODE

  """ENUMERABLE_PARAM_EVIDENCE_FIELD_SPAN_ID"""
  ENUMERABLE_PARAM_EVIDENCE_FIELD_SPAN_ID

  """ENUMERABLE_PARAM_EVIDENCE_FIELD_TIMESTAMP"""
  ENUMERABLE_PARAM_EVIDENCE_FIELD_TIMESTAMP

  """ENUMERABLE_PARAM_EVIDENCE_FIELD_PARAMETER_FQN"""
  ENUMERABLE_PARAM_EVIDENCE_FIELD_PARAMETER_FQN

  """SONAR_EVIDENCE_FIELD"""
  SONAR_EVIDENCE_FIELD

  """SONAR_ASSET_TYPE_FIELD"""
  SONAR_ASSET_TYPE_FIELD

  """SONAR_SCAN_ID"""
  SONAR_SCAN_ID

  """JIRA_ISSUE_URL_FIELD"""
  JIRA_ISSUE_URL_FIELD

  """SERVICE_NOW_ITSM_URL_FIELD"""
  SERVICE_NOW_ITSM_URL_FIELD

  """AZURE_DEVOPS_URL_FIELD"""
  AZURE_DEVOPS_URL_FIELD
}

"""Vulnerability group by fields"""
enum VulnerabilityV3GroupByField {
  """STATUS"""
  STATUS

  """SEVERITY"""
  SEVERITY

  """OWASP_API_TOP10"""
  OWASP_API_TOP10

  """VULNERABILITY_CATEGORY"""
  VULNERABILITY_CATEGORY

  """VULNERABILITY_SUB_CATEGORY"""
  VULNERABILITY_SUB_CATEGORY

  """DISPLAY_NAME"""
  DISPLAY_NAME

  """VULNERABILITY_CATEGORY_DISPLAY_NAME"""
  VULNERABILITY_CATEGORY_DISPLAY_NAME

  """CVSS_SCORE"""
  CVSS_SCORE

  """SCAN_ID"""
  SCAN_ID

  """SONAR_ASSET_TYPE"""
  SONAR_ASSET_TYPE

  """ENTITY_ID"""
  ENTITY_ID

  """CHANGE_LOG_DAY"""
  CHANGE_LOG_DAY

  """CHANGE_LOG_STATUS"""
  CHANGE_LOG_STATUS

  """SONAR_SCAN_ID"""
  SONAR_SCAN_ID
}

type VulnerabilityV3ResultSet {
  count: Long!

  """List of vulnerabilities"""
  results: [VulnerabilityV3]!
  total: Long!
}

enum VulnerabilityV3Status {
  """VULNERABILITY_STATUS_OPEN"""
  VULNERABILITY_STATUS_OPEN

  """VULNERABILITY_STATUS_ACCEPTED_RISK"""
  VULNERABILITY_STATUS_ACCEPTED_RISK

  """VULNERABILITY_STATUS_NOT_A_VULNERABILITY"""
  VULNERABILITY_STATUS_NOT_A_VULNERABILITY

  """VULNERABILITY_STATUS_UNDER_REVIEW"""
  VULNERABILITY_STATUS_UNDER_REVIEW

  """VULNERABILITY_STATUS_FIXED"""
  VULNERABILITY_STATUS_FIXED

  """VULNERABILITY_STATUS_REOPENED"""
  VULNERABILITY_STATUS_REOPENED
}

type VulnerabilityV3Value {
  """Attribute type"""
  type: AttributeType!

  """Attribute value"""
  value: Unknown
}

type VulnerabilityValue {
  type: AttributeType!
  value: Unknown
}

type VulnerableApiStats {
  entity(type: String!): Entity
  id: String!
  openVulnerabilities: Long!
  serviceId: String!
  severity: VulnerabilityV2Severity
  totalVulnerabilities: Long!
}

enum VulnerableEntityType {
  """API"""
  API

  """SERVICE"""
  SERVICE

  """CUSTOM"""
  CUSTOM
}

type VulnerableService {
  apisAffected: Long!
  entity(type: String!): Entity
  serviceId: String!
  statusCounts: [VulnerabilityStatusCount]!
}

type VulnerableServicesResultSet {
  count: Long!
  results: [VulnerableService]!
  total: Long!
}

enum WafActivityEventField {
  """EVENT_INITIATOR"""
  EVENT_INITIATOR

  """WAF_INTEGRATION_TYPE"""
  WAF_INTEGRATION_TYPE

  """WAF_INTEGRATION_NAME"""
  WAF_INTEGRATION_NAME

  """TRACEABLE_PROTECTION_CHANGE_EVENT_TYPE"""
  TRACEABLE_PROTECTION_CHANGE_EVENT_TYPE

  """TRACEABLE_OPERATION_STATUS"""
  TRACEABLE_OPERATION_STATUS

  """TRACEABLE_PROTECTION_NAME"""
  TRACEABLE_PROTECTION_NAME

  """TRACEABLE_POLICY_ENVIRONMENT_IDS"""
  TRACEABLE_POLICY_ENVIRONMENT_IDS

  """EVENT_TIMESTAMP"""
  EVENT_TIMESTAMP
}

type WafActivityEventInitiator {
  """Type of the event initiator"""
  eventInitiatorType: WafActivityEventInitiatorType!

  """User initiator"""
  userInitiator: WafActivityEventUserInitiator
}

enum WafActivityEventInitiatorType {
  """TRACEABLE"""
  TRACEABLE

  """USER"""
  USER
}

enum WafActivityEventOperationType {
  """CREATE_INTEGRATION"""
  CREATE_INTEGRATION

  """UPDATE_INTEGRATION"""
  UPDATE_INTEGRATION

  """DELETE_INTEGRATION"""
  DELETE_INTEGRATION

  """CREATE_RULE"""
  CREATE_RULE

  """UPDATE_RULE"""
  UPDATE_RULE

  """DELETE_RULE"""
  DELETE_RULE

  """THREAT_ACTOR_STATUS_CHANGE"""
  THREAT_ACTOR_STATUS_CHANGE

  """BOOTSTRAP_PROTECTION_POLICY"""
  BOOTSTRAP_PROTECTION_POLICY

  """BOOTSTRAP_THREAT_ACTOR_BASED_POLICY"""
  BOOTSTRAP_THREAT_ACTOR_BASED_POLICY
}

enum WafActivityEventStatus {
  """SUCCESS"""
  SUCCESS

  """DROPPED"""
  DROPPED

  """FAILED"""
  FAILED

  """PARTIAL_FAILURE"""
  PARTIAL_FAILURE

  """NOT_SUPPORTED"""
  NOT_SUPPORTED
}

type WafActivityEventUserInitiator {
  """Username of the user initiator"""
  username: String!
}

type WafActivityLog {
  """Event initiator"""
  eventInitiator: WafActivityEventInitiator!

  """Event log"""
  eventLog: String!

  """Event status"""
  eventStatus: WafActivityEventStatus!

  """Timestamp at which the activity happened"""
  eventTime: DateTime!

  """The environments of the policy corresponding to this event"""
  traceablePolicyEnvironmentIds: [String]

  """Traceable protection entity"""
  traceableProtectionEntity: TraceableProtectionEntityDetails!

  """Waf activity event operation type"""
  wafActivityEventOperationType: WafActivityEventOperationType!

  """Waf integration details"""
  wafIntegrationDetails: WafIntegrationDetailsSummary!
}

type WafActivityLogResultSet {
  count: Long!

  """List of the waf activity log events"""
  results: [WafActivityLog]!
  total: Long!
}

"""Waf connection validation response"""
type WafConnectionValidationResponse {
  """Boolean denoting whether the connection is successful"""
  success: Boolean!
}

type WafIntegration {
  """Id of the integration"""
  id: String!

  """Integration type"""
  integrationType: WafProviderType!

  """Integration details"""
  wafIntegrationDetails: WafIntegrationDetails!
}

type WafIntegrationDetails {
  description: String
  name: String!
  wafIntegrationParams: WafIntegrationParams!
  wafIntegrationScope: WafIntegrationScope
  wafIntegrationTargets: [WafIntegrationTarget]
}

"""WafIntegrationDetailsSummary"""
type WafIntegrationDetailsSummary {
  """ID of the environments in which the WAF exists"""
  environments: [String]!
  id: String!

  """Name of the WAF integration"""
  name: String!

  """Type of WAF integration"""
  wafType: WafIntegrationType
}

"""Waf Integration Environment scope"""
type WafIntegrationEnvironmentScope {
  """Environment ids"""
  environmentIds: [String]!
}

"""WAF Integration Details"""
type WafIntegrationParams {
  """Akamai WAF Integration params"""
  akamaiIntegrationParams: AkamaiIntegrationParams

  """AWS WAF Integration Details"""
  awsIntegrationParams: AwsIntegrationParams

  """Azure WAF Integration Details"""
  azureIntegrationParams: AzureIntegrationParams

  """Cloudflare WAF Integration Details"""
  cloudflareIntegrationParams: CloudflareIntegrationParams

  """F5 WAF Integration Details"""
  f5IntegrationParams: F5IntegrationParams

  """Fortinet WAF integration params"""
  fortinetIntegrationParams: FortinetIntegrationParams

  """GCP WAF Integration Details"""
  gcpIntegrationParams: GcpIntegrationParams

  """Imperva WAF Integration Details"""
  impervaIntegrationParams: ImpervaIntegrationParams

  """Waf integration type"""
  integrationType: WafProviderType
}

"""Waf integration scope"""
type WafIntegrationScope {
  """Waf integration environment scope"""
  wafIntegrationEnvironmentScope: WafIntegrationEnvironmentScope
}

type WafIntegrationsResultSet {
  count: Long!
  results: [WafIntegration]!
  total: Long!
}

"""Targets for which the WAF is valid"""
type WafIntegrationTarget {
  """Rule target (if any) for the WAF"""
  ruleTarget: WafIntegrationTargetRuleType

  """Type of the WAF target"""
  targetType: WafIntegrationTargetType!
}

"""WAF Integration Target Rule Type"""
enum WafIntegrationTargetRuleType {
  """CUSTOM_SIGNATURE"""
  CUSTOM_SIGNATURE

  """IP_RANGE"""
  IP_RANGE

  """THREAT_ACTOR"""
  THREAT_ACTOR
}

"""Traceable target type"""
enum WafIntegrationTargetType {
  """RULE"""
  RULE
}

enum WafIntegrationType {
  """AWS"""
  AWS

  """CLOUDFLARE"""
  CLOUDFLARE

  """GCP"""
  GCP

  """F5"""
  F5

  """IMPERVA"""
  IMPERVA

  """AZURE"""
  AZURE

  """AKAMAI"""
  AKAMAI

  """FORTINET"""
  FORTINET
}

"""WAF Provider"""
enum WafProviderType {
  """CLOUDFLARE"""
  CLOUDFLARE

  """AWS"""
  AWS

  """IMPERVA"""
  IMPERVA

  """AZURE"""
  AZURE

  """GCP"""
  GCP

  """F5"""
  F5

  """AKAMAI"""
  AKAMAI

  """FORTINET"""
  FORTINET
}

type WebCrawlerConfiguration {
  """Details to login the web application for crawling."""
  webCrawlerLoginDetails: WebCrawlerLoginDetails

  """Web Crawler scope for crawling"""
  webCrawlerScope: WebCrawlerScope!
}

type WebCrawlerLoginDetails {
  """Password required to login the web application"""
  loginPassword: String!

  """Username required to login the web application"""
  loginUsername: String!
}

type WebCrawlerScope {
  """Urls from which a web crawler will begin to traverse a site."""
  seedUrls: [String]!
}

type WebhookChannelConfig {
  url: String!
  webhookFormat: WebhookFormat!
}

enum WebhookFormat {
  """SLACK"""
  SLACK

  """JSON"""
  JSON
}

type WebhookHeader {
  isSecret: Boolean!
  key: String!
  value: String
}

"""AWS WAF web identity authentication credentials"""
type WebIdentityAuthenticationCredentials {
  """AWS role ARN for connection"""
  roleArn: String!
}

"""Website Domain Entries"""
type WebsiteDomainEntry {
  """Domain"""
  domain: String!

  """Website ID"""
  websiteId: String!
}

"""Weekly schedule"""
type WeeklySchedule {
  """Scheduled day of week"""
  scheduledDay: DayOfWeek @deprecated(reason: "Deprecated")

  """List of scheduled days of week"""
  scheduledDays: [DayOfWeek]

  """Scheduled time of day"""
  scheduledTime: OffsetTime
}

type WizIntegration {
  """Wiz Integration ID"""
  id: String!

  """Api endpoint url for Wiz integration"""
  apiEndpointUrl: String!

  """Client Id for Wiz integration"""
  clientId: String!

  """Client secret for Wiz integration"""
  clientSecret: String

  """Description of the Wiz integration"""
  description: String

  """Name of the Wiz integration"""
  name: String!

  """Token url for Wiz integration"""
  tokenUrl: String!

  """configuration set for pulling wiz issues"""
  wizPullIssuesConfigDetails: WizPullIssuesConfigDetails

  """configuration set for pushing traceable events to wiz"""
  wizPushEventsConfigDetails: WizPushEventsConfigDetails
}

type WizIntegrationsResultSet {
  count: Long!
  results: [WizIntegration]!
  total: Long!
}

"""entity snapshot of wiz issue"""
type WizIssueEntitySnapshot {
  """resource name for wiz issue"""
  name: String

  """resource status for wiz issue"""
  resourceStatus: WizIssueResourceStatus

  """resource type for wiz issue"""
  type: String
}

"""Wiz Resource Status Types"""
enum WizIssueResourceStatus {
  """ACTIVE"""
  ACTIVE

  """INACTIVE"""
  INACTIVE

  """ERROR"""
  ERROR
}

"""Get Wiz issues"""
type WizIssues {
  """wiz issue create time"""
  createdAt: DateTime

  """entity snapshot for wiz issue"""
  entitySnapshot: WizIssueEntitySnapshot

  """id for wiz issue"""
  id: String!

  """wiz issue name"""
  issueName: String

  """status of wiz issue"""
  issueStatus: WizIssueStatus

  """list of projects for wiz issue"""
  projectList: [WizProject]

  """severity for wiz issue"""
  severity: WizIssueSeverity
}

"""Issue Severity Types"""
enum WizIssueSeverity {
  """INFORMATIONAL"""
  INFORMATIONAL

  """LOW"""
  LOW

  """MEDIUM"""
  MEDIUM

  """HIGH"""
  HIGH

  """CRITICAL"""
  CRITICAL
}

type WizIssuesResponse {
  """List of Wiz Issues"""
  wizIssues: [WizIssues]!
}

"""Wiz Issue Status Types"""
enum WizIssueStatus {
  """OPEN"""
  OPEN

  """IN_PROGRESS"""
  IN_PROGRESS

  """RESOLVED"""
  RESOLVED

  """REJECTED"""
  REJECTED
}

"""project"""
type WizProject {
  """project name"""
  name: String
}

type WizPullIssuesConfigDetails {
  """set to true to enable pulling of wiz issues"""
  enabled: Boolean!
}

type WizPushEventsConfigDetails {
  """set to true to enable pushing of traceable event to wiz"""
  enabled: Boolean!

  """the wiz integration id from your wiz platform"""
  wizIntegrationId: String @deprecated(reason: "Deprecated, this will be internally resolved")
}

