// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package generated

import (
	"context"
	"encoding/json"

	"github.com/Khan/genqlient/graphql"
)

// CreateDataSetCreateDataSet includes the requested fields of the GraphQL type DataSet.
type CreateDataSetCreateDataSet struct {
	Id          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	// An icon used to represent this Dataset visually
	IconType *string `json:"iconType"`
}

// GetId returns CreateDataSetCreateDataSet.Id, and is useful for accessing the field via an interface.
func (v *CreateDataSetCreateDataSet) GetId() string { return v.Id }

// GetName returns CreateDataSetCreateDataSet.Name, and is useful for accessing the field via an interface.
func (v *CreateDataSetCreateDataSet) GetName() string { return v.Name }

// GetDescription returns CreateDataSetCreateDataSet.Description, and is useful for accessing the field via an interface.
func (v *CreateDataSetCreateDataSet) GetDescription() *string { return v.Description }

// GetIconType returns CreateDataSetCreateDataSet.IconType, and is useful for accessing the field via an interface.
func (v *CreateDataSetCreateDataSet) GetIconType() *string { return v.IconType }

// CreateDataSetResponse is returned by CreateDataSet on success.
type CreateDataSetResponse struct {
	CreateDataSet CreateDataSetCreateDataSet `json:"createDataSet"`
}

// GetCreateDataSet returns CreateDataSetResponse.CreateDataSet, and is useful for accessing the field via an interface.
func (v *CreateDataSetResponse) GetCreateDataSet() CreateDataSetCreateDataSet { return v.CreateDataSet }

// CreateMaliciousIpRangeRuleCreateIpRangeRule includes the requested fields of the GraphQL type IpRangeRule.
type CreateMaliciousIpRangeRuleCreateIpRangeRule struct {
	MaliciousIpRangeFields `json:"-"`
}

// GetId returns CreateMaliciousIpRangeRuleCreateIpRangeRule.Id, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) GetId() *string {
	return v.MaliciousIpRangeFields.Id
}

// GetInternal returns CreateMaliciousIpRangeRuleCreateIpRangeRule.Internal, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) GetInternal() bool {
	return v.MaliciousIpRangeFields.Internal
}

// GetDisabled returns CreateMaliciousIpRangeRuleCreateIpRangeRule.Disabled, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) GetDisabled() bool {
	return v.MaliciousIpRangeFields.Disabled
}

// GetRuleDetails returns CreateMaliciousIpRangeRuleCreateIpRangeRule.RuleDetails, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) GetRuleDetails() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails {
	return v.MaliciousIpRangeFields.RuleDetails
}

// GetRuleScope returns CreateMaliciousIpRangeRuleCreateIpRangeRule.RuleScope, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) GetRuleScope() *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope {
	return v.MaliciousIpRangeFields.RuleScope
}

func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateMaliciousIpRangeRuleCreateIpRangeRule
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateMaliciousIpRangeRuleCreateIpRangeRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpRangeFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateMaliciousIpRangeRuleCreateIpRangeRule struct {
	Id *string `json:"id"`

	Internal bool `json:"internal"`

	Disabled bool `json:"disabled"`

	RuleDetails MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails `json:"ruleDetails"`

	RuleScope *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope `json:"ruleScope"`
}

func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) __premarshalJSON() (*__premarshalCreateMaliciousIpRangeRuleCreateIpRangeRule, error) {
	var retval __premarshalCreateMaliciousIpRangeRuleCreateIpRangeRule

	retval.Id = v.MaliciousIpRangeFields.Id
	retval.Internal = v.MaliciousIpRangeFields.Internal
	retval.Disabled = v.MaliciousIpRangeFields.Disabled
	retval.RuleDetails = v.MaliciousIpRangeFields.RuleDetails
	retval.RuleScope = v.MaliciousIpRangeFields.RuleScope
	return &retval, nil
}

// CreateMaliciousIpRangeRuleResponse is returned by CreateMaliciousIpRangeRule on success.
type CreateMaliciousIpRangeRuleResponse struct {
	CreateIpRangeRule CreateMaliciousIpRangeRuleCreateIpRangeRule `json:"createIpRangeRule"`
}

// GetCreateIpRangeRule returns CreateMaliciousIpRangeRuleResponse.CreateIpRangeRule, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleResponse) GetCreateIpRangeRule() CreateMaliciousIpRangeRuleCreateIpRangeRule {
	return v.CreateIpRangeRule
}

// CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule struct {
	MaliciousIpTypeRuleFields `json:"-"`
}

// GetId returns CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) GetId() string {
	return v.MaliciousIpTypeRuleFields.Id
}

// GetInfo returns CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) GetInfo() MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.MaliciousIpTypeRuleFields.Info
}

// GetScope returns CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule.Scope, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) GetScope() *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.MaliciousIpTypeRuleFields.Scope
}

// GetStatus returns CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule.Status, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) GetStatus() MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.MaliciousIpTypeRuleFields.Status
}

func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpTypeRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateMaliciousIpTypeRuleCreateMaliciousSourcesRule struct {
	Id string `json:"id"`

	Info MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`

	Scope *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`

	Status MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) __premarshalJSON() (*__premarshalCreateMaliciousIpTypeRuleCreateMaliciousSourcesRule, error) {
	var retval __premarshalCreateMaliciousIpTypeRuleCreateMaliciousSourcesRule

	retval.Id = v.MaliciousIpTypeRuleFields.Id
	retval.Info = v.MaliciousIpTypeRuleFields.Info
	retval.Scope = v.MaliciousIpTypeRuleFields.Scope
	retval.Status = v.MaliciousIpTypeRuleFields.Status
	return &retval, nil
}

// CreateMaliciousIpTypeRuleResponse is returned by CreateMaliciousIpTypeRule on success.
type CreateMaliciousIpTypeRuleResponse struct {
	// Mutation API to create Malicious Sources rule
	CreateMaliciousSourcesRule CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule `json:"createMaliciousSourcesRule"`
}

// GetCreateMaliciousSourcesRule returns CreateMaliciousIpTypeRuleResponse.CreateMaliciousSourcesRule, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpTypeRuleResponse) GetCreateMaliciousSourcesRule() CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule {
	return v.CreateMaliciousSourcesRule
}

// CreateMaliciousRegionRuleCreateRegionRule includes the requested fields of the GraphQL type RegionRule.
type CreateMaliciousRegionRuleCreateRegionRule struct {
	MaliciousRegionRuleFields `json:"-"`
}

// GetId returns CreateMaliciousRegionRuleCreateRegionRule.Id, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetId() string {
	return v.MaliciousRegionRuleFields.Id
}

// GetName returns CreateMaliciousRegionRuleCreateRegionRule.Name, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetName() string {
	return v.MaliciousRegionRuleFields.Name
}

// GetType returns CreateMaliciousRegionRuleCreateRegionRule.Type, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetType() RegionRuleActionType {
	return v.MaliciousRegionRuleFields.Type
}

// GetDescription returns CreateMaliciousRegionRuleCreateRegionRule.Description, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetDescription() *string {
	return v.MaliciousRegionRuleFields.Description
}

// GetDisabled returns CreateMaliciousRegionRuleCreateRegionRule.Disabled, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetDisabled() bool {
	return v.MaliciousRegionRuleFields.Disabled
}

// GetInternal returns CreateMaliciousRegionRuleCreateRegionRule.Internal, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetInternal() bool {
	return v.MaliciousRegionRuleFields.Internal
}

// GetEventSeverity returns CreateMaliciousRegionRuleCreateRegionRule.EventSeverity, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetEventSeverity() *RegionRuleEventSeverity {
	return v.MaliciousRegionRuleFields.EventSeverity
}

// GetExpiration returns CreateMaliciousRegionRuleCreateRegionRule.Expiration, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetExpiration() *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration {
	return v.MaliciousRegionRuleFields.Expiration
}

// GetRegions returns CreateMaliciousRegionRuleCreateRegionRule.Regions, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetRegions() []*MaliciousRegionRuleFieldsRegionsRegion {
	return v.MaliciousRegionRuleFields.Regions
}

// GetRuleScope returns CreateMaliciousRegionRuleCreateRegionRule.RuleScope, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetRuleScope() *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope {
	return v.MaliciousRegionRuleFields.RuleScope
}

// GetEffects returns CreateMaliciousRegionRuleCreateRegionRule.Effects, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetEffects() []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification {
	return v.MaliciousRegionRuleFields.Effects
}

func (v *CreateMaliciousRegionRuleCreateRegionRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateMaliciousRegionRuleCreateRegionRule
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateMaliciousRegionRuleCreateRegionRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousRegionRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateMaliciousRegionRuleCreateRegionRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	Type RegionRuleActionType `json:"type"`

	Description *string `json:"description"`

	Disabled bool `json:"disabled"`

	Internal bool `json:"internal"`

	EventSeverity *RegionRuleEventSeverity `json:"eventSeverity"`

	Expiration *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration `json:"expiration"`

	Regions []*MaliciousRegionRuleFieldsRegionsRegion `json:"regions"`

	RuleScope *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope `json:"ruleScope"`

	Effects []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification `json:"effects"`
}

func (v *CreateMaliciousRegionRuleCreateRegionRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateMaliciousRegionRuleCreateRegionRule) __premarshalJSON() (*__premarshalCreateMaliciousRegionRuleCreateRegionRule, error) {
	var retval __premarshalCreateMaliciousRegionRuleCreateRegionRule

	retval.Id = v.MaliciousRegionRuleFields.Id
	retval.Name = v.MaliciousRegionRuleFields.Name
	retval.Type = v.MaliciousRegionRuleFields.Type
	retval.Description = v.MaliciousRegionRuleFields.Description
	retval.Disabled = v.MaliciousRegionRuleFields.Disabled
	retval.Internal = v.MaliciousRegionRuleFields.Internal
	retval.EventSeverity = v.MaliciousRegionRuleFields.EventSeverity
	retval.Expiration = v.MaliciousRegionRuleFields.Expiration
	retval.Regions = v.MaliciousRegionRuleFields.Regions
	retval.RuleScope = v.MaliciousRegionRuleFields.RuleScope
	retval.Effects = v.MaliciousRegionRuleFields.Effects
	return &retval, nil
}

// CreateMaliciousRegionRuleResponse is returned by CreateMaliciousRegionRule on success.
type CreateMaliciousRegionRuleResponse struct {
	CreateRegionRule CreateMaliciousRegionRuleCreateRegionRule `json:"createRegionRule"`
}

// GetCreateRegionRule returns CreateMaliciousRegionRuleResponse.CreateRegionRule, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleResponse) GetCreateRegionRule() CreateMaliciousRegionRuleCreateRegionRule {
	return v.CreateRegionRule
}

// CreateRateLimitingRuleCreateRateLimitingRule includes the requested fields of the GraphQL type RateLimitingRule.
// The GraphQL type's documentation follows.
//
// Custom rule to protect endpoints and other services from brute-force attacks
type CreateRateLimitingRuleCreateRateLimitingRule struct {
	RateLimitingRuleFields `json:"-"`
}

// GetCategory returns CreateRateLimitingRuleCreateRateLimitingRule.Category, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetCategory() RateLimitingRuleCategory {
	return v.RateLimitingRuleFields.Category
}

// GetDescription returns CreateRateLimitingRuleCreateRateLimitingRule.Description, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetDescription() *string {
	return v.RateLimitingRuleFields.Description
}

// GetEnabled returns CreateRateLimitingRuleCreateRateLimitingRule.Enabled, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetEnabled() bool {
	return v.RateLimitingRuleFields.Enabled
}

// GetId returns CreateRateLimitingRuleCreateRateLimitingRule.Id, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetId() string {
	return v.RateLimitingRuleFields.Id
}

// GetName returns CreateRateLimitingRuleCreateRateLimitingRule.Name, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetName() string {
	return v.RateLimitingRuleFields.Name
}

// GetLabels returns CreateRateLimitingRuleCreateRateLimitingRule.Labels, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetLabels() []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel {
	return v.RateLimitingRuleFields.Labels
}

// GetThresholdActionConfigs returns CreateRateLimitingRuleCreateRateLimitingRule.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetThresholdActionConfigs() []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig {
	return v.RateLimitingRuleFields.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns CreateRateLimitingRuleCreateRateLimitingRule.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetTransactionActionConfigs() *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig {
	return v.RateLimitingRuleFields.TransactionActionConfigs
}

// GetRuleConfigScope returns CreateRateLimitingRuleCreateRateLimitingRule.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetRuleConfigScope() *RateLimitingRuleFieldsRuleConfigScope {
	return v.RateLimitingRuleFields.RuleConfigScope
}

// GetRuleStatus returns CreateRateLimitingRuleCreateRateLimitingRule.RuleStatus, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetRuleStatus() *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus {
	return v.RateLimitingRuleFields.RuleStatus
}

// GetConditions returns CreateRateLimitingRuleCreateRateLimitingRule.Conditions, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetConditions() []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition {
	return v.RateLimitingRuleFields.Conditions
}

func (v *CreateRateLimitingRuleCreateRateLimitingRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateRateLimitingRuleCreateRateLimitingRule
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateRateLimitingRuleCreateRateLimitingRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.RateLimitingRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateRateLimitingRuleCreateRateLimitingRule struct {
	Category RateLimitingRuleCategory `json:"category"`

	Description *string `json:"description"`

	Enabled bool `json:"enabled"`

	Id string `json:"id"`

	Name string `json:"name"`

	Labels []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel `json:"labels"`

	ThresholdActionConfigs []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`

	TransactionActionConfigs *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`

	RuleConfigScope *RateLimitingRuleFieldsRuleConfigScope `json:"ruleConfigScope"`

	RuleStatus *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus `json:"ruleStatus"`

	Conditions []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition `json:"conditions"`
}

func (v *CreateRateLimitingRuleCreateRateLimitingRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateRateLimitingRuleCreateRateLimitingRule) __premarshalJSON() (*__premarshalCreateRateLimitingRuleCreateRateLimitingRule, error) {
	var retval __premarshalCreateRateLimitingRuleCreateRateLimitingRule

	retval.Category = v.RateLimitingRuleFields.Category
	retval.Description = v.RateLimitingRuleFields.Description
	retval.Enabled = v.RateLimitingRuleFields.Enabled
	retval.Id = v.RateLimitingRuleFields.Id
	retval.Name = v.RateLimitingRuleFields.Name
	retval.Labels = v.RateLimitingRuleFields.Labels
	retval.ThresholdActionConfigs = v.RateLimitingRuleFields.ThresholdActionConfigs
	retval.TransactionActionConfigs = v.RateLimitingRuleFields.TransactionActionConfigs
	retval.RuleConfigScope = v.RateLimitingRuleFields.RuleConfigScope
	retval.RuleStatus = v.RateLimitingRuleFields.RuleStatus
	retval.Conditions = v.RateLimitingRuleFields.Conditions
	return &retval, nil
}

// CreateRateLimitingRuleResponse is returned by CreateRateLimitingRule on success.
type CreateRateLimitingRuleResponse struct {
	CreateRateLimitingRule CreateRateLimitingRuleCreateRateLimitingRule `json:"createRateLimitingRule"`
}

// GetCreateRateLimitingRule returns CreateRateLimitingRuleResponse.CreateRateLimitingRule, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleResponse) GetCreateRateLimitingRule() CreateRateLimitingRuleCreateRateLimitingRule {
	return v.CreateRateLimitingRule
}

type DataSensitivity string

const (
	// LOW
	DataSensitivityLow DataSensitivity = "LOW"
	// MEDIUM
	DataSensitivityMedium DataSensitivity = "MEDIUM"
	// HIGH
	DataSensitivityHigh DataSensitivity = "HIGH"
	// CRITICAL
	DataSensitivityCritical DataSensitivity = "CRITICAL"
)

var AllDataSensitivity = []DataSensitivity{
	DataSensitivityLow,
	DataSensitivityMedium,
	DataSensitivityHigh,
	DataSensitivityCritical,
}

// DataSetsDataSetsDataSetResultSet includes the requested fields of the GraphQL type DataSetResultSet.
type DataSetsDataSetsDataSetResultSet struct {
	Count   int64                                             `json:"count"`
	Results []*DataSetsDataSetsDataSetResultSetResultsDataSet `json:"results"`
	Total   int64                                             `json:"total"`
}

// GetCount returns DataSetsDataSetsDataSetResultSet.Count, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSet) GetCount() int64 { return v.Count }

// GetResults returns DataSetsDataSetsDataSetResultSet.Results, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSet) GetResults() []*DataSetsDataSetsDataSetResultSetResultsDataSet {
	return v.Results
}

// GetTotal returns DataSetsDataSetsDataSetResultSet.Total, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSet) GetTotal() int64 { return v.Total }

// DataSetsDataSetsDataSetResultSetResultsDataSet includes the requested fields of the GraphQL type DataSet.
type DataSetsDataSetsDataSetResultSetResultsDataSet struct {
	Id          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	// An icon used to represent this Dataset visually
	IconType *string `json:"iconType"`
}

// GetId returns DataSetsDataSetsDataSetResultSetResultsDataSet.Id, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSetResultsDataSet) GetId() string { return v.Id }

// GetName returns DataSetsDataSetsDataSetResultSetResultsDataSet.Name, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSetResultsDataSet) GetName() string { return v.Name }

// GetDescription returns DataSetsDataSetsDataSetResultSetResultsDataSet.Description, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSetResultsDataSet) GetDescription() *string {
	return v.Description
}

// GetIconType returns DataSetsDataSetsDataSetResultSetResultsDataSet.IconType, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSetResultsDataSet) GetIconType() *string { return v.IconType }

// DataSetsResponse is returned by DataSets on success.
type DataSetsResponse struct {
	DataSets DataSetsDataSetsDataSetResultSet `json:"dataSets"`
}

// GetDataSets returns DataSetsResponse.DataSets, and is useful for accessing the field via an interface.
func (v *DataSetsResponse) GetDataSets() DataSetsDataSetsDataSetResultSet { return v.DataSets }

type DataSuppression string

const (
	// RAW
	DataSuppressionRaw DataSuppression = "RAW"
	// REDACT
	DataSuppressionRedact DataSuppression = "REDACT"
	// OBFUSCATE
	DataSuppressionObfuscate DataSuppression = "OBFUSCATE"
)

var AllDataSuppression = []DataSuppression{
	DataSuppressionRaw,
	DataSuppressionRedact,
	DataSuppressionObfuscate,
}

// DeleteDataSetResponse is returned by DeleteDataSet on success.
type DeleteDataSetResponse struct {
	DeleteDataSet bool `json:"deleteDataSet"`
}

// GetDeleteDataSet returns DeleteDataSetResponse.DeleteDataSet, and is useful for accessing the field via an interface.
func (v *DeleteDataSetResponse) GetDeleteDataSet() bool { return v.DeleteDataSet }

// DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse includes the requested fields of the GraphQL type DeleteIpRangeRuleResponse.
type DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse struct {
	Success bool `json:"success"`
}

// GetSuccess returns DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse) GetSuccess() bool {
	return v.Success
}

// DeleteMaliciousIpRangeRuleResponse is returned by DeleteMaliciousIpRangeRule on success.
type DeleteMaliciousIpRangeRuleResponse struct {
	DeleteIpRangeRule DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse `json:"deleteIpRangeRule"`
}

// GetDeleteIpRangeRule returns DeleteMaliciousIpRangeRuleResponse.DeleteIpRangeRule, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousIpRangeRuleResponse) GetDeleteIpRangeRule() DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse {
	return v.DeleteIpRangeRule
}

// DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse includes the requested fields of the GraphQL type DeleteMaliciousSourcesRuleResponse.
// The GraphQL type's documentation follows.
//
// Delete response denoting success
type DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse struct {
	// Flag to check the success of a delete request
	Success bool `json:"success"`
}

// GetSuccess returns DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse) GetSuccess() bool {
	return v.Success
}

// DeleteMaliciousIpTypeRuleResponse is returned by DeleteMaliciousIpTypeRule on success.
type DeleteMaliciousIpTypeRuleResponse struct {
	// Mutation API to delete Malicious Sources rule
	DeleteMaliciousSourcesRule DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse `json:"deleteMaliciousSourcesRule"`
}

// GetDeleteMaliciousSourcesRule returns DeleteMaliciousIpTypeRuleResponse.DeleteMaliciousSourcesRule, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousIpTypeRuleResponse) GetDeleteMaliciousSourcesRule() DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse {
	return v.DeleteMaliciousSourcesRule
}

// DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse includes the requested fields of the GraphQL type DeleteRegionRuleResponse.
type DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse struct {
	Success bool `json:"success"`
}

// GetSuccess returns DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse) GetSuccess() bool {
	return v.Success
}

// DeleteMaliciousRegionRuleResponse is returned by DeleteMaliciousRegionRule on success.
type DeleteMaliciousRegionRuleResponse struct {
	DeleteRegionRule DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse `json:"deleteRegionRule"`
}

// GetDeleteRegionRule returns DeleteMaliciousRegionRuleResponse.DeleteRegionRule, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousRegionRuleResponse) GetDeleteRegionRule() DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse {
	return v.DeleteRegionRule
}

// DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse includes the requested fields of the GraphQL type DeleteRateLimitingRuleResponse.
type DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse struct {
	Success bool `json:"success"`
}

// GetSuccess returns DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse) GetSuccess() bool {
	return v.Success
}

// DeleteRateLimitingRuleResponse is returned by DeleteRateLimitingRule on success.
type DeleteRateLimitingRuleResponse struct {
	DeleteRateLimitingRule DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse `json:"deleteRateLimitingRule"`
}

// GetDeleteRateLimitingRule returns DeleteRateLimitingRuleResponse.DeleteRateLimitingRule, and is useful for accessing the field via an interface.
func (v *DeleteRateLimitingRuleResponse) GetDeleteRateLimitingRule() DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse {
	return v.DeleteRateLimitingRule
}

// GetCountriesCountriesRegionResultSet includes the requested fields of the GraphQL type RegionResultSet.
type GetCountriesCountriesRegionResultSet struct {
	Results []*GetCountriesCountriesRegionResultSetResultsRegion `json:"results"`
}

// GetResults returns GetCountriesCountriesRegionResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetCountriesCountriesRegionResultSet) GetResults() []*GetCountriesCountriesRegionResultSetResultsRegion {
	return v.Results
}

// GetCountriesCountriesRegionResultSetResultsRegion includes the requested fields of the GraphQL type Region.
type GetCountriesCountriesRegionResultSetResultsRegion struct {
	Id string `json:"id"`
	// Country data for region
	Country *GetCountriesCountriesRegionResultSetResultsRegionCountry `json:"country"`
}

// GetId returns GetCountriesCountriesRegionResultSetResultsRegion.Id, and is useful for accessing the field via an interface.
func (v *GetCountriesCountriesRegionResultSetResultsRegion) GetId() string { return v.Id }

// GetCountry returns GetCountriesCountriesRegionResultSetResultsRegion.Country, and is useful for accessing the field via an interface.
func (v *GetCountriesCountriesRegionResultSetResultsRegion) GetCountry() *GetCountriesCountriesRegionResultSetResultsRegionCountry {
	return v.Country
}

// GetCountriesCountriesRegionResultSetResultsRegionCountry includes the requested fields of the GraphQL type Country.
type GetCountriesCountriesRegionResultSetResultsRegionCountry struct {
	// Country iso code
	IsoCode string `json:"isoCode"`
	// Country name
	Name string `json:"name"`
}

// GetIsoCode returns GetCountriesCountriesRegionResultSetResultsRegionCountry.IsoCode, and is useful for accessing the field via an interface.
func (v *GetCountriesCountriesRegionResultSetResultsRegionCountry) GetIsoCode() string {
	return v.IsoCode
}

// GetName returns GetCountriesCountriesRegionResultSetResultsRegionCountry.Name, and is useful for accessing the field via an interface.
func (v *GetCountriesCountriesRegionResultSetResultsRegionCountry) GetName() string { return v.Name }

// GetCountriesResponse is returned by GetCountries on success.
type GetCountriesResponse struct {
	Countries GetCountriesCountriesRegionResultSet `json:"countries"`
}

// GetCountries returns GetCountriesResponse.Countries, and is useful for accessing the field via an interface.
func (v *GetCountriesResponse) GetCountries() GetCountriesCountriesRegionResultSet {
	return v.Countries
}

// GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet includes the requested fields of the GraphQL type IpRangeRuleResultSet.
type GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet struct {
	Count   *int64                                                                              `json:"count"`
	Total   *int64                                                                              `json:"total"`
	Results []*GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule `json:"results"`
}

// GetCount returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet) GetCount() *int64 {
	return v.Count
}

// GetTotal returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet) GetTotal() *int64 {
	return v.Total
}

// GetResults returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet) GetResults() []*GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule {
	return v.Results
}

// GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule includes the requested fields of the GraphQL type IpRangeRule.
type GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule struct {
	MaliciousIpRangeFields `json:"-"`
}

// GetId returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetId() *string {
	return v.MaliciousIpRangeFields.Id
}

// GetInternal returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.Internal, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetInternal() bool {
	return v.MaliciousIpRangeFields.Internal
}

// GetDisabled returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.Disabled, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetDisabled() bool {
	return v.MaliciousIpRangeFields.Disabled
}

// GetRuleDetails returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.RuleDetails, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetRuleDetails() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails {
	return v.MaliciousIpRangeFields.RuleDetails
}

// GetRuleScope returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.RuleScope, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetRuleScope() *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope {
	return v.MaliciousIpRangeFields.RuleScope
}

func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpRangeFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule struct {
	Id *string `json:"id"`

	Internal bool `json:"internal"`

	Disabled bool `json:"disabled"`

	RuleDetails MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails `json:"ruleDetails"`

	RuleScope *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope `json:"ruleScope"`
}

func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) __premarshalJSON() (*__premarshalGetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule, error) {
	var retval __premarshalGetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule

	retval.Id = v.MaliciousIpRangeFields.Id
	retval.Internal = v.MaliciousIpRangeFields.Internal
	retval.Disabled = v.MaliciousIpRangeFields.Disabled
	retval.RuleDetails = v.MaliciousIpRangeFields.RuleDetails
	retval.RuleScope = v.MaliciousIpRangeFields.RuleScope
	return &retval, nil
}

// GetMaliciousIpRangeRuleDetailsResponse is returned by GetMaliciousIpRangeRuleDetails on success.
type GetMaliciousIpRangeRuleDetailsResponse struct {
	IpRangeRules GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet `json:"ipRangeRules"`
}

// GetIpRangeRules returns GetMaliciousIpRangeRuleDetailsResponse.IpRangeRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsResponse) GetIpRangeRules() GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet {
	return v.IpRangeRules
}

// GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet includes the requested fields of the GraphQL type IpRangeRuleResultSet.
type GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet struct {
	Count   *int64                                                                            `json:"count"`
	Total   *int64                                                                            `json:"total"`
	Results []*GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule `json:"results"`
}

// GetCount returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet) GetCount() *int64 {
	return v.Count
}

// GetTotal returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet) GetTotal() *int64 {
	return v.Total
}

// GetResults returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet) GetResults() []*GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule {
	return v.Results
}

// GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule includes the requested fields of the GraphQL type IpRangeRule.
type GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule struct {
	RuleDetails GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails `json:"ruleDetails"`
	Id          *string                                                                                                     `json:"id"`
}

// GetRuleDetails returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.RuleDetails, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetRuleDetails() GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails {
	return v.RuleDetails
}

// GetId returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetId() *string {
	return v.Id
}

// GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails includes the requested fields of the GraphQL type IpRangeRuleDetails.
type GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails struct {
	Name string `json:"name"`
}

// GetName returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails.Name, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails) GetName() string {
	return v.Name
}

// GetMaliciousIpRangeRulesNameResponse is returned by GetMaliciousIpRangeRulesName on success.
type GetMaliciousIpRangeRulesNameResponse struct {
	IpRangeRules GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet `json:"ipRangeRules"`
}

// GetIpRangeRules returns GetMaliciousIpRangeRulesNameResponse.IpRangeRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameResponse) GetIpRangeRules() GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet {
	return v.IpRangeRules
}

// GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet includes the requested fields of the GraphQL type MaliciousSourcesRuleResultSet.
// The GraphQL type's documentation follows.
//
// Malicious sources rules results
type GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet struct {
	Count *int64 `json:"count"`
	Total *int64 `json:"total"`
	// List of Malicious Sources rules
	Results []*GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule `json:"results"`
}

// GetCount returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetCount() *int64 {
	return v.Count
}

// GetTotal returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetTotal() *int64 {
	return v.Total
}

// GetResults returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetResults() []*GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule {
	return v.Results
}

// GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule struct {
	MaliciousIpTypeRuleFields `json:"-"`
}

// GetId returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetId() string {
	return v.MaliciousIpTypeRuleFields.Id
}

// GetInfo returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetInfo() MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.MaliciousIpTypeRuleFields.Info
}

// GetScope returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Scope, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetScope() *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.MaliciousIpTypeRuleFields.Scope
}

// GetStatus returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Status, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetStatus() MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.MaliciousIpTypeRuleFields.Status
}

func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpTypeRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule struct {
	Id string `json:"id"`

	Info MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`

	Scope *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`

	Status MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) __premarshalJSON() (*__premarshalGetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule, error) {
	var retval __premarshalGetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule

	retval.Id = v.MaliciousIpTypeRuleFields.Id
	retval.Info = v.MaliciousIpTypeRuleFields.Info
	retval.Scope = v.MaliciousIpTypeRuleFields.Scope
	retval.Status = v.MaliciousIpTypeRuleFields.Status
	return &retval, nil
}

// GetMaliciousIpTypeRuleDetailsResponse is returned by GetMaliciousIpTypeRuleDetails on success.
type GetMaliciousIpTypeRuleDetailsResponse struct {
	// API to fetch malicious sources rules
	MaliciousSourcesRules GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet `json:"maliciousSourcesRules"`
}

// GetMaliciousSourcesRules returns GetMaliciousIpTypeRuleDetailsResponse.MaliciousSourcesRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsResponse) GetMaliciousSourcesRules() GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet {
	return v.MaliciousSourcesRules
}

// GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet includes the requested fields of the GraphQL type MaliciousSourcesRuleResultSet.
// The GraphQL type's documentation follows.
//
// Malicious sources rules results
type GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet struct {
	Count *int64 `json:"count"`
	Total *int64 `json:"total"`
	// List of Malicious Sources rules
	Results []*GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule `json:"results"`
}

// GetCount returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetCount() *int64 {
	return v.Count
}

// GetTotal returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetTotal() *int64 {
	return v.Total
}

// GetResults returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetResults() []*GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule {
	return v.Results
}

// GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule struct {
	// Malicious Sources rule information
	Info GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo `json:"info"`
	// Rule ID
	Id string `json:"id"`
}

// GetInfo returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetInfo() GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo {
	return v.Info
}

// GetId returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetId() string {
	return v.Id
}

// GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo includes the requested fields of the GraphQL type MaliciousSourcesRuleInfo.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule information
type GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo struct {
	// Rule name
	Name string `json:"name"`
}

// GetName returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo.Name, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo) GetName() string {
	return v.Name
}

// GetMaliciousIpTypeRulesNameResponse is returned by GetMaliciousIpTypeRulesName on success.
type GetMaliciousIpTypeRulesNameResponse struct {
	// API to fetch malicious sources rules
	MaliciousSourcesRules GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet `json:"maliciousSourcesRules"`
}

// GetMaliciousSourcesRules returns GetMaliciousIpTypeRulesNameResponse.MaliciousSourcesRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameResponse) GetMaliciousSourcesRules() GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet {
	return v.MaliciousSourcesRules
}

// GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet includes the requested fields of the GraphQL type RegionRuleResultSet.
type GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet struct {
	Count   int64                                                                           `json:"count"`
	Total   int64                                                                           `json:"total"`
	Results []*GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule `json:"results"`
}

// GetCount returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet) GetCount() int64 {
	return v.Count
}

// GetTotal returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet) GetTotal() int64 {
	return v.Total
}

// GetResults returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet) GetResults() []*GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule {
	return v.Results
}

// GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule includes the requested fields of the GraphQL type RegionRule.
type GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule struct {
	MaliciousRegionRuleFields `json:"-"`
}

// GetId returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetId() string {
	return v.MaliciousRegionRuleFields.Id
}

// GetName returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Name, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetName() string {
	return v.MaliciousRegionRuleFields.Name
}

// GetType returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Type, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetType() RegionRuleActionType {
	return v.MaliciousRegionRuleFields.Type
}

// GetDescription returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Description, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetDescription() *string {
	return v.MaliciousRegionRuleFields.Description
}

// GetDisabled returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Disabled, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetDisabled() bool {
	return v.MaliciousRegionRuleFields.Disabled
}

// GetInternal returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Internal, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetInternal() bool {
	return v.MaliciousRegionRuleFields.Internal
}

// GetEventSeverity returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.EventSeverity, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetEventSeverity() *RegionRuleEventSeverity {
	return v.MaliciousRegionRuleFields.EventSeverity
}

// GetExpiration returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Expiration, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetExpiration() *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration {
	return v.MaliciousRegionRuleFields.Expiration
}

// GetRegions returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Regions, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetRegions() []*MaliciousRegionRuleFieldsRegionsRegion {
	return v.MaliciousRegionRuleFields.Regions
}

// GetRuleScope returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.RuleScope, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetRuleScope() *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope {
	return v.MaliciousRegionRuleFields.RuleScope
}

// GetEffects returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Effects, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetEffects() []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification {
	return v.MaliciousRegionRuleFields.Effects
}

func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousRegionRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	Type RegionRuleActionType `json:"type"`

	Description *string `json:"description"`

	Disabled bool `json:"disabled"`

	Internal bool `json:"internal"`

	EventSeverity *RegionRuleEventSeverity `json:"eventSeverity"`

	Expiration *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration `json:"expiration"`

	Regions []*MaliciousRegionRuleFieldsRegionsRegion `json:"regions"`

	RuleScope *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope `json:"ruleScope"`

	Effects []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification `json:"effects"`
}

func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) __premarshalJSON() (*__premarshalGetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule, error) {
	var retval __premarshalGetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule

	retval.Id = v.MaliciousRegionRuleFields.Id
	retval.Name = v.MaliciousRegionRuleFields.Name
	retval.Type = v.MaliciousRegionRuleFields.Type
	retval.Description = v.MaliciousRegionRuleFields.Description
	retval.Disabled = v.MaliciousRegionRuleFields.Disabled
	retval.Internal = v.MaliciousRegionRuleFields.Internal
	retval.EventSeverity = v.MaliciousRegionRuleFields.EventSeverity
	retval.Expiration = v.MaliciousRegionRuleFields.Expiration
	retval.Regions = v.MaliciousRegionRuleFields.Regions
	retval.RuleScope = v.MaliciousRegionRuleFields.RuleScope
	retval.Effects = v.MaliciousRegionRuleFields.Effects
	return &retval, nil
}

// GetMaliciousRegionRuleDetailsResponse is returned by GetMaliciousRegionRuleDetails on success.
type GetMaliciousRegionRuleDetailsResponse struct {
	RegionRules GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet `json:"regionRules"`
}

// GetRegionRules returns GetMaliciousRegionRuleDetailsResponse.RegionRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsResponse) GetRegionRules() GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet {
	return v.RegionRules
}

// GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet includes the requested fields of the GraphQL type RegionRuleResultSet.
type GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet struct {
	Count   int64                                                                         `json:"count"`
	Total   int64                                                                         `json:"total"`
	Results []*GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule `json:"results"`
}

// GetCount returns GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet) GetCount() int64 { return v.Count }

// GetTotal returns GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet) GetTotal() int64 { return v.Total }

// GetResults returns GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet) GetResults() []*GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule {
	return v.Results
}

// GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule includes the requested fields of the GraphQL type RegionRule.
type GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule) GetId() string {
	return v.Id
}

// GetName returns GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule.Name, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule) GetName() string {
	return v.Name
}

// GetMaliciousRegionRulesNameResponse is returned by GetMaliciousRegionRulesName on success.
type GetMaliciousRegionRulesNameResponse struct {
	RegionRules GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet `json:"regionRules"`
}

// GetRegionRules returns GetMaliciousRegionRulesNameResponse.RegionRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameResponse) GetRegionRules() GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet {
	return v.RegionRules
}

// GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet includes the requested fields of the GraphQL type RateLimitingRuleResultSet.
type GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet struct {
	Count   int64                                                                                      `json:"count"`
	Total   int64                                                                                      `json:"total"`
	Results []*GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule `json:"results"`
}

// GetCount returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet) GetCount() int64 {
	return v.Count
}

// GetTotal returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet) GetTotal() int64 {
	return v.Total
}

// GetResults returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet) GetResults() []*GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule {
	return v.Results
}

// GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule includes the requested fields of the GraphQL type RateLimitingRule.
// The GraphQL type's documentation follows.
//
// Custom rule to protect endpoints and other services from brute-force attacks
type GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule struct {
	RateLimitingRuleFields `json:"-"`
}

// GetCategory returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Category, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetCategory() RateLimitingRuleCategory {
	return v.RateLimitingRuleFields.Category
}

// GetDescription returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Description, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetDescription() *string {
	return v.RateLimitingRuleFields.Description
}

// GetEnabled returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Enabled, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetEnabled() bool {
	return v.RateLimitingRuleFields.Enabled
}

// GetId returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Id, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetId() string {
	return v.RateLimitingRuleFields.Id
}

// GetName returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Name, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetName() string {
	return v.RateLimitingRuleFields.Name
}

// GetLabels returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Labels, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetLabels() []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel {
	return v.RateLimitingRuleFields.Labels
}

// GetThresholdActionConfigs returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetThresholdActionConfigs() []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig {
	return v.RateLimitingRuleFields.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetTransactionActionConfigs() *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig {
	return v.RateLimitingRuleFields.TransactionActionConfigs
}

// GetRuleConfigScope returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetRuleConfigScope() *RateLimitingRuleFieldsRuleConfigScope {
	return v.RateLimitingRuleFields.RuleConfigScope
}

// GetRuleStatus returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.RuleStatus, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetRuleStatus() *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus {
	return v.RateLimitingRuleFields.RuleStatus
}

// GetConditions returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Conditions, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetConditions() []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition {
	return v.RateLimitingRuleFields.Conditions
}

func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.RateLimitingRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule struct {
	Category RateLimitingRuleCategory `json:"category"`

	Description *string `json:"description"`

	Enabled bool `json:"enabled"`

	Id string `json:"id"`

	Name string `json:"name"`

	Labels []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel `json:"labels"`

	ThresholdActionConfigs []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`

	TransactionActionConfigs *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`

	RuleConfigScope *RateLimitingRuleFieldsRuleConfigScope `json:"ruleConfigScope"`

	RuleStatus *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus `json:"ruleStatus"`

	Conditions []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition `json:"conditions"`
}

func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) __premarshalJSON() (*__premarshalGetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule, error) {
	var retval __premarshalGetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule

	retval.Category = v.RateLimitingRuleFields.Category
	retval.Description = v.RateLimitingRuleFields.Description
	retval.Enabled = v.RateLimitingRuleFields.Enabled
	retval.Id = v.RateLimitingRuleFields.Id
	retval.Name = v.RateLimitingRuleFields.Name
	retval.Labels = v.RateLimitingRuleFields.Labels
	retval.ThresholdActionConfigs = v.RateLimitingRuleFields.ThresholdActionConfigs
	retval.TransactionActionConfigs = v.RateLimitingRuleFields.TransactionActionConfigs
	retval.RuleConfigScope = v.RateLimitingRuleFields.RuleConfigScope
	retval.RuleStatus = v.RateLimitingRuleFields.RuleStatus
	retval.Conditions = v.RateLimitingRuleFields.Conditions
	return &retval, nil
}

// GetRateLimitingDetailsResponse is returned by GetRateLimitingDetails on success.
type GetRateLimitingDetailsResponse struct {
	RateLimitingRules GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet `json:"rateLimitingRules"`
}

// GetRateLimitingRules returns GetRateLimitingDetailsResponse.RateLimitingRules, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsResponse) GetRateLimitingRules() GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet {
	return v.RateLimitingRules
}

// GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet includes the requested fields of the GraphQL type RateLimitingRuleResultSet.
type GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet struct {
	Count   int64                                                                                        `json:"count"`
	Total   int64                                                                                        `json:"total"`
	Results []*GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule `json:"results"`
}

// GetCount returns GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet) GetCount() int64 {
	return v.Count
}

// GetTotal returns GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet) GetTotal() int64 {
	return v.Total
}

// GetResults returns GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet) GetResults() []*GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule {
	return v.Results
}

// GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule includes the requested fields of the GraphQL type RateLimitingRule.
// The GraphQL type's documentation follows.
//
// Custom rule to protect endpoints and other services from brute-force attacks
type GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule struct {
	// Rate limit rule name
	Name string `json:"name"`
	// Rate limit rule ID
	Id string `json:"id"`
}

// GetName returns GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Name, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetName() string {
	return v.Name
}

// GetId returns GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Id, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetId() string {
	return v.Id
}

// GetRateLimitingRulesNameResponse is returned by GetRateLimitingRulesName on success.
type GetRateLimitingRulesNameResponse struct {
	RateLimitingRules GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet `json:"rateLimitingRules"`
}

// GetRateLimitingRules returns GetRateLimitingRulesNameResponse.RateLimitingRules, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameResponse) GetRateLimitingRules() GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet {
	return v.RateLimitingRules
}

type InputDataSetCreate struct {
	Color           *string          `json:"color"`
	DataSuppression *DataSuppression `json:"dataSuppression"`
	DataTypeIds     []*string        `json:"dataTypeIds"`
	Description     *string          `json:"description"`
	Enabled         *bool            `json:"enabled"`
	IconType        *string          `json:"iconType"`
	Name            string           `json:"name"`
	Sensitivity     *DataSensitivity `json:"sensitivity"`
}

// GetColor returns InputDataSetCreate.Color, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetColor() *string { return v.Color }

// GetDataSuppression returns InputDataSetCreate.DataSuppression, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetDataSuppression() *DataSuppression { return v.DataSuppression }

// GetDataTypeIds returns InputDataSetCreate.DataTypeIds, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetDataTypeIds() []*string { return v.DataTypeIds }

// GetDescription returns InputDataSetCreate.Description, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetDescription() *string { return v.Description }

// GetEnabled returns InputDataSetCreate.Enabled, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetEnabled() *bool { return v.Enabled }

// GetIconType returns InputDataSetCreate.IconType, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetIconType() *string { return v.IconType }

// GetName returns InputDataSetCreate.Name, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetName() string { return v.Name }

// GetSensitivity returns InputDataSetCreate.Sensitivity, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetSensitivity() *DataSensitivity { return v.Sensitivity }

type InputDataSetUpdate struct {
	Color           *string          `json:"color"`
	DataSuppression *DataSuppression `json:"dataSuppression"`
	DataTypeIds     []*string        `json:"dataTypeIds"`
	Description     *string          `json:"description"`
	Enabled         *bool            `json:"enabled"`
	IconType        *string          `json:"iconType"`
	Id              string           `json:"id"`
	Name            string           `json:"name"`
	Sensitivity     *DataSensitivity `json:"sensitivity"`
}

// GetColor returns InputDataSetUpdate.Color, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetColor() *string { return v.Color }

// GetDataSuppression returns InputDataSetUpdate.DataSuppression, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetDataSuppression() *DataSuppression { return v.DataSuppression }

// GetDataTypeIds returns InputDataSetUpdate.DataTypeIds, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetDataTypeIds() []*string { return v.DataTypeIds }

// GetDescription returns InputDataSetUpdate.Description, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetDescription() *string { return v.Description }

// GetEnabled returns InputDataSetUpdate.Enabled, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetEnabled() *bool { return v.Enabled }

// GetIconType returns InputDataSetUpdate.IconType, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetIconType() *string { return v.IconType }

// GetId returns InputDataSetUpdate.Id, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetId() string { return v.Id }

// GetName returns InputDataSetUpdate.Name, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetName() string { return v.Name }

// GetSensitivity returns InputDataSetUpdate.Sensitivity, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetSensitivity() *DataSensitivity { return v.Sensitivity }

// Threshold config which specifies percentage allowed exceeding a mean countwhich
// is calculated over the specified duration for the given time range
type InputDynamicThresholdConfig struct {
	// Time range over which mean and counts are calculated
	Duration string `json:"duration"`
	// Duration for calculating mean over the specified time range
	MeanCalculationDuration string `json:"meanCalculationDuration"`
	// Allowed percentage exceeding mean
	PercentageExceedingMeanAllowed int64 `json:"percentageExceedingMeanAllowed"`
}

// GetDuration returns InputDynamicThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *InputDynamicThresholdConfig) GetDuration() string { return v.Duration }

// GetMeanCalculationDuration returns InputDynamicThresholdConfig.MeanCalculationDuration, and is useful for accessing the field via an interface.
func (v *InputDynamicThresholdConfig) GetMeanCalculationDuration() string {
	return v.MeanCalculationDuration
}

// GetPercentageExceedingMeanAllowed returns InputDynamicThresholdConfig.PercentageExceedingMeanAllowed, and is useful for accessing the field via an interface.
func (v *InputDynamicThresholdConfig) GetPercentageExceedingMeanAllowed() int64 {
	return v.PercentageExceedingMeanAllowed
}

// Environment scope applicable for rate limit rule
type InputEnvironmentScope struct {
	// List of environment ids applicable for rate limit rule
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns InputEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *InputEnvironmentScope) GetEnvironmentIds() []*string { return v.EnvironmentIds }

type InputIpRangeEnvironmentScope struct {
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns InputIpRangeEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *InputIpRangeEnvironmentScope) GetEnvironmentIds() []*string { return v.EnvironmentIds }

// Ip range rule agent effect
type InputIpRangeRuleAgentEffect struct {
	// Ip range rule agent modification
	AgentModifications []*InputIpRangeRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns InputIpRangeRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleAgentEffect) GetAgentModifications() []*InputIpRangeRuleAgentModification {
	return v.AgentModifications
}

// Malicious sources rule agent modification
type InputIpRangeRuleAgentModification struct {
	// Ip range rule agent modification type
	AgentModificationType IpRangeRuleAgentModificationType `json:"agentModificationType"`
	// Ip range rule header injection
	HeaderInjection InputIpRangeRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns InputIpRangeRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleAgentModification) GetAgentModificationType() IpRangeRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns InputIpRangeRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleAgentModification) GetHeaderInjection() InputIpRangeRuleHeaderInjection {
	return v.HeaderInjection
}

type InputIpRangeRuleCreate struct {
	RuleDetails InputIpRangeRuleDetailsRequest `json:"ruleDetails"`
	RuleScope   *InputIpRangeRuleScope         `json:"ruleScope"`
}

// GetRuleDetails returns InputIpRangeRuleCreate.RuleDetails, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleCreate) GetRuleDetails() InputIpRangeRuleDetailsRequest {
	return v.RuleDetails
}

// GetRuleScope returns InputIpRangeRuleCreate.RuleScope, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleCreate) GetRuleScope() *InputIpRangeRuleScope { return v.RuleScope }

type InputIpRangeRuleDelete struct {
	Id *string `json:"id"`
}

// GetId returns InputIpRangeRuleDelete.Id, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDelete) GetId() *string { return v.Id }

type InputIpRangeRuleDetailsRequest struct {
	Description        *string                                   `json:"description"`
	Effects            []*InputIpRangeRuleEffectWithModification `json:"effects"`
	EventSeverity      *IpRangeEventSeverity                     `json:"eventSeverity"`
	ExpirationDuration *string                                   `json:"expirationDuration"`
	Name               string                                    `json:"name"`
	RawIpRangeData     []*string                                 `json:"rawIpRangeData"`
	RuleAction         IpRangeRuleActionType                     `json:"ruleAction"`
}

// GetDescription returns InputIpRangeRuleDetailsRequest.Description, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetDescription() *string { return v.Description }

// GetEffects returns InputIpRangeRuleDetailsRequest.Effects, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetEffects() []*InputIpRangeRuleEffectWithModification {
	return v.Effects
}

// GetEventSeverity returns InputIpRangeRuleDetailsRequest.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetEventSeverity() *IpRangeEventSeverity {
	return v.EventSeverity
}

// GetExpirationDuration returns InputIpRangeRuleDetailsRequest.ExpirationDuration, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetExpirationDuration() *string { return v.ExpirationDuration }

// GetName returns InputIpRangeRuleDetailsRequest.Name, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetName() string { return v.Name }

// GetRawIpRangeData returns InputIpRangeRuleDetailsRequest.RawIpRangeData, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetRawIpRangeData() []*string { return v.RawIpRangeData }

// GetRuleAction returns InputIpRangeRuleDetailsRequest.RuleAction, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetRuleAction() IpRangeRuleActionType { return v.RuleAction }

// Ip range rule effect with modification
type InputIpRangeRuleEffectWithModification struct {
	// Effects enforced for agent while inline processing of requests
	AgentEffect InputIpRangeRuleAgentEffect `json:"agentEffect"`
	// Ip range rule effect modification type
	RuleEffectType IpRangeRuleEffectModificationType `json:"ruleEffectType"`
}

// GetAgentEffect returns InputIpRangeRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleEffectWithModification) GetAgentEffect() InputIpRangeRuleAgentEffect {
	return v.AgentEffect
}

// GetRuleEffectType returns InputIpRangeRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleEffectWithModification) GetRuleEffectType() IpRangeRuleEffectModificationType {
	return v.RuleEffectType
}

// Actions associated with the rule
type InputIpRangeRuleHeaderInjection struct {
	// Header category
	HeaderCategory IpRangeRuleHeaderCategory `json:"headerCategory"`
	// Header key
	Key string `json:"key"`
	// Header value
	Value string `json:"value"`
}

// GetHeaderCategory returns InputIpRangeRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleHeaderInjection) GetHeaderCategory() IpRangeRuleHeaderCategory {
	return v.HeaderCategory
}

// GetKey returns InputIpRangeRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleHeaderInjection) GetKey() string { return v.Key }

// GetValue returns InputIpRangeRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleHeaderInjection) GetValue() string { return v.Value }

type InputIpRangeRuleScope struct {
	EnvironmentScope *InputIpRangeEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns InputIpRangeRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleScope) GetEnvironmentScope() *InputIpRangeEnvironmentScope {
	return v.EnvironmentScope
}

type InputIpRangeRuleUpdate struct {
	Id          *string                        `json:"id"`
	Disabled    *bool                          `json:"disabled"`
	Internal    *bool                          `json:"internal"`
	RuleDetails InputIpRangeRuleDetailsRequest `json:"ruleDetails"`
	RuleScope   *InputIpRangeRuleScope         `json:"ruleScope"`
}

// GetId returns InputIpRangeRuleUpdate.Id, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleUpdate) GetId() *string { return v.Id }

// GetDisabled returns InputIpRangeRuleUpdate.Disabled, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleUpdate) GetDisabled() *bool { return v.Disabled }

// GetInternal returns InputIpRangeRuleUpdate.Internal, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleUpdate) GetInternal() *bool { return v.Internal }

// GetRuleDetails returns InputIpRangeRuleUpdate.RuleDetails, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleUpdate) GetRuleDetails() InputIpRangeRuleDetailsRequest {
	return v.RuleDetails
}

// GetRuleScope returns InputIpRangeRuleUpdate.RuleScope, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleUpdate) GetRuleScope() *InputIpRangeRuleScope { return v.RuleScope }

type InputIpRangeRulesFilter struct {
	RuleScope InputIpRangeRuleScope `json:"ruleScope"`
}

// GetRuleScope returns InputIpRangeRulesFilter.RuleScope, and is useful for accessing the field via an interface.
func (v *InputIpRangeRulesFilter) GetRuleScope() InputIpRangeRuleScope { return v.RuleScope }

// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type InputMaliciousSourcesRule struct {
	// Rule ID
	Id string `json:"id"`
	// Malicious Sources rule information
	Info InputMaliciousSourcesRuleInfo `json:"info"`
	// Malicious Sources rule scope
	Scope *InputMaliciousSourcesRuleScope `json:"scope"`
	// Malicious Sources rule status
	Status InputMaliciousSourcesRuleStatus `json:"status"`
}

// GetId returns InputMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRule) GetId() string { return v.Id }

// GetInfo returns InputMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRule) GetInfo() InputMaliciousSourcesRuleInfo { return v.Info }

// GetScope returns InputMaliciousSourcesRule.Scope, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRule) GetScope() *InputMaliciousSourcesRuleScope { return v.Scope }

// GetStatus returns InputMaliciousSourcesRule.Status, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRule) GetStatus() InputMaliciousSourcesRuleStatus { return v.Status }

// Actions associated with the rule
type InputMaliciousSourcesRuleAction struct {
	// List of malicious sources rule effect with modification
	Effects []*InputMaliciousSourcesRuleEffectWithModification `json:"effects"`
	// Severity of events generated by the rule
	EventSeverity *MaliciousSourcesRuleEventSeverity `json:"eventSeverity"`
	// Expiration details of the rule
	ExpirationDetails *InputMaliciousSourcesRuleExpirationDetails `json:"expirationDetails"`
	// Rule Action
	RuleActionType MaliciousSourcesRuleActionType `json:"ruleActionType"`
}

// GetEffects returns InputMaliciousSourcesRuleAction.Effects, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAction) GetEffects() []*InputMaliciousSourcesRuleEffectWithModification {
	return v.Effects
}

// GetEventSeverity returns InputMaliciousSourcesRuleAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAction) GetEventSeverity() *MaliciousSourcesRuleEventSeverity {
	return v.EventSeverity
}

// GetExpirationDetails returns InputMaliciousSourcesRuleAction.ExpirationDetails, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAction) GetExpirationDetails() *InputMaliciousSourcesRuleExpirationDetails {
	return v.ExpirationDetails
}

// GetRuleActionType returns InputMaliciousSourcesRuleAction.RuleActionType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAction) GetRuleActionType() MaliciousSourcesRuleActionType {
	return v.RuleActionType
}

// Malicious sources rule agent effect
type InputMaliciousSourcesRuleAgentEffect struct {
	// Malicious sources rule agent modification
	AgentModifications []*InputMaliciousSourcesRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns InputMaliciousSourcesRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAgentEffect) GetAgentModifications() []*InputMaliciousSourcesRuleAgentModification {
	return v.AgentModifications
}

// Malicious sources rule agent modification
type InputMaliciousSourcesRuleAgentModification struct {
	// Malicious sources rule agent modification type
	AgentModificationType MaliciousSourcesRuleAgentModificationType `json:"agentModificationType"`
	// Malicious sources rule header injection
	HeaderInjection InputMaliciousSourcesRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns InputMaliciousSourcesRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAgentModification) GetAgentModificationType() MaliciousSourcesRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns InputMaliciousSourcesRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAgentModification) GetHeaderInjection() InputMaliciousSourcesRuleHeaderInjection {
	return v.HeaderInjection
}

// Condition for the malicious sources rule to be applied
type InputMaliciousSourcesRuleCondition struct {
	// Condition Type for a rule
	ConditionType MaliciousSourcesRuleConditionType `json:"conditionType"`
	// Email domain conditions for the rule to be applied
	EmailDomainCondition *InputMaliciousSourcesRuleEmailDomainCondition `json:"emailDomainCondition"`
	// IP address conditions for the rule to be applied
	IpAddressCondition *InputMaliciousSourcesRuleIpAddressCondition `json:"ipAddressCondition"`
	// IP location type conditions for the rule to be applied
	IpLocationTypeCondition *InputMaliciousSourcesRuleIpLocationTypeCondition `json:"ipLocationTypeCondition"`
	// IP reputation conditions for the rule to be applied
	IpReputationCondition *InputMaliciousSourcesRuleIpReputationCondition `json:"ipReputationCondition"`
	// Region conditions for the rule to be applied
	RegionCondition *InputMaliciousSourcesRuleRegionCondition `json:"regionCondition"`
}

// GetConditionType returns InputMaliciousSourcesRuleCondition.ConditionType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetConditionType() MaliciousSourcesRuleConditionType {
	return v.ConditionType
}

// GetEmailDomainCondition returns InputMaliciousSourcesRuleCondition.EmailDomainCondition, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetEmailDomainCondition() *InputMaliciousSourcesRuleEmailDomainCondition {
	return v.EmailDomainCondition
}

// GetIpAddressCondition returns InputMaliciousSourcesRuleCondition.IpAddressCondition, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetIpAddressCondition() *InputMaliciousSourcesRuleIpAddressCondition {
	return v.IpAddressCondition
}

// GetIpLocationTypeCondition returns InputMaliciousSourcesRuleCondition.IpLocationTypeCondition, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetIpLocationTypeCondition() *InputMaliciousSourcesRuleIpLocationTypeCondition {
	return v.IpLocationTypeCondition
}

// GetIpReputationCondition returns InputMaliciousSourcesRuleCondition.IpReputationCondition, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetIpReputationCondition() *InputMaliciousSourcesRuleIpReputationCondition {
	return v.IpReputationCondition
}

// GetRegionCondition returns InputMaliciousSourcesRuleCondition.RegionCondition, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetRegionCondition() *InputMaliciousSourcesRuleRegionCondition {
	return v.RegionCondition
}

// Input to create malicious source rule
type InputMaliciousSourcesRuleCreate struct {
	// Malicious Sources rule information
	RuleInfo InputMaliciousSourcesRuleInfo `json:"ruleInfo"`
	// Malicious Sources rule scope
	RuleScope *InputMaliciousSourcesRuleScope `json:"ruleScope"`
}

// GetRuleInfo returns InputMaliciousSourcesRuleCreate.RuleInfo, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCreate) GetRuleInfo() InputMaliciousSourcesRuleInfo {
	return v.RuleInfo
}

// GetRuleScope returns InputMaliciousSourcesRuleCreate.RuleScope, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCreate) GetRuleScope() *InputMaliciousSourcesRuleScope {
	return v.RuleScope
}

// Input to delete malicious source rule
type InputMaliciousSourcesRuleDelete struct {
	// Rule ID to be deleted
	Id string `json:"id"`
}

// GetId returns InputMaliciousSourcesRuleDelete.Id, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleDelete) GetId() string { return v.Id }

// Malicious sources rule effect with modification
type InputMaliciousSourcesRuleEffectWithModification struct {
	// Effects enforced for agent while inline processing of requests
	AgentEffect InputMaliciousSourcesRuleAgentEffect `json:"agentEffect"`
	// Malicious sources rule effect modification type
	RuleEffectType MaliciousSourcesRuleEffectModificationType `json:"ruleEffectType"`
}

// GetAgentEffect returns InputMaliciousSourcesRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEffectWithModification) GetAgentEffect() InputMaliciousSourcesRuleAgentEffect {
	return v.AgentEffect
}

// GetRuleEffectType returns InputMaliciousSourcesRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEffectWithModification) GetRuleEffectType() MaliciousSourcesRuleEffectModificationType {
	return v.RuleEffectType
}

// Email domain conditions for the rule to be applied
type InputMaliciousSourcesRuleEmailDomainCondition struct {
	// boolean denoting whether the rule should apply to data leaked email
	DataLeakedEmail *bool `json:"dataLeakedEmail"`
	// boolean denoting whether the rule should apply to disposable email domains
	DisposableEmailDomain *bool `json:"disposableEmailDomain"`
	// list of email domain where rule should apply
	EmailDomains []*string `json:"emailDomains"`
	// email fraud score where rule should apply
	EmailFraudScore *InputMaliciousSourcesRuleEmailFraudScore `json:"emailFraudScore"`
	// list of email regexes where rule should apply
	EmailRegexes []*string `json:"emailRegexes"`
}

// GetDataLeakedEmail returns InputMaliciousSourcesRuleEmailDomainCondition.DataLeakedEmail, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailDomainCondition) GetDataLeakedEmail() *bool {
	return v.DataLeakedEmail
}

// GetDisposableEmailDomain returns InputMaliciousSourcesRuleEmailDomainCondition.DisposableEmailDomain, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailDomainCondition) GetDisposableEmailDomain() *bool {
	return v.DisposableEmailDomain
}

// GetEmailDomains returns InputMaliciousSourcesRuleEmailDomainCondition.EmailDomains, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailDomainCondition) GetEmailDomains() []*string {
	return v.EmailDomains
}

// GetEmailFraudScore returns InputMaliciousSourcesRuleEmailDomainCondition.EmailFraudScore, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailDomainCondition) GetEmailFraudScore() *InputMaliciousSourcesRuleEmailFraudScore {
	return v.EmailFraudScore
}

// GetEmailRegexes returns InputMaliciousSourcesRuleEmailDomainCondition.EmailRegexes, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailDomainCondition) GetEmailRegexes() []*string {
	return v.EmailRegexes
}

// email fraud score where rule should apply
type InputMaliciousSourcesRuleEmailFraudScore struct {
	// Email Fraud Score type for a rule
	EmailFraudScoreType MaliciousSourcesRuleEmailFraudScoreType `json:"emailFraudScoreType"`
	// Minimum Email Fraud Score
	MinEmailFraudScore *int64 `json:"minEmailFraudScore"`
	// Minimum Email Fraud Score Level
	MinEmailFraudScoreLevel *MaliciousSourcesRuleEmailFraudScoreLevel `json:"minEmailFraudScoreLevel"`
}

// GetEmailFraudScoreType returns InputMaliciousSourcesRuleEmailFraudScore.EmailFraudScoreType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailFraudScore) GetEmailFraudScoreType() MaliciousSourcesRuleEmailFraudScoreType {
	return v.EmailFraudScoreType
}

// GetMinEmailFraudScore returns InputMaliciousSourcesRuleEmailFraudScore.MinEmailFraudScore, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailFraudScore) GetMinEmailFraudScore() *int64 {
	return v.MinEmailFraudScore
}

// GetMinEmailFraudScoreLevel returns InputMaliciousSourcesRuleEmailFraudScore.MinEmailFraudScoreLevel, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailFraudScore) GetMinEmailFraudScoreLevel() *MaliciousSourcesRuleEmailFraudScoreLevel {
	return v.MinEmailFraudScoreLevel
}

// Environment Scope on which the rule will apply
type InputMaliciousSourcesRuleEnvironmentScope struct {
	// List of environments on which the rule should apply
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns InputMaliciousSourcesRuleEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

// Expiration details of the rule
type InputMaliciousSourcesRuleExpirationDetails struct {
	// Requested expiration duration for the rule
	ExpirationDuration string `json:"expirationDuration"`
	// Requested expiration timestamp for the rule
	ExpirationTimestamp *string `json:"expirationTimestamp"`
}

// GetExpirationDuration returns InputMaliciousSourcesRuleExpirationDetails.ExpirationDuration, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleExpirationDetails) GetExpirationDuration() string {
	return v.ExpirationDuration
}

// GetExpirationTimestamp returns InputMaliciousSourcesRuleExpirationDetails.ExpirationTimestamp, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleExpirationDetails) GetExpirationTimestamp() *string {
	return v.ExpirationTimestamp
}

// Actions associated with the rule
type InputMaliciousSourcesRuleHeaderInjection struct {
	// Header category
	HeaderCategory MaliciousSourcesRuleHeaderCategory `json:"headerCategory"`
	// Header key
	Key string `json:"key"`
	// Header value
	Value string `json:"value"`
}

// GetHeaderCategory returns InputMaliciousSourcesRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleHeaderInjection) GetHeaderCategory() MaliciousSourcesRuleHeaderCategory {
	return v.HeaderCategory
}

// GetKey returns InputMaliciousSourcesRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleHeaderInjection) GetKey() string { return v.Key }

// GetValue returns InputMaliciousSourcesRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleHeaderInjection) GetValue() string { return v.Value }

// Malicious Sources rule information
type InputMaliciousSourcesRuleInfo struct {
	// Actions associated with the rule
	Action InputMaliciousSourcesRuleAction `json:"action"`
	// Condition for the malicious sources rule to be applied
	Conditions []*InputMaliciousSourcesRuleCondition `json:"conditions"`
	// Rule description
	Description *string `json:"description"`
	// Rule name
	Name string `json:"name"`
}

// GetAction returns InputMaliciousSourcesRuleInfo.Action, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleInfo) GetAction() InputMaliciousSourcesRuleAction { return v.Action }

// GetConditions returns InputMaliciousSourcesRuleInfo.Conditions, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleInfo) GetConditions() []*InputMaliciousSourcesRuleCondition {
	return v.Conditions
}

// GetDescription returns InputMaliciousSourcesRuleInfo.Description, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleInfo) GetDescription() *string { return v.Description }

// GetName returns InputMaliciousSourcesRuleInfo.Name, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleInfo) GetName() string { return v.Name }

// IP address conditions for the rule to be applied
type InputMaliciousSourcesRuleIpAddressCondition struct {
	// List of IP ranges following CIDR syntax
	CidrIpRanges []*string `json:"cidrIpRanges"`
	// List of IP addresses
	IpAddresses []*string `json:"ipAddresses"`
}

// GetCidrIpRanges returns InputMaliciousSourcesRuleIpAddressCondition.CidrIpRanges, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpAddressCondition) GetCidrIpRanges() []*string {
	return v.CidrIpRanges
}

// GetIpAddresses returns InputMaliciousSourcesRuleIpAddressCondition.IpAddresses, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpAddressCondition) GetIpAddresses() []*string {
	return v.IpAddresses
}

// IP location type conditions for the rule to be applied
type InputMaliciousSourcesRuleIpLocationTypeCondition struct {
	// IP location types where rule should apply
	IpLocationTypes []*MaliciousSourcesRuleIpLocationType `json:"ipLocationTypes"`
}

// GetIpLocationTypes returns InputMaliciousSourcesRuleIpLocationTypeCondition.IpLocationTypes, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpLocationTypeCondition) GetIpLocationTypes() []*MaliciousSourcesRuleIpLocationType {
	return v.IpLocationTypes
}

// IP reputation conditions for the rule to be applied
type InputMaliciousSourcesRuleIpReputationCondition struct {
	// IP reputation type for a rule
	IpReputationConditionType MaliciousSourcesRuleIpReputationConditionType `json:"ipReputationConditionType"`
	// Minimum IP Reputation Score
	MinIpReputationScore *int64 `json:"minIpReputationScore"`
	// Minimum IP Reputation Severity Level
	MinIpReputationSeverity *MaliciousSourcesRuleIpReputationSeverity `json:"minIpReputationSeverity"`
}

// GetIpReputationConditionType returns InputMaliciousSourcesRuleIpReputationCondition.IpReputationConditionType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpReputationCondition) GetIpReputationConditionType() MaliciousSourcesRuleIpReputationConditionType {
	return v.IpReputationConditionType
}

// GetMinIpReputationScore returns InputMaliciousSourcesRuleIpReputationCondition.MinIpReputationScore, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpReputationCondition) GetMinIpReputationScore() *int64 {
	return v.MinIpReputationScore
}

// GetMinIpReputationSeverity returns InputMaliciousSourcesRuleIpReputationCondition.MinIpReputationSeverity, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpReputationCondition) GetMinIpReputationSeverity() *MaliciousSourcesRuleIpReputationSeverity {
	return v.MinIpReputationSeverity
}

// Region on which rule should apply
type InputMaliciousSourcesRuleRegion struct {
	// Country ISO code
	CountryIsoCode *string `json:"countryIsoCode"`
	// Region Type for a rule
	RegionType MaliciousSourcesRuleRegionType `json:"regionType"`
}

// GetCountryIsoCode returns InputMaliciousSourcesRuleRegion.CountryIsoCode, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleRegion) GetCountryIsoCode() *string { return v.CountryIsoCode }

// GetRegionType returns InputMaliciousSourcesRuleRegion.RegionType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleRegion) GetRegionType() MaliciousSourcesRuleRegionType {
	return v.RegionType
}

// Region conditions for the rule to be applied
type InputMaliciousSourcesRuleRegionCondition struct {
	// Regions on which rule should apply
	Regions []*InputMaliciousSourcesRuleRegion `json:"regions"`
}

// GetRegions returns InputMaliciousSourcesRuleRegionCondition.Regions, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleRegionCondition) GetRegions() []*InputMaliciousSourcesRuleRegion {
	return v.Regions
}

// Malicious Sources rule scope
type InputMaliciousSourcesRuleScope struct {
	// Environment Scope on which the rule will apply
	EnvironmentScope *InputMaliciousSourcesRuleEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns InputMaliciousSourcesRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleScope) GetEnvironmentScope() *InputMaliciousSourcesRuleEnvironmentScope {
	return v.EnvironmentScope
}

// Malicious Sources rule status
type InputMaliciousSourcesRuleStatus struct {
	// Disables rule
	Disabled bool `json:"disabled"`
	// Sets rule as internal, visible only to traceable users. Consumed only if disabled is set to true
	Internal *bool `json:"internal"`
}

// GetDisabled returns InputMaliciousSourcesRuleStatus.Disabled, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleStatus) GetDisabled() bool { return v.Disabled }

// GetInternal returns InputMaliciousSourcesRuleStatus.Internal, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleStatus) GetInternal() *bool { return v.Internal }

// Input to update malicious source rule
type InputMaliciousSourcesRuleUpdate struct {
	// Updated Malicious Sources rule
	Rule InputMaliciousSourcesRule `json:"rule"`
}

// GetRule returns InputMaliciousSourcesRuleUpdate.Rule, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleUpdate) GetRule() InputMaliciousSourcesRule { return v.Rule }

// Filter to fetch malicious source rule
type InputMaliciousSourcesRulesFilter struct {
	// Rule Scope
	RuleScope InputMaliciousSourcesRuleScope `json:"ruleScope"`
}

// GetRuleScope returns InputMaliciousSourcesRulesFilter.RuleScope, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRulesFilter) GetRuleScope() InputMaliciousSourcesRuleScope {
	return v.RuleScope
}

// Region identifier schema for rate limit region condition
type InputRateLimitingRegionIdentifier struct {
	// Country ISO code for region identifier
	CountryIsoCode string `json:"countryIsoCode"`
}

// GetCountryIsoCode returns InputRateLimitingRegionIdentifier.CountryIsoCode, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRegionIdentifier) GetCountryIsoCode() string { return v.CountryIsoCode }

// Custom rule to protect endpoints and other services from brute-force attacks
type InputRateLimitingRule struct {
	// Rate limit rule ID
	Id string `json:"id"`
	// Rate limit rule category
	Category RateLimitingRuleCategory `json:"category"`
	// List of rate limit rule conditions
	Conditions []*InputRateLimitingRuleCondition `json:"conditions"`
	// Rate limit rule description
	Description *string `json:"description"`
	// Rate limit rule enabled status
	Enabled bool `json:"enabled"`
	// Rate limit rule custom labels
	Labels []*InputRateLimitingRuleLabel `json:"labels"`
	// Rate limit rule name
	Name string `json:"name"`
	// Rate limit rule condition
	RateLimitingRuleCondition *InputRateLimitingRuleCondition `json:"rateLimitingRuleCondition"`
	// Rate limit rule scope
	RuleConfigScope *InputRuleConfigScope `json:"ruleConfigScope"`
	// Rate limit rule status
	RuleStatus *InputRateLimitingRuleStatus `json:"ruleStatus"`
	// List of configs containing thresholds and actions for a rate limit rule
	ThresholdActionConfigs []*InputRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`
	// Transaction action config for DLP rule
	TransactionActionConfigs *InputRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`
}

// GetId returns InputRateLimitingRule.Id, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetId() string { return v.Id }

// GetCategory returns InputRateLimitingRule.Category, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetCategory() RateLimitingRuleCategory { return v.Category }

// GetConditions returns InputRateLimitingRule.Conditions, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetConditions() []*InputRateLimitingRuleCondition {
	return v.Conditions
}

// GetDescription returns InputRateLimitingRule.Description, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetDescription() *string { return v.Description }

// GetEnabled returns InputRateLimitingRule.Enabled, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetEnabled() bool { return v.Enabled }

// GetLabels returns InputRateLimitingRule.Labels, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetLabels() []*InputRateLimitingRuleLabel { return v.Labels }

// GetName returns InputRateLimitingRule.Name, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetName() string { return v.Name }

// GetRateLimitingRuleCondition returns InputRateLimitingRule.RateLimitingRuleCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetRateLimitingRuleCondition() *InputRateLimitingRuleCondition {
	return v.RateLimitingRuleCondition
}

// GetRuleConfigScope returns InputRateLimitingRule.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetRuleConfigScope() *InputRuleConfigScope { return v.RuleConfigScope }

// GetRuleStatus returns InputRateLimitingRule.RuleStatus, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetRuleStatus() *InputRateLimitingRuleStatus { return v.RuleStatus }

// GetThresholdActionConfigs returns InputRateLimitingRule.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetThresholdActionConfigs() []*InputRateLimitingRuleThresholdActionConfig {
	return v.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns InputRateLimitingRule.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetTransactionActionConfigs() *InputRateLimitingTransactionActionConfig {
	return v.TransactionActionConfigs
}

// Action to take if a rate limit rule is applicable
type InputRateLimitingRuleAction struct {
	// Type of action
	ActionType RateLimitingRuleActionType `json:"actionType"`
	// Details regarding alert action
	Alert *InputRateLimitingRuleAlertAction `json:"alert"`
	// Details regarding allow action
	Allow *InputRateLimitingRuleAllowAction `json:"allow"`
	// Details regarding block action
	Block *InputRateLimitingRuleBlockAction `json:"block"`
	// Details regarding mark for testing action
	MarkForTesting *InputRateLimitingRuleMarkForTestingAction `json:"markForTesting"`
}

// GetActionType returns InputRateLimitingRuleAction.ActionType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAction) GetActionType() RateLimitingRuleActionType { return v.ActionType }

// GetAlert returns InputRateLimitingRuleAction.Alert, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAction) GetAlert() *InputRateLimitingRuleAlertAction { return v.Alert }

// GetAllow returns InputRateLimitingRuleAction.Allow, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAction) GetAllow() *InputRateLimitingRuleAllowAction { return v.Allow }

// GetBlock returns InputRateLimitingRuleAction.Block, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAction) GetBlock() *InputRateLimitingRuleBlockAction { return v.Block }

// GetMarkForTesting returns InputRateLimitingRuleAction.MarkForTesting, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAction) GetMarkForTesting() *InputRateLimitingRuleMarkForTestingAction {
	return v.MarkForTesting
}

// Details regarding agent effect applicable on a rate limit rule
type InputRateLimitingRuleAgentEffect struct {
	// List of agent modifications to be done as part of rate limiting rule action
	AgentModifications []*InputRateLimitingRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns InputRateLimitingRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAgentEffect) GetAgentModifications() []*InputRateLimitingRuleAgentModification {
	return v.AgentModifications
}

// Details regarding agent modification applicable on a rate limit rule
type InputRateLimitingRuleAgentModification struct {
	// Type of agent modification to be performed
	AgentModificationType RateLimitingRuleAgentModificationType `json:"agentModificationType"`
	// Details of header injection action
	HeaderInjection InputRateLimitingRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns InputRateLimitingRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAgentModification) GetAgentModificationType() RateLimitingRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns InputRateLimitingRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAgentModification) GetHeaderInjection() InputRateLimitingRuleHeaderInjection {
	return v.HeaderInjection
}

// Details regarding alert action applicable on a rate limit rule
type InputRateLimitingRuleAlertAction struct {
	// Agent effect associated with this action
	AgentEffect *InputRateLimitingRuleAgentEffect `json:"agentEffect"`
	// Severity of alert to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
}

// GetAgentEffect returns InputRateLimitingRuleAlertAction.AgentEffect, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAlertAction) GetAgentEffect() *InputRateLimitingRuleAgentEffect {
	return v.AgentEffect
}

// GetEventSeverity returns InputRateLimitingRuleAlertAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAlertAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// Details regarding allow action applicable on a rate limit rule
type InputRateLimitingRuleAllowAction struct {
	// Duration to allow the malicious actor
	Duration *string `json:"duration"`
}

// GetDuration returns InputRateLimitingRuleAllowAction.Duration, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAllowAction) GetDuration() *string { return v.Duration }

// Details regarding block action applicable on a rate limit rule
type InputRateLimitingRuleBlockAction struct {
	// Duration to block the malicious actor
	Duration *string `json:"duration"`
	// Severity of blocked event to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
	// Use duration in threshold config
	UseThresholdDuration *bool `json:"useThresholdDuration"`
}

// GetDuration returns InputRateLimitingRuleBlockAction.Duration, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleBlockAction) GetDuration() *string { return v.Duration }

// GetEventSeverity returns InputRateLimitingRuleBlockAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleBlockAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// GetUseThresholdDuration returns InputRateLimitingRuleBlockAction.UseThresholdDuration, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleBlockAction) GetUseThresholdDuration() *bool {
	return v.UseThresholdDuration
}

// Condition applicable for a rate limit rule
type InputRateLimitingRuleCondition struct {
	// RateLimitingRuleCondition type
	ConditionType *RateLimitingRuleConditionType `json:"conditionType"`
	// Rate limit rule leaf condition
	LeafCondition *InputRateLimitingRuleLeafCondition `json:"leafCondition"`
	// Rate limit rule logical condition
	LogicalCondition *InputRateLimitingRuleLogicalCondition `json:"logicalCondition"`
}

// GetConditionType returns InputRateLimitingRuleCondition.ConditionType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleCondition) GetConditionType() *RateLimitingRuleConditionType {
	return v.ConditionType
}

// GetLeafCondition returns InputRateLimitingRuleCondition.LeafCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleCondition) GetLeafCondition() *InputRateLimitingRuleLeafCondition {
	return v.LeafCondition
}

// GetLogicalCondition returns InputRateLimitingRuleCondition.LogicalCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleCondition) GetLogicalCondition() *InputRateLimitingRuleLogicalCondition {
	return v.LogicalCondition
}

// Details regarding rate limit rule
type InputRateLimitingRuleData struct {
	// Rate limit rule category
	Category RateLimitingRuleCategory `json:"category"`
	// List of rate limit rule conditions
	Conditions []*InputRateLimitingRuleCondition `json:"conditions"`
	// Rate limit rule description
	Description *string `json:"description"`
	// Rate limit rule enabled status
	Enabled bool `json:"enabled"`
	// Rate limit rule custom labels
	Labels []*InputRateLimitingRuleLabel `json:"labels"`
	// Rate limit rule name
	Name string `json:"name"`
	// Rate limit rule condition
	RateLimitingRuleCondition *InputRateLimitingRuleCondition `json:"rateLimitingRuleCondition"`
	// Rate limit rule scope
	RuleConfigScope *InputRuleConfigScope `json:"ruleConfigScope"`
	// Rate limit rule status
	RuleStatus *InputRateLimitingRuleStatus `json:"ruleStatus"`
	// List of configs containing thresholds and actions for a rate limit rule
	ThresholdActionConfigs []*InputRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`
	// Transaction action config for a rate limit rule
	TransactionActionConfigs *InputRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`
}

// GetCategory returns InputRateLimitingRuleData.Category, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetCategory() RateLimitingRuleCategory { return v.Category }

// GetConditions returns InputRateLimitingRuleData.Conditions, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetConditions() []*InputRateLimitingRuleCondition {
	return v.Conditions
}

// GetDescription returns InputRateLimitingRuleData.Description, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetDescription() *string { return v.Description }

// GetEnabled returns InputRateLimitingRuleData.Enabled, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetEnabled() bool { return v.Enabled }

// GetLabels returns InputRateLimitingRuleData.Labels, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetLabels() []*InputRateLimitingRuleLabel { return v.Labels }

// GetName returns InputRateLimitingRuleData.Name, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetName() string { return v.Name }

// GetRateLimitingRuleCondition returns InputRateLimitingRuleData.RateLimitingRuleCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetRateLimitingRuleCondition() *InputRateLimitingRuleCondition {
	return v.RateLimitingRuleCondition
}

// GetRuleConfigScope returns InputRateLimitingRuleData.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetRuleConfigScope() *InputRuleConfigScope {
	return v.RuleConfigScope
}

// GetRuleStatus returns InputRateLimitingRuleData.RuleStatus, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetRuleStatus() *InputRateLimitingRuleStatus { return v.RuleStatus }

// GetThresholdActionConfigs returns InputRateLimitingRuleData.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetThresholdActionConfigs() []*InputRateLimitingRuleThresholdActionConfig {
	return v.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns InputRateLimitingRuleData.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetTransactionActionConfigs() *InputRateLimitingTransactionActionConfig {
	return v.TransactionActionConfigs
}

// Dataset and datatype condition for a rate limit rule
type InputRateLimitingRuleDatatypeCondition struct {
	// data location type
	DataLocation *RateLimitingRuleDataLocation `json:"dataLocation"`
	// List of data sensitivity levels
	DataSensitivityLevels []*RateLimitingRuleDataSensitivityLevel `json:"dataSensitivityLevels"`
	// List of dataset ids applicable
	DatasetIds []*string `json:"datasetIds"`
	// List of datatype ids applicable
	DatatypeIds []*string `json:"datatypeIds"`
	// datatype matching
	DatatypeMatching *InputRateLimitingRuleDatatypeMatching `json:"datatypeMatching"`
}

// GetDataLocation returns InputRateLimitingRuleDatatypeCondition.DataLocation, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeCondition) GetDataLocation() *RateLimitingRuleDataLocation {
	return v.DataLocation
}

// GetDataSensitivityLevels returns InputRateLimitingRuleDatatypeCondition.DataSensitivityLevels, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeCondition) GetDataSensitivityLevels() []*RateLimitingRuleDataSensitivityLevel {
	return v.DataSensitivityLevels
}

// GetDatasetIds returns InputRateLimitingRuleDatatypeCondition.DatasetIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeCondition) GetDatasetIds() []*string { return v.DatasetIds }

// GetDatatypeIds returns InputRateLimitingRuleDatatypeCondition.DatatypeIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeCondition) GetDatatypeIds() []*string { return v.DatatypeIds }

// GetDatatypeMatching returns InputRateLimitingRuleDatatypeCondition.DatatypeMatching, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeCondition) GetDatatypeMatching() *InputRateLimitingRuleDatatypeMatching {
	return v.DatatypeMatching
}

// Rate limiting datatype matching
type InputRateLimitingRuleDatatypeMatching struct {
	// datatype matching type
	DatatypeMatchingType *RateLimitingRuleDatatypeMatchingType `json:"datatypeMatchingType"`
	// regex based matching
	RegexBasedMatching *InputRateLimitingRuleRegexBasedMatching `json:"regexBasedMatching"`
}

// GetDatatypeMatchingType returns InputRateLimitingRuleDatatypeMatching.DatatypeMatchingType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeMatching) GetDatatypeMatchingType() *RateLimitingRuleDatatypeMatchingType {
	return v.DatatypeMatchingType
}

// GetRegexBasedMatching returns InputRateLimitingRuleDatatypeMatching.RegexBasedMatching, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeMatching) GetRegexBasedMatching() *InputRateLimitingRuleRegexBasedMatching {
	return v.RegexBasedMatching
}

// Email domain condition for a rate limit rule
type InputRateLimitingRuleEmailDomainCondition struct {
	// List of email domains
	EmailDomains []*string `json:"emailDomains"`
	// List of email regexes
	EmailRegexes []*string `json:"emailRegexes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetEmailDomains returns InputRateLimitingRuleEmailDomainCondition.EmailDomains, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleEmailDomainCondition) GetEmailDomains() []*string {
	return v.EmailDomains
}

// GetEmailRegexes returns InputRateLimitingRuleEmailDomainCondition.EmailRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleEmailDomainCondition) GetEmailRegexes() []*string {
	return v.EmailRegexes
}

// GetExclude returns InputRateLimitingRuleEmailDomainCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleEmailDomainCondition) GetExclude() *bool { return v.Exclude }

// Entity scope condition applicable on a rate limit rule
type InputRateLimitingRuleEntityScope struct {
	// List of entity ids applicable
	EntityIds []*string `json:"entityIds"`
	// Entity type
	EntityType RateLimitingRuleEntityType `json:"entityType"`
}

// GetEntityIds returns InputRateLimitingRuleEntityScope.EntityIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleEntityScope) GetEntityIds() []*string { return v.EntityIds }

// GetEntityType returns InputRateLimitingRuleEntityScope.EntityType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleEntityScope) GetEntityType() RateLimitingRuleEntityType {
	return v.EntityType
}

// Details regarding header injection applicable on a rate limit rule
type InputRateLimitingRuleHeaderInjection struct {
	// Category defining where the header needs to be injected
	HeaderCategory RateLimitingRuleMatchCategory `json:"headerCategory"`
	// Header name to be injected
	Key string `json:"key"`
	// Header value to be injected
	Value string `json:"value"`
}

// GetHeaderCategory returns InputRateLimitingRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleHeaderInjection) GetHeaderCategory() RateLimitingRuleMatchCategory {
	return v.HeaderCategory
}

// GetKey returns InputRateLimitingRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleHeaderInjection) GetKey() string { return v.Key }

// GetValue returns InputRateLimitingRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleHeaderInjection) GetValue() string { return v.Value }

// Ip abuse velocity condition applicable on a rate limit rule
type InputRateLimitingRuleIpAbuseVelocityCondition struct {
	// Minimum Ip abuse velocity applicable
	MinIpAbuseVelocity RateLimitingRuleIpAbuseVelocity `json:"minIpAbuseVelocity"`
}

// GetMinIpAbuseVelocity returns InputRateLimitingRuleIpAbuseVelocityCondition.MinIpAbuseVelocity, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAbuseVelocityCondition) GetMinIpAbuseVelocity() RateLimitingRuleIpAbuseVelocity {
	return v.MinIpAbuseVelocity
}

// IP address condition applicable on a rate limit rule
type InputRateLimitingRuleIpAddressCondition struct {
	// List of CIDR IP ranges
	CidrIpRanges []*string `json:"cidrIpRanges"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// ip address condition type
	IpAddressConditionType *RateLimitingRuleIpAddressConditionType `json:"ipAddressConditionType"`
	// List of IP addresses
	IpAddresses []*string `json:"ipAddresses"`
	// List of IP addresses and CIDR IP ranges
	RawInputIpData []*string `json:"rawInputIpData"`
}

// GetCidrIpRanges returns InputRateLimitingRuleIpAddressCondition.CidrIpRanges, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAddressCondition) GetCidrIpRanges() []*string { return v.CidrIpRanges }

// GetExclude returns InputRateLimitingRuleIpAddressCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAddressCondition) GetExclude() *bool { return v.Exclude }

// GetIpAddressConditionType returns InputRateLimitingRuleIpAddressCondition.IpAddressConditionType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAddressCondition) GetIpAddressConditionType() *RateLimitingRuleIpAddressConditionType {
	return v.IpAddressConditionType
}

// GetIpAddresses returns InputRateLimitingRuleIpAddressCondition.IpAddresses, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAddressCondition) GetIpAddresses() []*string { return v.IpAddresses }

// GetRawInputIpData returns InputRateLimitingRuleIpAddressCondition.RawInputIpData, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAddressCondition) GetRawInputIpData() []*string {
	return v.RawInputIpData
}

// Ip asn condition for a rate limit rule
type InputRateLimitingRuleIpAsnCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of ip asn regexes
	IpAsnRegexes []*string `json:"ipAsnRegexes"`
}

// GetExclude returns InputRateLimitingRuleIpAsnCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAsnCondition) GetExclude() *bool { return v.Exclude }

// GetIpAsnRegexes returns InputRateLimitingRuleIpAsnCondition.IpAsnRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAsnCondition) GetIpAsnRegexes() []*string { return v.IpAsnRegexes }

// IP connection type condition for a rate limit rule
type InputRateLimitingRuleIpConnectionTypeCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of ip connection types
	IpConnectionTypes []*RateLimitingRuleIpConnectionType `json:"ipConnectionTypes"`
}

// GetExclude returns InputRateLimitingRuleIpConnectionTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpConnectionTypeCondition) GetExclude() *bool { return v.Exclude }

// GetIpConnectionTypes returns InputRateLimitingRuleIpConnectionTypeCondition.IpConnectionTypes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpConnectionTypeCondition) GetIpConnectionTypes() []*RateLimitingRuleIpConnectionType {
	return v.IpConnectionTypes
}

// IP location type condition applicable on a rate limit rule
type InputRateLimitingRuleIpLocationTypeCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of IP locations types applicable
	IpLocationTypes []*RateLimitingRuleIpLocationType `json:"ipLocationTypes"`
}

// GetExclude returns InputRateLimitingRuleIpLocationTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpLocationTypeCondition) GetExclude() *bool { return v.Exclude }

// GetIpLocationTypes returns InputRateLimitingRuleIpLocationTypeCondition.IpLocationTypes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpLocationTypeCondition) GetIpLocationTypes() []*RateLimitingRuleIpLocationType {
	return v.IpLocationTypes
}

// Ip organisation condition for a rate limit rule
type InputRateLimitingRuleIpOrganisationCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of ip organisation regexes
	IpOrganisationRegexes []*string `json:"ipOrganisationRegexes"`
}

// GetExclude returns InputRateLimitingRuleIpOrganisationCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpOrganisationCondition) GetExclude() *bool { return v.Exclude }

// GetIpOrganisationRegexes returns InputRateLimitingRuleIpOrganisationCondition.IpOrganisationRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpOrganisationCondition) GetIpOrganisationRegexes() []*string {
	return v.IpOrganisationRegexes
}

// IP reputation condition applicable on a rate limit rule
type InputRateLimitingRuleIpReputationCondition struct {
	// Minimum IP reputation severity applicable
	MinIpReputationSeverity RateLimitingRuleIpReputationSeverity `json:"minIpReputationSeverity"`
}

// GetMinIpReputationSeverity returns InputRateLimitingRuleIpReputationCondition.MinIpReputationSeverity, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpReputationCondition) GetMinIpReputationSeverity() RateLimitingRuleIpReputationSeverity {
	return v.MinIpReputationSeverity
}

// Key value condition applicable on a rate limit rule
type InputRateLimitingRuleKeyValueCondition struct {
	// Key condition
	KeyCondition *InputRateLimitingRuleStringCondition `json:"keyCondition"`
	// Key value condition metadata type
	MetadataType *RateLimitingRuleKeyValueConditionMetadataType `json:"metadataType"`
	// Type of key value condition - static value or lhs-rhs keys
	KeyValueType *RateLimitingRuleKeyValueConditionType `json:"keyValueType"`
	// LHS-RHS keys' values matching condition
	LhsRhsCondition *InputRateLimitingRuleLhsRhsKeysCondition `json:"lhsRhsCondition"`
	// Static values matching condition
	StaticValueCondition *InputRateLimitingRuleStaticValueCondition `json:"staticValueCondition"`
	// Value condition
	ValueCondition *InputRateLimitingRuleStringCondition `json:"valueCondition"`
}

// GetKeyCondition returns InputRateLimitingRuleKeyValueCondition.KeyCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetKeyCondition() *InputRateLimitingRuleStringCondition {
	return v.KeyCondition
}

// GetMetadataType returns InputRateLimitingRuleKeyValueCondition.MetadataType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetMetadataType() *RateLimitingRuleKeyValueConditionMetadataType {
	return v.MetadataType
}

// GetKeyValueType returns InputRateLimitingRuleKeyValueCondition.KeyValueType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetKeyValueType() *RateLimitingRuleKeyValueConditionType {
	return v.KeyValueType
}

// GetLhsRhsCondition returns InputRateLimitingRuleKeyValueCondition.LhsRhsCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetLhsRhsCondition() *InputRateLimitingRuleLhsRhsKeysCondition {
	return v.LhsRhsCondition
}

// GetStaticValueCondition returns InputRateLimitingRuleKeyValueCondition.StaticValueCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetStaticValueCondition() *InputRateLimitingRuleStaticValueCondition {
	return v.StaticValueCondition
}

// GetValueCondition returns InputRateLimitingRuleKeyValueCondition.ValueCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetValueCondition() *InputRateLimitingRuleStringCondition {
	return v.ValueCondition
}

// Key-value pair for labels
type InputRateLimitingRuleLabel struct {
	// Key
	Key string `json:"key"`
	// Value
	Value string `json:"value"`
}

// GetKey returns InputRateLimitingRuleLabel.Key, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLabel) GetKey() string { return v.Key }

// GetValue returns InputRateLimitingRuleLabel.Value, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLabel) GetValue() string { return v.Value }

// Label scope condition applicable on a rate limit rule
type InputRateLimitingRuleLabelScope struct {
	// List of label ids applicable
	LabelIds []*string `json:"labelIds"`
	// Label type
	LabelType RateLimitingRuleLabelType `json:"labelType"`
}

// GetLabelIds returns InputRateLimitingRuleLabelScope.LabelIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLabelScope) GetLabelIds() []*string { return v.LabelIds }

// GetLabelType returns InputRateLimitingRuleLabelScope.LabelType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLabelScope) GetLabelType() RateLimitingRuleLabelType {
	return v.LabelType
}

// Leaf condition applicable on a rate limit rule
type InputRateLimitingRuleLeafCondition struct {
	// Leaf condition type
	ConditionType RateLimitingRuleLeafConditionType `json:"conditionType"`
	// Dataset and datatype condition applicable on a rate limit rule
	DatatypeCondition *InputRateLimitingRuleDatatypeCondition `json:"datatypeCondition"`
	// Email domain condition applicable on a rate limit rule
	EmailDomainCondition *InputRateLimitingRuleEmailDomainCondition `json:"emailDomainCondition"`
	// Ip abuse velocity condition applicable on a rate limit rule
	IpAbuseVelocityCondition *InputRateLimitingRuleIpAbuseVelocityCondition `json:"ipAbuseVelocityCondition"`
	// IP address condition applicable on a rate limit rule
	IpAddressCondition *InputRateLimitingRuleIpAddressCondition `json:"ipAddressCondition"`
	// Ip asn condition applicable on a rate limit rule
	IpAsnCondition *InputRateLimitingRuleIpAsnCondition `json:"ipAsnCondition"`
	// IP connection type condition applicable on a rate limit rule
	IpConnectionTypeCondition *InputRateLimitingRuleIpConnectionTypeCondition `json:"ipConnectionTypeCondition"`
	// IP location type condition applicable on a rate limit rule
	IpLocationTypeCondition *InputRateLimitingRuleIpLocationTypeCondition `json:"ipLocationTypeCondition"`
	// Ip organisation condition applicable on a rate limit rule
	IpOrganisationCondition *InputRateLimitingRuleIpOrganisationCondition `json:"ipOrganisationCondition"`
	// IP reputation condition applicable on a rate limit rule
	IpReputationCondition *InputRateLimitingRuleIpReputationCondition `json:"ipReputationCondition"`
	// Key value condition applicable on a rate limit rule
	KeyValueCondition *InputRateLimitingRuleKeyValueCondition `json:"keyValueCondition"`
	// Region condition applicable on a rate limit rule
	RegionCondition *InputRateLimitingRuleRegionCondition `json:"regionCondition"`
	// Request scanner type condition applicable on a rate limit rule
	RequestScannerTypeCondition *InputRateLimitingRuleRequestScannerTypeCondition `json:"requestScannerTypeCondition"`
	// Scope condition applicable on a rate limit rule
	ScopeCondition *InputRateLimitingRuleScopeCondition `json:"scopeCondition"`
	// User agent condition applicable on a rate limit rule
	UserAgentCondition *InputRateLimitingRuleUserAgentCondition `json:"userAgentCondition"`
	// User ID condition applicable on a rate limit rule
	UserIdCondition *InputRateLimitingRuleUserIdCondition `json:"userIdCondition"`
}

// GetConditionType returns InputRateLimitingRuleLeafCondition.ConditionType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetConditionType() RateLimitingRuleLeafConditionType {
	return v.ConditionType
}

// GetDatatypeCondition returns InputRateLimitingRuleLeafCondition.DatatypeCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetDatatypeCondition() *InputRateLimitingRuleDatatypeCondition {
	return v.DatatypeCondition
}

// GetEmailDomainCondition returns InputRateLimitingRuleLeafCondition.EmailDomainCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetEmailDomainCondition() *InputRateLimitingRuleEmailDomainCondition {
	return v.EmailDomainCondition
}

// GetIpAbuseVelocityCondition returns InputRateLimitingRuleLeafCondition.IpAbuseVelocityCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpAbuseVelocityCondition() *InputRateLimitingRuleIpAbuseVelocityCondition {
	return v.IpAbuseVelocityCondition
}

// GetIpAddressCondition returns InputRateLimitingRuleLeafCondition.IpAddressCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpAddressCondition() *InputRateLimitingRuleIpAddressCondition {
	return v.IpAddressCondition
}

// GetIpAsnCondition returns InputRateLimitingRuleLeafCondition.IpAsnCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpAsnCondition() *InputRateLimitingRuleIpAsnCondition {
	return v.IpAsnCondition
}

// GetIpConnectionTypeCondition returns InputRateLimitingRuleLeafCondition.IpConnectionTypeCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpConnectionTypeCondition() *InputRateLimitingRuleIpConnectionTypeCondition {
	return v.IpConnectionTypeCondition
}

// GetIpLocationTypeCondition returns InputRateLimitingRuleLeafCondition.IpLocationTypeCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpLocationTypeCondition() *InputRateLimitingRuleIpLocationTypeCondition {
	return v.IpLocationTypeCondition
}

// GetIpOrganisationCondition returns InputRateLimitingRuleLeafCondition.IpOrganisationCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpOrganisationCondition() *InputRateLimitingRuleIpOrganisationCondition {
	return v.IpOrganisationCondition
}

// GetIpReputationCondition returns InputRateLimitingRuleLeafCondition.IpReputationCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpReputationCondition() *InputRateLimitingRuleIpReputationCondition {
	return v.IpReputationCondition
}

// GetKeyValueCondition returns InputRateLimitingRuleLeafCondition.KeyValueCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetKeyValueCondition() *InputRateLimitingRuleKeyValueCondition {
	return v.KeyValueCondition
}

// GetRegionCondition returns InputRateLimitingRuleLeafCondition.RegionCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetRegionCondition() *InputRateLimitingRuleRegionCondition {
	return v.RegionCondition
}

// GetRequestScannerTypeCondition returns InputRateLimitingRuleLeafCondition.RequestScannerTypeCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetRequestScannerTypeCondition() *InputRateLimitingRuleRequestScannerTypeCondition {
	return v.RequestScannerTypeCondition
}

// GetScopeCondition returns InputRateLimitingRuleLeafCondition.ScopeCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetScopeCondition() *InputRateLimitingRuleScopeCondition {
	return v.ScopeCondition
}

// GetUserAgentCondition returns InputRateLimitingRuleLeafCondition.UserAgentCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetUserAgentCondition() *InputRateLimitingRuleUserAgentCondition {
	return v.UserAgentCondition
}

// GetUserIdCondition returns InputRateLimitingRuleLeafCondition.UserIdCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetUserIdCondition() *InputRateLimitingRuleUserIdCondition {
	return v.UserIdCondition
}

// Lhs-Rhs keys' values matching condition applicable on a rate limit rule
type InputRateLimitingRuleLhsRhsKeysCondition struct {
	// LHS Key condition
	LhsKeyCondition *InputRateLimitingRuleStringCondition `json:"lhsKeyCondition"`
	// LHS key metadata type
	LhsMetadataType RateLimitingRuleKeyValueConditionMetadataType `json:"lhsMetadataType"`
	// RHS Key condition
	LhsRhsMatchOperator RateLimitingRuleKeyValueMatchOperator `json:"lhsRhsMatchOperator"`
	// RHS Key condition
	RhsKeyCondition *InputRateLimitingRuleStringCondition `json:"rhsKeyCondition"`
	// RHS key metadata type
	RhsMetadataType RateLimitingRuleKeyValueConditionMetadataType `json:"rhsMetadataType"`
}

// GetLhsKeyCondition returns InputRateLimitingRuleLhsRhsKeysCondition.LhsKeyCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLhsRhsKeysCondition) GetLhsKeyCondition() *InputRateLimitingRuleStringCondition {
	return v.LhsKeyCondition
}

// GetLhsMetadataType returns InputRateLimitingRuleLhsRhsKeysCondition.LhsMetadataType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLhsRhsKeysCondition) GetLhsMetadataType() RateLimitingRuleKeyValueConditionMetadataType {
	return v.LhsMetadataType
}

// GetLhsRhsMatchOperator returns InputRateLimitingRuleLhsRhsKeysCondition.LhsRhsMatchOperator, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLhsRhsKeysCondition) GetLhsRhsMatchOperator() RateLimitingRuleKeyValueMatchOperator {
	return v.LhsRhsMatchOperator
}

// GetRhsKeyCondition returns InputRateLimitingRuleLhsRhsKeysCondition.RhsKeyCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLhsRhsKeysCondition) GetRhsKeyCondition() *InputRateLimitingRuleStringCondition {
	return v.RhsKeyCondition
}

// GetRhsMetadataType returns InputRateLimitingRuleLhsRhsKeysCondition.RhsMetadataType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLhsRhsKeysCondition) GetRhsMetadataType() RateLimitingRuleKeyValueConditionMetadataType {
	return v.RhsMetadataType
}

// Logical condition for a rate limited rule
type InputRateLimitingRuleLogicalCondition struct {
	// Child conditions of rate limit rule logical condition
	ChildRateLimitingRuleConditions []*InputRateLimitingRuleCondition `json:"childRateLimitingRuleConditions"`
	// Rate limit rule logical condition operator
	LogicalOperator LogicalOperator `json:"logicalOperator"`
}

// GetChildRateLimitingRuleConditions returns InputRateLimitingRuleLogicalCondition.ChildRateLimitingRuleConditions, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLogicalCondition) GetChildRateLimitingRuleConditions() []*InputRateLimitingRuleCondition {
	return v.ChildRateLimitingRuleConditions
}

// GetLogicalOperator returns InputRateLimitingRuleLogicalCondition.LogicalOperator, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLogicalCondition) GetLogicalOperator() LogicalOperator {
	return v.LogicalOperator
}

// Details regarding mark for testing action applicable on a rate limit rule
type InputRateLimitingRuleMarkForTestingAction struct {
	// Agent effect associated with this action
	AgentEffect *InputRateLimitingRuleAgentEffect `json:"agentEffect"`
	// Severity of blocked event to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
}

// GetAgentEffect returns InputRateLimitingRuleMarkForTestingAction.AgentEffect, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleMarkForTestingAction) GetAgentEffect() *InputRateLimitingRuleAgentEffect {
	return v.AgentEffect
}

// GetEventSeverity returns InputRateLimitingRuleMarkForTestingAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleMarkForTestingAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// Rate limiting rule regex based matching
type InputRateLimitingRuleRegexBasedMatching struct {
	// custom matching location key value condition
	CustomMatchingLocation *InputRateLimitingRuleKeyValueCondition `json:"customMatchingLocation"`
}

// GetCustomMatchingLocation returns InputRateLimitingRuleRegexBasedMatching.CustomMatchingLocation, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRegexBasedMatching) GetCustomMatchingLocation() *InputRateLimitingRuleKeyValueCondition {
	return v.CustomMatchingLocation
}

// Region condition applicable on a rate limit rule
type InputRateLimitingRuleRegionCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of region identifiers
	RegionIdentifiers []*InputRateLimitingRegionIdentifier `json:"regionIdentifiers"`
	// List of regions
	Regions []*string `json:"regions"`
}

// GetExclude returns InputRateLimitingRuleRegionCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRegionCondition) GetExclude() *bool { return v.Exclude }

// GetRegionIdentifiers returns InputRateLimitingRuleRegionCondition.RegionIdentifiers, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRegionCondition) GetRegionIdentifiers() []*InputRateLimitingRegionIdentifier {
	return v.RegionIdentifiers
}

// GetRegions returns InputRateLimitingRuleRegionCondition.Regions, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRegionCondition) GetRegions() []*string { return v.Regions }

// Request scanner type condition for a rate limit rule
type InputRateLimitingRuleRequestScannerTypeCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of scanner types
	ScannerTypes []*string `json:"scannerTypes"`
}

// GetExclude returns InputRateLimitingRuleRequestScannerTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRequestScannerTypeCondition) GetExclude() *bool { return v.Exclude }

// GetScannerTypes returns InputRateLimitingRuleRequestScannerTypeCondition.ScannerTypes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRequestScannerTypeCondition) GetScannerTypes() []*string {
	return v.ScannerTypes
}

// Scope condition applicable on a rate limit rule
type InputRateLimitingRuleScopeCondition struct {
	// Entity scope condition
	EntityScope *InputRateLimitingRuleEntityScope `json:"entityScope"`
	// Label scope condition
	LabelScope *InputRateLimitingRuleLabelScope `json:"labelScope"`
	// Scope condition type
	ScopeType RateLimitingRuleScopeConditionType `json:"scopeType"`
	// Url scope condition
	UrlScope *InputRateLimitingRuleUrlScope `json:"urlScope"`
}

// GetEntityScope returns InputRateLimitingRuleScopeCondition.EntityScope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleScopeCondition) GetEntityScope() *InputRateLimitingRuleEntityScope {
	return v.EntityScope
}

// GetLabelScope returns InputRateLimitingRuleScopeCondition.LabelScope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleScopeCondition) GetLabelScope() *InputRateLimitingRuleLabelScope {
	return v.LabelScope
}

// GetScopeType returns InputRateLimitingRuleScopeCondition.ScopeType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleScopeCondition) GetScopeType() RateLimitingRuleScopeConditionType {
	return v.ScopeType
}

// GetUrlScope returns InputRateLimitingRuleScopeCondition.UrlScope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleScopeCondition) GetUrlScope() *InputRateLimitingRuleUrlScope {
	return v.UrlScope
}

// Static value matching condition applicable on a rate limit rule
type InputRateLimitingRuleStaticValueCondition struct {
	// Key condition
	KeyCondition *InputRateLimitingRuleStringCondition `json:"keyCondition"`
	// Key value condition metadata type
	MetadataType RateLimitingRuleKeyValueConditionMetadataType `json:"metadataType"`
	// Value condition
	ValueCondition *InputRateLimitingRuleStringCondition `json:"valueCondition"`
}

// GetKeyCondition returns InputRateLimitingRuleStaticValueCondition.KeyCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStaticValueCondition) GetKeyCondition() *InputRateLimitingRuleStringCondition {
	return v.KeyCondition
}

// GetMetadataType returns InputRateLimitingRuleStaticValueCondition.MetadataType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStaticValueCondition) GetMetadataType() RateLimitingRuleKeyValueConditionMetadataType {
	return v.MetadataType
}

// GetValueCondition returns InputRateLimitingRuleStaticValueCondition.ValueCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStaticValueCondition) GetValueCondition() *InputRateLimitingRuleStringCondition {
	return v.ValueCondition
}

// Status of rate limit rule
type InputRateLimitingRuleStatus struct {
	// Boolean denoting if rule should generate internal events
	GenerateInternalEvents *bool `json:"generateInternalEvents"`
	// Boolean denoting if rule should be hidden
	Hidden *bool `json:"hidden"`
	// Boolean denoting if rule should be internal and generate internal events
	Internal *bool `json:"internal"`
	// Source of rule creation
	RuleCreationSource *RateLimitingRuleSource `json:"ruleCreationSource"`
}

// GetGenerateInternalEvents returns InputRateLimitingRuleStatus.GenerateInternalEvents, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStatus) GetGenerateInternalEvents() *bool {
	return v.GenerateInternalEvents
}

// GetHidden returns InputRateLimitingRuleStatus.Hidden, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStatus) GetHidden() *bool { return v.Hidden }

// GetInternal returns InputRateLimitingRuleStatus.Internal, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStatus) GetInternal() *bool { return v.Internal }

// GetRuleCreationSource returns InputRateLimitingRuleStatus.RuleCreationSource, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStatus) GetRuleCreationSource() *RateLimitingRuleSource {
	return v.RuleCreationSource
}

// String condition which matches a string value using the specified operator
type InputRateLimitingRuleStringCondition struct {
	// Operator to be used to match the string value
	Operator RateLimitingRuleKeyValueMatchOperator `json:"operator"`
	// String value to be matched
	Value string `json:"value"`
}

// GetOperator returns InputRateLimitingRuleStringCondition.Operator, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStringCondition) GetOperator() RateLimitingRuleKeyValueMatchOperator {
	return v.Operator
}

// GetValue returns InputRateLimitingRuleStringCondition.Value, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStringCondition) GetValue() string { return v.Value }

// Config for thresholds and actions applicable on a rate limit rule
type InputRateLimitingRuleThresholdActionConfig struct {
	// List of rate limit rule actions
	Actions []*InputRateLimitingRuleAction `json:"actions"`
	// List of rate limit rule threshold configs
	ThresholdConfigs []*InputRateLimitingRuleThresholdConfig `json:"thresholdConfigs"`
}

// GetActions returns InputRateLimitingRuleThresholdActionConfig.Actions, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdActionConfig) GetActions() []*InputRateLimitingRuleAction {
	return v.Actions
}

// GetThresholdConfigs returns InputRateLimitingRuleThresholdActionConfig.ThresholdConfigs, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdActionConfig) GetThresholdConfigs() []*InputRateLimitingRuleThresholdConfig {
	return v.ThresholdConfigs
}

// Threshold config for rate limit rule
type InputRateLimitingRuleThresholdConfig struct {
	// API aggregation type
	ApiAggregateType RateLimitingRuleApiAggregateType `json:"apiAggregateType"`
	// Dynamic threshold config
	DynamicThresholdConfig *InputDynamicThresholdConfig `json:"dynamicThresholdConfig"`
	// Rolling window threshold config
	RollingWindowThresholdConfig *InputRollingWindowThresholdConfig `json:"rollingWindowThresholdConfig"`
	// Threshold config type
	ThresholdConfigType RateLimitingRuleThresholdConfigType `json:"thresholdConfigType"`
	// User aggregation type
	UserAggregateType RateLimitingRuleUserAggregateType `json:"userAggregateType"`
	// Value based threshold config
	ValueBasedThresholdConfig *InputValueBasedThresholdConfig `json:"valueBasedThresholdConfig"`
}

// GetApiAggregateType returns InputRateLimitingRuleThresholdConfig.ApiAggregateType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetApiAggregateType() RateLimitingRuleApiAggregateType {
	return v.ApiAggregateType
}

// GetDynamicThresholdConfig returns InputRateLimitingRuleThresholdConfig.DynamicThresholdConfig, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetDynamicThresholdConfig() *InputDynamicThresholdConfig {
	return v.DynamicThresholdConfig
}

// GetRollingWindowThresholdConfig returns InputRateLimitingRuleThresholdConfig.RollingWindowThresholdConfig, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetRollingWindowThresholdConfig() *InputRollingWindowThresholdConfig {
	return v.RollingWindowThresholdConfig
}

// GetThresholdConfigType returns InputRateLimitingRuleThresholdConfig.ThresholdConfigType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetThresholdConfigType() RateLimitingRuleThresholdConfigType {
	return v.ThresholdConfigType
}

// GetUserAggregateType returns InputRateLimitingRuleThresholdConfig.UserAggregateType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetUserAggregateType() RateLimitingRuleUserAggregateType {
	return v.UserAggregateType
}

// GetValueBasedThresholdConfig returns InputRateLimitingRuleThresholdConfig.ValueBasedThresholdConfig, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetValueBasedThresholdConfig() *InputValueBasedThresholdConfig {
	return v.ValueBasedThresholdConfig
}

// Url scope condition applicable on a rate limit rule
type InputRateLimitingRuleUrlScope struct {
	// List of url regex
	UrlRegexes []*string `json:"urlRegexes"`
}

// GetUrlRegexes returns InputRateLimitingRuleUrlScope.UrlRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUrlScope) GetUrlRegexes() []*string { return v.UrlRegexes }

// User agent condition for a rate limit rule
type InputRateLimitingRuleUserAgentCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of user agent regexes
	UserAgentRegexes []*string `json:"userAgentRegexes"`
	// List of user agents
	UserAgents []*string `json:"userAgents"`
}

// GetExclude returns InputRateLimitingRuleUserAgentCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserAgentCondition) GetExclude() *bool { return v.Exclude }

// GetUserAgentRegexes returns InputRateLimitingRuleUserAgentCondition.UserAgentRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserAgentCondition) GetUserAgentRegexes() []*string {
	return v.UserAgentRegexes
}

// GetUserAgents returns InputRateLimitingRuleUserAgentCondition.UserAgents, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserAgentCondition) GetUserAgents() []*string { return v.UserAgents }

// User ID condition for a rate limit rule
type InputRateLimitingRuleUserIdCondition struct {
	// List of actor entity IDs
	ActorEntityIds []*string `json:"actorEntityIds"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of user ID regexes
	UserIdRegexes []*string `json:"userIdRegexes"`
	// List of user IDs
	UserIds []*string `json:"userIds"`
}

// GetActorEntityIds returns InputRateLimitingRuleUserIdCondition.ActorEntityIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserIdCondition) GetActorEntityIds() []*string { return v.ActorEntityIds }

// GetExclude returns InputRateLimitingRuleUserIdCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserIdCondition) GetExclude() *bool { return v.Exclude }

// GetUserIdRegexes returns InputRateLimitingRuleUserIdCondition.UserIdRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserIdCondition) GetUserIdRegexes() []*string { return v.UserIdRegexes }

// GetUserIds returns InputRateLimitingRuleUserIdCondition.UserIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserIdCondition) GetUserIds() []*string { return v.UserIds }

type InputRateLimitingRulesFilter struct {
	Categories []*RateLimitingRuleCategory `json:"categories"`
	Scope      *InputRuleConfigScope       `json:"scope"`
}

// GetCategories returns InputRateLimitingRulesFilter.Categories, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRulesFilter) GetCategories() []*RateLimitingRuleCategory {
	return v.Categories
}

// GetScope returns InputRateLimitingRulesFilter.Scope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRulesFilter) GetScope() *InputRuleConfigScope { return v.Scope }

// Rate limit rule transaction action config
type InputRateLimitingTransactionActionConfig struct {
	// Rate limit rule action
	Action InputRateLimitingRuleAction `json:"action"`
	// Requested expiration timestamp for the rule
	ExpirationTimestamp *string `json:"expirationTimestamp"`
}

// GetAction returns InputRateLimitingTransactionActionConfig.Action, and is useful for accessing the field via an interface.
func (v *InputRateLimitingTransactionActionConfig) GetAction() InputRateLimitingRuleAction {
	return v.Action
}

// GetExpirationTimestamp returns InputRateLimitingTransactionActionConfig.ExpirationTimestamp, and is useful for accessing the field via an interface.
func (v *InputRateLimitingTransactionActionConfig) GetExpirationTimestamp() *string {
	return v.ExpirationTimestamp
}

type InputRegionEnvironmentScope struct {
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns InputRegionEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *InputRegionEnvironmentScope) GetEnvironmentIds() []*string { return v.EnvironmentIds }

type InputRegionRuleAgentEffect struct {
	AgentModifications []*InputRegionRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns InputRegionRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *InputRegionRuleAgentEffect) GetAgentModifications() []*InputRegionRuleAgentModification {
	return v.AgentModifications
}

type InputRegionRuleAgentModification struct {
	AgentModificationType RegionRuleAgentModificationType `json:"agentModificationType"`
	HeaderInjection       InputRegionRuleHeaderInjection  `json:"headerInjection"`
}

// GetAgentModificationType returns InputRegionRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *InputRegionRuleAgentModification) GetAgentModificationType() RegionRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns InputRegionRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *InputRegionRuleAgentModification) GetHeaderInjection() InputRegionRuleHeaderInjection {
	return v.HeaderInjection
}

type InputRegionRuleCreate struct {
	Description   *string                                  `json:"description"`
	Duration      *string                                  `json:"duration"`
	Effects       []*InputRegionRuleEffectWithModification `json:"effects"`
	EventSeverity *RegionRuleEventSeverity                 `json:"eventSeverity"`
	Name          string                                   `json:"name"`
	RegionIds     []*string                                `json:"regionIds"`
	RuleScope     *InputRegionRuleScope                    `json:"ruleScope"`
	Type          RegionRuleActionType                     `json:"type"`
}

// GetDescription returns InputRegionRuleCreate.Description, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetDescription() *string { return v.Description }

// GetDuration returns InputRegionRuleCreate.Duration, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetDuration() *string { return v.Duration }

// GetEffects returns InputRegionRuleCreate.Effects, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetEffects() []*InputRegionRuleEffectWithModification {
	return v.Effects
}

// GetEventSeverity returns InputRegionRuleCreate.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetEventSeverity() *RegionRuleEventSeverity { return v.EventSeverity }

// GetName returns InputRegionRuleCreate.Name, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetName() string { return v.Name }

// GetRegionIds returns InputRegionRuleCreate.RegionIds, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetRegionIds() []*string { return v.RegionIds }

// GetRuleScope returns InputRegionRuleCreate.RuleScope, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetRuleScope() *InputRegionRuleScope { return v.RuleScope }

// GetType returns InputRegionRuleCreate.Type, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetType() RegionRuleActionType { return v.Type }

type InputRegionRuleDelete struct {
	Id string `json:"id"`
}

// GetId returns InputRegionRuleDelete.Id, and is useful for accessing the field via an interface.
func (v *InputRegionRuleDelete) GetId() string { return v.Id }

type InputRegionRuleEffectWithModification struct {
	// Effects enforced for agent while inline processing of requests
	AgentEffect    InputRegionRuleAgentEffect       `json:"agentEffect"`
	RuleEffectType RegionRuleEffectModificationType `json:"ruleEffectType"`
}

// GetAgentEffect returns InputRegionRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *InputRegionRuleEffectWithModification) GetAgentEffect() InputRegionRuleAgentEffect {
	return v.AgentEffect
}

// GetRuleEffectType returns InputRegionRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *InputRegionRuleEffectWithModification) GetRuleEffectType() RegionRuleEffectModificationType {
	return v.RuleEffectType
}

type InputRegionRuleHeaderInjection struct {
	HeaderCategory RegionRuleHeaderCategory `json:"headerCategory"`
	Key            string                   `json:"key"`
	Value          string                   `json:"value"`
}

// GetHeaderCategory returns InputRegionRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *InputRegionRuleHeaderInjection) GetHeaderCategory() RegionRuleHeaderCategory {
	return v.HeaderCategory
}

// GetKey returns InputRegionRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *InputRegionRuleHeaderInjection) GetKey() string { return v.Key }

// GetValue returns InputRegionRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *InputRegionRuleHeaderInjection) GetValue() string { return v.Value }

type InputRegionRuleScope struct {
	EnvironmentScope *InputRegionEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns InputRegionRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputRegionRuleScope) GetEnvironmentScope() *InputRegionEnvironmentScope {
	return v.EnvironmentScope
}

type InputRegionRuleUpdate struct {
	Description   *string                                  `json:"description"`
	Disabled      *bool                                    `json:"disabled"`
	Duration      *string                                  `json:"duration"`
	Effects       []*InputRegionRuleEffectWithModification `json:"effects"`
	EventSeverity *RegionRuleEventSeverity                 `json:"eventSeverity"`
	Id            string                                   `json:"id"`
	Internal      *bool                                    `json:"internal"`
	Name          string                                   `json:"name"`
	RegionIds     []*string                                `json:"regionIds"`
	RuleScope     *InputRegionRuleScope                    `json:"ruleScope"`
	Type          RegionRuleActionType                     `json:"type"`
}

// GetDescription returns InputRegionRuleUpdate.Description, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetDescription() *string { return v.Description }

// GetDisabled returns InputRegionRuleUpdate.Disabled, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetDisabled() *bool { return v.Disabled }

// GetDuration returns InputRegionRuleUpdate.Duration, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetDuration() *string { return v.Duration }

// GetEffects returns InputRegionRuleUpdate.Effects, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetEffects() []*InputRegionRuleEffectWithModification {
	return v.Effects
}

// GetEventSeverity returns InputRegionRuleUpdate.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetEventSeverity() *RegionRuleEventSeverity { return v.EventSeverity }

// GetId returns InputRegionRuleUpdate.Id, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetId() string { return v.Id }

// GetInternal returns InputRegionRuleUpdate.Internal, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetInternal() *bool { return v.Internal }

// GetName returns InputRegionRuleUpdate.Name, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetName() string { return v.Name }

// GetRegionIds returns InputRegionRuleUpdate.RegionIds, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetRegionIds() []*string { return v.RegionIds }

// GetRuleScope returns InputRegionRuleUpdate.RuleScope, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetRuleScope() *InputRegionRuleScope { return v.RuleScope }

// GetType returns InputRegionRuleUpdate.Type, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetType() RegionRuleActionType { return v.Type }

type InputRegionRulesFilter struct {
	RuleScope InputRegionRuleScope `json:"ruleScope"`
}

// GetRuleScope returns InputRegionRulesFilter.RuleScope, and is useful for accessing the field via an interface.
func (v *InputRegionRulesFilter) GetRuleScope() InputRegionRuleScope { return v.RuleScope }

// Threshold config which specifies count allowed over the given time range
type InputRollingWindowThresholdConfig struct {
	// Count allowed for specified time range
	CountAllowed int64 `json:"countAllowed"`
	// Time range during which counts are calculated
	Duration string `json:"duration"`
}

// GetCountAllowed returns InputRollingWindowThresholdConfig.CountAllowed, and is useful for accessing the field via an interface.
func (v *InputRollingWindowThresholdConfig) GetCountAllowed() int64 { return v.CountAllowed }

// GetDuration returns InputRollingWindowThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *InputRollingWindowThresholdConfig) GetDuration() string { return v.Duration }

// Rate limit rule scope
type InputRuleConfigScope struct {
	// Environment scope applicable on rate limit rule
	EnvironmentScope *InputEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns InputRuleConfigScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputRuleConfigScope) GetEnvironmentScope() *InputEnvironmentScope {
	return v.EnvironmentScope
}

// Threshold config which specifies unique values allowed over the given time range
type InputValueBasedThresholdConfig struct {
	// Time range during which unique values are calculated
	Duration string `json:"duration"`
	// Type of sensitive params evaluation, only applicable for sensitive params value type
	SensitiveParamsEvaluationType *SensitiveParamsEvaluationType `json:"sensitiveParamsEvaluationType"`
	// Unique values allowed for specified time range
	UniqueValuesAllowed int64 `json:"uniqueValuesAllowed"`
	// Type of value based threshold config
	ValueType ValueBasedThresholdConfigType `json:"valueType"`
}

// GetDuration returns InputValueBasedThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *InputValueBasedThresholdConfig) GetDuration() string { return v.Duration }

// GetSensitiveParamsEvaluationType returns InputValueBasedThresholdConfig.SensitiveParamsEvaluationType, and is useful for accessing the field via an interface.
func (v *InputValueBasedThresholdConfig) GetSensitiveParamsEvaluationType() *SensitiveParamsEvaluationType {
	return v.SensitiveParamsEvaluationType
}

// GetUniqueValuesAllowed returns InputValueBasedThresholdConfig.UniqueValuesAllowed, and is useful for accessing the field via an interface.
func (v *InputValueBasedThresholdConfig) GetUniqueValuesAllowed() int64 { return v.UniqueValuesAllowed }

// GetValueType returns InputValueBasedThresholdConfig.ValueType, and is useful for accessing the field via an interface.
func (v *InputValueBasedThresholdConfig) GetValueType() ValueBasedThresholdConfigType {
	return v.ValueType
}

type IpRangeEventSeverity string

const (
	// LOW
	IpRangeEventSeverityLow IpRangeEventSeverity = "LOW"
	// MEDIUM
	IpRangeEventSeverityMedium IpRangeEventSeverity = "MEDIUM"
	// HIGH
	IpRangeEventSeverityHigh IpRangeEventSeverity = "HIGH"
	// CRITICAL
	IpRangeEventSeverityCritical IpRangeEventSeverity = "CRITICAL"
)

var AllIpRangeEventSeverity = []IpRangeEventSeverity{
	IpRangeEventSeverityLow,
	IpRangeEventSeverityMedium,
	IpRangeEventSeverityHigh,
	IpRangeEventSeverityCritical,
}

type IpRangeRuleActionType string

const (
	// RULE_ACTION_BLOCK
	IpRangeRuleActionTypeRuleActionBlock IpRangeRuleActionType = "RULE_ACTION_BLOCK"
	// RULE_ACTION_ALLOW
	IpRangeRuleActionTypeRuleActionAllow IpRangeRuleActionType = "RULE_ACTION_ALLOW"
	// RULE_ACTION_BLOCK_ALL_EXCEPT
	IpRangeRuleActionTypeRuleActionBlockAllExcept IpRangeRuleActionType = "RULE_ACTION_BLOCK_ALL_EXCEPT"
	// RULE_ACTION_ALERT
	IpRangeRuleActionTypeRuleActionAlert IpRangeRuleActionType = "RULE_ACTION_ALERT"
)

var AllIpRangeRuleActionType = []IpRangeRuleActionType{
	IpRangeRuleActionTypeRuleActionBlock,
	IpRangeRuleActionTypeRuleActionAllow,
	IpRangeRuleActionTypeRuleActionBlockAllExcept,
	IpRangeRuleActionTypeRuleActionAlert,
}

// Malicious sources rule agent modification type
type IpRangeRuleAgentModificationType string

const (
	// Add a header with inline processing of request on matching conditions
	IpRangeRuleAgentModificationTypeHeaderInjection IpRangeRuleAgentModificationType = "HEADER_INJECTION"
)

var AllIpRangeRuleAgentModificationType = []IpRangeRuleAgentModificationType{
	IpRangeRuleAgentModificationTypeHeaderInjection,
}

type IpRangeRuleEffectModificationType string

const (
	// Modifications to be done on agent
	IpRangeRuleEffectModificationTypeAgentEffect IpRangeRuleEffectModificationType = "AGENT_EFFECT"
)

var AllIpRangeRuleEffectModificationType = []IpRangeRuleEffectModificationType{
	IpRangeRuleEffectModificationTypeAgentEffect,
}

// Malicious sources header category
type IpRangeRuleHeaderCategory string

const (
	// Request header category
	IpRangeRuleHeaderCategoryRequest IpRangeRuleHeaderCategory = "REQUEST"
	// Response header category
	IpRangeRuleHeaderCategoryResponse IpRangeRuleHeaderCategory = "RESPONSE"
)

var AllIpRangeRuleHeaderCategory = []IpRangeRuleHeaderCategory{
	IpRangeRuleHeaderCategoryRequest,
	IpRangeRuleHeaderCategoryResponse,
}

// Fragment for leafCondition
type LeafConditionFields struct {
	// Leaf condition type
	ConditionType RateLimitingRuleLeafConditionType `json:"conditionType"`
	// Dataset and datatype condition applicable on a rate limit rule
	DatatypeCondition *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition `json:"datatypeCondition"`
	// IP address condition applicable on a rate limit rule
	IpAddressCondition *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition `json:"ipAddressCondition"`
	// IP reputation condition applicable on a rate limit rule
	IpReputationCondition *LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition `json:"ipReputationCondition"`
	// IP location type condition applicable on a rate limit rule
	IpLocationTypeCondition *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition `json:"ipLocationTypeCondition"`
	// Email domain condition applicable on a rate limit rule
	EmailDomainCondition *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition `json:"emailDomainCondition"`
	// Ip organisation condition applicable on a rate limit rule
	IpOrganisationCondition *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition `json:"ipOrganisationCondition"`
	// Ip asn condition applicable on a rate limit rule
	IpAsnCondition *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition `json:"ipAsnCondition"`
	// User ID condition applicable on a rate limit rule
	UserIdCondition *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition `json:"userIdCondition"`
	// User agent condition applicable on a rate limit rule
	UserAgentCondition *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition `json:"userAgentCondition"`
	// IP connection type condition applicable on a rate limit rule
	IpConnectionTypeCondition *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition `json:"ipConnectionTypeCondition"`
	// Ip abuse velocity condition applicable on a rate limit rule
	IpAbuseVelocityCondition *LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition `json:"ipAbuseVelocityCondition"`
	// Key value condition applicable on a rate limit rule
	KeyValueCondition *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition `json:"keyValueCondition"`
	// Region condition applicable on a rate limit rule
	RegionCondition *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition `json:"regionCondition"`
	// Request scanner type condition applicable on a rate limit rule
	RequestScannerTypeCondition *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition `json:"requestScannerTypeCondition"`
	// Scope condition applicable on a rate limit rule
	ScopeCondition *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition `json:"scopeCondition"`
}

// GetConditionType returns LeafConditionFields.ConditionType, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetConditionType() RateLimitingRuleLeafConditionType {
	return v.ConditionType
}

// GetDatatypeCondition returns LeafConditionFields.DatatypeCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetDatatypeCondition() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition {
	return v.DatatypeCondition
}

// GetIpAddressCondition returns LeafConditionFields.IpAddressCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpAddressCondition() *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition {
	return v.IpAddressCondition
}

// GetIpReputationCondition returns LeafConditionFields.IpReputationCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpReputationCondition() *LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition {
	return v.IpReputationCondition
}

// GetIpLocationTypeCondition returns LeafConditionFields.IpLocationTypeCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpLocationTypeCondition() *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition {
	return v.IpLocationTypeCondition
}

// GetEmailDomainCondition returns LeafConditionFields.EmailDomainCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetEmailDomainCondition() *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition {
	return v.EmailDomainCondition
}

// GetIpOrganisationCondition returns LeafConditionFields.IpOrganisationCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpOrganisationCondition() *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition {
	return v.IpOrganisationCondition
}

// GetIpAsnCondition returns LeafConditionFields.IpAsnCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpAsnCondition() *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition {
	return v.IpAsnCondition
}

// GetUserIdCondition returns LeafConditionFields.UserIdCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetUserIdCondition() *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition {
	return v.UserIdCondition
}

// GetUserAgentCondition returns LeafConditionFields.UserAgentCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetUserAgentCondition() *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition {
	return v.UserAgentCondition
}

// GetIpConnectionTypeCondition returns LeafConditionFields.IpConnectionTypeCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpConnectionTypeCondition() *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition {
	return v.IpConnectionTypeCondition
}

// GetIpAbuseVelocityCondition returns LeafConditionFields.IpAbuseVelocityCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpAbuseVelocityCondition() *LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition {
	return v.IpAbuseVelocityCondition
}

// GetKeyValueCondition returns LeafConditionFields.KeyValueCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetKeyValueCondition() *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition {
	return v.KeyValueCondition
}

// GetRegionCondition returns LeafConditionFields.RegionCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetRegionCondition() *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition {
	return v.RegionCondition
}

// GetRequestScannerTypeCondition returns LeafConditionFields.RequestScannerTypeCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetRequestScannerTypeCondition() *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition {
	return v.RequestScannerTypeCondition
}

// GetScopeCondition returns LeafConditionFields.ScopeCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetScopeCondition() *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition {
	return v.ScopeCondition
}

// LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition includes the requested fields of the GraphQL type RateLimitingRuleDatatypeCondition.
// The GraphQL type's documentation follows.
//
// Dataset and datatype condition for a rate limit rule
type LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition struct {
	// List of dataset ids applicable
	DatasetIds []*string `json:"datasetIds"`
	// List of datatype ids applicable
	DatatypeIds []*string `json:"datatypeIds"`
	// data location type
	DataLocation *RateLimitingRuleDataLocation `json:"dataLocation"`
	// datatype matching
	DatatypeMatching *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching `json:"datatypeMatching"`
}

// GetDatasetIds returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition.DatasetIds, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition) GetDatasetIds() []*string {
	return v.DatasetIds
}

// GetDatatypeIds returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition.DatatypeIds, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition) GetDatatypeIds() []*string {
	return v.DatatypeIds
}

// GetDataLocation returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition.DataLocation, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition) GetDataLocation() *RateLimitingRuleDataLocation {
	return v.DataLocation
}

// GetDatatypeMatching returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition.DatatypeMatching, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition) GetDatatypeMatching() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching {
	return v.DatatypeMatching
}

// LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching includes the requested fields of the GraphQL type RateLimitingRuleDatatypeMatching.
// The GraphQL type's documentation follows.
//
// Rate limiting datatype matching
type LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching struct {
	// datatype matching type
	DatatypeMatchingType *RateLimitingRuleDatatypeMatchingType `json:"datatypeMatchingType"`
	// regex based matching
	RegexBasedMatching *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching `json:"regexBasedMatching"`
}

// GetDatatypeMatchingType returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching.DatatypeMatchingType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching) GetDatatypeMatchingType() *RateLimitingRuleDatatypeMatchingType {
	return v.DatatypeMatchingType
}

// GetRegexBasedMatching returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching.RegexBasedMatching, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching) GetRegexBasedMatching() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching {
	return v.RegexBasedMatching
}

// LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching includes the requested fields of the GraphQL type RateLimitingRuleRegexBasedMatching.
// The GraphQL type's documentation follows.
//
// Rate limiting rule regex based matching
type LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching struct {
	// custom matching location key value condition
	CustomMatchingLocation *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition `json:"customMatchingLocation"`
}

// GetCustomMatchingLocation returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching.CustomMatchingLocation, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching) GetCustomMatchingLocation() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition {
	return v.CustomMatchingLocation
}

// LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition includes the requested fields of the GraphQL type RateLimitingRuleKeyValueCondition.
// The GraphQL type's documentation follows.
//
// Key value condition applicable on a rate limit rule
type LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition struct {
	// Key value condition metadata type
	MetadataType *RateLimitingRuleKeyValueConditionMetadataType `json:"metadataType"`
	// Key condition
	KeyCondition *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition `json:"keyCondition"`
}

// GetMetadataType returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition.MetadataType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition) GetMetadataType() *RateLimitingRuleKeyValueConditionMetadataType {
	return v.MetadataType
}

// GetKeyCondition returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition.KeyCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition) GetKeyCondition() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition {
	return v.KeyCondition
}

// LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition includes the requested fields of the GraphQL type RateLimitingRuleStringCondition.
// The GraphQL type's documentation follows.
//
// String condition which matches a string value using the specified operator
type LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition struct {
	// Operator to be used to match the string value
	Operator RateLimitingRuleKeyValueMatchOperator `json:"operator"`
	// String value to be matched
	Value string `json:"value"`
}

// GetOperator returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition.Operator, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition) GetOperator() RateLimitingRuleKeyValueMatchOperator {
	return v.Operator
}

// GetValue returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition.Value, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition) GetValue() string {
	return v.Value
}

// LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition includes the requested fields of the GraphQL type RateLimitingRuleEmailDomainCondition.
// The GraphQL type's documentation follows.
//
// Email domain condition for a rate limit rule
type LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition struct {
	// List of email regexes
	EmailRegexes []*string `json:"emailRegexes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetEmailRegexes returns LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition.EmailRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition) GetEmailRegexes() []*string {
	return v.EmailRegexes
}

// GetExclude returns LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition includes the requested fields of the GraphQL type RateLimitingRuleIpAbuseVelocityCondition.
// The GraphQL type's documentation follows.
//
// Ip abuse velocity condition applicable on a rate limit rule
type LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition struct {
	// Minimum Ip abuse velocity applicable
	MinIpAbuseVelocity RateLimitingRuleIpAbuseVelocity `json:"minIpAbuseVelocity"`
}

// GetMinIpAbuseVelocity returns LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition.MinIpAbuseVelocity, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition) GetMinIpAbuseVelocity() RateLimitingRuleIpAbuseVelocity {
	return v.MinIpAbuseVelocity
}

// LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition includes the requested fields of the GraphQL type RateLimitingRuleIpAddressCondition.
// The GraphQL type's documentation follows.
//
// IP address condition applicable on a rate limit rule
type LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition struct {
	// List of CIDR IP ranges
	CidrIpRanges []*string `json:"cidrIpRanges"`
	// List of IP addresses
	IpAddresses []*string `json:"ipAddresses"`
	// List of IP addresses and CIDR IP ranges
	RawInputIpData []*string `json:"rawInputIpData"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// ip address condition type
	IpAddressConditionType *RateLimitingRuleIpAddressConditionType `json:"ipAddressConditionType"`
}

// GetCidrIpRanges returns LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition.CidrIpRanges, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition) GetCidrIpRanges() []*string {
	return v.CidrIpRanges
}

// GetIpAddresses returns LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition.IpAddresses, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition) GetIpAddresses() []*string {
	return v.IpAddresses
}

// GetRawInputIpData returns LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition.RawInputIpData, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition) GetRawInputIpData() []*string {
	return v.RawInputIpData
}

// GetExclude returns LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition) GetExclude() *bool {
	return v.Exclude
}

// GetIpAddressConditionType returns LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition.IpAddressConditionType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition) GetIpAddressConditionType() *RateLimitingRuleIpAddressConditionType {
	return v.IpAddressConditionType
}

// LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition includes the requested fields of the GraphQL type RateLimitingRuleIpAsnCondition.
// The GraphQL type's documentation follows.
//
// Ip asn condition for a rate limit rule
type LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition struct {
	// List of ip asn regexes
	IpAsnRegexes []*string `json:"ipAsnRegexes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetIpAsnRegexes returns LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition.IpAsnRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition) GetIpAsnRegexes() []*string {
	return v.IpAsnRegexes
}

// GetExclude returns LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition includes the requested fields of the GraphQL type RateLimitingRuleIpConnectionTypeCondition.
// The GraphQL type's documentation follows.
//
// IP connection type condition for a rate limit rule
type LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition struct {
	// List of ip connection types
	IpConnectionTypes []*RateLimitingRuleIpConnectionType `json:"ipConnectionTypes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetIpConnectionTypes returns LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition.IpConnectionTypes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition) GetIpConnectionTypes() []*RateLimitingRuleIpConnectionType {
	return v.IpConnectionTypes
}

// GetExclude returns LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition includes the requested fields of the GraphQL type RateLimitingRuleIpLocationTypeCondition.
// The GraphQL type's documentation follows.
//
// IP location type condition applicable on a rate limit rule
type LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition struct {
	// List of IP locations types applicable
	IpLocationTypes []*RateLimitingRuleIpLocationType `json:"ipLocationTypes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetIpLocationTypes returns LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition.IpLocationTypes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition) GetIpLocationTypes() []*RateLimitingRuleIpLocationType {
	return v.IpLocationTypes
}

// GetExclude returns LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition includes the requested fields of the GraphQL type RateLimitingRuleIpOrganisationCondition.
// The GraphQL type's documentation follows.
//
// Ip organisation condition for a rate limit rule
type LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition struct {
	// List of ip organisation regexes
	IpOrganisationRegexes []*string `json:"ipOrganisationRegexes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetIpOrganisationRegexes returns LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition.IpOrganisationRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition) GetIpOrganisationRegexes() []*string {
	return v.IpOrganisationRegexes
}

// GetExclude returns LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition includes the requested fields of the GraphQL type RateLimitingRuleIpReputationCondition.
// The GraphQL type's documentation follows.
//
// IP reputation condition applicable on a rate limit rule
type LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition struct {
	// Minimum IP reputation severity applicable
	MinIpReputationSeverity RateLimitingRuleIpReputationSeverity `json:"minIpReputationSeverity"`
}

// GetMinIpReputationSeverity returns LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition.MinIpReputationSeverity, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition) GetMinIpReputationSeverity() RateLimitingRuleIpReputationSeverity {
	return v.MinIpReputationSeverity
}

// LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition includes the requested fields of the GraphQL type RateLimitingRuleKeyValueCondition.
// The GraphQL type's documentation follows.
//
// Key value condition applicable on a rate limit rule
type LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition struct {
	// Key condition
	KeyCondition *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition `json:"keyCondition"`
	// Key value condition metadata type
	MetadataType *RateLimitingRuleKeyValueConditionMetadataType `json:"metadataType"`
	// Value condition
	ValueCondition *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition `json:"valueCondition"`
}

// GetKeyCondition returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition.KeyCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition) GetKeyCondition() *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition {
	return v.KeyCondition
}

// GetMetadataType returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition.MetadataType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition) GetMetadataType() *RateLimitingRuleKeyValueConditionMetadataType {
	return v.MetadataType
}

// GetValueCondition returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition.ValueCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition) GetValueCondition() *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition {
	return v.ValueCondition
}

// LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition includes the requested fields of the GraphQL type RateLimitingRuleStringCondition.
// The GraphQL type's documentation follows.
//
// String condition which matches a string value using the specified operator
type LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition struct {
	// Operator to be used to match the string value
	Operator RateLimitingRuleKeyValueMatchOperator `json:"operator"`
	// String value to be matched
	Value string `json:"value"`
}

// GetOperator returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition.Operator, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition) GetOperator() RateLimitingRuleKeyValueMatchOperator {
	return v.Operator
}

// GetValue returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition.Value, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition) GetValue() string {
	return v.Value
}

// LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition includes the requested fields of the GraphQL type RateLimitingRuleStringCondition.
// The GraphQL type's documentation follows.
//
// String condition which matches a string value using the specified operator
type LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition struct {
	// Operator to be used to match the string value
	Operator RateLimitingRuleKeyValueMatchOperator `json:"operator"`
	// String value to be matched
	Value string `json:"value"`
}

// GetOperator returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition.Operator, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition) GetOperator() RateLimitingRuleKeyValueMatchOperator {
	return v.Operator
}

// GetValue returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition.Value, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition) GetValue() string {
	return v.Value
}

// LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition includes the requested fields of the GraphQL type RateLimitingRuleRegionCondition.
// The GraphQL type's documentation follows.
//
// Region condition applicable on a rate limit rule
type LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition struct {
	// List of region identifiers
	RegionIdentifiers []*LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier `json:"regionIdentifiers"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetRegionIdentifiers returns LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition.RegionIdentifiers, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition) GetRegionIdentifiers() []*LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier {
	return v.RegionIdentifiers
}

// GetExclude returns LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier includes the requested fields of the GraphQL type RateLimitingRegionIdentifier.
// The GraphQL type's documentation follows.
//
// Region identifier schema for rate limit region condition
type LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier struct {
	// Country ISO code for region identifier
	CountryIsoCode string `json:"countryIsoCode"`
}

// GetCountryIsoCode returns LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier.CountryIsoCode, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier) GetCountryIsoCode() string {
	return v.CountryIsoCode
}

// LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition includes the requested fields of the GraphQL type RateLimitingRuleRequestScannerTypeCondition.
// The GraphQL type's documentation follows.
//
// Request scanner type condition for a rate limit rule
type LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition struct {
	// List of scanner types
	ScannerTypes []*string `json:"scannerTypes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetScannerTypes returns LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition.ScannerTypes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition) GetScannerTypes() []*string {
	return v.ScannerTypes
}

// GetExclude returns LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition includes the requested fields of the GraphQL type RateLimitingRuleScopeCondition.
// The GraphQL type's documentation follows.
//
// Scope condition applicable on a rate limit rule
type LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition struct {
	// Entity scope condition
	EntityScope *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope `json:"entityScope"`
	// Label scope condition
	LabelScope *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope `json:"labelScope"`
	// Scope condition type
	ScopeType RateLimitingRuleScopeConditionType `json:"scopeType"`
	// Url scope condition
	UrlScope *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope `json:"urlScope"`
}

// GetEntityScope returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition.EntityScope, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition) GetEntityScope() *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope {
	return v.EntityScope
}

// GetLabelScope returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition.LabelScope, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition) GetLabelScope() *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope {
	return v.LabelScope
}

// GetScopeType returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition.ScopeType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition) GetScopeType() RateLimitingRuleScopeConditionType {
	return v.ScopeType
}

// GetUrlScope returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition.UrlScope, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition) GetUrlScope() *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope {
	return v.UrlScope
}

// LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope includes the requested fields of the GraphQL type RateLimitingRuleEntityScope.
// The GraphQL type's documentation follows.
//
// Entity scope condition applicable on a rate limit rule
type LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope struct {
	// List of entity ids applicable
	EntityIds []*string `json:"entityIds"`
	// Entity type
	EntityType RateLimitingRuleEntityType `json:"entityType"`
}

// GetEntityIds returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope.EntityIds, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope) GetEntityIds() []*string {
	return v.EntityIds
}

// GetEntityType returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope.EntityType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope) GetEntityType() RateLimitingRuleEntityType {
	return v.EntityType
}

// LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope includes the requested fields of the GraphQL type RateLimitingRuleLabelScope.
// The GraphQL type's documentation follows.
//
// Label scope condition applicable on a rate limit rule
type LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope struct {
	// List of label ids applicable
	LabelIds []*string `json:"labelIds"`
	// Label type
	LabelType RateLimitingRuleLabelType `json:"labelType"`
}

// GetLabelIds returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope.LabelIds, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope) GetLabelIds() []*string {
	return v.LabelIds
}

// GetLabelType returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope.LabelType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope) GetLabelType() RateLimitingRuleLabelType {
	return v.LabelType
}

// LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope includes the requested fields of the GraphQL type RateLimitingRuleUrlScope.
// The GraphQL type's documentation follows.
//
// Url scope condition applicable on a rate limit rule
type LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope struct {
	// List of url regex
	UrlRegexes []*string `json:"urlRegexes"`
}

// GetUrlRegexes returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope.UrlRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope) GetUrlRegexes() []*string {
	return v.UrlRegexes
}

// LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition includes the requested fields of the GraphQL type RateLimitingRuleUserAgentCondition.
// The GraphQL type's documentation follows.
//
// User agent condition for a rate limit rule
type LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition struct {
	// List of user agent regexes
	UserAgentRegexes []*string `json:"userAgentRegexes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetUserAgentRegexes returns LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition.UserAgentRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition) GetUserAgentRegexes() []*string {
	return v.UserAgentRegexes
}

// GetExclude returns LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition includes the requested fields of the GraphQL type RateLimitingRuleUserIdCondition.
// The GraphQL type's documentation follows.
//
// User ID condition for a rate limit rule
type LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition struct {
	// List of user ID regexes
	UserIdRegexes []*string `json:"userIdRegexes"`
	// List of user IDs
	UserIds []*string `json:"userIds"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetUserIdRegexes returns LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition.UserIdRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition) GetUserIdRegexes() []*string {
	return v.UserIdRegexes
}

// GetUserIds returns LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition.UserIds, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition) GetUserIds() []*string {
	return v.UserIds
}

// GetExclude returns LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition) GetExclude() *bool {
	return v.Exclude
}

// Logical operator describing how to combine multiple independent clauses
type LogicalOperator string

const (
	// AND
	LogicalOperatorAnd LogicalOperator = "AND"
	// OR
	LogicalOperatorOr LogicalOperator = "OR"
)

var AllLogicalOperator = []LogicalOperator{
	LogicalOperatorAnd,
	LogicalOperatorOr,
}

// MaliciousIpRangeFields includes the GraphQL fields of IpRangeRule requested by the fragment MaliciousIpRangeFields.
type MaliciousIpRangeFields struct {
	Id          *string                                             `json:"id"`
	Internal    bool                                                `json:"internal"`
	Disabled    bool                                                `json:"disabled"`
	RuleDetails MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails `json:"ruleDetails"`
	RuleScope   *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope    `json:"ruleScope"`
}

// GetId returns MaliciousIpRangeFields.Id, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFields) GetId() *string { return v.Id }

// GetInternal returns MaliciousIpRangeFields.Internal, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFields) GetInternal() bool { return v.Internal }

// GetDisabled returns MaliciousIpRangeFields.Disabled, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFields) GetDisabled() bool { return v.Disabled }

// GetRuleDetails returns MaliciousIpRangeFields.RuleDetails, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFields) GetRuleDetails() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails {
	return v.RuleDetails
}

// GetRuleScope returns MaliciousIpRangeFields.RuleScope, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFields) GetRuleScope() *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope {
	return v.RuleScope
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails includes the requested fields of the GraphQL type IpRangeRuleDetails.
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails struct {
	Name              string                                                                                         `json:"name"`
	Description       *string                                                                                        `json:"description"`
	RawIpRangeData    []*string                                                                                      `json:"rawIpRangeData"`
	RuleAction        IpRangeRuleActionType                                                                          `json:"ruleAction"`
	EventSeverity     *IpRangeEventSeverity                                                                          `json:"eventSeverity"`
	ExpirationDetails *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails  `json:"expirationDetails"`
	Effects           []*MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification `json:"effects"`
}

// GetName returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.Name, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetName() string { return v.Name }

// GetDescription returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.Description, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetDescription() *string {
	return v.Description
}

// GetRawIpRangeData returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.RawIpRangeData, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetRawIpRangeData() []*string {
	return v.RawIpRangeData
}

// GetRuleAction returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.RuleAction, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetRuleAction() IpRangeRuleActionType {
	return v.RuleAction
}

// GetEventSeverity returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.EventSeverity, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetEventSeverity() *IpRangeEventSeverity {
	return v.EventSeverity
}

// GetExpirationDetails returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.ExpirationDetails, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetExpirationDetails() *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails {
	return v.ExpirationDetails
}

// GetEffects returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.Effects, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetEffects() []*MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification {
	return v.Effects
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification includes the requested fields of the GraphQL type IpRangeRuleEffectWithModification.
// The GraphQL type's documentation follows.
//
// Ip range rule effect with modification
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification struct {
	// Ip range rule effect modification type
	RuleEffectType IpRangeRuleEffectModificationType `json:"ruleEffectType"`
	// Effects enforced for agent while inline processing of requests
	AgentEffect MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect `json:"agentEffect"`
}

// GetRuleEffectType returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification) GetRuleEffectType() IpRangeRuleEffectModificationType {
	return v.RuleEffectType
}

// GetAgentEffect returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification) GetAgentEffect() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect {
	return v.AgentEffect
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect includes the requested fields of the GraphQL type IpRangeRuleAgentEffect.
// The GraphQL type's documentation follows.
//
// Ip range rule agent effect
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect struct {
	// Ip range rule agent modification
	AgentModifications []*MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect) GetAgentModifications() []*MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification {
	return v.AgentModifications
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification includes the requested fields of the GraphQL type IpRangeRuleAgentModification.
// The GraphQL type's documentation follows.
//
// Malicious sources rule agent modification
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification struct {
	// Ip range rule agent modification type
	AgentModificationType IpRangeRuleAgentModificationType `json:"agentModificationType"`
	// Ip range rule header injection
	HeaderInjection MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification) GetAgentModificationType() IpRangeRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification) GetHeaderInjection() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection {
	return v.HeaderInjection
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection includes the requested fields of the GraphQL type IpRangeRuleHeaderInjection.
// The GraphQL type's documentation follows.
//
// Actions associated with the rule
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection struct {
	// Header key
	Key string `json:"key"`
	// Header value
	Value string `json:"value"`
	// Header category
	HeaderCategory IpRangeRuleHeaderCategory `json:"headerCategory"`
}

// GetKey returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection) GetKey() string {
	return v.Key
}

// GetValue returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection) GetValue() string {
	return v.Value
}

// GetHeaderCategory returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection) GetHeaderCategory() IpRangeRuleHeaderCategory {
	return v.HeaderCategory
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails includes the requested fields of the GraphQL type IpRangeExpirationDetails.
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails struct {
	ExpirationDuration  string `json:"expirationDuration"`
	ExpirationTimestamp string `json:"expirationTimestamp"`
}

// GetExpirationDuration returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails.ExpirationDuration, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails) GetExpirationDuration() string {
	return v.ExpirationDuration
}

// GetExpirationTimestamp returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails.ExpirationTimestamp, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails) GetExpirationTimestamp() string {
	return v.ExpirationTimestamp
}

// MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope includes the requested fields of the GraphQL type IpRangeRuleScope.
type MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope struct {
	EnvironmentScope *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope) GetEnvironmentScope() *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope {
	return v.EnvironmentScope
}

// MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope includes the requested fields of the GraphQL type IpRangeEnvironmentScope.
type MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope struct {
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

// MaliciousIpTypeRuleFields includes the GraphQL fields of MaliciousSourcesRule requested by the fragment MaliciousIpTypeRuleFields.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type MaliciousIpTypeRuleFields struct {
	// Rule ID
	Id string `json:"id"`
	// Malicious Sources rule information
	Info MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`
	// Malicious Sources rule scope
	Scope *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`
	// Malicious Sources rule status
	Status MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

// GetId returns MaliciousIpTypeRuleFields.Id, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFields) GetId() string { return v.Id }

// GetInfo returns MaliciousIpTypeRuleFields.Info, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFields) GetInfo() MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.Info
}

// GetScope returns MaliciousIpTypeRuleFields.Scope, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFields) GetScope() *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.Scope
}

// GetStatus returns MaliciousIpTypeRuleFields.Status, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFields) GetStatus() MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.Status
}

// MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo includes the requested fields of the GraphQL type MaliciousSourcesRuleInfo.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule information
type MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo struct {
	// Rule name
	Name string `json:"name"`
	// Rule description
	Description *string `json:"description"`
	// Actions associated with the rule
	Action MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction `json:"action"`
	// Condition for the malicious sources rule to be applied
	Conditions []*MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition `json:"conditions"`
}

// GetName returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo.Name, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo) GetName() string { return v.Name }

// GetDescription returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo.Description, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo) GetDescription() *string {
	return v.Description
}

// GetAction returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo.Action, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo) GetAction() MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction {
	return v.Action
}

// GetConditions returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo.Conditions, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo) GetConditions() []*MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition {
	return v.Conditions
}

// MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction includes the requested fields of the GraphQL type MaliciousSourcesRuleAction.
// The GraphQL type's documentation follows.
//
// Actions associated with the rule
type MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction struct {
	// Severity of events generated by the rule
	EventSeverity *MaliciousSourcesRuleEventSeverity `json:"eventSeverity"`
	// Expiration details of the rule
	ExpirationDetails *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails `json:"expirationDetails"`
	// Rule Action
	RuleActionType MaliciousSourcesRuleActionType `json:"ruleActionType"`
}

// GetEventSeverity returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction) GetEventSeverity() *MaliciousSourcesRuleEventSeverity {
	return v.EventSeverity
}

// GetExpirationDetails returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction.ExpirationDetails, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction) GetExpirationDetails() *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails {
	return v.ExpirationDetails
}

// GetRuleActionType returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction.RuleActionType, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction) GetRuleActionType() MaliciousSourcesRuleActionType {
	return v.RuleActionType
}

// MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails includes the requested fields of the GraphQL type MaliciousSourcesRuleExpirationDetails.
// The GraphQL type's documentation follows.
//
// Expiration details of the rule
type MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails struct {
	// Requested expiration duration for the rule
	ExpirationDuration string `json:"expirationDuration"`
}

// GetExpirationDuration returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails.ExpirationDuration, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails) GetExpirationDuration() string {
	return v.ExpirationDuration
}

// MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition includes the requested fields of the GraphQL type MaliciousSourcesRuleCondition.
// The GraphQL type's documentation follows.
//
// Condition for the malicious sources rule to be applied
type MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition struct {
	// Condition Type for a rule
	ConditionType MaliciousSourcesRuleConditionType `json:"conditionType"`
	// IP location type conditions for the rule to be applied
	IpLocationTypeCondition *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition `json:"ipLocationTypeCondition"`
}

// GetConditionType returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition.ConditionType, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition) GetConditionType() MaliciousSourcesRuleConditionType {
	return v.ConditionType
}

// GetIpLocationTypeCondition returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition.IpLocationTypeCondition, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition) GetIpLocationTypeCondition() *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition {
	return v.IpLocationTypeCondition
}

// MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition includes the requested fields of the GraphQL type MaliciousSourcesRuleIpLocationTypeCondition.
// The GraphQL type's documentation follows.
//
// IP location type conditions for the rule to be applied
type MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition struct {
	// IP location types where rule should apply
	IpLocationTypes []*MaliciousSourcesRuleIpLocationType `json:"ipLocationTypes"`
}

// GetIpLocationTypes returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition.IpLocationTypes, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition) GetIpLocationTypes() []*MaliciousSourcesRuleIpLocationType {
	return v.IpLocationTypes
}

// MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope includes the requested fields of the GraphQL type MaliciousSourcesRuleScope.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule scope
type MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope struct {
	// Environment Scope on which the rule will apply
	EnvironmentScope *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope) GetEnvironmentScope() *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope {
	return v.EnvironmentScope
}

// MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope includes the requested fields of the GraphQL type MaliciousSourcesRuleEnvironmentScope.
// The GraphQL type's documentation follows.
//
// Environment Scope on which the rule will apply
type MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope struct {
	// List of environments on which the rule should apply
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

// MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus includes the requested fields of the GraphQL type MaliciousSourcesRuleStatus.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule status
type MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus struct {
	// Disables rule
	Disabled bool `json:"disabled"`
	// Sets rule as internal, visible only to traceable users. Consumed only if disabled is set to true
	Internal *bool `json:"internal"`
}

// GetDisabled returns MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus.Disabled, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus) GetDisabled() bool {
	return v.Disabled
}

// GetInternal returns MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus.Internal, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus) GetInternal() *bool {
	return v.Internal
}

// MaliciousRegionRuleFields includes the GraphQL fields of RegionRule requested by the fragment MaliciousRegionRuleFields.
type MaliciousRegionRuleFields struct {
	Id            string                                                              `json:"id"`
	Name          string                                                              `json:"name"`
	Type          RegionRuleActionType                                                `json:"type"`
	Description   *string                                                             `json:"description"`
	Disabled      bool                                                                `json:"disabled"`
	Internal      bool                                                                `json:"internal"`
	EventSeverity *RegionRuleEventSeverity                                            `json:"eventSeverity"`
	Expiration    *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration            `json:"expiration"`
	Regions       []*MaliciousRegionRuleFieldsRegionsRegion                           `json:"regions"`
	RuleScope     *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope                  `json:"ruleScope"`
	Effects       []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification `json:"effects"`
}

// GetId returns MaliciousRegionRuleFields.Id, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetId() string { return v.Id }

// GetName returns MaliciousRegionRuleFields.Name, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetName() string { return v.Name }

// GetType returns MaliciousRegionRuleFields.Type, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetType() RegionRuleActionType { return v.Type }

// GetDescription returns MaliciousRegionRuleFields.Description, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetDescription() *string { return v.Description }

// GetDisabled returns MaliciousRegionRuleFields.Disabled, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetDisabled() bool { return v.Disabled }

// GetInternal returns MaliciousRegionRuleFields.Internal, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetInternal() bool { return v.Internal }

// GetEventSeverity returns MaliciousRegionRuleFields.EventSeverity, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetEventSeverity() *RegionRuleEventSeverity {
	return v.EventSeverity
}

// GetExpiration returns MaliciousRegionRuleFields.Expiration, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetExpiration() *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration {
	return v.Expiration
}

// GetRegions returns MaliciousRegionRuleFields.Regions, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetRegions() []*MaliciousRegionRuleFieldsRegionsRegion {
	return v.Regions
}

// GetRuleScope returns MaliciousRegionRuleFields.RuleScope, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetRuleScope() *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope {
	return v.RuleScope
}

// GetEffects returns MaliciousRegionRuleFields.Effects, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetEffects() []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification {
	return v.Effects
}

// MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification includes the requested fields of the GraphQL type RegionRuleEffectWithModification.
type MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification struct {
	RuleEffectType RegionRuleEffectModificationType `json:"ruleEffectType"`
	// Effects enforced for agent while inline processing of requests
	AgentEffect MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect `json:"agentEffect"`
}

// GetRuleEffectType returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification) GetRuleEffectType() RegionRuleEffectModificationType {
	return v.RuleEffectType
}

// GetAgentEffect returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification) GetAgentEffect() MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect {
	return v.AgentEffect
}

// MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect includes the requested fields of the GraphQL type RegionRuleAgentEffect.
type MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect struct {
	AgentModifications []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect) GetAgentModifications() []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification {
	return v.AgentModifications
}

// MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification includes the requested fields of the GraphQL type RegionRuleAgentModification.
type MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification struct {
	AgentModificationType RegionRuleAgentModificationType                                                                                                                                                       `json:"agentModificationType"`
	HeaderInjection       MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification) GetAgentModificationType() RegionRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification) GetHeaderInjection() MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection {
	return v.HeaderInjection
}

// MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection includes the requested fields of the GraphQL type RegionRuleHeaderInjection.
type MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection struct {
	Key            string                   `json:"key"`
	Value          string                   `json:"value"`
	HeaderCategory RegionRuleHeaderCategory `json:"headerCategory"`
}

// GetKey returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection) GetKey() string {
	return v.Key
}

// GetValue returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection) GetValue() string {
	return v.Value
}

// GetHeaderCategory returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection) GetHeaderCategory() RegionRuleHeaderCategory {
	return v.HeaderCategory
}

// MaliciousRegionRuleFieldsExpirationRegionRuleExpiration includes the requested fields of the GraphQL type RegionRuleExpiration.
type MaliciousRegionRuleFieldsExpirationRegionRuleExpiration struct {
	Duration  string `json:"duration"`
	Timestamp string `json:"timestamp"`
}

// GetDuration returns MaliciousRegionRuleFieldsExpirationRegionRuleExpiration.Duration, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration) GetDuration() string {
	return v.Duration
}

// GetTimestamp returns MaliciousRegionRuleFieldsExpirationRegionRuleExpiration.Timestamp, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration) GetTimestamp() string {
	return v.Timestamp
}

// MaliciousRegionRuleFieldsRegionsRegion includes the requested fields of the GraphQL type Region.
type MaliciousRegionRuleFieldsRegionsRegion struct {
	Id string `json:"id"`
	// Region name
	Name string `json:"name"`
	// Country data for region
	Country *MaliciousRegionRuleFieldsRegionsRegionCountry `json:"country"`
}

// GetId returns MaliciousRegionRuleFieldsRegionsRegion.Id, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRegionsRegion) GetId() string { return v.Id }

// GetName returns MaliciousRegionRuleFieldsRegionsRegion.Name, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRegionsRegion) GetName() string { return v.Name }

// GetCountry returns MaliciousRegionRuleFieldsRegionsRegion.Country, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRegionsRegion) GetCountry() *MaliciousRegionRuleFieldsRegionsRegionCountry {
	return v.Country
}

// MaliciousRegionRuleFieldsRegionsRegionCountry includes the requested fields of the GraphQL type Country.
type MaliciousRegionRuleFieldsRegionsRegionCountry struct {
	// Country iso code
	IsoCode string `json:"isoCode"`
	// Country name
	Name string `json:"name"`
}

// GetIsoCode returns MaliciousRegionRuleFieldsRegionsRegionCountry.IsoCode, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRegionsRegionCountry) GetIsoCode() string { return v.IsoCode }

// GetName returns MaliciousRegionRuleFieldsRegionsRegionCountry.Name, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRegionsRegionCountry) GetName() string { return v.Name }

// MaliciousRegionRuleFieldsRuleScopeRegionRuleScope includes the requested fields of the GraphQL type RegionRuleScope.
type MaliciousRegionRuleFieldsRuleScopeRegionRuleScope struct {
	EnvironmentScope *MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns MaliciousRegionRuleFieldsRuleScopeRegionRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope) GetEnvironmentScope() *MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope {
	return v.EnvironmentScope
}

// MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope includes the requested fields of the GraphQL type RegionEnvironmentScope.
type MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope struct {
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

// Rule action
type MaliciousSourcesRuleActionType string

const (
	// Block all the request matching the rule
	MaliciousSourcesRuleActionTypeBlock MaliciousSourcesRuleActionType = "BLOCK"
	// Allow all requests
	MaliciousSourcesRuleActionTypeAllow MaliciousSourcesRuleActionType = "ALLOW"
	// Block all requests except the ones matching the rule
	MaliciousSourcesRuleActionTypeBlockAllExcept MaliciousSourcesRuleActionType = "BLOCK_ALL_EXCEPT"
	// Alert all the request matching the rule
	MaliciousSourcesRuleActionTypeAlert MaliciousSourcesRuleActionType = "ALERT"
)

var AllMaliciousSourcesRuleActionType = []MaliciousSourcesRuleActionType{
	MaliciousSourcesRuleActionTypeBlock,
	MaliciousSourcesRuleActionTypeAllow,
	MaliciousSourcesRuleActionTypeBlockAllExcept,
	MaliciousSourcesRuleActionTypeAlert,
}

// Malicious sources rule agent modification type
type MaliciousSourcesRuleAgentModificationType string

const (
	// Add a header with inline processing of request on matching conditions
	MaliciousSourcesRuleAgentModificationTypeHeaderInjection MaliciousSourcesRuleAgentModificationType = "HEADER_INJECTION"
)

var AllMaliciousSourcesRuleAgentModificationType = []MaliciousSourcesRuleAgentModificationType{
	MaliciousSourcesRuleAgentModificationTypeHeaderInjection,
}

// Condition Type for a rule
type MaliciousSourcesRuleConditionType string

const (
	// IP_ADDRESS
	MaliciousSourcesRuleConditionTypeIpAddress MaliciousSourcesRuleConditionType = "IP_ADDRESS"
	// REGION
	MaliciousSourcesRuleConditionTypeRegion MaliciousSourcesRuleConditionType = "REGION"
	// IP_LOCATION_TYPE
	MaliciousSourcesRuleConditionTypeIpLocationType MaliciousSourcesRuleConditionType = "IP_LOCATION_TYPE"
	// IP_REPUTATION
	MaliciousSourcesRuleConditionTypeIpReputation MaliciousSourcesRuleConditionType = "IP_REPUTATION"
	// EMAIL_DOMAIN
	MaliciousSourcesRuleConditionTypeEmailDomain MaliciousSourcesRuleConditionType = "EMAIL_DOMAIN"
)

var AllMaliciousSourcesRuleConditionType = []MaliciousSourcesRuleConditionType{
	MaliciousSourcesRuleConditionTypeIpAddress,
	MaliciousSourcesRuleConditionTypeRegion,
	MaliciousSourcesRuleConditionTypeIpLocationType,
	MaliciousSourcesRuleConditionTypeIpReputation,
	MaliciousSourcesRuleConditionTypeEmailDomain,
}

type MaliciousSourcesRuleEffectModificationType string

const (
	// Modifications to be done on agent
	MaliciousSourcesRuleEffectModificationTypeAgentEffect MaliciousSourcesRuleEffectModificationType = "AGENT_EFFECT"
)

var AllMaliciousSourcesRuleEffectModificationType = []MaliciousSourcesRuleEffectModificationType{
	MaliciousSourcesRuleEffectModificationTypeAgentEffect,
}

// Email Fraud Score level for a rule
type MaliciousSourcesRuleEmailFraudScoreLevel string

const (
	// HIGH
	MaliciousSourcesRuleEmailFraudScoreLevelHigh MaliciousSourcesRuleEmailFraudScoreLevel = "HIGH"
	// CRITICAL
	MaliciousSourcesRuleEmailFraudScoreLevelCritical MaliciousSourcesRuleEmailFraudScoreLevel = "CRITICAL"
)

var AllMaliciousSourcesRuleEmailFraudScoreLevel = []MaliciousSourcesRuleEmailFraudScoreLevel{
	MaliciousSourcesRuleEmailFraudScoreLevelHigh,
	MaliciousSourcesRuleEmailFraudScoreLevelCritical,
}

// Email Fraud Score type for a rule
type MaliciousSourcesRuleEmailFraudScoreType string

const (
	// MIN_SEVERITY
	MaliciousSourcesRuleEmailFraudScoreTypeMinSeverity MaliciousSourcesRuleEmailFraudScoreType = "MIN_SEVERITY"
	// MIN_SCORE
	MaliciousSourcesRuleEmailFraudScoreTypeMinScore MaliciousSourcesRuleEmailFraudScoreType = "MIN_SCORE"
)

var AllMaliciousSourcesRuleEmailFraudScoreType = []MaliciousSourcesRuleEmailFraudScoreType{
	MaliciousSourcesRuleEmailFraudScoreTypeMinSeverity,
	MaliciousSourcesRuleEmailFraudScoreTypeMinScore,
}

// Severity of events generated by the rule
type MaliciousSourcesRuleEventSeverity string

const (
	// LOW
	MaliciousSourcesRuleEventSeverityLow MaliciousSourcesRuleEventSeverity = "LOW"
	// MEDIUM
	MaliciousSourcesRuleEventSeverityMedium MaliciousSourcesRuleEventSeverity = "MEDIUM"
	// HIGH
	MaliciousSourcesRuleEventSeverityHigh MaliciousSourcesRuleEventSeverity = "HIGH"
	// CRITICAL
	MaliciousSourcesRuleEventSeverityCritical MaliciousSourcesRuleEventSeverity = "CRITICAL"
)

var AllMaliciousSourcesRuleEventSeverity = []MaliciousSourcesRuleEventSeverity{
	MaliciousSourcesRuleEventSeverityLow,
	MaliciousSourcesRuleEventSeverityMedium,
	MaliciousSourcesRuleEventSeverityHigh,
	MaliciousSourcesRuleEventSeverityCritical,
}

// Malicious sources header category
type MaliciousSourcesRuleHeaderCategory string

const (
	// Request header category
	MaliciousSourcesRuleHeaderCategoryRequest MaliciousSourcesRuleHeaderCategory = "REQUEST"
	// Response header category
	MaliciousSourcesRuleHeaderCategoryResponse MaliciousSourcesRuleHeaderCategory = "RESPONSE"
)

var AllMaliciousSourcesRuleHeaderCategory = []MaliciousSourcesRuleHeaderCategory{
	MaliciousSourcesRuleHeaderCategoryRequest,
	MaliciousSourcesRuleHeaderCategoryResponse,
}

// IP location type for a rule
type MaliciousSourcesRuleIpLocationType string

const (
	// ANONYMOUS_VPN
	MaliciousSourcesRuleIpLocationTypeAnonymousVpn MaliciousSourcesRuleIpLocationType = "ANONYMOUS_VPN"
	// HOSTING_PROVIDER
	MaliciousSourcesRuleIpLocationTypeHostingProvider MaliciousSourcesRuleIpLocationType = "HOSTING_PROVIDER"
	// PUBLIC_PROXY
	MaliciousSourcesRuleIpLocationTypePublicProxy MaliciousSourcesRuleIpLocationType = "PUBLIC_PROXY"
	// TOR_EXIT_NODE
	MaliciousSourcesRuleIpLocationTypeTorExitNode MaliciousSourcesRuleIpLocationType = "TOR_EXIT_NODE"
	// BOT
	MaliciousSourcesRuleIpLocationTypeBot MaliciousSourcesRuleIpLocationType = "BOT"
)

var AllMaliciousSourcesRuleIpLocationType = []MaliciousSourcesRuleIpLocationType{
	MaliciousSourcesRuleIpLocationTypeAnonymousVpn,
	MaliciousSourcesRuleIpLocationTypeHostingProvider,
	MaliciousSourcesRuleIpLocationTypePublicProxy,
	MaliciousSourcesRuleIpLocationTypeTorExitNode,
	MaliciousSourcesRuleIpLocationTypeBot,
}

// IP reputation type for a rule
type MaliciousSourcesRuleIpReputationConditionType string

const (
	// MIN_SEVERITY
	MaliciousSourcesRuleIpReputationConditionTypeMinSeverity MaliciousSourcesRuleIpReputationConditionType = "MIN_SEVERITY"
	// MIN_SCORE
	MaliciousSourcesRuleIpReputationConditionTypeMinScore MaliciousSourcesRuleIpReputationConditionType = "MIN_SCORE"
)

var AllMaliciousSourcesRuleIpReputationConditionType = []MaliciousSourcesRuleIpReputationConditionType{
	MaliciousSourcesRuleIpReputationConditionTypeMinSeverity,
	MaliciousSourcesRuleIpReputationConditionTypeMinScore,
}

// Severity of event generated by the rule
type MaliciousSourcesRuleIpReputationSeverity string

const (
	// LOW
	MaliciousSourcesRuleIpReputationSeverityLow MaliciousSourcesRuleIpReputationSeverity = "LOW"
	// MEDIUM
	MaliciousSourcesRuleIpReputationSeverityMedium MaliciousSourcesRuleIpReputationSeverity = "MEDIUM"
	// HIGH
	MaliciousSourcesRuleIpReputationSeverityHigh MaliciousSourcesRuleIpReputationSeverity = "HIGH"
	// CRITICAL
	MaliciousSourcesRuleIpReputationSeverityCritical MaliciousSourcesRuleIpReputationSeverity = "CRITICAL"
)

var AllMaliciousSourcesRuleIpReputationSeverity = []MaliciousSourcesRuleIpReputationSeverity{
	MaliciousSourcesRuleIpReputationSeverityLow,
	MaliciousSourcesRuleIpReputationSeverityMedium,
	MaliciousSourcesRuleIpReputationSeverityHigh,
	MaliciousSourcesRuleIpReputationSeverityCritical,
}

// Region Type for a rule
type MaliciousSourcesRuleRegionType string

const (
	// COUNTRY_ISO_CODE
	MaliciousSourcesRuleRegionTypeCountryIsoCode MaliciousSourcesRuleRegionType = "COUNTRY_ISO_CODE"
)

var AllMaliciousSourcesRuleRegionType = []MaliciousSourcesRuleRegionType{
	MaliciousSourcesRuleRegionTypeCountryIsoCode,
}

type RateLimitingRuleActionType string

const (
	// ALERT
	RateLimitingRuleActionTypeAlert RateLimitingRuleActionType = "ALERT"
	// BLOCK
	RateLimitingRuleActionTypeBlock RateLimitingRuleActionType = "BLOCK"
	// ALLOW
	RateLimitingRuleActionTypeAllow RateLimitingRuleActionType = "ALLOW"
	// MARK_FOR_TESTING
	RateLimitingRuleActionTypeMarkForTesting RateLimitingRuleActionType = "MARK_FOR_TESTING"
)

var AllRateLimitingRuleActionType = []RateLimitingRuleActionType{
	RateLimitingRuleActionTypeAlert,
	RateLimitingRuleActionTypeBlock,
	RateLimitingRuleActionTypeAllow,
	RateLimitingRuleActionTypeMarkForTesting,
}

type RateLimitingRuleAgentModificationType string

const (
	// Add a header with inline processing of request on matching conditions
	RateLimitingRuleAgentModificationTypeHeaderInjection RateLimitingRuleAgentModificationType = "HEADER_INJECTION"
)

var AllRateLimitingRuleAgentModificationType = []RateLimitingRuleAgentModificationType{
	RateLimitingRuleAgentModificationTypeHeaderInjection,
}

type RateLimitingRuleApiAggregateType string

const (
	// PER_ENDPOINT
	RateLimitingRuleApiAggregateTypePerEndpoint RateLimitingRuleApiAggregateType = "PER_ENDPOINT"
	// ACROSS_ENDPOINTS
	RateLimitingRuleApiAggregateTypeAcrossEndpoints RateLimitingRuleApiAggregateType = "ACROSS_ENDPOINTS"
)

var AllRateLimitingRuleApiAggregateType = []RateLimitingRuleApiAggregateType{
	RateLimitingRuleApiAggregateTypePerEndpoint,
	RateLimitingRuleApiAggregateTypeAcrossEndpoints,
}

type RateLimitingRuleCategory string

const (
	// ENDPOINT_RATE_LIMITING
	RateLimitingRuleCategoryEndpointRateLimiting RateLimitingRuleCategory = "ENDPOINT_RATE_LIMITING"
	// DATA_EXFILTRATION
	RateLimitingRuleCategoryDataExfiltration RateLimitingRuleCategory = "DATA_EXFILTRATION"
	// ENUMERATION
	RateLimitingRuleCategoryEnumeration RateLimitingRuleCategory = "ENUMERATION"
)

var AllRateLimitingRuleCategory = []RateLimitingRuleCategory{
	RateLimitingRuleCategoryEndpointRateLimiting,
	RateLimitingRuleCategoryDataExfiltration,
	RateLimitingRuleCategoryEnumeration,
}

type RateLimitingRuleConditionType string

const (
	// LOGICAL_CONDITION
	RateLimitingRuleConditionTypeLogicalCondition RateLimitingRuleConditionType = "LOGICAL_CONDITION"
	// LEAF_CONDITION
	RateLimitingRuleConditionTypeLeafCondition RateLimitingRuleConditionType = "LEAF_CONDITION"
)

var AllRateLimitingRuleConditionType = []RateLimitingRuleConditionType{
	RateLimitingRuleConditionTypeLogicalCondition,
	RateLimitingRuleConditionTypeLeafCondition,
}

// Rate limiting rule data location
type RateLimitingRuleDataLocation string

const (
	// REQUEST
	RateLimitingRuleDataLocationRequest RateLimitingRuleDataLocation = "REQUEST"
	// RESPONSE
	RateLimitingRuleDataLocationResponse RateLimitingRuleDataLocation = "RESPONSE"
)

var AllRateLimitingRuleDataLocation = []RateLimitingRuleDataLocation{
	RateLimitingRuleDataLocationRequest,
	RateLimitingRuleDataLocationResponse,
}

// Rate limiting rule data sensitivity
type RateLimitingRuleDataSensitivityLevel string

const (
	// LOW
	RateLimitingRuleDataSensitivityLevelLow RateLimitingRuleDataSensitivityLevel = "LOW"
	// MEDIUM
	RateLimitingRuleDataSensitivityLevelMedium RateLimitingRuleDataSensitivityLevel = "MEDIUM"
	// HIGH
	RateLimitingRuleDataSensitivityLevelHigh RateLimitingRuleDataSensitivityLevel = "HIGH"
	// CRITICAL
	RateLimitingRuleDataSensitivityLevelCritical RateLimitingRuleDataSensitivityLevel = "CRITICAL"
)

var AllRateLimitingRuleDataSensitivityLevel = []RateLimitingRuleDataSensitivityLevel{
	RateLimitingRuleDataSensitivityLevelLow,
	RateLimitingRuleDataSensitivityLevelMedium,
	RateLimitingRuleDataSensitivityLevelHigh,
	RateLimitingRuleDataSensitivityLevelCritical,
}

// Rate limiting rule datatype matching type
type RateLimitingRuleDatatypeMatchingType string

const (
	// REGEX_BASED_MATCHING
	RateLimitingRuleDatatypeMatchingTypeRegexBasedMatching RateLimitingRuleDatatypeMatchingType = "REGEX_BASED_MATCHING"
	// LEARNED_TYPES_MATCHING
	RateLimitingRuleDatatypeMatchingTypeLearnedTypesMatching RateLimitingRuleDatatypeMatchingType = "LEARNED_TYPES_MATCHING"
)

var AllRateLimitingRuleDatatypeMatchingType = []RateLimitingRuleDatatypeMatchingType{
	RateLimitingRuleDatatypeMatchingTypeRegexBasedMatching,
	RateLimitingRuleDatatypeMatchingTypeLearnedTypesMatching,
}

type RateLimitingRuleEntityType string

const (
	// API
	RateLimitingRuleEntityTypeApi RateLimitingRuleEntityType = "API"
	// SERVICE
	RateLimitingRuleEntityTypeService RateLimitingRuleEntityType = "SERVICE"
)

var AllRateLimitingRuleEntityType = []RateLimitingRuleEntityType{
	RateLimitingRuleEntityTypeApi,
	RateLimitingRuleEntityTypeService,
}

type RateLimitingRuleEventSeverity string

const (
	// LOW
	RateLimitingRuleEventSeverityLow RateLimitingRuleEventSeverity = "LOW"
	// MEDIUM
	RateLimitingRuleEventSeverityMedium RateLimitingRuleEventSeverity = "MEDIUM"
	// HIGH
	RateLimitingRuleEventSeverityHigh RateLimitingRuleEventSeverity = "HIGH"
	// CRITICAL
	RateLimitingRuleEventSeverityCritical RateLimitingRuleEventSeverity = "CRITICAL"
)

var AllRateLimitingRuleEventSeverity = []RateLimitingRuleEventSeverity{
	RateLimitingRuleEventSeverityLow,
	RateLimitingRuleEventSeverityMedium,
	RateLimitingRuleEventSeverityHigh,
	RateLimitingRuleEventSeverityCritical,
}

// Fragment for rateLimitingRules
type RateLimitingRuleFields struct {
	// Rate limit rule category
	Category RateLimitingRuleCategory `json:"category"`
	// Rate limit rule description
	Description *string `json:"description"`
	// Rate limit rule enabled status
	Enabled bool `json:"enabled"`
	// Rate limit rule ID
	Id string `json:"id"`
	// Rate limit rule name
	Name string `json:"name"`
	// Rate limit rule custom labels
	Labels []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel `json:"labels"`
	// List of configs containing thresholds and actions for a rate limit rule
	ThresholdActionConfigs []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`
	// Transaction action config for DLP rule
	TransactionActionConfigs *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`
	// Rate limit rule scope
	RuleConfigScope *RateLimitingRuleFieldsRuleConfigScope `json:"ruleConfigScope"`
	// Rate limit rule status
	RuleStatus *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus `json:"ruleStatus"`
	// List of rate limit rule conditions
	Conditions []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition `json:"conditions"`
}

// GetCategory returns RateLimitingRuleFields.Category, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetCategory() RateLimitingRuleCategory { return v.Category }

// GetDescription returns RateLimitingRuleFields.Description, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetDescription() *string { return v.Description }

// GetEnabled returns RateLimitingRuleFields.Enabled, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetEnabled() bool { return v.Enabled }

// GetId returns RateLimitingRuleFields.Id, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetId() string { return v.Id }

// GetName returns RateLimitingRuleFields.Name, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetName() string { return v.Name }

// GetLabels returns RateLimitingRuleFields.Labels, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetLabels() []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel {
	return v.Labels
}

// GetThresholdActionConfigs returns RateLimitingRuleFields.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetThresholdActionConfigs() []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig {
	return v.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns RateLimitingRuleFields.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetTransactionActionConfigs() *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig {
	return v.TransactionActionConfigs
}

// GetRuleConfigScope returns RateLimitingRuleFields.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetRuleConfigScope() *RateLimitingRuleFieldsRuleConfigScope {
	return v.RuleConfigScope
}

// GetRuleStatus returns RateLimitingRuleFields.RuleStatus, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetRuleStatus() *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus {
	return v.RuleStatus
}

// GetConditions returns RateLimitingRuleFields.Conditions, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetConditions() []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition {
	return v.Conditions
}

// RateLimitingRuleFieldsConditionsRateLimitingRuleCondition includes the requested fields of the GraphQL type RateLimitingRuleCondition.
// The GraphQL type's documentation follows.
//
// Condition applicable for a rate limit rule
type RateLimitingRuleFieldsConditionsRateLimitingRuleCondition struct {
	// Rate limit rule leaf condition
	LeafCondition *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition `json:"leafCondition"`
}

// GetLeafCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleCondition.LeafCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleCondition) GetLeafCondition() *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition {
	return v.LeafCondition
}

// RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition includes the requested fields of the GraphQL type RateLimitingRuleLeafCondition.
// The GraphQL type's documentation follows.
//
// Leaf condition applicable on a rate limit rule
type RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition struct {
	LeafConditionFields `json:"-"`
}

// GetConditionType returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.ConditionType, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetConditionType() RateLimitingRuleLeafConditionType {
	return v.LeafConditionFields.ConditionType
}

// GetDatatypeCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.DatatypeCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetDatatypeCondition() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition {
	return v.LeafConditionFields.DatatypeCondition
}

// GetIpAddressCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpAddressCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpAddressCondition() *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition {
	return v.LeafConditionFields.IpAddressCondition
}

// GetIpReputationCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpReputationCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpReputationCondition() *LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition {
	return v.LeafConditionFields.IpReputationCondition
}

// GetIpLocationTypeCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpLocationTypeCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpLocationTypeCondition() *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition {
	return v.LeafConditionFields.IpLocationTypeCondition
}

// GetEmailDomainCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.EmailDomainCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetEmailDomainCondition() *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition {
	return v.LeafConditionFields.EmailDomainCondition
}

// GetIpOrganisationCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpOrganisationCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpOrganisationCondition() *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition {
	return v.LeafConditionFields.IpOrganisationCondition
}

// GetIpAsnCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpAsnCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpAsnCondition() *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition {
	return v.LeafConditionFields.IpAsnCondition
}

// GetUserIdCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.UserIdCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetUserIdCondition() *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition {
	return v.LeafConditionFields.UserIdCondition
}

// GetUserAgentCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.UserAgentCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetUserAgentCondition() *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition {
	return v.LeafConditionFields.UserAgentCondition
}

// GetIpConnectionTypeCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpConnectionTypeCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpConnectionTypeCondition() *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition {
	return v.LeafConditionFields.IpConnectionTypeCondition
}

// GetIpAbuseVelocityCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpAbuseVelocityCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpAbuseVelocityCondition() *LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition {
	return v.LeafConditionFields.IpAbuseVelocityCondition
}

// GetKeyValueCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.KeyValueCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetKeyValueCondition() *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition {
	return v.LeafConditionFields.KeyValueCondition
}

// GetRegionCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.RegionCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetRegionCondition() *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition {
	return v.LeafConditionFields.RegionCondition
}

// GetRequestScannerTypeCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.RequestScannerTypeCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetRequestScannerTypeCondition() *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition {
	return v.LeafConditionFields.RequestScannerTypeCondition
}

// GetScopeCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.ScopeCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetScopeCondition() *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition {
	return v.LeafConditionFields.ScopeCondition
}

func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition
		graphql.NoUnmarshalJSON
	}
	firstPass.RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.LeafConditionFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalRateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition struct {
	ConditionType RateLimitingRuleLeafConditionType `json:"conditionType"`

	DatatypeCondition *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition `json:"datatypeCondition"`

	IpAddressCondition *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition `json:"ipAddressCondition"`

	IpReputationCondition *LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition `json:"ipReputationCondition"`

	IpLocationTypeCondition *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition `json:"ipLocationTypeCondition"`

	EmailDomainCondition *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition `json:"emailDomainCondition"`

	IpOrganisationCondition *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition `json:"ipOrganisationCondition"`

	IpAsnCondition *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition `json:"ipAsnCondition"`

	UserIdCondition *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition `json:"userIdCondition"`

	UserAgentCondition *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition `json:"userAgentCondition"`

	IpConnectionTypeCondition *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition `json:"ipConnectionTypeCondition"`

	IpAbuseVelocityCondition *LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition `json:"ipAbuseVelocityCondition"`

	KeyValueCondition *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition `json:"keyValueCondition"`

	RegionCondition *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition `json:"regionCondition"`

	RequestScannerTypeCondition *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition `json:"requestScannerTypeCondition"`

	ScopeCondition *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition `json:"scopeCondition"`
}

func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) __premarshalJSON() (*__premarshalRateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition, error) {
	var retval __premarshalRateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition

	retval.ConditionType = v.LeafConditionFields.ConditionType
	retval.DatatypeCondition = v.LeafConditionFields.DatatypeCondition
	retval.IpAddressCondition = v.LeafConditionFields.IpAddressCondition
	retval.IpReputationCondition = v.LeafConditionFields.IpReputationCondition
	retval.IpLocationTypeCondition = v.LeafConditionFields.IpLocationTypeCondition
	retval.EmailDomainCondition = v.LeafConditionFields.EmailDomainCondition
	retval.IpOrganisationCondition = v.LeafConditionFields.IpOrganisationCondition
	retval.IpAsnCondition = v.LeafConditionFields.IpAsnCondition
	retval.UserIdCondition = v.LeafConditionFields.UserIdCondition
	retval.UserAgentCondition = v.LeafConditionFields.UserAgentCondition
	retval.IpConnectionTypeCondition = v.LeafConditionFields.IpConnectionTypeCondition
	retval.IpAbuseVelocityCondition = v.LeafConditionFields.IpAbuseVelocityCondition
	retval.KeyValueCondition = v.LeafConditionFields.KeyValueCondition
	retval.RegionCondition = v.LeafConditionFields.RegionCondition
	retval.RequestScannerTypeCondition = v.LeafConditionFields.RequestScannerTypeCondition
	retval.ScopeCondition = v.LeafConditionFields.ScopeCondition
	return &retval, nil
}

// RateLimitingRuleFieldsLabelsRateLimitingRuleLabel includes the requested fields of the GraphQL type RateLimitingRuleLabel.
// The GraphQL type's documentation follows.
//
// Key-value pair for labels
type RateLimitingRuleFieldsLabelsRateLimitingRuleLabel struct {
	// Key
	Key string `json:"key"`
	// Value
	Value string `json:"value"`
}

// GetKey returns RateLimitingRuleFieldsLabelsRateLimitingRuleLabel.Key, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsLabelsRateLimitingRuleLabel) GetKey() string { return v.Key }

// GetValue returns RateLimitingRuleFieldsLabelsRateLimitingRuleLabel.Value, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsLabelsRateLimitingRuleLabel) GetValue() string { return v.Value }

// RateLimitingRuleFieldsRuleConfigScope includes the requested fields of the GraphQL type RuleConfigScope.
// The GraphQL type's documentation follows.
//
// Rate limit rule scope
type RateLimitingRuleFieldsRuleConfigScope struct {
	RuleConfigScopeFields `json:"-"`
}

// GetEnvironmentScope returns RateLimitingRuleFieldsRuleConfigScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsRuleConfigScope) GetEnvironmentScope() *RuleConfigScopeFieldsEnvironmentScope {
	return v.RuleConfigScopeFields.EnvironmentScope
}

func (v *RateLimitingRuleFieldsRuleConfigScope) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*RateLimitingRuleFieldsRuleConfigScope
		graphql.NoUnmarshalJSON
	}
	firstPass.RateLimitingRuleFieldsRuleConfigScope = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.RuleConfigScopeFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalRateLimitingRuleFieldsRuleConfigScope struct {
	EnvironmentScope *RuleConfigScopeFieldsEnvironmentScope `json:"environmentScope"`
}

func (v *RateLimitingRuleFieldsRuleConfigScope) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *RateLimitingRuleFieldsRuleConfigScope) __premarshalJSON() (*__premarshalRateLimitingRuleFieldsRuleConfigScope, error) {
	var retval __premarshalRateLimitingRuleFieldsRuleConfigScope

	retval.EnvironmentScope = v.RuleConfigScopeFields.EnvironmentScope
	return &retval, nil
}

// RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus includes the requested fields of the GraphQL type RateLimitingRuleStatus.
// The GraphQL type's documentation follows.
//
// Status of rate limit rule
type RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus struct {
	RuleStatusFields `json:"-"`
}

// GetInternal returns RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus.Internal, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus) GetInternal() *bool {
	return v.RuleStatusFields.Internal
}

// GetRuleCreationSource returns RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus.RuleCreationSource, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus) GetRuleCreationSource() *RateLimitingRuleSource {
	return v.RuleStatusFields.RuleCreationSource
}

func (v *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus
		graphql.NoUnmarshalJSON
	}
	firstPass.RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.RuleStatusFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalRateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus struct {
	Internal *bool `json:"internal"`

	RuleCreationSource *RateLimitingRuleSource `json:"ruleCreationSource"`
}

func (v *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus) __premarshalJSON() (*__premarshalRateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus, error) {
	var retval __premarshalRateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus

	retval.Internal = v.RuleStatusFields.Internal
	retval.RuleCreationSource = v.RuleStatusFields.RuleCreationSource
	return &retval, nil
}

// RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig includes the requested fields of the GraphQL type RateLimitingRuleThresholdActionConfig.
// The GraphQL type's documentation follows.
//
// Config for thresholds and actions applicable on a rate limit rule
type RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig struct {
	ThresholdActionConfigFields `json:"-"`
}

// GetActions returns RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig.Actions, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig) GetActions() []*ThresholdActionConfigFieldsActionsRateLimitingRuleAction {
	return v.ThresholdActionConfigFields.Actions
}

// GetThresholdConfigs returns RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig.ThresholdConfigs, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig) GetThresholdConfigs() []*ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig {
	return v.ThresholdActionConfigFields.ThresholdConfigs
}

func (v *RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig
		graphql.NoUnmarshalJSON
	}
	firstPass.RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ThresholdActionConfigFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalRateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig struct {
	Actions []*ThresholdActionConfigFieldsActionsRateLimitingRuleAction `json:"actions"`

	ThresholdConfigs []*ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig `json:"thresholdConfigs"`
}

func (v *RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig) __premarshalJSON() (*__premarshalRateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig, error) {
	var retval __premarshalRateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig

	retval.Actions = v.ThresholdActionConfigFields.Actions
	retval.ThresholdConfigs = v.ThresholdActionConfigFields.ThresholdConfigs
	return &retval, nil
}

// RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig includes the requested fields of the GraphQL type RateLimitingTransactionActionConfig.
// The GraphQL type's documentation follows.
//
// Rate limit rule transaction action config
type RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig struct {
	TransactionActionConfigFields `json:"-"`
}

// GetAction returns RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig.Action, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig) GetAction() TransactionActionConfigFieldsActionRateLimitingRuleAction {
	return v.TransactionActionConfigFields.Action
}

// GetExpirationTimestamp returns RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig.ExpirationTimestamp, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig) GetExpirationTimestamp() *string {
	return v.TransactionActionConfigFields.ExpirationTimestamp
}

func (v *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig
		graphql.NoUnmarshalJSON
	}
	firstPass.RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.TransactionActionConfigFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalRateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig struct {
	Action TransactionActionConfigFieldsActionRateLimitingRuleAction `json:"action"`

	ExpirationTimestamp *string `json:"expirationTimestamp"`
}

func (v *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig) __premarshalJSON() (*__premarshalRateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig, error) {
	var retval __premarshalRateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig

	retval.Action = v.TransactionActionConfigFields.Action
	retval.ExpirationTimestamp = v.TransactionActionConfigFields.ExpirationTimestamp
	return &retval, nil
}

type RateLimitingRuleIpAbuseVelocity string

const (
	// LOW
	RateLimitingRuleIpAbuseVelocityLow RateLimitingRuleIpAbuseVelocity = "LOW"
	// MEDIUM
	RateLimitingRuleIpAbuseVelocityMedium RateLimitingRuleIpAbuseVelocity = "MEDIUM"
	// HIGH
	RateLimitingRuleIpAbuseVelocityHigh RateLimitingRuleIpAbuseVelocity = "HIGH"
)

var AllRateLimitingRuleIpAbuseVelocity = []RateLimitingRuleIpAbuseVelocity{
	RateLimitingRuleIpAbuseVelocityLow,
	RateLimitingRuleIpAbuseVelocityMedium,
	RateLimitingRuleIpAbuseVelocityHigh,
}

// Ip address condition type
type RateLimitingRuleIpAddressConditionType string

const (
	// All internal ip address condition type
	RateLimitingRuleIpAddressConditionTypeAllInternal RateLimitingRuleIpAddressConditionType = "ALL_INTERNAL"
	// All external ip address condition type
	RateLimitingRuleIpAddressConditionTypeAllExternal RateLimitingRuleIpAddressConditionType = "ALL_EXTERNAL"
)

var AllRateLimitingRuleIpAddressConditionType = []RateLimitingRuleIpAddressConditionType{
	RateLimitingRuleIpAddressConditionTypeAllInternal,
	RateLimitingRuleIpAddressConditionTypeAllExternal,
}

// IP connection types for rate limit rule IP connection type condition
type RateLimitingRuleIpConnectionType string

const (
	// RESIDENTIAL
	RateLimitingRuleIpConnectionTypeResidential RateLimitingRuleIpConnectionType = "RESIDENTIAL"
	// MOBILE
	RateLimitingRuleIpConnectionTypeMobile RateLimitingRuleIpConnectionType = "MOBILE"
	// CORPORATE
	RateLimitingRuleIpConnectionTypeCorporate RateLimitingRuleIpConnectionType = "CORPORATE"
	// DATA_CENTER
	RateLimitingRuleIpConnectionTypeDataCenter RateLimitingRuleIpConnectionType = "DATA_CENTER"
	// EDUCATION
	RateLimitingRuleIpConnectionTypeEducation RateLimitingRuleIpConnectionType = "EDUCATION"
)

var AllRateLimitingRuleIpConnectionType = []RateLimitingRuleIpConnectionType{
	RateLimitingRuleIpConnectionTypeResidential,
	RateLimitingRuleIpConnectionTypeMobile,
	RateLimitingRuleIpConnectionTypeCorporate,
	RateLimitingRuleIpConnectionTypeDataCenter,
	RateLimitingRuleIpConnectionTypeEducation,
}

type RateLimitingRuleIpLocationType string

const (
	// RESIDENTIAL
	RateLimitingRuleIpLocationTypeResidential RateLimitingRuleIpLocationType = "RESIDENTIAL"
	// ANONYMOUS
	RateLimitingRuleIpLocationTypeAnonymous RateLimitingRuleIpLocationType = "ANONYMOUS"
	// ANONYMOUS_VPN
	RateLimitingRuleIpLocationTypeAnonymousVpn RateLimitingRuleIpLocationType = "ANONYMOUS_VPN"
	// HOSTING_PROVIDER
	RateLimitingRuleIpLocationTypeHostingProvider RateLimitingRuleIpLocationType = "HOSTING_PROVIDER"
	// PUBLIC_PROXY
	RateLimitingRuleIpLocationTypePublicProxy RateLimitingRuleIpLocationType = "PUBLIC_PROXY"
	// TOR_EXIT_NODE
	RateLimitingRuleIpLocationTypeTorExitNode RateLimitingRuleIpLocationType = "TOR_EXIT_NODE"
	// BOT
	RateLimitingRuleIpLocationTypeBot RateLimitingRuleIpLocationType = "BOT"
	// SCANNER
	RateLimitingRuleIpLocationTypeScanner RateLimitingRuleIpLocationType = "SCANNER"
)

var AllRateLimitingRuleIpLocationType = []RateLimitingRuleIpLocationType{
	RateLimitingRuleIpLocationTypeResidential,
	RateLimitingRuleIpLocationTypeAnonymous,
	RateLimitingRuleIpLocationTypeAnonymousVpn,
	RateLimitingRuleIpLocationTypeHostingProvider,
	RateLimitingRuleIpLocationTypePublicProxy,
	RateLimitingRuleIpLocationTypeTorExitNode,
	RateLimitingRuleIpLocationTypeBot,
	RateLimitingRuleIpLocationTypeScanner,
}

type RateLimitingRuleIpReputationSeverity string

const (
	// LOW
	RateLimitingRuleIpReputationSeverityLow RateLimitingRuleIpReputationSeverity = "LOW"
	// MEDIUM
	RateLimitingRuleIpReputationSeverityMedium RateLimitingRuleIpReputationSeverity = "MEDIUM"
	// HIGH
	RateLimitingRuleIpReputationSeverityHigh RateLimitingRuleIpReputationSeverity = "HIGH"
	// CRITICAL
	RateLimitingRuleIpReputationSeverityCritical RateLimitingRuleIpReputationSeverity = "CRITICAL"
)

var AllRateLimitingRuleIpReputationSeverity = []RateLimitingRuleIpReputationSeverity{
	RateLimitingRuleIpReputationSeverityLow,
	RateLimitingRuleIpReputationSeverityMedium,
	RateLimitingRuleIpReputationSeverityHigh,
	RateLimitingRuleIpReputationSeverityCritical,
}

type RateLimitingRuleKeyValueConditionMetadataType string

const (
	// URL
	RateLimitingRuleKeyValueConditionMetadataTypeUrl RateLimitingRuleKeyValueConditionMetadataType = "URL"
	// HOST
	RateLimitingRuleKeyValueConditionMetadataTypeHost RateLimitingRuleKeyValueConditionMetadataType = "HOST"
	// HTTP_METHOD
	RateLimitingRuleKeyValueConditionMetadataTypeHttpMethod RateLimitingRuleKeyValueConditionMetadataType = "HTTP_METHOD"
	// USER_AGENT
	RateLimitingRuleKeyValueConditionMetadataTypeUserAgent RateLimitingRuleKeyValueConditionMetadataType = "USER_AGENT"
	// QUERY_PARAMETER
	RateLimitingRuleKeyValueConditionMetadataTypeQueryParameter RateLimitingRuleKeyValueConditionMetadataType = "QUERY_PARAMETER"
	// STATUS_CODE
	RateLimitingRuleKeyValueConditionMetadataTypeStatusCode RateLimitingRuleKeyValueConditionMetadataType = "STATUS_CODE"
	// REQUEST_BODY
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBody RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_BODY"
	// RESPONSE_BODY
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBody RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_BODY"
	// REQUEST_HEADER
	RateLimitingRuleKeyValueConditionMetadataTypeRequestHeader RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_HEADER"
	// RESPONSE_HEADER
	RateLimitingRuleKeyValueConditionMetadataTypeResponseHeader RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_HEADER"
	// REQUEST_COOKIE
	RateLimitingRuleKeyValueConditionMetadataTypeRequestCookie RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_COOKIE"
	// RESPONSE_COOKIE
	RateLimitingRuleKeyValueConditionMetadataTypeResponseCookie RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_COOKIE"
	// REQUEST_BODY_PARAMETER
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBodyParameter RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_BODY_PARAMETER"
	// RESPONSE_BODY_PARAMETER
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBodyParameter RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_BODY_PARAMETER"
	// TAG
	RateLimitingRuleKeyValueConditionMetadataTypeTag RateLimitingRuleKeyValueConditionMetadataType = "TAG"
	// REQUEST_BODY_SIZE
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBodySize RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_BODY_SIZE"
	// RESPONSE_BODY_SIZE
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBodySize RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_BODY_SIZE"
	// QUERY_PARAMS_COUNT
	RateLimitingRuleKeyValueConditionMetadataTypeQueryParamsCount RateLimitingRuleKeyValueConditionMetadataType = "QUERY_PARAMS_COUNT"
	// REQUEST_HEADERS_COUNT
	RateLimitingRuleKeyValueConditionMetadataTypeRequestHeadersCount RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_HEADERS_COUNT"
	// RESPONSE_HEADERS_COUNT
	RateLimitingRuleKeyValueConditionMetadataTypeResponseHeadersCount RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_HEADERS_COUNT"
	// REQUEST_COOKIES_COUNT
	RateLimitingRuleKeyValueConditionMetadataTypeRequestCookiesCount RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_COOKIES_COUNT"
	// RESPONSE_COOKIES_COUNT
	RateLimitingRuleKeyValueConditionMetadataTypeResponseCookiesCount RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_COOKIES_COUNT"
)

var AllRateLimitingRuleKeyValueConditionMetadataType = []RateLimitingRuleKeyValueConditionMetadataType{
	RateLimitingRuleKeyValueConditionMetadataTypeUrl,
	RateLimitingRuleKeyValueConditionMetadataTypeHost,
	RateLimitingRuleKeyValueConditionMetadataTypeHttpMethod,
	RateLimitingRuleKeyValueConditionMetadataTypeUserAgent,
	RateLimitingRuleKeyValueConditionMetadataTypeQueryParameter,
	RateLimitingRuleKeyValueConditionMetadataTypeStatusCode,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBody,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBody,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestHeader,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseHeader,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestCookie,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseCookie,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBodyParameter,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBodyParameter,
	RateLimitingRuleKeyValueConditionMetadataTypeTag,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBodySize,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBodySize,
	RateLimitingRuleKeyValueConditionMetadataTypeQueryParamsCount,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestHeadersCount,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseHeadersCount,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestCookiesCount,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseCookiesCount,
}

type RateLimitingRuleKeyValueConditionType string

const (
	// STATIC_VALUE
	RateLimitingRuleKeyValueConditionTypeStaticValue RateLimitingRuleKeyValueConditionType = "STATIC_VALUE"
	// LHS_RHS_KEYS
	RateLimitingRuleKeyValueConditionTypeLhsRhsKeys RateLimitingRuleKeyValueConditionType = "LHS_RHS_KEYS"
)

var AllRateLimitingRuleKeyValueConditionType = []RateLimitingRuleKeyValueConditionType{
	RateLimitingRuleKeyValueConditionTypeStaticValue,
	RateLimitingRuleKeyValueConditionTypeLhsRhsKeys,
}

type RateLimitingRuleKeyValueMatchOperator string

const (
	// EQUALS
	RateLimitingRuleKeyValueMatchOperatorEquals RateLimitingRuleKeyValueMatchOperator = "EQUALS"
	// NOT_EQUAL
	RateLimitingRuleKeyValueMatchOperatorNotEqual RateLimitingRuleKeyValueMatchOperator = "NOT_EQUAL"
	// MATCHES_REGEX
	RateLimitingRuleKeyValueMatchOperatorMatchesRegex RateLimitingRuleKeyValueMatchOperator = "MATCHES_REGEX"
	// NOT_MATCH_REGEX
	RateLimitingRuleKeyValueMatchOperatorNotMatchRegex RateLimitingRuleKeyValueMatchOperator = "NOT_MATCH_REGEX"
	// CONTAINS
	RateLimitingRuleKeyValueMatchOperatorContains RateLimitingRuleKeyValueMatchOperator = "CONTAINS"
	// NOT_CONTAIN
	RateLimitingRuleKeyValueMatchOperatorNotContain RateLimitingRuleKeyValueMatchOperator = "NOT_CONTAIN"
	// GREATER_THAN
	RateLimitingRuleKeyValueMatchOperatorGreaterThan RateLimitingRuleKeyValueMatchOperator = "GREATER_THAN"
	// LESS_THAN
	RateLimitingRuleKeyValueMatchOperatorLessThan RateLimitingRuleKeyValueMatchOperator = "LESS_THAN"
)

var AllRateLimitingRuleKeyValueMatchOperator = []RateLimitingRuleKeyValueMatchOperator{
	RateLimitingRuleKeyValueMatchOperatorEquals,
	RateLimitingRuleKeyValueMatchOperatorNotEqual,
	RateLimitingRuleKeyValueMatchOperatorMatchesRegex,
	RateLimitingRuleKeyValueMatchOperatorNotMatchRegex,
	RateLimitingRuleKeyValueMatchOperatorContains,
	RateLimitingRuleKeyValueMatchOperatorNotContain,
	RateLimitingRuleKeyValueMatchOperatorGreaterThan,
	RateLimitingRuleKeyValueMatchOperatorLessThan,
}

type RateLimitingRuleLabelType string

const (
	// SERVICE
	RateLimitingRuleLabelTypeService RateLimitingRuleLabelType = "SERVICE"
	// API
	RateLimitingRuleLabelTypeApi RateLimitingRuleLabelType = "API"
)

var AllRateLimitingRuleLabelType = []RateLimitingRuleLabelType{
	RateLimitingRuleLabelTypeService,
	RateLimitingRuleLabelTypeApi,
}

type RateLimitingRuleLeafConditionType string

const (
	// SCOPE
	RateLimitingRuleLeafConditionTypeScope RateLimitingRuleLeafConditionType = "SCOPE"
	// DATATYPE
	RateLimitingRuleLeafConditionTypeDatatype RateLimitingRuleLeafConditionType = "DATATYPE"
	// IP_ADDRESS
	RateLimitingRuleLeafConditionTypeIpAddress RateLimitingRuleLeafConditionType = "IP_ADDRESS"
	// KEY_VALUE
	RateLimitingRuleLeafConditionTypeKeyValue RateLimitingRuleLeafConditionType = "KEY_VALUE"
	// IP_LOCATION_TYPE
	RateLimitingRuleLeafConditionTypeIpLocationType RateLimitingRuleLeafConditionType = "IP_LOCATION_TYPE"
	// IP_REPUTATION
	RateLimitingRuleLeafConditionTypeIpReputation RateLimitingRuleLeafConditionType = "IP_REPUTATION"
	// REGION
	RateLimitingRuleLeafConditionTypeRegion RateLimitingRuleLeafConditionType = "REGION"
	// EMAIL_DOMAIN
	RateLimitingRuleLeafConditionTypeEmailDomain RateLimitingRuleLeafConditionType = "EMAIL_DOMAIN"
	// IP_CONNECTION_TYPE
	RateLimitingRuleLeafConditionTypeIpConnectionType RateLimitingRuleLeafConditionType = "IP_CONNECTION_TYPE"
	// USER_AGENT
	RateLimitingRuleLeafConditionTypeUserAgent RateLimitingRuleLeafConditionType = "USER_AGENT"
	// USER_ID
	RateLimitingRuleLeafConditionTypeUserId RateLimitingRuleLeafConditionType = "USER_ID"
	// IP_ORGANISATION
	RateLimitingRuleLeafConditionTypeIpOrganisation RateLimitingRuleLeafConditionType = "IP_ORGANISATION"
	// IP_ASN
	RateLimitingRuleLeafConditionTypeIpAsn RateLimitingRuleLeafConditionType = "IP_ASN"
	// IP_ABUSE_VELOCITY
	RateLimitingRuleLeafConditionTypeIpAbuseVelocity RateLimitingRuleLeafConditionType = "IP_ABUSE_VELOCITY"
	// REQUEST_SCANNER_TYPE
	RateLimitingRuleLeafConditionTypeRequestScannerType RateLimitingRuleLeafConditionType = "REQUEST_SCANNER_TYPE"
)

var AllRateLimitingRuleLeafConditionType = []RateLimitingRuleLeafConditionType{
	RateLimitingRuleLeafConditionTypeScope,
	RateLimitingRuleLeafConditionTypeDatatype,
	RateLimitingRuleLeafConditionTypeIpAddress,
	RateLimitingRuleLeafConditionTypeKeyValue,
	RateLimitingRuleLeafConditionTypeIpLocationType,
	RateLimitingRuleLeafConditionTypeIpReputation,
	RateLimitingRuleLeafConditionTypeRegion,
	RateLimitingRuleLeafConditionTypeEmailDomain,
	RateLimitingRuleLeafConditionTypeIpConnectionType,
	RateLimitingRuleLeafConditionTypeUserAgent,
	RateLimitingRuleLeafConditionTypeUserId,
	RateLimitingRuleLeafConditionTypeIpOrganisation,
	RateLimitingRuleLeafConditionTypeIpAsn,
	RateLimitingRuleLeafConditionTypeIpAbuseVelocity,
	RateLimitingRuleLeafConditionTypeRequestScannerType,
}

type RateLimitingRuleMatchCategory string

const (
	// REQUEST
	RateLimitingRuleMatchCategoryRequest RateLimitingRuleMatchCategory = "REQUEST"
	// RESPONSE
	RateLimitingRuleMatchCategoryResponse RateLimitingRuleMatchCategory = "RESPONSE"
)

var AllRateLimitingRuleMatchCategory = []RateLimitingRuleMatchCategory{
	RateLimitingRuleMatchCategoryRequest,
	RateLimitingRuleMatchCategoryResponse,
}

type RateLimitingRuleScopeConditionType string

const (
	// ENTITY
	RateLimitingRuleScopeConditionTypeEntity RateLimitingRuleScopeConditionType = "ENTITY"
	// LABEL
	RateLimitingRuleScopeConditionTypeLabel RateLimitingRuleScopeConditionType = "LABEL"
	// URL
	RateLimitingRuleScopeConditionTypeUrl RateLimitingRuleScopeConditionType = "URL"
)

var AllRateLimitingRuleScopeConditionType = []RateLimitingRuleScopeConditionType{
	RateLimitingRuleScopeConditionTypeEntity,
	RateLimitingRuleScopeConditionTypeLabel,
	RateLimitingRuleScopeConditionTypeUrl,
}

type RateLimitingRuleSource string

const (
	// DEFAULT
	RateLimitingRuleSourceDefault RateLimitingRuleSource = "DEFAULT"
	// CUSTOMER
	RateLimitingRuleSourceCustomer RateLimitingRuleSource = "CUSTOMER"
	// TRACEABLE
	RateLimitingRuleSourceTraceable RateLimitingRuleSource = "TRACEABLE"
)

var AllRateLimitingRuleSource = []RateLimitingRuleSource{
	RateLimitingRuleSourceDefault,
	RateLimitingRuleSourceCustomer,
	RateLimitingRuleSourceTraceable,
}

type RateLimitingRuleThresholdConfigType string

const (
	// ROLLING_WINDOW
	RateLimitingRuleThresholdConfigTypeRollingWindow RateLimitingRuleThresholdConfigType = "ROLLING_WINDOW"
	// VALUE_BASED
	RateLimitingRuleThresholdConfigTypeValueBased RateLimitingRuleThresholdConfigType = "VALUE_BASED"
	// DYNAMIC
	RateLimitingRuleThresholdConfigTypeDynamic RateLimitingRuleThresholdConfigType = "DYNAMIC"
)

var AllRateLimitingRuleThresholdConfigType = []RateLimitingRuleThresholdConfigType{
	RateLimitingRuleThresholdConfigTypeRollingWindow,
	RateLimitingRuleThresholdConfigTypeValueBased,
	RateLimitingRuleThresholdConfigTypeDynamic,
}

type RateLimitingRuleUserAggregateType string

const (
	// PER_USER
	RateLimitingRuleUserAggregateTypePerUser RateLimitingRuleUserAggregateType = "PER_USER"
	// ACROSS_USERS
	RateLimitingRuleUserAggregateTypeAcrossUsers RateLimitingRuleUserAggregateType = "ACROSS_USERS"
)

var AllRateLimitingRuleUserAggregateType = []RateLimitingRuleUserAggregateType{
	RateLimitingRuleUserAggregateTypePerUser,
	RateLimitingRuleUserAggregateTypeAcrossUsers,
}

type RegionRuleActionType string

const (
	// BLOCK
	RegionRuleActionTypeBlock RegionRuleActionType = "BLOCK"
	// BLOCK_ALL_EXCEPT
	RegionRuleActionTypeBlockAllExcept RegionRuleActionType = "BLOCK_ALL_EXCEPT"
	// ALERT
	RegionRuleActionTypeAlert RegionRuleActionType = "ALERT"
)

var AllRegionRuleActionType = []RegionRuleActionType{
	RegionRuleActionTypeBlock,
	RegionRuleActionTypeBlockAllExcept,
	RegionRuleActionTypeAlert,
}

type RegionRuleAgentModificationType string

const (
	// Add a header with inline processing of request on matching conditions
	RegionRuleAgentModificationTypeHeaderInjection RegionRuleAgentModificationType = "HEADER_INJECTION"
)

var AllRegionRuleAgentModificationType = []RegionRuleAgentModificationType{
	RegionRuleAgentModificationTypeHeaderInjection,
}

type RegionRuleEffectModificationType string

const (
	// Modifications to be done on agent
	RegionRuleEffectModificationTypeAgentEffect RegionRuleEffectModificationType = "AGENT_EFFECT"
)

var AllRegionRuleEffectModificationType = []RegionRuleEffectModificationType{
	RegionRuleEffectModificationTypeAgentEffect,
}

type RegionRuleEventSeverity string

const (
	// LOW
	RegionRuleEventSeverityLow RegionRuleEventSeverity = "LOW"
	// MEDIUM
	RegionRuleEventSeverityMedium RegionRuleEventSeverity = "MEDIUM"
	// HIGH
	RegionRuleEventSeverityHigh RegionRuleEventSeverity = "HIGH"
	// CRITICAL
	RegionRuleEventSeverityCritical RegionRuleEventSeverity = "CRITICAL"
)

var AllRegionRuleEventSeverity = []RegionRuleEventSeverity{
	RegionRuleEventSeverityLow,
	RegionRuleEventSeverityMedium,
	RegionRuleEventSeverityHigh,
	RegionRuleEventSeverityCritical,
}

type RegionRuleHeaderCategory string

const (
	// REQUEST
	RegionRuleHeaderCategoryRequest RegionRuleHeaderCategory = "REQUEST"
	// RESPONSE
	RegionRuleHeaderCategoryResponse RegionRuleHeaderCategory = "RESPONSE"
)

var AllRegionRuleHeaderCategory = []RegionRuleHeaderCategory{
	RegionRuleHeaderCategoryRequest,
	RegionRuleHeaderCategoryResponse,
}

// Fragment for ruleConfigScope
type RuleConfigScopeFields struct {
	// Environment scope applicable on rate limit rule
	EnvironmentScope *RuleConfigScopeFieldsEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns RuleConfigScopeFields.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *RuleConfigScopeFields) GetEnvironmentScope() *RuleConfigScopeFieldsEnvironmentScope {
	return v.EnvironmentScope
}

// RuleConfigScopeFieldsEnvironmentScope includes the requested fields of the GraphQL type EnvironmentScope.
// The GraphQL type's documentation follows.
//
// Environment scope applicable for rate limit rule
type RuleConfigScopeFieldsEnvironmentScope struct {
	// List of environment ids applicable for rate limit rule
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns RuleConfigScopeFieldsEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *RuleConfigScopeFieldsEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

// Fragment for ruleStatus
type RuleStatusFields struct {
	// Boolean denoting if rule should be internal and generate internal events
	Internal *bool `json:"internal"`
	// Source of rule creation
	RuleCreationSource *RateLimitingRuleSource `json:"ruleCreationSource"`
}

// GetInternal returns RuleStatusFields.Internal, and is useful for accessing the field via an interface.
func (v *RuleStatusFields) GetInternal() *bool { return v.Internal }

// GetRuleCreationSource returns RuleStatusFields.RuleCreationSource, and is useful for accessing the field via an interface.
func (v *RuleStatusFields) GetRuleCreationSource() *RateLimitingRuleSource {
	return v.RuleCreationSource
}

// Sensitive params evaluation type for it's corresponding value based threshold config
type SensitiveParamsEvaluationType string

const (
	// ALL
	SensitiveParamsEvaluationTypeAll SensitiveParamsEvaluationType = "ALL"
	// SELECTED_DATA_TYPES
	SensitiveParamsEvaluationTypeSelectedDataTypes SensitiveParamsEvaluationType = "SELECTED_DATA_TYPES"
)

var AllSensitiveParamsEvaluationType = []SensitiveParamsEvaluationType{
	SensitiveParamsEvaluationTypeAll,
	SensitiveParamsEvaluationTypeSelectedDataTypes,
}

// Fragment for thresholdActionConfigs
type ThresholdActionConfigFields struct {
	// List of rate limit rule actions
	Actions []*ThresholdActionConfigFieldsActionsRateLimitingRuleAction `json:"actions"`
	// List of rate limit rule threshold configs
	ThresholdConfigs []*ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig `json:"thresholdConfigs"`
}

// GetActions returns ThresholdActionConfigFields.Actions, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFields) GetActions() []*ThresholdActionConfigFieldsActionsRateLimitingRuleAction {
	return v.Actions
}

// GetThresholdConfigs returns ThresholdActionConfigFields.ThresholdConfigs, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFields) GetThresholdConfigs() []*ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig {
	return v.ThresholdConfigs
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleAction includes the requested fields of the GraphQL type RateLimitingRuleAction.
// The GraphQL type's documentation follows.
//
// Action to take if a rate limit rule is applicable
type ThresholdActionConfigFieldsActionsRateLimitingRuleAction struct {
	// Type of action
	ActionType RateLimitingRuleActionType `json:"actionType"`
	// Details regarding alert action
	Alert *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction `json:"alert"`
	// Details regarding block action
	Block *ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction `json:"block"`
	// Details regarding mark for testing action
	MarkForTesting *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction `json:"markForTesting"`
}

// GetActionType returns ThresholdActionConfigFieldsActionsRateLimitingRuleAction.ActionType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleAction) GetActionType() RateLimitingRuleActionType {
	return v.ActionType
}

// GetAlert returns ThresholdActionConfigFieldsActionsRateLimitingRuleAction.Alert, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleAction) GetAlert() *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction {
	return v.Alert
}

// GetBlock returns ThresholdActionConfigFieldsActionsRateLimitingRuleAction.Block, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleAction) GetBlock() *ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction {
	return v.Block
}

// GetMarkForTesting returns ThresholdActionConfigFieldsActionsRateLimitingRuleAction.MarkForTesting, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleAction) GetMarkForTesting() *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction {
	return v.MarkForTesting
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction includes the requested fields of the GraphQL type RateLimitingRuleAlertAction.
// The GraphQL type's documentation follows.
//
// Details regarding alert action applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction struct {
	// Severity of alert to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
	// Agent effect associated with this action
	AgentEffect *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect `json:"agentEffect"`
}

// GetEventSeverity returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// GetAgentEffect returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction.AgentEffect, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction) GetAgentEffect() *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect {
	return v.AgentEffect
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect includes the requested fields of the GraphQL type RateLimitingRuleAgentEffect.
// The GraphQL type's documentation follows.
//
// Details regarding agent effect applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect struct {
	// List of agent modifications to be done as part of rate limiting rule action
	AgentModifications []*ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect) GetAgentModifications() []*ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification {
	return v.AgentModifications
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification includes the requested fields of the GraphQL type RateLimitingRuleAgentModification.
// The GraphQL type's documentation follows.
//
// Details regarding agent modification applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification struct {
	// Type of agent modification to be performed
	AgentModificationType RateLimitingRuleAgentModificationType `json:"agentModificationType"`
	// Details of header injection action
	HeaderInjection ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification) GetAgentModificationType() RateLimitingRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification) GetHeaderInjection() ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection {
	return v.HeaderInjection
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection includes the requested fields of the GraphQL type RateLimitingRuleHeaderInjection.
// The GraphQL type's documentation follows.
//
// Details regarding header injection applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection struct {
	// Header name to be injected
	Key string `json:"key"`
	// Header value to be injected
	Value string `json:"value"`
	// Category defining where the header needs to be injected
	HeaderCategory RateLimitingRuleMatchCategory `json:"headerCategory"`
}

// GetKey returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetKey() string {
	return v.Key
}

// GetValue returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetValue() string {
	return v.Value
}

// GetHeaderCategory returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetHeaderCategory() RateLimitingRuleMatchCategory {
	return v.HeaderCategory
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction includes the requested fields of the GraphQL type RateLimitingRuleBlockAction.
// The GraphQL type's documentation follows.
//
// Details regarding block action applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction struct {
	// Duration to block the malicious actor
	Duration *string `json:"duration"`
	// Severity of blocked event to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
	// Use duration in threshold config
	UseThresholdDuration *bool `json:"useThresholdDuration"`
}

// GetDuration returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction.Duration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction) GetDuration() *string {
	return v.Duration
}

// GetEventSeverity returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// GetUseThresholdDuration returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction.UseThresholdDuration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction) GetUseThresholdDuration() *bool {
	return v.UseThresholdDuration
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction includes the requested fields of the GraphQL type RateLimitingRuleMarkForTestingAction.
// The GraphQL type's documentation follows.
//
// Details regarding mark for testing action applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction struct {
	// Severity of blocked event to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
	// Agent effect associated with this action
	AgentEffect *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect `json:"agentEffect"`
}

// GetEventSeverity returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// GetAgentEffect returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction.AgentEffect, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction) GetAgentEffect() *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect {
	return v.AgentEffect
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect includes the requested fields of the GraphQL type RateLimitingRuleAgentEffect.
// The GraphQL type's documentation follows.
//
// Details regarding agent effect applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect struct {
	// List of agent modifications to be done as part of rate limiting rule action
	AgentModifications []*ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect) GetAgentModifications() []*ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification {
	return v.AgentModifications
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification includes the requested fields of the GraphQL type RateLimitingRuleAgentModification.
// The GraphQL type's documentation follows.
//
// Details regarding agent modification applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification struct {
	// Type of agent modification to be performed
	AgentModificationType RateLimitingRuleAgentModificationType `json:"agentModificationType"`
	// Details of header injection action
	HeaderInjection ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification) GetAgentModificationType() RateLimitingRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification) GetHeaderInjection() ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection {
	return v.HeaderInjection
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection includes the requested fields of the GraphQL type RateLimitingRuleHeaderInjection.
// The GraphQL type's documentation follows.
//
// Details regarding header injection applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection struct {
	// Header name to be injected
	Key string `json:"key"`
	// Header value to be injected
	Value string `json:"value"`
	// Category defining where the header needs to be injected
	HeaderCategory RateLimitingRuleMatchCategory `json:"headerCategory"`
}

// GetKey returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetKey() string {
	return v.Key
}

// GetValue returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetValue() string {
	return v.Value
}

// GetHeaderCategory returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetHeaderCategory() RateLimitingRuleMatchCategory {
	return v.HeaderCategory
}

// ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig includes the requested fields of the GraphQL type RateLimitingRuleThresholdConfig.
// The GraphQL type's documentation follows.
//
// Threshold config for rate limit rule
type ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig struct {
	// API aggregation type
	ApiAggregateType RateLimitingRuleApiAggregateType `json:"apiAggregateType"`
	// Rolling window threshold config
	RollingWindowThresholdConfig *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig `json:"rollingWindowThresholdConfig"`
	// Dynamic threshold config
	DynamicThresholdConfig *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig `json:"dynamicThresholdConfig"`
	// Value based threshold config
	ValueBasedThresholdConfig *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig `json:"valueBasedThresholdConfig"`
	// Threshold config type
	ThresholdConfigType RateLimitingRuleThresholdConfigType `json:"thresholdConfigType"`
	// User aggregation type
	UserAggregateType RateLimitingRuleUserAggregateType `json:"userAggregateType"`
}

// GetApiAggregateType returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.ApiAggregateType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetApiAggregateType() RateLimitingRuleApiAggregateType {
	return v.ApiAggregateType
}

// GetRollingWindowThresholdConfig returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.RollingWindowThresholdConfig, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetRollingWindowThresholdConfig() *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig {
	return v.RollingWindowThresholdConfig
}

// GetDynamicThresholdConfig returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.DynamicThresholdConfig, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetDynamicThresholdConfig() *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig {
	return v.DynamicThresholdConfig
}

// GetValueBasedThresholdConfig returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.ValueBasedThresholdConfig, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetValueBasedThresholdConfig() *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig {
	return v.ValueBasedThresholdConfig
}

// GetThresholdConfigType returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.ThresholdConfigType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetThresholdConfigType() RateLimitingRuleThresholdConfigType {
	return v.ThresholdConfigType
}

// GetUserAggregateType returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.UserAggregateType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetUserAggregateType() RateLimitingRuleUserAggregateType {
	return v.UserAggregateType
}

// ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig includes the requested fields of the GraphQL type DynamicThresholdConfig.
// The GraphQL type's documentation follows.
//
// Threshold config which specifies percentage allowed exceeding a mean countwhich
// is calculated over the specified duration for the given time range
type ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig struct {
	// Allowed percentage exceeding mean
	PercentageExceedingMeanAllowed int64 `json:"percentageExceedingMeanAllowed"`
	// Duration for calculating mean over the specified time range
	MeanCalculationDuration string `json:"meanCalculationDuration"`
	// Time range over which mean and counts are calculated
	Duration string `json:"duration"`
}

// GetPercentageExceedingMeanAllowed returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig.PercentageExceedingMeanAllowed, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig) GetPercentageExceedingMeanAllowed() int64 {
	return v.PercentageExceedingMeanAllowed
}

// GetMeanCalculationDuration returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig.MeanCalculationDuration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig) GetMeanCalculationDuration() string {
	return v.MeanCalculationDuration
}

// GetDuration returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig) GetDuration() string {
	return v.Duration
}

// ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig includes the requested fields of the GraphQL type RollingWindowThresholdConfig.
// The GraphQL type's documentation follows.
//
// Threshold config which specifies count allowed over the given time range
type ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig struct {
	// Count allowed for specified time range
	CountAllowed int64 `json:"countAllowed"`
	// Time range during which counts are calculated
	Duration string `json:"duration"`
}

// GetCountAllowed returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig.CountAllowed, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig) GetCountAllowed() int64 {
	return v.CountAllowed
}

// GetDuration returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig) GetDuration() string {
	return v.Duration
}

// ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig includes the requested fields of the GraphQL type ValueBasedThresholdConfig.
// The GraphQL type's documentation follows.
//
// Threshold config which specifies unique values allowed over the given time range
type ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig struct {
	// Type of value based threshold config
	ValueType ValueBasedThresholdConfigType `json:"valueType"`
	// Unique values allowed for specified time range
	UniqueValuesAllowed int64 `json:"uniqueValuesAllowed"`
	// Time range during which unique values are calculated
	Duration string `json:"duration"`
	// Type of sensitive params evaluation, only applicable for sensitive params value type
	SensitiveParamsEvaluationType *SensitiveParamsEvaluationType `json:"sensitiveParamsEvaluationType"`
}

// GetValueType returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig.ValueType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig) GetValueType() ValueBasedThresholdConfigType {
	return v.ValueType
}

// GetUniqueValuesAllowed returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig.UniqueValuesAllowed, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig) GetUniqueValuesAllowed() int64 {
	return v.UniqueValuesAllowed
}

// GetDuration returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig) GetDuration() string {
	return v.Duration
}

// GetSensitiveParamsEvaluationType returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig.SensitiveParamsEvaluationType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig) GetSensitiveParamsEvaluationType() *SensitiveParamsEvaluationType {
	return v.SensitiveParamsEvaluationType
}

// Fragment for transactionActionConfigs
type TransactionActionConfigFields struct {
	// Rate limit rule action
	Action TransactionActionConfigFieldsActionRateLimitingRuleAction `json:"action"`
	// Requested expiration timestamp for the rule
	ExpirationTimestamp *string `json:"expirationTimestamp"`
}

// GetAction returns TransactionActionConfigFields.Action, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFields) GetAction() TransactionActionConfigFieldsActionRateLimitingRuleAction {
	return v.Action
}

// GetExpirationTimestamp returns TransactionActionConfigFields.ExpirationTimestamp, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFields) GetExpirationTimestamp() *string {
	return v.ExpirationTimestamp
}

// TransactionActionConfigFieldsActionRateLimitingRuleAction includes the requested fields of the GraphQL type RateLimitingRuleAction.
// The GraphQL type's documentation follows.
//
// Action to take if a rate limit rule is applicable
type TransactionActionConfigFieldsActionRateLimitingRuleAction struct {
	// Type of action
	ActionType RateLimitingRuleActionType `json:"actionType"`
	// Details regarding alert action
	Alert *TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction `json:"alert"`
	// Details regarding allow action
	Allow *TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction `json:"allow"`
	// Details regarding block action
	Block *TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction `json:"block"`
}

// GetActionType returns TransactionActionConfigFieldsActionRateLimitingRuleAction.ActionType, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleAction) GetActionType() RateLimitingRuleActionType {
	return v.ActionType
}

// GetAlert returns TransactionActionConfigFieldsActionRateLimitingRuleAction.Alert, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleAction) GetAlert() *TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction {
	return v.Alert
}

// GetAllow returns TransactionActionConfigFieldsActionRateLimitingRuleAction.Allow, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleAction) GetAllow() *TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction {
	return v.Allow
}

// GetBlock returns TransactionActionConfigFieldsActionRateLimitingRuleAction.Block, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleAction) GetBlock() *TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction {
	return v.Block
}

// TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction includes the requested fields of the GraphQL type RateLimitingRuleAlertAction.
// The GraphQL type's documentation follows.
//
// Details regarding alert action applicable on a rate limit rule
type TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction struct {
	// Severity of alert to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
}

// GetEventSeverity returns TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction includes the requested fields of the GraphQL type RateLimitingRuleAllowAction.
// The GraphQL type's documentation follows.
//
// Details regarding allow action applicable on a rate limit rule
type TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction struct {
	// Duration to allow the malicious actor
	Duration *string `json:"duration"`
}

// GetDuration returns TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction.Duration, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction) GetDuration() *string {
	return v.Duration
}

// TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction includes the requested fields of the GraphQL type RateLimitingRuleBlockAction.
// The GraphQL type's documentation follows.
//
// Details regarding block action applicable on a rate limit rule
type TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction struct {
	// Duration to block the malicious actor
	Duration *string `json:"duration"`
	// Severity of blocked event to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
}

// GetDuration returns TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction.Duration, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction) GetDuration() *string {
	return v.Duration
}

// GetEventSeverity returns TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// UpdateDataSetResponse is returned by UpdateDataSet on success.
type UpdateDataSetResponse struct {
	UpdateDataSet UpdateDataSetUpdateDataSet `json:"updateDataSet"`
}

// GetUpdateDataSet returns UpdateDataSetResponse.UpdateDataSet, and is useful for accessing the field via an interface.
func (v *UpdateDataSetResponse) GetUpdateDataSet() UpdateDataSetUpdateDataSet { return v.UpdateDataSet }

// UpdateDataSetUpdateDataSet includes the requested fields of the GraphQL type DataSet.
type UpdateDataSetUpdateDataSet struct {
	Id          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	// An icon used to represent this Dataset visually
	IconType *string `json:"iconType"`
}

// GetId returns UpdateDataSetUpdateDataSet.Id, and is useful for accessing the field via an interface.
func (v *UpdateDataSetUpdateDataSet) GetId() string { return v.Id }

// GetName returns UpdateDataSetUpdateDataSet.Name, and is useful for accessing the field via an interface.
func (v *UpdateDataSetUpdateDataSet) GetName() string { return v.Name }

// GetDescription returns UpdateDataSetUpdateDataSet.Description, and is useful for accessing the field via an interface.
func (v *UpdateDataSetUpdateDataSet) GetDescription() *string { return v.Description }

// GetIconType returns UpdateDataSetUpdateDataSet.IconType, and is useful for accessing the field via an interface.
func (v *UpdateDataSetUpdateDataSet) GetIconType() *string { return v.IconType }

// UpdateMaliciousIpRangeRuleResponse is returned by UpdateMaliciousIpRangeRule on success.
type UpdateMaliciousIpRangeRuleResponse struct {
	UpdateIpRangeRule UpdateMaliciousIpRangeRuleUpdateIpRangeRule `json:"updateIpRangeRule"`
}

// GetUpdateIpRangeRule returns UpdateMaliciousIpRangeRuleResponse.UpdateIpRangeRule, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleResponse) GetUpdateIpRangeRule() UpdateMaliciousIpRangeRuleUpdateIpRangeRule {
	return v.UpdateIpRangeRule
}

// UpdateMaliciousIpRangeRuleUpdateIpRangeRule includes the requested fields of the GraphQL type IpRangeRule.
type UpdateMaliciousIpRangeRuleUpdateIpRangeRule struct {
	MaliciousIpRangeFields `json:"-"`
}

// GetId returns UpdateMaliciousIpRangeRuleUpdateIpRangeRule.Id, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) GetId() *string {
	return v.MaliciousIpRangeFields.Id
}

// GetInternal returns UpdateMaliciousIpRangeRuleUpdateIpRangeRule.Internal, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) GetInternal() bool {
	return v.MaliciousIpRangeFields.Internal
}

// GetDisabled returns UpdateMaliciousIpRangeRuleUpdateIpRangeRule.Disabled, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) GetDisabled() bool {
	return v.MaliciousIpRangeFields.Disabled
}

// GetRuleDetails returns UpdateMaliciousIpRangeRuleUpdateIpRangeRule.RuleDetails, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) GetRuleDetails() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails {
	return v.MaliciousIpRangeFields.RuleDetails
}

// GetRuleScope returns UpdateMaliciousIpRangeRuleUpdateIpRangeRule.RuleScope, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) GetRuleScope() *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope {
	return v.MaliciousIpRangeFields.RuleScope
}

func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateMaliciousIpRangeRuleUpdateIpRangeRule
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateMaliciousIpRangeRuleUpdateIpRangeRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpRangeFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateMaliciousIpRangeRuleUpdateIpRangeRule struct {
	Id *string `json:"id"`

	Internal bool `json:"internal"`

	Disabled bool `json:"disabled"`

	RuleDetails MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails `json:"ruleDetails"`

	RuleScope *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope `json:"ruleScope"`
}

func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) __premarshalJSON() (*__premarshalUpdateMaliciousIpRangeRuleUpdateIpRangeRule, error) {
	var retval __premarshalUpdateMaliciousIpRangeRuleUpdateIpRangeRule

	retval.Id = v.MaliciousIpRangeFields.Id
	retval.Internal = v.MaliciousIpRangeFields.Internal
	retval.Disabled = v.MaliciousIpRangeFields.Disabled
	retval.RuleDetails = v.MaliciousIpRangeFields.RuleDetails
	retval.RuleScope = v.MaliciousIpRangeFields.RuleScope
	return &retval, nil
}

// UpdateMaliciousIpTypeRuleResponse is returned by UpdateMaliciousIpTypeRule on success.
type UpdateMaliciousIpTypeRuleResponse struct {
	// Mutation API to update Malicious Sources rule
	UpdateMaliciousSourcesRule UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule `json:"updateMaliciousSourcesRule"`
}

// GetUpdateMaliciousSourcesRule returns UpdateMaliciousIpTypeRuleResponse.UpdateMaliciousSourcesRule, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpTypeRuleResponse) GetUpdateMaliciousSourcesRule() UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule {
	return v.UpdateMaliciousSourcesRule
}

// UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule struct {
	MaliciousIpTypeRuleFields `json:"-"`
}

// GetId returns UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) GetId() string {
	return v.MaliciousIpTypeRuleFields.Id
}

// GetInfo returns UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) GetInfo() MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.MaliciousIpTypeRuleFields.Info
}

// GetScope returns UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule.Scope, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) GetScope() *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.MaliciousIpTypeRuleFields.Scope
}

// GetStatus returns UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule.Status, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) GetStatus() MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.MaliciousIpTypeRuleFields.Status
}

func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpTypeRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule struct {
	Id string `json:"id"`

	Info MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`

	Scope *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`

	Status MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) __premarshalJSON() (*__premarshalUpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule, error) {
	var retval __premarshalUpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule

	retval.Id = v.MaliciousIpTypeRuleFields.Id
	retval.Info = v.MaliciousIpTypeRuleFields.Info
	retval.Scope = v.MaliciousIpTypeRuleFields.Scope
	retval.Status = v.MaliciousIpTypeRuleFields.Status
	return &retval, nil
}

// UpdateMaliciousRegionRuleResponse is returned by UpdateMaliciousRegionRule on success.
type UpdateMaliciousRegionRuleResponse struct {
	UpdateRegionRule UpdateMaliciousRegionRuleUpdateRegionRule `json:"updateRegionRule"`
}

// GetUpdateRegionRule returns UpdateMaliciousRegionRuleResponse.UpdateRegionRule, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleResponse) GetUpdateRegionRule() UpdateMaliciousRegionRuleUpdateRegionRule {
	return v.UpdateRegionRule
}

// UpdateMaliciousRegionRuleUpdateRegionRule includes the requested fields of the GraphQL type RegionRule.
type UpdateMaliciousRegionRuleUpdateRegionRule struct {
	MaliciousRegionRuleFields `json:"-"`
}

// GetId returns UpdateMaliciousRegionRuleUpdateRegionRule.Id, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetId() string {
	return v.MaliciousRegionRuleFields.Id
}

// GetName returns UpdateMaliciousRegionRuleUpdateRegionRule.Name, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetName() string {
	return v.MaliciousRegionRuleFields.Name
}

// GetType returns UpdateMaliciousRegionRuleUpdateRegionRule.Type, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetType() RegionRuleActionType {
	return v.MaliciousRegionRuleFields.Type
}

// GetDescription returns UpdateMaliciousRegionRuleUpdateRegionRule.Description, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetDescription() *string {
	return v.MaliciousRegionRuleFields.Description
}

// GetDisabled returns UpdateMaliciousRegionRuleUpdateRegionRule.Disabled, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetDisabled() bool {
	return v.MaliciousRegionRuleFields.Disabled
}

// GetInternal returns UpdateMaliciousRegionRuleUpdateRegionRule.Internal, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetInternal() bool {
	return v.MaliciousRegionRuleFields.Internal
}

// GetEventSeverity returns UpdateMaliciousRegionRuleUpdateRegionRule.EventSeverity, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetEventSeverity() *RegionRuleEventSeverity {
	return v.MaliciousRegionRuleFields.EventSeverity
}

// GetExpiration returns UpdateMaliciousRegionRuleUpdateRegionRule.Expiration, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetExpiration() *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration {
	return v.MaliciousRegionRuleFields.Expiration
}

// GetRegions returns UpdateMaliciousRegionRuleUpdateRegionRule.Regions, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetRegions() []*MaliciousRegionRuleFieldsRegionsRegion {
	return v.MaliciousRegionRuleFields.Regions
}

// GetRuleScope returns UpdateMaliciousRegionRuleUpdateRegionRule.RuleScope, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetRuleScope() *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope {
	return v.MaliciousRegionRuleFields.RuleScope
}

// GetEffects returns UpdateMaliciousRegionRuleUpdateRegionRule.Effects, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetEffects() []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification {
	return v.MaliciousRegionRuleFields.Effects
}

func (v *UpdateMaliciousRegionRuleUpdateRegionRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateMaliciousRegionRuleUpdateRegionRule
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateMaliciousRegionRuleUpdateRegionRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousRegionRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateMaliciousRegionRuleUpdateRegionRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	Type RegionRuleActionType `json:"type"`

	Description *string `json:"description"`

	Disabled bool `json:"disabled"`

	Internal bool `json:"internal"`

	EventSeverity *RegionRuleEventSeverity `json:"eventSeverity"`

	Expiration *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration `json:"expiration"`

	Regions []*MaliciousRegionRuleFieldsRegionsRegion `json:"regions"`

	RuleScope *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope `json:"ruleScope"`

	Effects []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification `json:"effects"`
}

func (v *UpdateMaliciousRegionRuleUpdateRegionRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateMaliciousRegionRuleUpdateRegionRule) __premarshalJSON() (*__premarshalUpdateMaliciousRegionRuleUpdateRegionRule, error) {
	var retval __premarshalUpdateMaliciousRegionRuleUpdateRegionRule

	retval.Id = v.MaliciousRegionRuleFields.Id
	retval.Name = v.MaliciousRegionRuleFields.Name
	retval.Type = v.MaliciousRegionRuleFields.Type
	retval.Description = v.MaliciousRegionRuleFields.Description
	retval.Disabled = v.MaliciousRegionRuleFields.Disabled
	retval.Internal = v.MaliciousRegionRuleFields.Internal
	retval.EventSeverity = v.MaliciousRegionRuleFields.EventSeverity
	retval.Expiration = v.MaliciousRegionRuleFields.Expiration
	retval.Regions = v.MaliciousRegionRuleFields.Regions
	retval.RuleScope = v.MaliciousRegionRuleFields.RuleScope
	retval.Effects = v.MaliciousRegionRuleFields.Effects
	return &retval, nil
}

// UpdateRateLimitingRuleResponse is returned by UpdateRateLimitingRule on success.
type UpdateRateLimitingRuleResponse struct {
	UpdateRateLimitingRule UpdateRateLimitingRuleUpdateRateLimitingRule `json:"updateRateLimitingRule"`
}

// GetUpdateRateLimitingRule returns UpdateRateLimitingRuleResponse.UpdateRateLimitingRule, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleResponse) GetUpdateRateLimitingRule() UpdateRateLimitingRuleUpdateRateLimitingRule {
	return v.UpdateRateLimitingRule
}

// UpdateRateLimitingRuleUpdateRateLimitingRule includes the requested fields of the GraphQL type RateLimitingRule.
// The GraphQL type's documentation follows.
//
// Custom rule to protect endpoints and other services from brute-force attacks
type UpdateRateLimitingRuleUpdateRateLimitingRule struct {
	RateLimitingRuleFields `json:"-"`
}

// GetCategory returns UpdateRateLimitingRuleUpdateRateLimitingRule.Category, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetCategory() RateLimitingRuleCategory {
	return v.RateLimitingRuleFields.Category
}

// GetDescription returns UpdateRateLimitingRuleUpdateRateLimitingRule.Description, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetDescription() *string {
	return v.RateLimitingRuleFields.Description
}

// GetEnabled returns UpdateRateLimitingRuleUpdateRateLimitingRule.Enabled, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetEnabled() bool {
	return v.RateLimitingRuleFields.Enabled
}

// GetId returns UpdateRateLimitingRuleUpdateRateLimitingRule.Id, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetId() string {
	return v.RateLimitingRuleFields.Id
}

// GetName returns UpdateRateLimitingRuleUpdateRateLimitingRule.Name, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetName() string {
	return v.RateLimitingRuleFields.Name
}

// GetLabels returns UpdateRateLimitingRuleUpdateRateLimitingRule.Labels, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetLabels() []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel {
	return v.RateLimitingRuleFields.Labels
}

// GetThresholdActionConfigs returns UpdateRateLimitingRuleUpdateRateLimitingRule.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetThresholdActionConfigs() []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig {
	return v.RateLimitingRuleFields.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns UpdateRateLimitingRuleUpdateRateLimitingRule.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetTransactionActionConfigs() *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig {
	return v.RateLimitingRuleFields.TransactionActionConfigs
}

// GetRuleConfigScope returns UpdateRateLimitingRuleUpdateRateLimitingRule.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetRuleConfigScope() *RateLimitingRuleFieldsRuleConfigScope {
	return v.RateLimitingRuleFields.RuleConfigScope
}

// GetRuleStatus returns UpdateRateLimitingRuleUpdateRateLimitingRule.RuleStatus, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetRuleStatus() *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus {
	return v.RateLimitingRuleFields.RuleStatus
}

// GetConditions returns UpdateRateLimitingRuleUpdateRateLimitingRule.Conditions, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetConditions() []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition {
	return v.RateLimitingRuleFields.Conditions
}

func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateRateLimitingRuleUpdateRateLimitingRule
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateRateLimitingRuleUpdateRateLimitingRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.RateLimitingRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateRateLimitingRuleUpdateRateLimitingRule struct {
	Category RateLimitingRuleCategory `json:"category"`

	Description *string `json:"description"`

	Enabled bool `json:"enabled"`

	Id string `json:"id"`

	Name string `json:"name"`

	Labels []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel `json:"labels"`

	ThresholdActionConfigs []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`

	TransactionActionConfigs *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`

	RuleConfigScope *RateLimitingRuleFieldsRuleConfigScope `json:"ruleConfigScope"`

	RuleStatus *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus `json:"ruleStatus"`

	Conditions []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition `json:"conditions"`
}

func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) __premarshalJSON() (*__premarshalUpdateRateLimitingRuleUpdateRateLimitingRule, error) {
	var retval __premarshalUpdateRateLimitingRuleUpdateRateLimitingRule

	retval.Category = v.RateLimitingRuleFields.Category
	retval.Description = v.RateLimitingRuleFields.Description
	retval.Enabled = v.RateLimitingRuleFields.Enabled
	retval.Id = v.RateLimitingRuleFields.Id
	retval.Name = v.RateLimitingRuleFields.Name
	retval.Labels = v.RateLimitingRuleFields.Labels
	retval.ThresholdActionConfigs = v.RateLimitingRuleFields.ThresholdActionConfigs
	retval.TransactionActionConfigs = v.RateLimitingRuleFields.TransactionActionConfigs
	retval.RuleConfigScope = v.RateLimitingRuleFields.RuleConfigScope
	retval.RuleStatus = v.RateLimitingRuleFields.RuleStatus
	retval.Conditions = v.RateLimitingRuleFields.Conditions
	return &retval, nil
}

// Type of value based threshold config
type ValueBasedThresholdConfigType string

const (
	// REQUEST_BODY
	ValueBasedThresholdConfigTypeRequestBody ValueBasedThresholdConfigType = "REQUEST_BODY"
	// SENSITIVE_PARAMS
	ValueBasedThresholdConfigTypeSensitiveParams ValueBasedThresholdConfigType = "SENSITIVE_PARAMS"
	// PATH_PARAMS
	ValueBasedThresholdConfigTypePathParams ValueBasedThresholdConfigType = "PATH_PARAMS"
)

var AllValueBasedThresholdConfigType = []ValueBasedThresholdConfigType{
	ValueBasedThresholdConfigTypeRequestBody,
	ValueBasedThresholdConfigTypeSensitiveParams,
	ValueBasedThresholdConfigTypePathParams,
}

// __CreateDataSetInput is used internally by genqlient
type __CreateDataSetInput struct {
	DataSetCreate InputDataSetCreate `json:"dataSetCreate"`
}

// GetDataSetCreate returns __CreateDataSetInput.DataSetCreate, and is useful for accessing the field via an interface.
func (v *__CreateDataSetInput) GetDataSetCreate() InputDataSetCreate { return v.DataSetCreate }

// __CreateMaliciousIpRangeRuleInput is used internally by genqlient
type __CreateMaliciousIpRangeRuleInput struct {
	Input InputIpRangeRuleCreate `json:"input"`
}

// GetInput returns __CreateMaliciousIpRangeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateMaliciousIpRangeRuleInput) GetInput() InputIpRangeRuleCreate { return v.Input }

// __CreateMaliciousIpTypeRuleInput is used internally by genqlient
type __CreateMaliciousIpTypeRuleInput struct {
	Input InputMaliciousSourcesRuleCreate `json:"input"`
}

// GetInput returns __CreateMaliciousIpTypeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateMaliciousIpTypeRuleInput) GetInput() InputMaliciousSourcesRuleCreate { return v.Input }

// __CreateMaliciousRegionRuleInput is used internally by genqlient
type __CreateMaliciousRegionRuleInput struct {
	Input InputRegionRuleCreate `json:"input"`
}

// GetInput returns __CreateMaliciousRegionRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateMaliciousRegionRuleInput) GetInput() InputRegionRuleCreate { return v.Input }

// __CreateRateLimitingRuleInput is used internally by genqlient
type __CreateRateLimitingRuleInput struct {
	Input InputRateLimitingRuleData `json:"input"`
}

// GetInput returns __CreateRateLimitingRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateRateLimitingRuleInput) GetInput() InputRateLimitingRuleData { return v.Input }

// __DeleteDataSetInput is used internally by genqlient
type __DeleteDataSetInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteDataSetInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteDataSetInput) GetId() string { return v.Id }

// __DeleteMaliciousIpRangeRuleInput is used internally by genqlient
type __DeleteMaliciousIpRangeRuleInput struct {
	Input InputIpRangeRuleDelete `json:"input"`
}

// GetInput returns __DeleteMaliciousIpRangeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteMaliciousIpRangeRuleInput) GetInput() InputIpRangeRuleDelete { return v.Input }

// __DeleteMaliciousIpTypeRuleInput is used internally by genqlient
type __DeleteMaliciousIpTypeRuleInput struct {
	Input InputMaliciousSourcesRuleDelete `json:"input"`
}

// GetInput returns __DeleteMaliciousIpTypeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteMaliciousIpTypeRuleInput) GetInput() InputMaliciousSourcesRuleDelete { return v.Input }

// __DeleteMaliciousRegionRuleInput is used internally by genqlient
type __DeleteMaliciousRegionRuleInput struct {
	Input InputRegionRuleDelete `json:"input"`
}

// GetInput returns __DeleteMaliciousRegionRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteMaliciousRegionRuleInput) GetInput() InputRegionRuleDelete { return v.Input }

// __DeleteRateLimitingRuleInput is used internally by genqlient
type __DeleteRateLimitingRuleInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteRateLimitingRuleInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteRateLimitingRuleInput) GetId() string { return v.Id }

// __GetMaliciousIpRangeRuleDetailsInput is used internally by genqlient
type __GetMaliciousIpRangeRuleDetailsInput struct {
	Input *InputIpRangeRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousIpRangeRuleDetailsInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousIpRangeRuleDetailsInput) GetInput() *InputIpRangeRulesFilter { return v.Input }

// __GetMaliciousIpRangeRulesNameInput is used internally by genqlient
type __GetMaliciousIpRangeRulesNameInput struct {
	Input *InputIpRangeRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousIpRangeRulesNameInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousIpRangeRulesNameInput) GetInput() *InputIpRangeRulesFilter { return v.Input }

// __GetMaliciousIpTypeRuleDetailsInput is used internally by genqlient
type __GetMaliciousIpTypeRuleDetailsInput struct {
	Input *InputMaliciousSourcesRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousIpTypeRuleDetailsInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousIpTypeRuleDetailsInput) GetInput() *InputMaliciousSourcesRulesFilter {
	return v.Input
}

// __GetMaliciousIpTypeRulesNameInput is used internally by genqlient
type __GetMaliciousIpTypeRulesNameInput struct {
	Input *InputMaliciousSourcesRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousIpTypeRulesNameInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousIpTypeRulesNameInput) GetInput() *InputMaliciousSourcesRulesFilter {
	return v.Input
}

// __GetMaliciousRegionRuleDetailsInput is used internally by genqlient
type __GetMaliciousRegionRuleDetailsInput struct {
	Input *InputRegionRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousRegionRuleDetailsInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousRegionRuleDetailsInput) GetInput() *InputRegionRulesFilter { return v.Input }

// __GetMaliciousRegionRulesNameInput is used internally by genqlient
type __GetMaliciousRegionRulesNameInput struct {
	Input *InputRegionRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousRegionRulesNameInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousRegionRulesNameInput) GetInput() *InputRegionRulesFilter { return v.Input }

// __GetRateLimitingDetailsInput is used internally by genqlient
type __GetRateLimitingDetailsInput struct {
	Category                []*RateLimitingRuleCategory   `json:"category"`
	RateLimitingRulesFilter *InputRateLimitingRulesFilter `json:"rateLimitingRulesFilter"`
}

// GetCategory returns __GetRateLimitingDetailsInput.Category, and is useful for accessing the field via an interface.
func (v *__GetRateLimitingDetailsInput) GetCategory() []*RateLimitingRuleCategory { return v.Category }

// GetRateLimitingRulesFilter returns __GetRateLimitingDetailsInput.RateLimitingRulesFilter, and is useful for accessing the field via an interface.
func (v *__GetRateLimitingDetailsInput) GetRateLimitingRulesFilter() *InputRateLimitingRulesFilter {
	return v.RateLimitingRulesFilter
}

// __GetRateLimitingRulesNameInput is used internally by genqlient
type __GetRateLimitingRulesNameInput struct {
	Category                []*RateLimitingRuleCategory   `json:"category"`
	RateLimitingRulesFilter *InputRateLimitingRulesFilter `json:"rateLimitingRulesFilter"`
}

// GetCategory returns __GetRateLimitingRulesNameInput.Category, and is useful for accessing the field via an interface.
func (v *__GetRateLimitingRulesNameInput) GetCategory() []*RateLimitingRuleCategory {
	return v.Category
}

// GetRateLimitingRulesFilter returns __GetRateLimitingRulesNameInput.RateLimitingRulesFilter, and is useful for accessing the field via an interface.
func (v *__GetRateLimitingRulesNameInput) GetRateLimitingRulesFilter() *InputRateLimitingRulesFilter {
	return v.RateLimitingRulesFilter
}

// __UpdateDataSetInput is used internally by genqlient
type __UpdateDataSetInput struct {
	DataSetUpdate InputDataSetUpdate `json:"dataSetUpdate"`
}

// GetDataSetUpdate returns __UpdateDataSetInput.DataSetUpdate, and is useful for accessing the field via an interface.
func (v *__UpdateDataSetInput) GetDataSetUpdate() InputDataSetUpdate { return v.DataSetUpdate }

// __UpdateMaliciousIpRangeRuleInput is used internally by genqlient
type __UpdateMaliciousIpRangeRuleInput struct {
	Input InputIpRangeRuleUpdate `json:"input"`
}

// GetInput returns __UpdateMaliciousIpRangeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateMaliciousIpRangeRuleInput) GetInput() InputIpRangeRuleUpdate { return v.Input }

// __UpdateMaliciousIpTypeRuleInput is used internally by genqlient
type __UpdateMaliciousIpTypeRuleInput struct {
	Input InputMaliciousSourcesRuleUpdate `json:"input"`
}

// GetInput returns __UpdateMaliciousIpTypeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateMaliciousIpTypeRuleInput) GetInput() InputMaliciousSourcesRuleUpdate { return v.Input }

// __UpdateMaliciousRegionRuleInput is used internally by genqlient
type __UpdateMaliciousRegionRuleInput struct {
	Input InputRegionRuleUpdate `json:"input"`
}

// GetInput returns __UpdateMaliciousRegionRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateMaliciousRegionRuleInput) GetInput() InputRegionRuleUpdate { return v.Input }

// __UpdateRateLimitingRuleInput is used internally by genqlient
type __UpdateRateLimitingRuleInput struct {
	Input InputRateLimitingRule `json:"input"`
}

// GetInput returns __UpdateRateLimitingRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateRateLimitingRuleInput) GetInput() InputRateLimitingRule { return v.Input }

// The mutation executed by CreateDataSet.
const CreateDataSet_Operation = `
mutation CreateDataSet ($dataSetCreate: InputDataSetCreate!) {
	createDataSet(dataSetCreate: $dataSetCreate) {
		id
		name
		description
		iconType
	}
}
`

func CreateDataSet(
	ctx_ context.Context,
	client_ graphql.Client,
	dataSetCreate InputDataSetCreate,
) (data_ *CreateDataSetResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateDataSet",
		Query:  CreateDataSet_Operation,
		Variables: &__CreateDataSetInput{
			DataSetCreate: dataSetCreate,
		},
	}

	data_ = &CreateDataSetResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateMaliciousIpRangeRule.
const CreateMaliciousIpRangeRule_Operation = `
mutation CreateMaliciousIpRangeRule ($input: InputIpRangeRuleCreate!) {
	createIpRangeRule(create: $input) {
		... MaliciousIpRangeFields
	}
}
fragment MaliciousIpRangeFields on IpRangeRule {
	id
	internal
	disabled
	ruleDetails {
		name
		description
		rawIpRangeData
		ruleAction
		eventSeverity
		expirationDetails {
			expirationDuration
			expirationTimestamp
		}
		effects {
			ruleEffectType
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
}
`

func CreateMaliciousIpRangeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputIpRangeRuleCreate,
) (data_ *CreateMaliciousIpRangeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateMaliciousIpRangeRule",
		Query:  CreateMaliciousIpRangeRule_Operation,
		Variables: &__CreateMaliciousIpRangeRuleInput{
			Input: input,
		},
	}

	data_ = &CreateMaliciousIpRangeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateMaliciousIpTypeRule.
const CreateMaliciousIpTypeRule_Operation = `
mutation CreateMaliciousIpTypeRule ($input: InputMaliciousSourcesRuleCreate!) {
	createMaliciousSourcesRule(create: $input) {
		... MaliciousIpTypeRuleFields
	}
}
fragment MaliciousIpTypeRuleFields on MaliciousSourcesRule {
	id
	info {
		name
		description
		action {
			eventSeverity
			expirationDetails {
				expirationDuration
			}
			ruleActionType
		}
		conditions {
			conditionType
			ipLocationTypeCondition {
				ipLocationTypes
			}
		}
	}
	scope {
		environmentScope {
			environmentIds
		}
	}
	status {
		disabled
		internal
	}
}
`

func CreateMaliciousIpTypeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputMaliciousSourcesRuleCreate,
) (data_ *CreateMaliciousIpTypeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateMaliciousIpTypeRule",
		Query:  CreateMaliciousIpTypeRule_Operation,
		Variables: &__CreateMaliciousIpTypeRuleInput{
			Input: input,
		},
	}

	data_ = &CreateMaliciousIpTypeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateMaliciousRegionRule.
const CreateMaliciousRegionRule_Operation = `
mutation CreateMaliciousRegionRule ($input: InputRegionRuleCreate!) {
	createRegionRule(input: $input) {
		... MaliciousRegionRuleFields
	}
}
fragment MaliciousRegionRuleFields on RegionRule {
	id
	name
	type
	description
	disabled
	internal
	eventSeverity
	expiration {
		duration
		timestamp
	}
	regions {
		id
		name
		country {
			isoCode
			name
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
	effects {
		ruleEffectType
		agentEffect {
			agentModifications {
				agentModificationType
				headerInjection {
					key
					value
					headerCategory
				}
			}
		}
	}
}
`

func CreateMaliciousRegionRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputRegionRuleCreate,
) (data_ *CreateMaliciousRegionRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateMaliciousRegionRule",
		Query:  CreateMaliciousRegionRule_Operation,
		Variables: &__CreateMaliciousRegionRuleInput{
			Input: input,
		},
	}

	data_ = &CreateMaliciousRegionRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateRateLimitingRule.
const CreateRateLimitingRule_Operation = `
mutation CreateRateLimitingRule ($input: InputRateLimitingRuleData!) {
	createRateLimitingRule(rateLimitingRuleData: $input) {
		... RateLimitingRuleFields
	}
}
fragment RateLimitingRuleFields on RateLimitingRule {
	category
	description
	enabled
	id
	name
	labels {
		key
		value
	}
	thresholdActionConfigs {
		... ThresholdActionConfigFields
	}
	transactionActionConfigs {
		... TransactionActionConfigFields
	}
	ruleConfigScope {
		... RuleConfigScopeFields
	}
	ruleStatus {
		... RuleStatusFields
	}
	conditions {
		leafCondition {
			... LeafConditionFields
		}
	}
}
fragment ThresholdActionConfigFields on RateLimitingRuleThresholdActionConfig {
	actions {
		actionType
		alert {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
		block {
			duration
			eventSeverity
			useThresholdDuration
		}
		markForTesting {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	thresholdConfigs {
		apiAggregateType
		rollingWindowThresholdConfig {
			countAllowed
			duration
		}
		dynamicThresholdConfig {
			percentageExceedingMeanAllowed
			meanCalculationDuration
			duration
		}
		valueBasedThresholdConfig {
			valueType
			uniqueValuesAllowed
			duration
			sensitiveParamsEvaluationType
		}
		thresholdConfigType
		userAggregateType
	}
}
fragment TransactionActionConfigFields on RateLimitingTransactionActionConfig {
	action {
		actionType
		alert {
			eventSeverity
		}
		allow {
			duration
		}
		block {
			duration
			eventSeverity
		}
	}
	expirationTimestamp
}
fragment RuleConfigScopeFields on RuleConfigScope {
	environmentScope {
		environmentIds
	}
}
fragment RuleStatusFields on RateLimitingRuleStatus {
	internal
	ruleCreationSource
}
fragment LeafConditionFields on RateLimitingRuleLeafCondition {
	conditionType
	datatypeCondition {
		datasetIds
		datatypeIds
		dataLocation
		datatypeMatching {
			datatypeMatchingType
			regexBasedMatching {
				customMatchingLocation {
					metadataType
					keyCondition {
						operator
						value
					}
				}
			}
		}
	}
	ipAddressCondition {
		cidrIpRanges
		ipAddresses
		rawInputIpData
		exclude
		ipAddressConditionType
	}
	ipReputationCondition {
		minIpReputationSeverity
	}
	ipLocationTypeCondition {
		ipLocationTypes
		exclude
	}
	emailDomainCondition {
		emailRegexes
		exclude
	}
	ipOrganisationCondition {
		ipOrganisationRegexes
		exclude
	}
	ipAsnCondition {
		ipAsnRegexes
		exclude
	}
	userIdCondition {
		userIdRegexes
		userIds
		exclude
	}
	userAgentCondition {
		userAgentRegexes
		exclude
	}
	ipConnectionTypeCondition {
		ipConnectionTypes
		exclude
	}
	ipAbuseVelocityCondition {
		minIpAbuseVelocity
	}
	keyValueCondition {
		keyCondition {
			operator
			value
		}
		metadataType
		valueCondition {
			operator
			value
		}
	}
	regionCondition {
		regionIdentifiers {
			countryIsoCode
		}
		exclude
	}
	requestScannerTypeCondition {
		scannerTypes
		exclude
	}
	scopeCondition {
		entityScope {
			entityIds
			entityType
		}
		labelScope {
			labelIds
			labelType
		}
		scopeType
		urlScope {
			urlRegexes
		}
	}
}
`

func CreateRateLimitingRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputRateLimitingRuleData,
) (data_ *CreateRateLimitingRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateRateLimitingRule",
		Query:  CreateRateLimitingRule_Operation,
		Variables: &__CreateRateLimitingRuleInput{
			Input: input,
		},
	}

	data_ = &CreateRateLimitingRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by DataSets.
const DataSets_Operation = `
query DataSets {
	dataSets {
		count
		results {
			id
			name
			description
			iconType
		}
		total
	}
}
`

func DataSets(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *DataSetsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DataSets",
		Query:  DataSets_Operation,
	}

	data_ = &DataSetsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteDataSet.
const DeleteDataSet_Operation = `
mutation DeleteDataSet ($id: String!) {
	deleteDataSet(id: $id)
}
`

func DeleteDataSet(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (data_ *DeleteDataSetResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteDataSet",
		Query:  DeleteDataSet_Operation,
		Variables: &__DeleteDataSetInput{
			Id: id,
		},
	}

	data_ = &DeleteDataSetResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteMaliciousIpRangeRule.
const DeleteMaliciousIpRangeRule_Operation = `
mutation DeleteMaliciousIpRangeRule ($input: InputIpRangeRuleDelete!) {
	deleteIpRangeRule(delete: $input) {
		success
	}
}
`

func DeleteMaliciousIpRangeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputIpRangeRuleDelete,
) (data_ *DeleteMaliciousIpRangeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteMaliciousIpRangeRule",
		Query:  DeleteMaliciousIpRangeRule_Operation,
		Variables: &__DeleteMaliciousIpRangeRuleInput{
			Input: input,
		},
	}

	data_ = &DeleteMaliciousIpRangeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteMaliciousIpTypeRule.
const DeleteMaliciousIpTypeRule_Operation = `
mutation DeleteMaliciousIpTypeRule ($input: InputMaliciousSourcesRuleDelete!) {
	deleteMaliciousSourcesRule(delete: $input) {
		success
	}
}
`

func DeleteMaliciousIpTypeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputMaliciousSourcesRuleDelete,
) (data_ *DeleteMaliciousIpTypeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteMaliciousIpTypeRule",
		Query:  DeleteMaliciousIpTypeRule_Operation,
		Variables: &__DeleteMaliciousIpTypeRuleInput{
			Input: input,
		},
	}

	data_ = &DeleteMaliciousIpTypeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteMaliciousRegionRule.
const DeleteMaliciousRegionRule_Operation = `
mutation DeleteMaliciousRegionRule ($input: InputRegionRuleDelete!) {
	deleteRegionRule(input: $input) {
		success
	}
}
`

func DeleteMaliciousRegionRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputRegionRuleDelete,
) (data_ *DeleteMaliciousRegionRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteMaliciousRegionRule",
		Query:  DeleteMaliciousRegionRule_Operation,
		Variables: &__DeleteMaliciousRegionRuleInput{
			Input: input,
		},
	}

	data_ = &DeleteMaliciousRegionRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteRateLimitingRule.
const DeleteRateLimitingRule_Operation = `
mutation DeleteRateLimitingRule ($id: String!) {
	deleteRateLimitingRule(id: $id) {
		success
	}
}
`

func DeleteRateLimitingRule(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (data_ *DeleteRateLimitingRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteRateLimitingRule",
		Query:  DeleteRateLimitingRule_Operation,
		Variables: &__DeleteRateLimitingRuleInput{
			Id: id,
		},
	}

	data_ = &DeleteRateLimitingRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetCountries.
const GetCountries_Operation = `
query GetCountries {
	countries {
		results {
			id
			country {
				isoCode
				name
			}
		}
	}
}
`

func GetCountries(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *GetCountriesResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetCountries",
		Query:  GetCountries_Operation,
	}

	data_ = &GetCountriesResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousIpRangeRuleDetails.
const GetMaliciousIpRangeRuleDetails_Operation = `
query GetMaliciousIpRangeRuleDetails ($input: InputIpRangeRulesFilter) {
	ipRangeRules(filter: $input) {
		count
		total
		results {
			... MaliciousIpRangeFields
		}
	}
}
fragment MaliciousIpRangeFields on IpRangeRule {
	id
	internal
	disabled
	ruleDetails {
		name
		description
		rawIpRangeData
		ruleAction
		eventSeverity
		expirationDetails {
			expirationDuration
			expirationTimestamp
		}
		effects {
			ruleEffectType
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
}
`

func GetMaliciousIpRangeRuleDetails(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputIpRangeRulesFilter,
) (data_ *GetMaliciousIpRangeRuleDetailsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousIpRangeRuleDetails",
		Query:  GetMaliciousIpRangeRuleDetails_Operation,
		Variables: &__GetMaliciousIpRangeRuleDetailsInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousIpRangeRuleDetailsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousIpRangeRulesName.
const GetMaliciousIpRangeRulesName_Operation = `
query GetMaliciousIpRangeRulesName ($input: InputIpRangeRulesFilter) {
	ipRangeRules(filter: $input) {
		count
		total
		results {
			ruleDetails {
				name
			}
			id
		}
	}
}
`

func GetMaliciousIpRangeRulesName(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputIpRangeRulesFilter,
) (data_ *GetMaliciousIpRangeRulesNameResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousIpRangeRulesName",
		Query:  GetMaliciousIpRangeRulesName_Operation,
		Variables: &__GetMaliciousIpRangeRulesNameInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousIpRangeRulesNameResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousIpTypeRuleDetails.
const GetMaliciousIpTypeRuleDetails_Operation = `
query GetMaliciousIpTypeRuleDetails ($input: InputMaliciousSourcesRulesFilter) {
	maliciousSourcesRules(filter: $input) {
		count
		total
		results {
			... MaliciousIpTypeRuleFields
		}
	}
}
fragment MaliciousIpTypeRuleFields on MaliciousSourcesRule {
	id
	info {
		name
		description
		action {
			eventSeverity
			expirationDetails {
				expirationDuration
			}
			ruleActionType
		}
		conditions {
			conditionType
			ipLocationTypeCondition {
				ipLocationTypes
			}
		}
	}
	scope {
		environmentScope {
			environmentIds
		}
	}
	status {
		disabled
		internal
	}
}
`

func GetMaliciousIpTypeRuleDetails(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputMaliciousSourcesRulesFilter,
) (data_ *GetMaliciousIpTypeRuleDetailsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousIpTypeRuleDetails",
		Query:  GetMaliciousIpTypeRuleDetails_Operation,
		Variables: &__GetMaliciousIpTypeRuleDetailsInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousIpTypeRuleDetailsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousIpTypeRulesName.
const GetMaliciousIpTypeRulesName_Operation = `
query GetMaliciousIpTypeRulesName ($input: InputMaliciousSourcesRulesFilter) {
	maliciousSourcesRules(filter: $input) {
		count
		total
		results {
			info {
				name
			}
			id
		}
	}
}
`

func GetMaliciousIpTypeRulesName(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputMaliciousSourcesRulesFilter,
) (data_ *GetMaliciousIpTypeRulesNameResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousIpTypeRulesName",
		Query:  GetMaliciousIpTypeRulesName_Operation,
		Variables: &__GetMaliciousIpTypeRulesNameInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousIpTypeRulesNameResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousRegionRuleDetails.
const GetMaliciousRegionRuleDetails_Operation = `
query GetMaliciousRegionRuleDetails ($input: InputRegionRulesFilter) {
	regionRules(filter: $input) {
		count
		total
		results {
			... MaliciousRegionRuleFields
		}
	}
}
fragment MaliciousRegionRuleFields on RegionRule {
	id
	name
	type
	description
	disabled
	internal
	eventSeverity
	expiration {
		duration
		timestamp
	}
	regions {
		id
		name
		country {
			isoCode
			name
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
	effects {
		ruleEffectType
		agentEffect {
			agentModifications {
				agentModificationType
				headerInjection {
					key
					value
					headerCategory
				}
			}
		}
	}
}
`

func GetMaliciousRegionRuleDetails(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputRegionRulesFilter,
) (data_ *GetMaliciousRegionRuleDetailsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousRegionRuleDetails",
		Query:  GetMaliciousRegionRuleDetails_Operation,
		Variables: &__GetMaliciousRegionRuleDetailsInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousRegionRuleDetailsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousRegionRulesName.
const GetMaliciousRegionRulesName_Operation = `
query GetMaliciousRegionRulesName ($input: InputRegionRulesFilter) {
	regionRules(filter: $input) {
		count
		total
		results {
			id
			name
		}
	}
}
`

func GetMaliciousRegionRulesName(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputRegionRulesFilter,
) (data_ *GetMaliciousRegionRulesNameResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousRegionRulesName",
		Query:  GetMaliciousRegionRulesName_Operation,
		Variables: &__GetMaliciousRegionRulesNameInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousRegionRulesNameResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetRateLimitingDetails.
const GetRateLimitingDetails_Operation = `
query GetRateLimitingDetails ($category: [RateLimitingRuleCategory], $rateLimitingRulesFilter: InputRateLimitingRulesFilter) {
	rateLimitingRules(category: $category, rateLimitingRulesFilter: $rateLimitingRulesFilter) {
		count
		total
		results {
			... RateLimitingRuleFields
		}
	}
}
fragment RateLimitingRuleFields on RateLimitingRule {
	category
	description
	enabled
	id
	name
	labels {
		key
		value
	}
	thresholdActionConfigs {
		... ThresholdActionConfigFields
	}
	transactionActionConfigs {
		... TransactionActionConfigFields
	}
	ruleConfigScope {
		... RuleConfigScopeFields
	}
	ruleStatus {
		... RuleStatusFields
	}
	conditions {
		leafCondition {
			... LeafConditionFields
		}
	}
}
fragment ThresholdActionConfigFields on RateLimitingRuleThresholdActionConfig {
	actions {
		actionType
		alert {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
		block {
			duration
			eventSeverity
			useThresholdDuration
		}
		markForTesting {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	thresholdConfigs {
		apiAggregateType
		rollingWindowThresholdConfig {
			countAllowed
			duration
		}
		dynamicThresholdConfig {
			percentageExceedingMeanAllowed
			meanCalculationDuration
			duration
		}
		valueBasedThresholdConfig {
			valueType
			uniqueValuesAllowed
			duration
			sensitiveParamsEvaluationType
		}
		thresholdConfigType
		userAggregateType
	}
}
fragment TransactionActionConfigFields on RateLimitingTransactionActionConfig {
	action {
		actionType
		alert {
			eventSeverity
		}
		allow {
			duration
		}
		block {
			duration
			eventSeverity
		}
	}
	expirationTimestamp
}
fragment RuleConfigScopeFields on RuleConfigScope {
	environmentScope {
		environmentIds
	}
}
fragment RuleStatusFields on RateLimitingRuleStatus {
	internal
	ruleCreationSource
}
fragment LeafConditionFields on RateLimitingRuleLeafCondition {
	conditionType
	datatypeCondition {
		datasetIds
		datatypeIds
		dataLocation
		datatypeMatching {
			datatypeMatchingType
			regexBasedMatching {
				customMatchingLocation {
					metadataType
					keyCondition {
						operator
						value
					}
				}
			}
		}
	}
	ipAddressCondition {
		cidrIpRanges
		ipAddresses
		rawInputIpData
		exclude
		ipAddressConditionType
	}
	ipReputationCondition {
		minIpReputationSeverity
	}
	ipLocationTypeCondition {
		ipLocationTypes
		exclude
	}
	emailDomainCondition {
		emailRegexes
		exclude
	}
	ipOrganisationCondition {
		ipOrganisationRegexes
		exclude
	}
	ipAsnCondition {
		ipAsnRegexes
		exclude
	}
	userIdCondition {
		userIdRegexes
		userIds
		exclude
	}
	userAgentCondition {
		userAgentRegexes
		exclude
	}
	ipConnectionTypeCondition {
		ipConnectionTypes
		exclude
	}
	ipAbuseVelocityCondition {
		minIpAbuseVelocity
	}
	keyValueCondition {
		keyCondition {
			operator
			value
		}
		metadataType
		valueCondition {
			operator
			value
		}
	}
	regionCondition {
		regionIdentifiers {
			countryIsoCode
		}
		exclude
	}
	requestScannerTypeCondition {
		scannerTypes
		exclude
	}
	scopeCondition {
		entityScope {
			entityIds
			entityType
		}
		labelScope {
			labelIds
			labelType
		}
		scopeType
		urlScope {
			urlRegexes
		}
	}
}
`

func GetRateLimitingDetails(
	ctx_ context.Context,
	client_ graphql.Client,
	category []*RateLimitingRuleCategory,
	rateLimitingRulesFilter *InputRateLimitingRulesFilter,
) (data_ *GetRateLimitingDetailsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetRateLimitingDetails",
		Query:  GetRateLimitingDetails_Operation,
		Variables: &__GetRateLimitingDetailsInput{
			Category:                category,
			RateLimitingRulesFilter: rateLimitingRulesFilter,
		},
	}

	data_ = &GetRateLimitingDetailsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetRateLimitingRulesName.
const GetRateLimitingRulesName_Operation = `
query GetRateLimitingRulesName ($category: [RateLimitingRuleCategory], $rateLimitingRulesFilter: InputRateLimitingRulesFilter) {
	rateLimitingRules(category: $category, rateLimitingRulesFilter: $rateLimitingRulesFilter) {
		count
		total
		results {
			name
			id
		}
	}
}
`

func GetRateLimitingRulesName(
	ctx_ context.Context,
	client_ graphql.Client,
	category []*RateLimitingRuleCategory,
	rateLimitingRulesFilter *InputRateLimitingRulesFilter,
) (data_ *GetRateLimitingRulesNameResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetRateLimitingRulesName",
		Query:  GetRateLimitingRulesName_Operation,
		Variables: &__GetRateLimitingRulesNameInput{
			Category:                category,
			RateLimitingRulesFilter: rateLimitingRulesFilter,
		},
	}

	data_ = &GetRateLimitingRulesNameResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateDataSet.
const UpdateDataSet_Operation = `
mutation UpdateDataSet ($dataSetUpdate: InputDataSetUpdate!) {
	updateDataSet(dataSetUpdate: $dataSetUpdate) {
		id
		name
		description
		iconType
	}
}
`

func UpdateDataSet(
	ctx_ context.Context,
	client_ graphql.Client,
	dataSetUpdate InputDataSetUpdate,
) (data_ *UpdateDataSetResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateDataSet",
		Query:  UpdateDataSet_Operation,
		Variables: &__UpdateDataSetInput{
			DataSetUpdate: dataSetUpdate,
		},
	}

	data_ = &UpdateDataSetResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateMaliciousIpRangeRule.
const UpdateMaliciousIpRangeRule_Operation = `
mutation UpdateMaliciousIpRangeRule ($input: InputIpRangeRuleUpdate!) {
	updateIpRangeRule(update: $input) {
		... MaliciousIpRangeFields
	}
}
fragment MaliciousIpRangeFields on IpRangeRule {
	id
	internal
	disabled
	ruleDetails {
		name
		description
		rawIpRangeData
		ruleAction
		eventSeverity
		expirationDetails {
			expirationDuration
			expirationTimestamp
		}
		effects {
			ruleEffectType
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
}
`

func UpdateMaliciousIpRangeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputIpRangeRuleUpdate,
) (data_ *UpdateMaliciousIpRangeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateMaliciousIpRangeRule",
		Query:  UpdateMaliciousIpRangeRule_Operation,
		Variables: &__UpdateMaliciousIpRangeRuleInput{
			Input: input,
		},
	}

	data_ = &UpdateMaliciousIpRangeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateMaliciousIpTypeRule.
const UpdateMaliciousIpTypeRule_Operation = `
mutation UpdateMaliciousIpTypeRule ($input: InputMaliciousSourcesRuleUpdate!) {
	updateMaliciousSourcesRule(update: $input) {
		... MaliciousIpTypeRuleFields
	}
}
fragment MaliciousIpTypeRuleFields on MaliciousSourcesRule {
	id
	info {
		name
		description
		action {
			eventSeverity
			expirationDetails {
				expirationDuration
			}
			ruleActionType
		}
		conditions {
			conditionType
			ipLocationTypeCondition {
				ipLocationTypes
			}
		}
	}
	scope {
		environmentScope {
			environmentIds
		}
	}
	status {
		disabled
		internal
	}
}
`

func UpdateMaliciousIpTypeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputMaliciousSourcesRuleUpdate,
) (data_ *UpdateMaliciousIpTypeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateMaliciousIpTypeRule",
		Query:  UpdateMaliciousIpTypeRule_Operation,
		Variables: &__UpdateMaliciousIpTypeRuleInput{
			Input: input,
		},
	}

	data_ = &UpdateMaliciousIpTypeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateMaliciousRegionRule.
const UpdateMaliciousRegionRule_Operation = `
mutation UpdateMaliciousRegionRule ($input: InputRegionRuleUpdate!) {
	updateRegionRule(input: $input) {
		... MaliciousRegionRuleFields
	}
}
fragment MaliciousRegionRuleFields on RegionRule {
	id
	name
	type
	description
	disabled
	internal
	eventSeverity
	expiration {
		duration
		timestamp
	}
	regions {
		id
		name
		country {
			isoCode
			name
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
	effects {
		ruleEffectType
		agentEffect {
			agentModifications {
				agentModificationType
				headerInjection {
					key
					value
					headerCategory
				}
			}
		}
	}
}
`

func UpdateMaliciousRegionRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputRegionRuleUpdate,
) (data_ *UpdateMaliciousRegionRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateMaliciousRegionRule",
		Query:  UpdateMaliciousRegionRule_Operation,
		Variables: &__UpdateMaliciousRegionRuleInput{
			Input: input,
		},
	}

	data_ = &UpdateMaliciousRegionRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateRateLimitingRule.
const UpdateRateLimitingRule_Operation = `
mutation UpdateRateLimitingRule ($input: InputRateLimitingRule!) {
	updateRateLimitingRule(rateLimitingRule: $input) {
		... RateLimitingRuleFields
	}
}
fragment RateLimitingRuleFields on RateLimitingRule {
	category
	description
	enabled
	id
	name
	labels {
		key
		value
	}
	thresholdActionConfigs {
		... ThresholdActionConfigFields
	}
	transactionActionConfigs {
		... TransactionActionConfigFields
	}
	ruleConfigScope {
		... RuleConfigScopeFields
	}
	ruleStatus {
		... RuleStatusFields
	}
	conditions {
		leafCondition {
			... LeafConditionFields
		}
	}
}
fragment ThresholdActionConfigFields on RateLimitingRuleThresholdActionConfig {
	actions {
		actionType
		alert {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
		block {
			duration
			eventSeverity
			useThresholdDuration
		}
		markForTesting {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	thresholdConfigs {
		apiAggregateType
		rollingWindowThresholdConfig {
			countAllowed
			duration
		}
		dynamicThresholdConfig {
			percentageExceedingMeanAllowed
			meanCalculationDuration
			duration
		}
		valueBasedThresholdConfig {
			valueType
			uniqueValuesAllowed
			duration
			sensitiveParamsEvaluationType
		}
		thresholdConfigType
		userAggregateType
	}
}
fragment TransactionActionConfigFields on RateLimitingTransactionActionConfig {
	action {
		actionType
		alert {
			eventSeverity
		}
		allow {
			duration
		}
		block {
			duration
			eventSeverity
		}
	}
	expirationTimestamp
}
fragment RuleConfigScopeFields on RuleConfigScope {
	environmentScope {
		environmentIds
	}
}
fragment RuleStatusFields on RateLimitingRuleStatus {
	internal
	ruleCreationSource
}
fragment LeafConditionFields on RateLimitingRuleLeafCondition {
	conditionType
	datatypeCondition {
		datasetIds
		datatypeIds
		dataLocation
		datatypeMatching {
			datatypeMatchingType
			regexBasedMatching {
				customMatchingLocation {
					metadataType
					keyCondition {
						operator
						value
					}
				}
			}
		}
	}
	ipAddressCondition {
		cidrIpRanges
		ipAddresses
		rawInputIpData
		exclude
		ipAddressConditionType
	}
	ipReputationCondition {
		minIpReputationSeverity
	}
	ipLocationTypeCondition {
		ipLocationTypes
		exclude
	}
	emailDomainCondition {
		emailRegexes
		exclude
	}
	ipOrganisationCondition {
		ipOrganisationRegexes
		exclude
	}
	ipAsnCondition {
		ipAsnRegexes
		exclude
	}
	userIdCondition {
		userIdRegexes
		userIds
		exclude
	}
	userAgentCondition {
		userAgentRegexes
		exclude
	}
	ipConnectionTypeCondition {
		ipConnectionTypes
		exclude
	}
	ipAbuseVelocityCondition {
		minIpAbuseVelocity
	}
	keyValueCondition {
		keyCondition {
			operator
			value
		}
		metadataType
		valueCondition {
			operator
			value
		}
	}
	regionCondition {
		regionIdentifiers {
			countryIsoCode
		}
		exclude
	}
	requestScannerTypeCondition {
		scannerTypes
		exclude
	}
	scopeCondition {
		entityScope {
			entityIds
			entityType
		}
		labelScope {
			labelIds
			labelType
		}
		scopeType
		urlScope {
			urlRegexes
		}
	}
}
`

func UpdateRateLimitingRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputRateLimitingRule,
) (data_ *UpdateRateLimitingRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateRateLimitingRule",
		Query:  UpdateRateLimitingRule_Operation,
		Variables: &__UpdateRateLimitingRuleInput{
			Input: input,
		},
	}

	data_ = &UpdateRateLimitingRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
