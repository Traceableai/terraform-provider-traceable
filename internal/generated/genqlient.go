// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package generated

import (
	"context"
	"encoding/json"

	"github.com/Khan/genqlient/graphql"
)

type AccountTakeoverAnomalyDetectionConfigName string

const (
	// CREDENTIAL_STUFFING_ANOMALY_CONFIG
	AccountTakeoverAnomalyDetectionConfigNameCredentialStuffingAnomalyConfig AccountTakeoverAnomalyDetectionConfigName = "CREDENTIAL_STUFFING_ANOMALY_CONFIG"
)

var AllAccountTakeoverAnomalyDetectionConfigName = []AccountTakeoverAnomalyDetectionConfigName{
	AccountTakeoverAnomalyDetectionConfigNameCredentialStuffingAnomalyConfig,
}

// Abuse Velocity
type AnomalyConfigAbuseVelocity string

const (
	// LOW
	AnomalyConfigAbuseVelocityLow AnomalyConfigAbuseVelocity = "LOW"
	// MEDIUM
	AnomalyConfigAbuseVelocityMedium AnomalyConfigAbuseVelocity = "MEDIUM"
	// HIGH
	AnomalyConfigAbuseVelocityHigh AnomalyConfigAbuseVelocity = "HIGH"
)

var AllAnomalyConfigAbuseVelocity = []AnomalyConfigAbuseVelocity{
	AnomalyConfigAbuseVelocityLow,
	AnomalyConfigAbuseVelocityMedium,
	AnomalyConfigAbuseVelocityHigh,
}

// IpType
type AnomalyConfigIpType string

const (
	// IP_TYPE_VPN
	AnomalyConfigIpTypeIpTypeVpn AnomalyConfigIpType = "IP_TYPE_VPN"
	// IP_TYPE_PUBLIC_PROXY
	AnomalyConfigIpTypeIpTypePublicProxy AnomalyConfigIpType = "IP_TYPE_PUBLIC_PROXY"
	// IP_TYPE_HOSTING_PROVIDER
	AnomalyConfigIpTypeIpTypeHostingProvider AnomalyConfigIpType = "IP_TYPE_HOSTING_PROVIDER"
	// IP_TYPE_TOR
	AnomalyConfigIpTypeIpTypeTor AnomalyConfigIpType = "IP_TYPE_TOR"
	// IP_TYPE_BOT
	AnomalyConfigIpTypeIpTypeBot AnomalyConfigIpType = "IP_TYPE_BOT"
)

var AllAnomalyConfigIpType = []AnomalyConfigIpType{
	AnomalyConfigIpTypeIpTypeVpn,
	AnomalyConfigIpTypeIpTypePublicProxy,
	AnomalyConfigIpTypeIpTypeHostingProvider,
	AnomalyConfigIpTypeIpTypeTor,
	AnomalyConfigIpTypeIpTypeBot,
}

type AnomalyDetectionConfigType string

const (
	// MODSECURITY
	AnomalyDetectionConfigTypeModsecurity AnomalyDetectionConfigType = "MODSECURITY"
	// API_DEFINITION_METADATA
	AnomalyDetectionConfigTypeApiDefinitionMetadata AnomalyDetectionConfigType = "API_DEFINITION_METADATA"
	// API_STATE_BASED
	AnomalyDetectionConfigTypeApiStateBased AnomalyDetectionConfigType = "API_STATE_BASED"
	// CREDENTIAL_STUFFING
	AnomalyDetectionConfigTypeCredentialStuffing AnomalyDetectionConfigType = "CREDENTIAL_STUFFING"
	// ACCOUNT_TAKEOVER
	AnomalyDetectionConfigTypeAccountTakeover AnomalyDetectionConfigType = "ACCOUNT_TAKEOVER"
	// SESSION_DEFINITION_METADATA
	AnomalyDetectionConfigTypeSessionDefinitionMetadata AnomalyDetectionConfigType = "SESSION_DEFINITION_METADATA"
	// BLOCKING_METADATA
	AnomalyDetectionConfigTypeBlockingMetadata AnomalyDetectionConfigType = "BLOCKING_METADATA"
	// CUSTOM_RULES
	AnomalyDetectionConfigTypeCustomRules AnomalyDetectionConfigType = "CUSTOM_RULES"
	// VOLUMETRIC
	AnomalyDetectionConfigTypeVolumetric AnomalyDetectionConfigType = "VOLUMETRIC"
)

var AllAnomalyDetectionConfigType = []AnomalyDetectionConfigType{
	AnomalyDetectionConfigTypeModsecurity,
	AnomalyDetectionConfigTypeApiDefinitionMetadata,
	AnomalyDetectionConfigTypeApiStateBased,
	AnomalyDetectionConfigTypeCredentialStuffing,
	AnomalyDetectionConfigTypeAccountTakeover,
	AnomalyDetectionConfigTypeSessionDefinitionMetadata,
	AnomalyDetectionConfigTypeBlockingMetadata,
	AnomalyDetectionConfigTypeCustomRules,
	AnomalyDetectionConfigTypeVolumetric,
}

// AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSet includes the requested fields of the GraphQL type AnomalyDetectionRuleConfigsResultSet.
type AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSet struct {
	Results []*AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig `json:"results"`
}

// GetResults returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSet.Results, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSet) GetResults() []*AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig {
	return v.Results
}

// AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig includes the requested fields of the GraphQL type AnomalyRuleConfig.
type AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig struct {
	AnomalyRuleConfigFields `json:"-"`
}

// GetConfigStatus returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.ConfigStatus, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetConfigStatus() AnomalyRuleConfigFieldsConfigStatusAnomalyConfigStatus {
	return v.AnomalyRuleConfigFields.ConfigStatus
}

// GetHidden returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.Hidden, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetHidden() bool {
	return v.AnomalyRuleConfigFields.Hidden
}

// GetEventFamily returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.EventFamily, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetEventFamily() AnomalyEventFamily {
	return v.AnomalyRuleConfigFields.EventFamily
}

// GetConfigType returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.ConfigType, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetConfigType() AnomalyDetectionConfigType {
	return v.AnomalyRuleConfigFields.ConfigType
}

// GetRuleCategory returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.RuleCategory, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetRuleCategory() string {
	return v.AnomalyRuleConfigFields.RuleCategory
}

// GetRuleId returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.RuleId, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetRuleId() string {
	return v.AnomalyRuleConfigFields.RuleId
}

// GetRuleName returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.RuleName, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetRuleName() string {
	return v.AnomalyRuleConfigFields.RuleName
}

// GetEventLabels returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.EventLabels, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetEventLabels() []*AnomalyRuleConfigFieldsEventLabelsAnomalyRuleEventLabel {
	return v.AnomalyRuleConfigFields.EventLabels
}

// GetEventDetails returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.EventDetails, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetEventDetails() *AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails {
	return v.AnomalyRuleConfigFields.EventDetails
}

// GetSubRuleConfigs returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.SubRuleConfigs, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetSubRuleConfigs() []*AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig {
	return v.AnomalyRuleConfigFields.SubRuleConfigs
}

// GetAnomalyRuleSeverity returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.AnomalyRuleSeverity, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetAnomalyRuleSeverity() *AnomalyRuleSeverity {
	return v.AnomalyRuleConfigFields.AnomalyRuleSeverity
}

// GetOverriddenParentScopes returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.OverriddenParentScopes, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetOverriddenParentScopes() []*AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScope {
	return v.AnomalyRuleConfigFields.OverriddenParentScopes
}

// GetOverridingChildrenScopes returns AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig.OverridingChildrenScopes, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) GetOverridingChildrenScopes() []*AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScope {
	return v.AnomalyRuleConfigFields.OverridingChildrenScopes
}

func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig
		graphql.NoUnmarshalJSON
	}
	firstPass.AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.AnomalyRuleConfigFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig struct {
	ConfigStatus AnomalyRuleConfigFieldsConfigStatusAnomalyConfigStatus `json:"configStatus"`

	Hidden bool `json:"hidden"`

	EventFamily AnomalyEventFamily `json:"eventFamily"`

	ConfigType AnomalyDetectionConfigType `json:"configType"`

	RuleCategory string `json:"ruleCategory"`

	RuleId string `json:"ruleId"`

	RuleName string `json:"ruleName"`

	EventLabels []*AnomalyRuleConfigFieldsEventLabelsAnomalyRuleEventLabel `json:"eventLabels"`

	EventDetails *AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails `json:"eventDetails"`

	SubRuleConfigs []*AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig `json:"subRuleConfigs"`

	AnomalyRuleSeverity *AnomalyRuleSeverity `json:"anomalyRuleSeverity"`

	OverriddenParentScopes []*AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScope `json:"overriddenParentScopes"`

	OverridingChildrenScopes []*AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScope `json:"overridingChildrenScopes"`
}

func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig) __premarshalJSON() (*__premarshalAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig, error) {
	var retval __premarshalAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSetResultsAnomalyRuleConfig

	retval.ConfigStatus = v.AnomalyRuleConfigFields.ConfigStatus
	retval.Hidden = v.AnomalyRuleConfigFields.Hidden
	retval.EventFamily = v.AnomalyRuleConfigFields.EventFamily
	retval.ConfigType = v.AnomalyRuleConfigFields.ConfigType
	retval.RuleCategory = v.AnomalyRuleConfigFields.RuleCategory
	retval.RuleId = v.AnomalyRuleConfigFields.RuleId
	retval.RuleName = v.AnomalyRuleConfigFields.RuleName
	retval.EventLabels = v.AnomalyRuleConfigFields.EventLabels
	retval.EventDetails = v.AnomalyRuleConfigFields.EventDetails
	retval.SubRuleConfigs = v.AnomalyRuleConfigFields.SubRuleConfigs
	retval.AnomalyRuleSeverity = v.AnomalyRuleConfigFields.AnomalyRuleSeverity
	retval.OverriddenParentScopes = v.AnomalyRuleConfigFields.OverriddenParentScopes
	retval.OverridingChildrenScopes = v.AnomalyRuleConfigFields.OverridingChildrenScopes
	return &retval, nil
}

// AnomalyDetectionRuleConfigsResponse is returned by AnomalyDetectionRuleConfigs on success.
type AnomalyDetectionRuleConfigsResponse struct {
	AnomalyDetectionRuleConfigs AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSet `json:"anomalyDetectionRuleConfigs"`
}

// GetAnomalyDetectionRuleConfigs returns AnomalyDetectionRuleConfigsResponse.AnomalyDetectionRuleConfigs, and is useful for accessing the field via an interface.
func (v *AnomalyDetectionRuleConfigsResponse) GetAnomalyDetectionRuleConfigs() AnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsAnomalyDetectionRuleConfigsResultSet {
	return v.AnomalyDetectionRuleConfigs
}

type AnomalyDetectionType string

const (
	// API_PROTECTION
	AnomalyDetectionTypeApiProtection AnomalyDetectionType = "API_PROTECTION"
	// WAF
	AnomalyDetectionTypeWaf AnomalyDetectionType = "WAF"
)

var AllAnomalyDetectionType = []AnomalyDetectionType{
	AnomalyDetectionTypeApiProtection,
	AnomalyDetectionTypeWaf,
}

type AnomalyEventFamily string

const (
	// UNKNOWN
	AnomalyEventFamilyUnknown AnomalyEventFamily = "UNKNOWN"
	// API_DEF
	AnomalyEventFamilyApiDef AnomalyEventFamily = "API_DEF"
	// MODSEC
	AnomalyEventFamilyModsec AnomalyEventFamily = "MODSEC"
	// SESSION
	AnomalyEventFamilySession AnomalyEventFamily = "SESSION"
	// CRED_STUFF
	AnomalyEventFamilyCredStuff AnomalyEventFamily = "CRED_STUFF"
	// VOLUMETRIC
	AnomalyEventFamilyVolumetric AnomalyEventFamily = "VOLUMETRIC"
	// RATE_LIMITING
	AnomalyEventFamilyRateLimiting AnomalyEventFamily = "RATE_LIMITING"
	// RATE_LIMIT
	AnomalyEventFamilyRateLimit AnomalyEventFamily = "RATE_LIMIT"
	// CUSTOM_SIGNATURE
	AnomalyEventFamilyCustomSignature AnomalyEventFamily = "CUSTOM_SIGNATURE"
	// MALICIOUS_SOURCES
	AnomalyEventFamilyMaliciousSources AnomalyEventFamily = "MALICIOUS_SOURCES"
)

var AllAnomalyEventFamily = []AnomalyEventFamily{
	AnomalyEventFamilyUnknown,
	AnomalyEventFamilyApiDef,
	AnomalyEventFamilyModsec,
	AnomalyEventFamilySession,
	AnomalyEventFamilyCredStuff,
	AnomalyEventFamilyVolumetric,
	AnomalyEventFamilyRateLimiting,
	AnomalyEventFamilyRateLimit,
	AnomalyEventFamilyCustomSignature,
	AnomalyEventFamilyMaliciousSources,
}

type AnomalyEventScoreCategory string

const (
	// LOW
	AnomalyEventScoreCategoryLow AnomalyEventScoreCategory = "LOW"
	// MEDIUM
	AnomalyEventScoreCategoryMedium AnomalyEventScoreCategory = "MEDIUM"
	// HIGH
	AnomalyEventScoreCategoryHigh AnomalyEventScoreCategory = "HIGH"
	// CRITICAL
	AnomalyEventScoreCategoryCritical AnomalyEventScoreCategory = "CRITICAL"
)

var AllAnomalyEventScoreCategory = []AnomalyEventScoreCategory{
	AnomalyEventScoreCategoryLow,
	AnomalyEventScoreCategoryMedium,
	AnomalyEventScoreCategoryHigh,
	AnomalyEventScoreCategoryCritical,
}

type AnomalyParamInfoType string

const (
	// PARAM_NAME
	AnomalyParamInfoTypeParamName AnomalyParamInfoType = "PARAM_NAME"
	// PARAM_REGEX
	AnomalyParamInfoTypeParamRegex AnomalyParamInfoType = "PARAM_REGEX"
)

var AllAnomalyParamInfoType = []AnomalyParamInfoType{
	AnomalyParamInfoTypeParamName,
	AnomalyParamInfoTypeParamRegex,
}

type AnomalyProtectionType string

const (
	// Recommended for Blocking
	AnomalyProtectionTypeRecommended AnomalyProtectionType = "RECOMMENDED"
	// Cautious while Blocking
	AnomalyProtectionTypeCautious AnomalyProtectionType = "CAUTIOUS"
	// Aggressive Alerting
	AnomalyProtectionTypeAggressive AnomalyProtectionType = "AGGRESSIVE"
	// Standard Protection Type
	AnomalyProtectionTypeStandard AnomalyProtectionType = "STANDARD"
	// Api Protection Type
	AnomalyProtectionTypeApiProtection AnomalyProtectionType = "API_PROTECTION"
	// Anomaly
	AnomalyProtectionTypeAnomaly AnomalyProtectionType = "ANOMALY"
)

var AllAnomalyProtectionType = []AnomalyProtectionType{
	AnomalyProtectionTypeRecommended,
	AnomalyProtectionTypeCautious,
	AnomalyProtectionTypeAggressive,
	AnomalyProtectionTypeStandard,
	AnomalyProtectionTypeApiProtection,
	AnomalyProtectionTypeAnomaly,
}

// AnomalyRuleConfigFields includes the GraphQL fields of AnomalyRuleConfig requested by the fragment AnomalyRuleConfigFields.
type AnomalyRuleConfigFields struct {
	// Config status of the anomaly sub rule
	ConfigStatus AnomalyRuleConfigFieldsConfigStatusAnomalyConfigStatus `json:"configStatus"`
	// Boolean for whether the anomaly rule is hidden from customers
	Hidden bool `json:"hidden"`
	// Associated event family like MODSEC, API_DEF, etc for the anomaly rule
	EventFamily AnomalyEventFamily `json:"eventFamily"`
	// Anomaly Detection Config type like MODSEC, API_DEF, API_STATE_BASED, etc
	ConfigType AnomalyDetectionConfigType `json:"configType"`
	// Anomaly Rule category
	RuleCategory string `json:"ruleCategory"`
	// Anomaly Rule ID
	RuleId string `json:"ruleId"`
	// Anomaly Rule name
	RuleName string `json:"ruleName"`
	// Associated Event Labels for the anomaly sub rule
	EventLabels []*AnomalyRuleConfigFieldsEventLabelsAnomalyRuleEventLabel `json:"eventLabels"`
	// Associated Event Details like description, mitigation, etc for the anomaly sub rule
	EventDetails *AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails `json:"eventDetails"`
	// Anomaly Sub Rule Configs
	SubRuleConfigs []*AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig `json:"subRuleConfigs"`
	// Severity of the anomaly sub rule config
	AnomalyRuleSeverity *AnomalyRuleSeverity `json:"anomalyRuleSeverity"`
	// List of scopes whose config is overriding this scope config
	OverriddenParentScopes []*AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScope `json:"overriddenParentScopes"`
	// List of scopes whose config is getting overridden by this scope config
	OverridingChildrenScopes []*AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScope `json:"overridingChildrenScopes"`
}

// GetConfigStatus returns AnomalyRuleConfigFields.ConfigStatus, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetConfigStatus() AnomalyRuleConfigFieldsConfigStatusAnomalyConfigStatus {
	return v.ConfigStatus
}

// GetHidden returns AnomalyRuleConfigFields.Hidden, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetHidden() bool { return v.Hidden }

// GetEventFamily returns AnomalyRuleConfigFields.EventFamily, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetEventFamily() AnomalyEventFamily { return v.EventFamily }

// GetConfigType returns AnomalyRuleConfigFields.ConfigType, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetConfigType() AnomalyDetectionConfigType { return v.ConfigType }

// GetRuleCategory returns AnomalyRuleConfigFields.RuleCategory, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetRuleCategory() string { return v.RuleCategory }

// GetRuleId returns AnomalyRuleConfigFields.RuleId, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetRuleId() string { return v.RuleId }

// GetRuleName returns AnomalyRuleConfigFields.RuleName, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetRuleName() string { return v.RuleName }

// GetEventLabels returns AnomalyRuleConfigFields.EventLabels, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetEventLabels() []*AnomalyRuleConfigFieldsEventLabelsAnomalyRuleEventLabel {
	return v.EventLabels
}

// GetEventDetails returns AnomalyRuleConfigFields.EventDetails, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetEventDetails() *AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails {
	return v.EventDetails
}

// GetSubRuleConfigs returns AnomalyRuleConfigFields.SubRuleConfigs, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetSubRuleConfigs() []*AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig {
	return v.SubRuleConfigs
}

// GetAnomalyRuleSeverity returns AnomalyRuleConfigFields.AnomalyRuleSeverity, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetAnomalyRuleSeverity() *AnomalyRuleSeverity {
	return v.AnomalyRuleSeverity
}

// GetOverriddenParentScopes returns AnomalyRuleConfigFields.OverriddenParentScopes, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetOverriddenParentScopes() []*AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScope {
	return v.OverriddenParentScopes
}

// GetOverridingChildrenScopes returns AnomalyRuleConfigFields.OverridingChildrenScopes, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFields) GetOverridingChildrenScopes() []*AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScope {
	return v.OverridingChildrenScopes
}

// AnomalyRuleConfigFieldsConfigStatusAnomalyConfigStatus includes the requested fields of the GraphQL type AnomalyConfigStatus.
type AnomalyRuleConfigFieldsConfigStatusAnomalyConfigStatus struct {
	Disabled bool `json:"disabled"`
	Internal bool `json:"internal"`
}

// GetDisabled returns AnomalyRuleConfigFieldsConfigStatusAnomalyConfigStatus.Disabled, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsConfigStatusAnomalyConfigStatus) GetDisabled() bool {
	return v.Disabled
}

// GetInternal returns AnomalyRuleConfigFieldsConfigStatusAnomalyConfigStatus.Internal, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsConfigStatusAnomalyConfigStatus) GetInternal() bool {
	return v.Internal
}

// AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails includes the requested fields of the GraphQL type AnomalyRuleEventDetails.
type AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails struct {
	// Event Description
	Description string `json:"description"`
	// Event Impact
	Impact string `json:"impact"`
	// Event Mitigation
	Mitigation string `json:"mitigation"`
	// Event References
	References string `json:"references"`
}

// GetDescription returns AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails.Description, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails) GetDescription() string {
	return v.Description
}

// GetImpact returns AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails.Impact, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails) GetImpact() string {
	return v.Impact
}

// GetMitigation returns AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails.Mitigation, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails) GetMitigation() string {
	return v.Mitigation
}

// GetReferences returns AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails.References, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsEventDetailsAnomalyRuleEventDetails) GetReferences() string {
	return v.References
}

// AnomalyRuleConfigFieldsEventLabelsAnomalyRuleEventLabel includes the requested fields of the GraphQL type AnomalyRuleEventLabel.
type AnomalyRuleConfigFieldsEventLabelsAnomalyRuleEventLabel struct {
	LabelKey   string `json:"labelKey"`
	LabelValue string `json:"labelValue"`
}

// GetLabelKey returns AnomalyRuleConfigFieldsEventLabelsAnomalyRuleEventLabel.LabelKey, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsEventLabelsAnomalyRuleEventLabel) GetLabelKey() string {
	return v.LabelKey
}

// GetLabelValue returns AnomalyRuleConfigFieldsEventLabelsAnomalyRuleEventLabel.LabelValue, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsEventLabelsAnomalyRuleEventLabel) GetLabelValue() string {
	return v.LabelValue
}

// AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScope includes the requested fields of the GraphQL type AnomalyScope.
// The GraphQL type's documentation follows.
//
// Scope for anomaly configs
type AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScope struct {
	// Scope Type
	ScopeType AnomalyScopeType `json:"scopeType"`
	// Environment Scope populated when scopeType = AnomalyScopeType.ENVIRONMENT
	EnvironmentScope *AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope `json:"environmentScope"`
}

// GetScopeType returns AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScope.ScopeType, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScope) GetScopeType() AnomalyScopeType {
	return v.ScopeType
}

// GetEnvironmentScope returns AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScope) GetEnvironmentScope() *AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope {
	return v.EnvironmentScope
}

// AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope includes the requested fields of the GraphQL type AnomalyEnvironmentScope.
// The GraphQL type's documentation follows.
//
// Environment scope for anomaly configs
type AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope struct {
	// Environment Identifier
	Id string `json:"id"`
}

// GetId returns AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope.Id, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope) GetId() string {
	return v.Id
}

// AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScope includes the requested fields of the GraphQL type AnomalyScope.
// The GraphQL type's documentation follows.
//
// Scope for anomaly configs
type AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScope struct {
	// Scope Type
	ScopeType AnomalyScopeType `json:"scopeType"`
	// Environment Scope populated when scopeType = AnomalyScopeType.ENVIRONMENT
	EnvironmentScope *AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope `json:"environmentScope"`
}

// GetScopeType returns AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScope.ScopeType, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScope) GetScopeType() AnomalyScopeType {
	return v.ScopeType
}

// GetEnvironmentScope returns AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScope) GetEnvironmentScope() *AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope {
	return v.EnvironmentScope
}

// AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope includes the requested fields of the GraphQL type AnomalyEnvironmentScope.
// The GraphQL type's documentation follows.
//
// Environment scope for anomaly configs
type AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope struct {
	// Environment Identifier
	Id string `json:"id"`
}

// GetId returns AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope.Id, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope) GetId() string {
	return v.Id
}

// AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig includes the requested fields of the GraphQL type AnomalySubRuleConfig.
type AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig struct {
	// Boolean for whether blocking is enabled for the anomaly sub rule
	BlockingEnabled bool `json:"blockingEnabled"`
	// Config status of the anomaly sub rule
	ConfigStatus AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigConfigStatusAnomalyConfigStatus `json:"configStatus"`
	// Anomaly Sub Rule ID
	SubRuleId string `json:"subRuleId"`
	// Anomaly Sub Rule name
	SubRuleName string `json:"subRuleName"`
	// Anomaly Sub Rule Types like BLOCKED, SAFE, etc
	SubRuleTypes []*AnomalySubRuleType `json:"subRuleTypes"`
	// Associated Event Labels for the anomaly sub rule
	EventLabels []*AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventLabelsAnomalyRuleEventLabel `json:"eventLabels"`
	// Associated Event Details like description, mitigation, etc for the anomaly sub rule
	EventDetails *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails `json:"eventDetails"`
	// Anomaly protection type like aggressive, cautious, etc
	AnomalyProtectionType AnomalyProtectionType `json:"anomalyProtectionType"`
	// Severity of the anomaly sub rule config
	AnomalyRuleSeverity *AnomalyRuleSeverity `json:"anomalyRuleSeverity"`
	// Action for the anomaly sub rule
	AnomalySubRuleAction AnomalySubRuleAction `json:"anomalySubRuleAction"`
	// Boolean for whether the anomaly rule is hidden from customers
	Hidden bool `json:"hidden"`
	// List of scopes whose config is overriding this scope config
	OverriddenParentScopes []*AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScope `json:"overriddenParentScopes"`
	// List of scopes whose config is getting overridden by this scope config
	OverridingChildrenScopes []*AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScope `json:"overridingChildrenScopes"`
}

// GetBlockingEnabled returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.BlockingEnabled, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetBlockingEnabled() bool {
	return v.BlockingEnabled
}

// GetConfigStatus returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.ConfigStatus, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetConfigStatus() AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigConfigStatusAnomalyConfigStatus {
	return v.ConfigStatus
}

// GetSubRuleId returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.SubRuleId, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetSubRuleId() string {
	return v.SubRuleId
}

// GetSubRuleName returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.SubRuleName, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetSubRuleName() string {
	return v.SubRuleName
}

// GetSubRuleTypes returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.SubRuleTypes, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetSubRuleTypes() []*AnomalySubRuleType {
	return v.SubRuleTypes
}

// GetEventLabels returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.EventLabels, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetEventLabels() []*AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventLabelsAnomalyRuleEventLabel {
	return v.EventLabels
}

// GetEventDetails returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.EventDetails, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetEventDetails() *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails {
	return v.EventDetails
}

// GetAnomalyProtectionType returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.AnomalyProtectionType, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetAnomalyProtectionType() AnomalyProtectionType {
	return v.AnomalyProtectionType
}

// GetAnomalyRuleSeverity returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.AnomalyRuleSeverity, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetAnomalyRuleSeverity() *AnomalyRuleSeverity {
	return v.AnomalyRuleSeverity
}

// GetAnomalySubRuleAction returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.AnomalySubRuleAction, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetAnomalySubRuleAction() AnomalySubRuleAction {
	return v.AnomalySubRuleAction
}

// GetHidden returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.Hidden, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetHidden() bool { return v.Hidden }

// GetOverriddenParentScopes returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.OverriddenParentScopes, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetOverriddenParentScopes() []*AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScope {
	return v.OverriddenParentScopes
}

// GetOverridingChildrenScopes returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig.OverridingChildrenScopes, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfig) GetOverridingChildrenScopes() []*AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScope {
	return v.OverridingChildrenScopes
}

// AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigConfigStatusAnomalyConfigStatus includes the requested fields of the GraphQL type AnomalyConfigStatus.
type AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigConfigStatusAnomalyConfigStatus struct {
	Disabled bool `json:"disabled"`
	Internal bool `json:"internal"`
}

// GetDisabled returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigConfigStatusAnomalyConfigStatus.Disabled, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigConfigStatusAnomalyConfigStatus) GetDisabled() bool {
	return v.Disabled
}

// GetInternal returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigConfigStatusAnomalyConfigStatus.Internal, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigConfigStatusAnomalyConfigStatus) GetInternal() bool {
	return v.Internal
}

// AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails includes the requested fields of the GraphQL type AnomalyRuleEventDetails.
type AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails struct {
	// Event Description
	Description string `json:"description"`
	// Event Impact
	Impact string `json:"impact"`
	// Event Mitigation
	Mitigation string `json:"mitigation"`
	// Event References
	References string `json:"references"`
}

// GetDescription returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails.Description, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails) GetDescription() string {
	return v.Description
}

// GetImpact returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails.Impact, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails) GetImpact() string {
	return v.Impact
}

// GetMitigation returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails.Mitigation, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails) GetMitigation() string {
	return v.Mitigation
}

// GetReferences returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails.References, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventDetailsAnomalyRuleEventDetails) GetReferences() string {
	return v.References
}

// AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventLabelsAnomalyRuleEventLabel includes the requested fields of the GraphQL type AnomalyRuleEventLabel.
type AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventLabelsAnomalyRuleEventLabel struct {
	LabelKey   string `json:"labelKey"`
	LabelValue string `json:"labelValue"`
}

// GetLabelKey returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventLabelsAnomalyRuleEventLabel.LabelKey, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventLabelsAnomalyRuleEventLabel) GetLabelKey() string {
	return v.LabelKey
}

// GetLabelValue returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventLabelsAnomalyRuleEventLabel.LabelValue, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigEventLabelsAnomalyRuleEventLabel) GetLabelValue() string {
	return v.LabelValue
}

// AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScope includes the requested fields of the GraphQL type AnomalyScope.
// The GraphQL type's documentation follows.
//
// Scope for anomaly configs
type AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScope struct {
	// Scope Type
	ScopeType AnomalyScopeType `json:"scopeType"`
	// Environment Scope populated when scopeType = AnomalyScopeType.ENVIRONMENT
	EnvironmentScope *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope `json:"environmentScope"`
}

// GetScopeType returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScope.ScopeType, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScope) GetScopeType() AnomalyScopeType {
	return v.ScopeType
}

// GetEnvironmentScope returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScope) GetEnvironmentScope() *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope {
	return v.EnvironmentScope
}

// AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope includes the requested fields of the GraphQL type AnomalyEnvironmentScope.
// The GraphQL type's documentation follows.
//
// Environment scope for anomaly configs
type AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope struct {
	// Environment Identifier
	Id string `json:"id"`
}

// GetId returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope.Id, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverriddenParentScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope) GetId() string {
	return v.Id
}

// AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScope includes the requested fields of the GraphQL type AnomalyScope.
// The GraphQL type's documentation follows.
//
// Scope for anomaly configs
type AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScope struct {
	// Scope Type
	ScopeType AnomalyScopeType `json:"scopeType"`
	// Environment Scope populated when scopeType = AnomalyScopeType.ENVIRONMENT
	EnvironmentScope *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope `json:"environmentScope"`
}

// GetScopeType returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScope.ScopeType, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScope) GetScopeType() AnomalyScopeType {
	return v.ScopeType
}

// GetEnvironmentScope returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScope) GetEnvironmentScope() *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope {
	return v.EnvironmentScope
}

// AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope includes the requested fields of the GraphQL type AnomalyEnvironmentScope.
// The GraphQL type's documentation follows.
//
// Environment scope for anomaly configs
type AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope struct {
	// Environment Identifier
	Id string `json:"id"`
}

// GetId returns AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope.Id, and is useful for accessing the field via an interface.
func (v *AnomalyRuleConfigFieldsSubRuleConfigsAnomalySubRuleConfigOverridingChildrenScopesAnomalyScopeEnvironmentScopeAnomalyEnvironmentScope) GetId() string {
	return v.Id
}

type AnomalyRuleSeverity string

const (
	// LOW
	AnomalyRuleSeverityLow AnomalyRuleSeverity = "LOW"
	// MEDIUM
	AnomalyRuleSeverityMedium AnomalyRuleSeverity = "MEDIUM"
	// HIGH
	AnomalyRuleSeverityHigh AnomalyRuleSeverity = "HIGH"
	// CRITICAL
	AnomalyRuleSeverityCritical AnomalyRuleSeverity = "CRITICAL"
)

var AllAnomalyRuleSeverity = []AnomalyRuleSeverity{
	AnomalyRuleSeverityLow,
	AnomalyRuleSeverityMedium,
	AnomalyRuleSeverityHigh,
	AnomalyRuleSeverityCritical,
}

// Scope type for anomaly configs
type AnomalyScopeType string

const (
	// CUSTOMER
	AnomalyScopeTypeCustomer AnomalyScopeType = "CUSTOMER"
	// ENVIRONMENT
	AnomalyScopeTypeEnvironment AnomalyScopeType = "ENVIRONMENT"
	// SERVICE
	AnomalyScopeTypeService AnomalyScopeType = "SERVICE"
	// API
	AnomalyScopeTypeApi AnomalyScopeType = "API"
	// BACKEND
	AnomalyScopeTypeBackend AnomalyScopeType = "BACKEND"
	// BACKEND_API
	AnomalyScopeTypeBackendApi AnomalyScopeType = "BACKEND_API"
	// PARAM
	AnomalyScopeTypeParam AnomalyScopeType = "PARAM"
	// DEFAULT
	AnomalyScopeTypeDefault AnomalyScopeType = "DEFAULT"
)

var AllAnomalyScopeType = []AnomalyScopeType{
	AnomalyScopeTypeCustomer,
	AnomalyScopeTypeEnvironment,
	AnomalyScopeTypeService,
	AnomalyScopeTypeApi,
	AnomalyScopeTypeBackend,
	AnomalyScopeTypeBackendApi,
	AnomalyScopeTypeParam,
	AnomalyScopeTypeDefault,
}

type AnomalySecurityEventCategory string

const (
	// LATENT
	AnomalySecurityEventCategoryLatent AnomalySecurityEventCategory = "LATENT"
	// MALICIOUS
	AnomalySecurityEventCategoryMalicious AnomalySecurityEventCategory = "MALICIOUS"
	// TAGGED
	AnomalySecurityEventCategoryTagged AnomalySecurityEventCategory = "TAGGED"
)

var AllAnomalySecurityEventCategory = []AnomalySecurityEventCategory{
	AnomalySecurityEventCategoryLatent,
	AnomalySecurityEventCategoryMalicious,
	AnomalySecurityEventCategoryTagged,
}

type AnomalySubRuleAction string

const (
	// IGNORE
	AnomalySubRuleActionIgnore AnomalySubRuleAction = "IGNORE"
	// DISABLE
	AnomalySubRuleActionDisable AnomalySubRuleAction = "DISABLE"
	// MONITOR
	AnomalySubRuleActionMonitor AnomalySubRuleAction = "MONITOR"
	// BLOCK
	AnomalySubRuleActionBlock AnomalySubRuleAction = "BLOCK"
)

var AllAnomalySubRuleAction = []AnomalySubRuleAction{
	AnomalySubRuleActionIgnore,
	AnomalySubRuleActionDisable,
	AnomalySubRuleActionMonitor,
	AnomalySubRuleActionBlock,
}

type AnomalySubRuleType string

const (
	// REGULAR
	AnomalySubRuleTypeRegular AnomalySubRuleType = "REGULAR"
	// SAFE
	AnomalySubRuleTypeSafe AnomalySubRuleType = "SAFE"
	// BLOCK
	AnomalySubRuleTypeBlock AnomalySubRuleType = "BLOCK"
)

var AllAnomalySubRuleType = []AnomalySubRuleType{
	AnomalySubRuleTypeRegular,
	AnomalySubRuleTypeSafe,
	AnomalySubRuleTypeBlock,
}

type ApiDefinitionMetadataAnomalyDetectionConfigName string

const (
	// MISSING_PARAM_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameMissingParamAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "MISSING_PARAM_ANOMALY_CONFIG"
	// ENUMERATIONS_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameEnumerationsAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "ENUMERATIONS_ANOMALY_CONFIG"
	// TYPE_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameTypeAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "TYPE_ANOMALY_CONFIG"
	// INTEGER_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameIntegerAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "INTEGER_ANOMALY_CONFIG"
	// DEVICE_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameDeviceAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "DEVICE_ANOMALY_CONFIG"
	// HTTP_STATUS_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameHttpStatusAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "HTTP_STATUS_ANOMALY_CONFIG"
	// CONTENT_TYPE_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameContentTypeAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "CONTENT_TYPE_ANOMALY_CONFIG"
	// CONTENT_SIZE_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameContentSizeAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "CONTENT_SIZE_ANOMALY_CONFIG"
	// PAYLOAD_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNamePayloadAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "PAYLOAD_ANOMALY_CONFIG"
	// SSRF_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameSsrfAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "SSRF_ANOMALY_CONFIG"
	// UNKNOWN_PARAM_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameUnknownParamAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "UNKNOWN_PARAM_ANOMALY_CONFIG"
	// BFLA_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameBflaAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "BFLA_ANOMALY_CONFIG"
	// JWT_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameJwtAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "JWT_ANOMALY_CONFIG"
	// SPECIAL_CHARACTER_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameSpecialCharacterAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "SPECIAL_CHARACTER_ANOMALY_CONFIG"
	// CONTENT_EXPLOSION_ANOMALY_CONFIG
	ApiDefinitionMetadataAnomalyDetectionConfigNameContentExplosionAnomalyConfig ApiDefinitionMetadataAnomalyDetectionConfigName = "CONTENT_EXPLOSION_ANOMALY_CONFIG"
)

var AllApiDefinitionMetadataAnomalyDetectionConfigName = []ApiDefinitionMetadataAnomalyDetectionConfigName{
	ApiDefinitionMetadataAnomalyDetectionConfigNameMissingParamAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameEnumerationsAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameTypeAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameIntegerAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameDeviceAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameHttpStatusAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameContentTypeAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameContentSizeAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNamePayloadAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameSsrfAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameUnknownParamAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameBflaAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameJwtAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameSpecialCharacterAnomalyConfig,
	ApiDefinitionMetadataAnomalyDetectionConfigNameContentExplosionAnomalyConfig,
}

// Api naming rule config types
type ApiNamingRuleConfigType string

const (
	// Specifies segment matching based api naming rule
	ApiNamingRuleConfigTypeSegmentMatching ApiNamingRuleConfigType = "SEGMENT_MATCHING"
)

var AllApiNamingRuleConfigType = []ApiNamingRuleConfigType{
	ApiNamingRuleConfigTypeSegmentMatching,
}

// ApiNamingRuleFields includes the GraphQL fields of ApiNamingRule requested by the fragment ApiNamingRuleFields.
type ApiNamingRuleFields struct {
	Id string `json:"id"`
	// Name of the api naming rule
	Name string `json:"name"`
	// Creation time of api naming rule
	CreationTime string `json:"creationTime"`
	// Last updated time of api naming rule
	LastUpdatedTime string `json:"lastUpdatedTime"`
	// Says if api naming rule is disabled
	Disabled bool `json:"disabled"`
	// Api naming rule config
	ApiNamingRuleConfig ApiNamingRuleFieldsApiNamingRuleConfig `json:"apiNamingRuleConfig"`
	// Filter to match the spans to apply the api naming rule
	SpanFilter ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter `json:"spanFilter"`
}

// GetId returns ApiNamingRuleFields.Id, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFields) GetId() string { return v.Id }

// GetName returns ApiNamingRuleFields.Name, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFields) GetName() string { return v.Name }

// GetCreationTime returns ApiNamingRuleFields.CreationTime, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFields) GetCreationTime() string { return v.CreationTime }

// GetLastUpdatedTime returns ApiNamingRuleFields.LastUpdatedTime, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFields) GetLastUpdatedTime() string { return v.LastUpdatedTime }

// GetDisabled returns ApiNamingRuleFields.Disabled, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFields) GetDisabled() bool { return v.Disabled }

// GetApiNamingRuleConfig returns ApiNamingRuleFields.ApiNamingRuleConfig, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFields) GetApiNamingRuleConfig() ApiNamingRuleFieldsApiNamingRuleConfig {
	return v.ApiNamingRuleConfig
}

// GetSpanFilter returns ApiNamingRuleFields.SpanFilter, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFields) GetSpanFilter() ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter {
	return v.SpanFilter
}

// ApiNamingRuleFieldsApiNamingRuleConfig includes the requested fields of the GraphQL type ApiNamingRuleConfig.
// The GraphQL type's documentation follows.
//
// Api naming rule config. There may be multiple configs, but only the one
// corresponding to the api naming rule config type would be non null
type ApiNamingRuleFieldsApiNamingRuleConfig struct {
	// Specifies the api naming rule config type
	ApiNamingRuleConfigType ApiNamingRuleConfigType `json:"apiNamingRuleConfigType"`
	// Segment matching based api naming rule config
	SegmentMatchingBasedRuleConfig *ApiNamingRuleFieldsApiNamingRuleConfigSegmentMatchingBasedRuleConfig `json:"segmentMatchingBasedRuleConfig"`
}

// GetApiNamingRuleConfigType returns ApiNamingRuleFieldsApiNamingRuleConfig.ApiNamingRuleConfigType, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsApiNamingRuleConfig) GetApiNamingRuleConfigType() ApiNamingRuleConfigType {
	return v.ApiNamingRuleConfigType
}

// GetSegmentMatchingBasedRuleConfig returns ApiNamingRuleFieldsApiNamingRuleConfig.SegmentMatchingBasedRuleConfig, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsApiNamingRuleConfig) GetSegmentMatchingBasedRuleConfig() *ApiNamingRuleFieldsApiNamingRuleConfigSegmentMatchingBasedRuleConfig {
	return v.SegmentMatchingBasedRuleConfig
}

// ApiNamingRuleFieldsApiNamingRuleConfigSegmentMatchingBasedRuleConfig includes the requested fields of the GraphQL type SegmentMatchingBasedRuleConfig.
// The GraphQL type's documentation follows.
//
// Segment matching based api naming rule config
type ApiNamingRuleFieldsApiNamingRuleConfigSegmentMatchingBasedRuleConfig struct {
	// Regex patterns to be matched against
	Regexes []*string `json:"regexes"`
	// Values with which the corresponding regexes are to be replaces with
	Values []*string `json:"values"`
}

// GetRegexes returns ApiNamingRuleFieldsApiNamingRuleConfigSegmentMatchingBasedRuleConfig.Regexes, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsApiNamingRuleConfigSegmentMatchingBasedRuleConfig) GetRegexes() []*string {
	return v.Regexes
}

// GetValues returns ApiNamingRuleFieldsApiNamingRuleConfigSegmentMatchingBasedRuleConfig.Values, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsApiNamingRuleConfigSegmentMatchingBasedRuleConfig) GetValues() []*string {
	return v.Values
}

// ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter includes the requested fields of the GraphQL type TraceableSpanProcessingRuleFilter.
type ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter struct {
	LogicalSpanFilter *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilter `json:"logicalSpanFilter"`
}

// GetLogicalSpanFilter returns ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter.LogicalSpanFilter, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter) GetLogicalSpanFilter() *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilter {
	return v.LogicalSpanFilter
}

// ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilter includes the requested fields of the GraphQL type TraceableSpanProcessingLogicalFilter.
type ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilter struct {
	LogicalOperator LogicalOperator                                                                                                                                                    `json:"logicalOperator"`
	SpanFilters     []*ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilter `json:"spanFilters"`
}

// GetLogicalOperator returns ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilter.LogicalOperator, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilter) GetLogicalOperator() LogicalOperator {
	return v.LogicalOperator
}

// GetSpanFilters returns ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilter.SpanFilters, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilter) GetSpanFilters() []*ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilter {
	return v.SpanFilters
}

// ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilter includes the requested fields of the GraphQL type TraceableSpanProcessingRuleFilter.
type ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilter struct {
	RelationalSpanFilter *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter `json:"relationalSpanFilter"`
}

// GetRelationalSpanFilter returns ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilter.RelationalSpanFilter, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilter) GetRelationalSpanFilter() *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter {
	return v.RelationalSpanFilter
}

// ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter includes the requested fields of the GraphQL type TraceableSpanProcessingRelationalFilter.
type ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter struct {
	RelationalOperator TraceableSpanProcessingRelationalOperator `json:"relationalOperator"`
	Key                *string                                   `json:"key"`
	Value              interface{}                               `json:"value"`
	Field              *TraceableSpanProcessingFilterField       `json:"field"`
}

// GetRelationalOperator returns ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter.RelationalOperator, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter) GetRelationalOperator() TraceableSpanProcessingRelationalOperator {
	return v.RelationalOperator
}

// GetKey returns ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter.Key, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter) GetKey() *string {
	return v.Key
}

// GetValue returns ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter.Value, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter) GetValue() interface{} {
	return v.Value
}

// GetField returns ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter.Field, and is useful for accessing the field via an interface.
func (v *ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilterLogicalSpanFilterTraceableSpanProcessingLogicalFilterSpanFiltersTraceableSpanProcessingRuleFilterRelationalSpanFilterTraceableSpanProcessingRelationalFilter) GetField() *TraceableSpanProcessingFilterField {
	return v.Field
}

type ApiStateBasedAnomalyDetectionConfigName string

const (
	// UNKNOWN_API_ANOMALY_CONFIG
	ApiStateBasedAnomalyDetectionConfigNameUnknownApiAnomalyConfig ApiStateBasedAnomalyDetectionConfigName = "UNKNOWN_API_ANOMALY_CONFIG"
	// UNDER_DISCOVERY_API_ANOMALY_CONFIG
	ApiStateBasedAnomalyDetectionConfigNameUnderDiscoveryApiAnomalyConfig ApiStateBasedAnomalyDetectionConfigName = "UNDER_DISCOVERY_API_ANOMALY_CONFIG"
	// UNDER_THRESHOLD_LEARNING_API_ANOMALY_CONFIG
	ApiStateBasedAnomalyDetectionConfigNameUnderThresholdLearningApiAnomalyConfig ApiStateBasedAnomalyDetectionConfigName = "UNDER_THRESHOLD_LEARNING_API_ANOMALY_CONFIG"
	// LEARNT_API_ANOMALY_CONFIG
	ApiStateBasedAnomalyDetectionConfigNameLearntApiAnomalyConfig ApiStateBasedAnomalyDetectionConfigName = "LEARNT_API_ANOMALY_CONFIG"
)

var AllApiStateBasedAnomalyDetectionConfigName = []ApiStateBasedAnomalyDetectionConfigName{
	ApiStateBasedAnomalyDetectionConfigNameUnknownApiAnomalyConfig,
	ApiStateBasedAnomalyDetectionConfigNameUnderDiscoveryApiAnomalyConfig,
	ApiStateBasedAnomalyDetectionConfigNameUnderThresholdLearningApiAnomalyConfig,
	ApiStateBasedAnomalyDetectionConfigNameLearntApiAnomalyConfig,
}

type AttributeScope string

const (
	// TRACE
	AttributeScopeTrace AttributeScope = "TRACE"
	// SPAN
	AttributeScopeSpan AttributeScope = "SPAN"
	// API
	AttributeScopeApi AttributeScope = "API"
	// API_TRACE
	AttributeScopeApiTrace AttributeScope = "API_TRACE"
	// BACKEND
	AttributeScopeBackend AttributeScope = "BACKEND"
	// BACKEND_TRACE
	AttributeScopeBackendTrace AttributeScope = "BACKEND_TRACE"
	// INTERACTION
	AttributeScopeInteraction AttributeScope = "INTERACTION"
	// SERVICE
	AttributeScopeService AttributeScope = "SERVICE"
	// ACTOR
	AttributeScopeActor AttributeScope = "ACTOR"
	// DOMAIN
	AttributeScopeDomain AttributeScope = "DOMAIN"
	// DOMAIN_EVENT
	AttributeScopeDomainEvent AttributeScope = "DOMAIN_EVENT"
	// BACKEND_API
	AttributeScopeBackendApi AttributeScope = "BACKEND_API"
)

var AllAttributeScope = []AttributeScope{
	AttributeScopeTrace,
	AttributeScopeSpan,
	AttributeScopeApi,
	AttributeScopeApiTrace,
	AttributeScopeBackend,
	AttributeScopeBackendTrace,
	AttributeScopeInteraction,
	AttributeScopeService,
	AttributeScopeActor,
	AttributeScopeDomain,
	AttributeScopeDomainEvent,
	AttributeScopeBackendApi,
}

type BlockingMetadataAnomalyDetectionConfigName string

const (
	// CUSTOM_IP
	BlockingMetadataAnomalyDetectionConfigNameCustomIp BlockingMetadataAnomalyDetectionConfigName = "CUSTOM_IP"
	// CUSTOM_REGION
	BlockingMetadataAnomalyDetectionConfigNameCustomRegion BlockingMetadataAnomalyDetectionConfigName = "CUSTOM_REGION"
	// MALICIOUS_SOURCES
	BlockingMetadataAnomalyDetectionConfigNameMaliciousSources BlockingMetadataAnomalyDetectionConfigName = "MALICIOUS_SOURCES"
	// CUSTOM_SIGNATURE
	BlockingMetadataAnomalyDetectionConfigNameCustomSignature BlockingMetadataAnomalyDetectionConfigName = "CUSTOM_SIGNATURE"
	// RATE_LIMIT
	BlockingMetadataAnomalyDetectionConfigNameRateLimit BlockingMetadataAnomalyDetectionConfigName = "RATE_LIMIT"
	// THREAT_ACTOR
	BlockingMetadataAnomalyDetectionConfigNameThreatActor BlockingMetadataAnomalyDetectionConfigName = "THREAT_ACTOR"
	// SAFE_CRS
	BlockingMetadataAnomalyDetectionConfigNameSafeCrs BlockingMetadataAnomalyDetectionConfigName = "SAFE_CRS"
	// IN_AGENT_VULNERABLE_LIBRARY
	BlockingMetadataAnomalyDetectionConfigNameInAgentVulnerableLibrary BlockingMetadataAnomalyDetectionConfigName = "IN_AGENT_VULNERABLE_LIBRARY"
)

var AllBlockingMetadataAnomalyDetectionConfigName = []BlockingMetadataAnomalyDetectionConfigName{
	BlockingMetadataAnomalyDetectionConfigNameCustomIp,
	BlockingMetadataAnomalyDetectionConfigNameCustomRegion,
	BlockingMetadataAnomalyDetectionConfigNameMaliciousSources,
	BlockingMetadataAnomalyDetectionConfigNameCustomSignature,
	BlockingMetadataAnomalyDetectionConfigNameRateLimit,
	BlockingMetadataAnomalyDetectionConfigNameThreatActor,
	BlockingMetadataAnomalyDetectionConfigNameSafeCrs,
	BlockingMetadataAnomalyDetectionConfigNameInAgentVulnerableLibrary,
}

// CreateApiNamingRuleCreateApiNamingRule includes the requested fields of the GraphQL type ApiNamingRule.
type CreateApiNamingRuleCreateApiNamingRule struct {
	ApiNamingRuleFields `json:"-"`
}

// GetId returns CreateApiNamingRuleCreateApiNamingRule.Id, and is useful for accessing the field via an interface.
func (v *CreateApiNamingRuleCreateApiNamingRule) GetId() string { return v.ApiNamingRuleFields.Id }

// GetName returns CreateApiNamingRuleCreateApiNamingRule.Name, and is useful for accessing the field via an interface.
func (v *CreateApiNamingRuleCreateApiNamingRule) GetName() string { return v.ApiNamingRuleFields.Name }

// GetCreationTime returns CreateApiNamingRuleCreateApiNamingRule.CreationTime, and is useful for accessing the field via an interface.
func (v *CreateApiNamingRuleCreateApiNamingRule) GetCreationTime() string {
	return v.ApiNamingRuleFields.CreationTime
}

// GetLastUpdatedTime returns CreateApiNamingRuleCreateApiNamingRule.LastUpdatedTime, and is useful for accessing the field via an interface.
func (v *CreateApiNamingRuleCreateApiNamingRule) GetLastUpdatedTime() string {
	return v.ApiNamingRuleFields.LastUpdatedTime
}

// GetDisabled returns CreateApiNamingRuleCreateApiNamingRule.Disabled, and is useful for accessing the field via an interface.
func (v *CreateApiNamingRuleCreateApiNamingRule) GetDisabled() bool {
	return v.ApiNamingRuleFields.Disabled
}

// GetApiNamingRuleConfig returns CreateApiNamingRuleCreateApiNamingRule.ApiNamingRuleConfig, and is useful for accessing the field via an interface.
func (v *CreateApiNamingRuleCreateApiNamingRule) GetApiNamingRuleConfig() ApiNamingRuleFieldsApiNamingRuleConfig {
	return v.ApiNamingRuleFields.ApiNamingRuleConfig
}

// GetSpanFilter returns CreateApiNamingRuleCreateApiNamingRule.SpanFilter, and is useful for accessing the field via an interface.
func (v *CreateApiNamingRuleCreateApiNamingRule) GetSpanFilter() ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter {
	return v.ApiNamingRuleFields.SpanFilter
}

func (v *CreateApiNamingRuleCreateApiNamingRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateApiNamingRuleCreateApiNamingRule
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateApiNamingRuleCreateApiNamingRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ApiNamingRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateApiNamingRuleCreateApiNamingRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	CreationTime string `json:"creationTime"`

	LastUpdatedTime string `json:"lastUpdatedTime"`

	Disabled bool `json:"disabled"`

	ApiNamingRuleConfig ApiNamingRuleFieldsApiNamingRuleConfig `json:"apiNamingRuleConfig"`

	SpanFilter ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter `json:"spanFilter"`
}

func (v *CreateApiNamingRuleCreateApiNamingRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateApiNamingRuleCreateApiNamingRule) __premarshalJSON() (*__premarshalCreateApiNamingRuleCreateApiNamingRule, error) {
	var retval __premarshalCreateApiNamingRuleCreateApiNamingRule

	retval.Id = v.ApiNamingRuleFields.Id
	retval.Name = v.ApiNamingRuleFields.Name
	retval.CreationTime = v.ApiNamingRuleFields.CreationTime
	retval.LastUpdatedTime = v.ApiNamingRuleFields.LastUpdatedTime
	retval.Disabled = v.ApiNamingRuleFields.Disabled
	retval.ApiNamingRuleConfig = v.ApiNamingRuleFields.ApiNamingRuleConfig
	retval.SpanFilter = v.ApiNamingRuleFields.SpanFilter
	return &retval, nil
}

// CreateApiNamingRuleResponse is returned by CreateApiNamingRule on success.
type CreateApiNamingRuleResponse struct {
	// Mutation to create api naming rule
	CreateApiNamingRule CreateApiNamingRuleCreateApiNamingRule `json:"createApiNamingRule"`
}

// GetCreateApiNamingRule returns CreateApiNamingRuleResponse.CreateApiNamingRule, and is useful for accessing the field via an interface.
func (v *CreateApiNamingRuleResponse) GetCreateApiNamingRule() CreateApiNamingRuleCreateApiNamingRule {
	return v.CreateApiNamingRule
}

// CreateCustomSignatureCreateCustomSignatureRule includes the requested fields of the GraphQL type CustomSignatureRule.
type CreateCustomSignatureCreateCustomSignatureRule struct {
	CustomSignatureFields `json:"-"`
}

// GetId returns CreateCustomSignatureCreateCustomSignatureRule.Id, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureCreateCustomSignatureRule) GetId() string {
	return v.CustomSignatureFields.Id
}

// GetName returns CreateCustomSignatureCreateCustomSignatureRule.Name, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureCreateCustomSignatureRule) GetName() string {
	return v.CustomSignatureFields.Name
}

// GetDescription returns CreateCustomSignatureCreateCustomSignatureRule.Description, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureCreateCustomSignatureRule) GetDescription() string {
	return v.CustomSignatureFields.Description
}

// GetDisabled returns CreateCustomSignatureCreateCustomSignatureRule.Disabled, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureCreateCustomSignatureRule) GetDisabled() *bool {
	return v.CustomSignatureFields.Disabled
}

// GetInternal returns CreateCustomSignatureCreateCustomSignatureRule.Internal, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureCreateCustomSignatureRule) GetInternal() *bool {
	return v.CustomSignatureFields.Internal
}

// GetBlockingExpirationDuration returns CreateCustomSignatureCreateCustomSignatureRule.BlockingExpirationDuration, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureCreateCustomSignatureRule) GetBlockingExpirationDuration() *string {
	return v.CustomSignatureFields.BlockingExpirationDuration
}

// GetBlockingExpirationTime returns CreateCustomSignatureCreateCustomSignatureRule.BlockingExpirationTime, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureCreateCustomSignatureRule) GetBlockingExpirationTime() *string {
	return v.CustomSignatureFields.BlockingExpirationTime
}

// GetRuleSource returns CreateCustomSignatureCreateCustomSignatureRule.RuleSource, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureCreateCustomSignatureRule) GetRuleSource() *CustomSignatureRuleSource {
	return v.CustomSignatureFields.RuleSource
}

// GetRuleEffect returns CreateCustomSignatureCreateCustomSignatureRule.RuleEffect, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureCreateCustomSignatureRule) GetRuleEffect() CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect {
	return v.CustomSignatureFields.RuleEffect
}

// GetRuleDefinition returns CreateCustomSignatureCreateCustomSignatureRule.RuleDefinition, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureCreateCustomSignatureRule) GetRuleDefinition() CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition {
	return v.CustomSignatureFields.RuleDefinition
}

// GetRuleScope returns CreateCustomSignatureCreateCustomSignatureRule.RuleScope, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureCreateCustomSignatureRule) GetRuleScope() *CustomSignatureFieldsRuleScopeCustomSignatureRuleScope {
	return v.CustomSignatureFields.RuleScope
}

func (v *CreateCustomSignatureCreateCustomSignatureRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateCustomSignatureCreateCustomSignatureRule
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateCustomSignatureCreateCustomSignatureRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.CustomSignatureFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateCustomSignatureCreateCustomSignatureRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	Description string `json:"description"`

	Disabled *bool `json:"disabled"`

	Internal *bool `json:"internal"`

	BlockingExpirationDuration *string `json:"blockingExpirationDuration"`

	BlockingExpirationTime *string `json:"blockingExpirationTime"`

	RuleSource *CustomSignatureRuleSource `json:"ruleSource"`

	RuleEffect CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect `json:"ruleEffect"`

	RuleDefinition CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition `json:"ruleDefinition"`

	RuleScope *CustomSignatureFieldsRuleScopeCustomSignatureRuleScope `json:"ruleScope"`
}

func (v *CreateCustomSignatureCreateCustomSignatureRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateCustomSignatureCreateCustomSignatureRule) __premarshalJSON() (*__premarshalCreateCustomSignatureCreateCustomSignatureRule, error) {
	var retval __premarshalCreateCustomSignatureCreateCustomSignatureRule

	retval.Id = v.CustomSignatureFields.Id
	retval.Name = v.CustomSignatureFields.Name
	retval.Description = v.CustomSignatureFields.Description
	retval.Disabled = v.CustomSignatureFields.Disabled
	retval.Internal = v.CustomSignatureFields.Internal
	retval.BlockingExpirationDuration = v.CustomSignatureFields.BlockingExpirationDuration
	retval.BlockingExpirationTime = v.CustomSignatureFields.BlockingExpirationTime
	retval.RuleSource = v.CustomSignatureFields.RuleSource
	retval.RuleEffect = v.CustomSignatureFields.RuleEffect
	retval.RuleDefinition = v.CustomSignatureFields.RuleDefinition
	retval.RuleScope = v.CustomSignatureFields.RuleScope
	return &retval, nil
}

// CreateCustomSignatureResponse is returned by CreateCustomSignature on success.
type CreateCustomSignatureResponse struct {
	CreateCustomSignatureRule CreateCustomSignatureCreateCustomSignatureRule `json:"createCustomSignatureRule"`
}

// GetCreateCustomSignatureRule returns CreateCustomSignatureResponse.CreateCustomSignatureRule, and is useful for accessing the field via an interface.
func (v *CreateCustomSignatureResponse) GetCreateCustomSignatureRule() CreateCustomSignatureCreateCustomSignatureRule {
	return v.CreateCustomSignatureRule
}

// CreateDataSetCreateDataSet includes the requested fields of the GraphQL type DataSet.
type CreateDataSetCreateDataSet struct {
	Id          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	// An icon used to represent this Dataset visually
	IconType *string `json:"iconType"`
}

// GetId returns CreateDataSetCreateDataSet.Id, and is useful for accessing the field via an interface.
func (v *CreateDataSetCreateDataSet) GetId() string { return v.Id }

// GetName returns CreateDataSetCreateDataSet.Name, and is useful for accessing the field via an interface.
func (v *CreateDataSetCreateDataSet) GetName() string { return v.Name }

// GetDescription returns CreateDataSetCreateDataSet.Description, and is useful for accessing the field via an interface.
func (v *CreateDataSetCreateDataSet) GetDescription() *string { return v.Description }

// GetIconType returns CreateDataSetCreateDataSet.IconType, and is useful for accessing the field via an interface.
func (v *CreateDataSetCreateDataSet) GetIconType() *string { return v.IconType }

// CreateDataSetResponse is returned by CreateDataSet on success.
type CreateDataSetResponse struct {
	CreateDataSet CreateDataSetCreateDataSet `json:"createDataSet"`
}

// GetCreateDataSet returns CreateDataSetResponse.CreateDataSet, and is useful for accessing the field via an interface.
func (v *CreateDataSetResponse) GetCreateDataSet() CreateDataSetCreateDataSet { return v.CreateDataSet }

// CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule struct {
	MaliciousEmailDomainRuleFields `json:"-"`
}

// GetId returns CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule) GetId() string {
	return v.MaliciousEmailDomainRuleFields.Id
}

// GetInfo returns CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule) GetInfo() MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.MaliciousEmailDomainRuleFields.Info
}

// GetScope returns CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule.Scope, and is useful for accessing the field via an interface.
func (v *CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule) GetScope() *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.MaliciousEmailDomainRuleFields.Scope
}

// GetStatus returns CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule.Status, and is useful for accessing the field via an interface.
func (v *CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule) GetStatus() MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.MaliciousEmailDomainRuleFields.Status
}

func (v *CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousEmailDomainRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule struct {
	Id string `json:"id"`

	Info MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`

	Scope *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`

	Status MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

func (v *CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule) __premarshalJSON() (*__premarshalCreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule, error) {
	var retval __premarshalCreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule

	retval.Id = v.MaliciousEmailDomainRuleFields.Id
	retval.Info = v.MaliciousEmailDomainRuleFields.Info
	retval.Scope = v.MaliciousEmailDomainRuleFields.Scope
	retval.Status = v.MaliciousEmailDomainRuleFields.Status
	return &retval, nil
}

// CreateMaliciousEmailDomainRuleResponse is returned by CreateMaliciousEmailDomainRule on success.
type CreateMaliciousEmailDomainRuleResponse struct {
	// Mutation API to create Malicious Sources rule
	CreateMaliciousSourcesRule CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule `json:"createMaliciousSourcesRule"`
}

// GetCreateMaliciousSourcesRule returns CreateMaliciousEmailDomainRuleResponse.CreateMaliciousSourcesRule, and is useful for accessing the field via an interface.
func (v *CreateMaliciousEmailDomainRuleResponse) GetCreateMaliciousSourcesRule() CreateMaliciousEmailDomainRuleCreateMaliciousSourcesRule {
	return v.CreateMaliciousSourcesRule
}

// CreateMaliciousIpRangeRuleCreateIpRangeRule includes the requested fields of the GraphQL type IpRangeRule.
type CreateMaliciousIpRangeRuleCreateIpRangeRule struct {
	MaliciousIpRangeFields `json:"-"`
}

// GetId returns CreateMaliciousIpRangeRuleCreateIpRangeRule.Id, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) GetId() *string {
	return v.MaliciousIpRangeFields.Id
}

// GetInternal returns CreateMaliciousIpRangeRuleCreateIpRangeRule.Internal, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) GetInternal() bool {
	return v.MaliciousIpRangeFields.Internal
}

// GetDisabled returns CreateMaliciousIpRangeRuleCreateIpRangeRule.Disabled, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) GetDisabled() bool {
	return v.MaliciousIpRangeFields.Disabled
}

// GetRuleDetails returns CreateMaliciousIpRangeRuleCreateIpRangeRule.RuleDetails, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) GetRuleDetails() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails {
	return v.MaliciousIpRangeFields.RuleDetails
}

// GetRuleScope returns CreateMaliciousIpRangeRuleCreateIpRangeRule.RuleScope, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) GetRuleScope() *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope {
	return v.MaliciousIpRangeFields.RuleScope
}

func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateMaliciousIpRangeRuleCreateIpRangeRule
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateMaliciousIpRangeRuleCreateIpRangeRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpRangeFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateMaliciousIpRangeRuleCreateIpRangeRule struct {
	Id *string `json:"id"`

	Internal bool `json:"internal"`

	Disabled bool `json:"disabled"`

	RuleDetails MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails `json:"ruleDetails"`

	RuleScope *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope `json:"ruleScope"`
}

func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateMaliciousIpRangeRuleCreateIpRangeRule) __premarshalJSON() (*__premarshalCreateMaliciousIpRangeRuleCreateIpRangeRule, error) {
	var retval __premarshalCreateMaliciousIpRangeRuleCreateIpRangeRule

	retval.Id = v.MaliciousIpRangeFields.Id
	retval.Internal = v.MaliciousIpRangeFields.Internal
	retval.Disabled = v.MaliciousIpRangeFields.Disabled
	retval.RuleDetails = v.MaliciousIpRangeFields.RuleDetails
	retval.RuleScope = v.MaliciousIpRangeFields.RuleScope
	return &retval, nil
}

// CreateMaliciousIpRangeRuleResponse is returned by CreateMaliciousIpRangeRule on success.
type CreateMaliciousIpRangeRuleResponse struct {
	CreateIpRangeRule CreateMaliciousIpRangeRuleCreateIpRangeRule `json:"createIpRangeRule"`
}

// GetCreateIpRangeRule returns CreateMaliciousIpRangeRuleResponse.CreateIpRangeRule, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpRangeRuleResponse) GetCreateIpRangeRule() CreateMaliciousIpRangeRuleCreateIpRangeRule {
	return v.CreateIpRangeRule
}

// CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule struct {
	MaliciousIpTypeRuleFields `json:"-"`
}

// GetId returns CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) GetId() string {
	return v.MaliciousIpTypeRuleFields.Id
}

// GetInfo returns CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) GetInfo() MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.MaliciousIpTypeRuleFields.Info
}

// GetScope returns CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule.Scope, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) GetScope() *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.MaliciousIpTypeRuleFields.Scope
}

// GetStatus returns CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule.Status, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) GetStatus() MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.MaliciousIpTypeRuleFields.Status
}

func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpTypeRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateMaliciousIpTypeRuleCreateMaliciousSourcesRule struct {
	Id string `json:"id"`

	Info MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`

	Scope *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`

	Status MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule) __premarshalJSON() (*__premarshalCreateMaliciousIpTypeRuleCreateMaliciousSourcesRule, error) {
	var retval __premarshalCreateMaliciousIpTypeRuleCreateMaliciousSourcesRule

	retval.Id = v.MaliciousIpTypeRuleFields.Id
	retval.Info = v.MaliciousIpTypeRuleFields.Info
	retval.Scope = v.MaliciousIpTypeRuleFields.Scope
	retval.Status = v.MaliciousIpTypeRuleFields.Status
	return &retval, nil
}

// CreateMaliciousIpTypeRuleResponse is returned by CreateMaliciousIpTypeRule on success.
type CreateMaliciousIpTypeRuleResponse struct {
	// Mutation API to create Malicious Sources rule
	CreateMaliciousSourcesRule CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule `json:"createMaliciousSourcesRule"`
}

// GetCreateMaliciousSourcesRule returns CreateMaliciousIpTypeRuleResponse.CreateMaliciousSourcesRule, and is useful for accessing the field via an interface.
func (v *CreateMaliciousIpTypeRuleResponse) GetCreateMaliciousSourcesRule() CreateMaliciousIpTypeRuleCreateMaliciousSourcesRule {
	return v.CreateMaliciousSourcesRule
}

// CreateMaliciousRegionRuleCreateRegionRule includes the requested fields of the GraphQL type RegionRule.
type CreateMaliciousRegionRuleCreateRegionRule struct {
	MaliciousRegionRuleFields `json:"-"`
}

// GetId returns CreateMaliciousRegionRuleCreateRegionRule.Id, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetId() string {
	return v.MaliciousRegionRuleFields.Id
}

// GetName returns CreateMaliciousRegionRuleCreateRegionRule.Name, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetName() string {
	return v.MaliciousRegionRuleFields.Name
}

// GetType returns CreateMaliciousRegionRuleCreateRegionRule.Type, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetType() RegionRuleActionType {
	return v.MaliciousRegionRuleFields.Type
}

// GetDescription returns CreateMaliciousRegionRuleCreateRegionRule.Description, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetDescription() *string {
	return v.MaliciousRegionRuleFields.Description
}

// GetDisabled returns CreateMaliciousRegionRuleCreateRegionRule.Disabled, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetDisabled() bool {
	return v.MaliciousRegionRuleFields.Disabled
}

// GetInternal returns CreateMaliciousRegionRuleCreateRegionRule.Internal, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetInternal() bool {
	return v.MaliciousRegionRuleFields.Internal
}

// GetEventSeverity returns CreateMaliciousRegionRuleCreateRegionRule.EventSeverity, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetEventSeverity() *RegionRuleEventSeverity {
	return v.MaliciousRegionRuleFields.EventSeverity
}

// GetExpiration returns CreateMaliciousRegionRuleCreateRegionRule.Expiration, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetExpiration() *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration {
	return v.MaliciousRegionRuleFields.Expiration
}

// GetRegions returns CreateMaliciousRegionRuleCreateRegionRule.Regions, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetRegions() []*MaliciousRegionRuleFieldsRegionsRegion {
	return v.MaliciousRegionRuleFields.Regions
}

// GetRuleScope returns CreateMaliciousRegionRuleCreateRegionRule.RuleScope, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetRuleScope() *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope {
	return v.MaliciousRegionRuleFields.RuleScope
}

// GetEffects returns CreateMaliciousRegionRuleCreateRegionRule.Effects, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleCreateRegionRule) GetEffects() []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification {
	return v.MaliciousRegionRuleFields.Effects
}

func (v *CreateMaliciousRegionRuleCreateRegionRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateMaliciousRegionRuleCreateRegionRule
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateMaliciousRegionRuleCreateRegionRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousRegionRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateMaliciousRegionRuleCreateRegionRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	Type RegionRuleActionType `json:"type"`

	Description *string `json:"description"`

	Disabled bool `json:"disabled"`

	Internal bool `json:"internal"`

	EventSeverity *RegionRuleEventSeverity `json:"eventSeverity"`

	Expiration *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration `json:"expiration"`

	Regions []*MaliciousRegionRuleFieldsRegionsRegion `json:"regions"`

	RuleScope *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope `json:"ruleScope"`

	Effects []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification `json:"effects"`
}

func (v *CreateMaliciousRegionRuleCreateRegionRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateMaliciousRegionRuleCreateRegionRule) __premarshalJSON() (*__premarshalCreateMaliciousRegionRuleCreateRegionRule, error) {
	var retval __premarshalCreateMaliciousRegionRuleCreateRegionRule

	retval.Id = v.MaliciousRegionRuleFields.Id
	retval.Name = v.MaliciousRegionRuleFields.Name
	retval.Type = v.MaliciousRegionRuleFields.Type
	retval.Description = v.MaliciousRegionRuleFields.Description
	retval.Disabled = v.MaliciousRegionRuleFields.Disabled
	retval.Internal = v.MaliciousRegionRuleFields.Internal
	retval.EventSeverity = v.MaliciousRegionRuleFields.EventSeverity
	retval.Expiration = v.MaliciousRegionRuleFields.Expiration
	retval.Regions = v.MaliciousRegionRuleFields.Regions
	retval.RuleScope = v.MaliciousRegionRuleFields.RuleScope
	retval.Effects = v.MaliciousRegionRuleFields.Effects
	return &retval, nil
}

// CreateMaliciousRegionRuleResponse is returned by CreateMaliciousRegionRule on success.
type CreateMaliciousRegionRuleResponse struct {
	CreateRegionRule CreateMaliciousRegionRuleCreateRegionRule `json:"createRegionRule"`
}

// GetCreateRegionRule returns CreateMaliciousRegionRuleResponse.CreateRegionRule, and is useful for accessing the field via an interface.
func (v *CreateMaliciousRegionRuleResponse) GetCreateRegionRule() CreateMaliciousRegionRuleCreateRegionRule {
	return v.CreateRegionRule
}

// CreateRateLimitingRuleCreateRateLimitingRule includes the requested fields of the GraphQL type RateLimitingRule.
// The GraphQL type's documentation follows.
//
// Custom rule to protect endpoints and other services from brute-force attacks
type CreateRateLimitingRuleCreateRateLimitingRule struct {
	RateLimitingRuleFields `json:"-"`
}

// GetCategory returns CreateRateLimitingRuleCreateRateLimitingRule.Category, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetCategory() RateLimitingRuleCategory {
	return v.RateLimitingRuleFields.Category
}

// GetDescription returns CreateRateLimitingRuleCreateRateLimitingRule.Description, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetDescription() *string {
	return v.RateLimitingRuleFields.Description
}

// GetEnabled returns CreateRateLimitingRuleCreateRateLimitingRule.Enabled, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetEnabled() bool {
	return v.RateLimitingRuleFields.Enabled
}

// GetId returns CreateRateLimitingRuleCreateRateLimitingRule.Id, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetId() string {
	return v.RateLimitingRuleFields.Id
}

// GetName returns CreateRateLimitingRuleCreateRateLimitingRule.Name, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetName() string {
	return v.RateLimitingRuleFields.Name
}

// GetLabels returns CreateRateLimitingRuleCreateRateLimitingRule.Labels, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetLabels() []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel {
	return v.RateLimitingRuleFields.Labels
}

// GetThresholdActionConfigs returns CreateRateLimitingRuleCreateRateLimitingRule.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetThresholdActionConfigs() []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig {
	return v.RateLimitingRuleFields.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns CreateRateLimitingRuleCreateRateLimitingRule.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetTransactionActionConfigs() *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig {
	return v.RateLimitingRuleFields.TransactionActionConfigs
}

// GetRuleConfigScope returns CreateRateLimitingRuleCreateRateLimitingRule.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetRuleConfigScope() *RateLimitingRuleFieldsRuleConfigScope {
	return v.RateLimitingRuleFields.RuleConfigScope
}

// GetRuleStatus returns CreateRateLimitingRuleCreateRateLimitingRule.RuleStatus, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetRuleStatus() *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus {
	return v.RateLimitingRuleFields.RuleStatus
}

// GetConditions returns CreateRateLimitingRuleCreateRateLimitingRule.Conditions, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleCreateRateLimitingRule) GetConditions() []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition {
	return v.RateLimitingRuleFields.Conditions
}

func (v *CreateRateLimitingRuleCreateRateLimitingRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateRateLimitingRuleCreateRateLimitingRule
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateRateLimitingRuleCreateRateLimitingRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.RateLimitingRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateRateLimitingRuleCreateRateLimitingRule struct {
	Category RateLimitingRuleCategory `json:"category"`

	Description *string `json:"description"`

	Enabled bool `json:"enabled"`

	Id string `json:"id"`

	Name string `json:"name"`

	Labels []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel `json:"labels"`

	ThresholdActionConfigs []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`

	TransactionActionConfigs *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`

	RuleConfigScope *RateLimitingRuleFieldsRuleConfigScope `json:"ruleConfigScope"`

	RuleStatus *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus `json:"ruleStatus"`

	Conditions []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition `json:"conditions"`
}

func (v *CreateRateLimitingRuleCreateRateLimitingRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateRateLimitingRuleCreateRateLimitingRule) __premarshalJSON() (*__premarshalCreateRateLimitingRuleCreateRateLimitingRule, error) {
	var retval __premarshalCreateRateLimitingRuleCreateRateLimitingRule

	retval.Category = v.RateLimitingRuleFields.Category
	retval.Description = v.RateLimitingRuleFields.Description
	retval.Enabled = v.RateLimitingRuleFields.Enabled
	retval.Id = v.RateLimitingRuleFields.Id
	retval.Name = v.RateLimitingRuleFields.Name
	retval.Labels = v.RateLimitingRuleFields.Labels
	retval.ThresholdActionConfigs = v.RateLimitingRuleFields.ThresholdActionConfigs
	retval.TransactionActionConfigs = v.RateLimitingRuleFields.TransactionActionConfigs
	retval.RuleConfigScope = v.RateLimitingRuleFields.RuleConfigScope
	retval.RuleStatus = v.RateLimitingRuleFields.RuleStatus
	retval.Conditions = v.RateLimitingRuleFields.Conditions
	return &retval, nil
}

// CreateRateLimitingRuleResponse is returned by CreateRateLimitingRule on success.
type CreateRateLimitingRuleResponse struct {
	CreateRateLimitingRule CreateRateLimitingRuleCreateRateLimitingRule `json:"createRateLimitingRule"`
}

// GetCreateRateLimitingRule returns CreateRateLimitingRuleResponse.CreateRateLimitingRule, and is useful for accessing the field via an interface.
func (v *CreateRateLimitingRuleResponse) GetCreateRateLimitingRule() CreateRateLimitingRuleCreateRateLimitingRule {
	return v.CreateRateLimitingRule
}

type CredentialStuffingAnomalyDetectionConfigName string

const (
	// CREDENTIAL_STUFFING_ANOMALY_CONFIG
	CredentialStuffingAnomalyDetectionConfigNameCredentialStuffingAnomalyConfig CredentialStuffingAnomalyDetectionConfigName = "CREDENTIAL_STUFFING_ANOMALY_CONFIG"
)

var AllCredentialStuffingAnomalyDetectionConfigName = []CredentialStuffingAnomalyDetectionConfigName{
	CredentialStuffingAnomalyDetectionConfigNameCredentialStuffingAnomalyConfig,
}

type CustomRulesAnomalyDetectionConfigName string

const (
	// MALICIOUS_SOURCES
	CustomRulesAnomalyDetectionConfigNameMaliciousSources CustomRulesAnomalyDetectionConfigName = "MALICIOUS_SOURCES"
	// CUSTOM_SIGNATURE
	CustomRulesAnomalyDetectionConfigNameCustomSignature CustomRulesAnomalyDetectionConfigName = "CUSTOM_SIGNATURE"
)

var AllCustomRulesAnomalyDetectionConfigName = []CustomRulesAnomalyDetectionConfigName{
	CustomRulesAnomalyDetectionConfigNameMaliciousSources,
	CustomRulesAnomalyDetectionConfigNameCustomSignature,
}

// CustomSignatureFields includes the GraphQL fields of CustomSignatureRule requested by the fragment CustomSignatureFields.
type CustomSignatureFields struct {
	Id                         string                                                           `json:"id"`
	Name                       string                                                           `json:"name"`
	Description                string                                                           `json:"description"`
	Disabled                   *bool                                                            `json:"disabled"`
	Internal                   *bool                                                            `json:"internal"`
	BlockingExpirationDuration *string                                                          `json:"blockingExpirationDuration"`
	BlockingExpirationTime     *string                                                          `json:"blockingExpirationTime"`
	RuleSource                 *CustomSignatureRuleSource                                       `json:"ruleSource"`
	RuleEffect                 CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect         `json:"ruleEffect"`
	RuleDefinition             CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition `json:"ruleDefinition"`
	RuleScope                  *CustomSignatureFieldsRuleScopeCustomSignatureRuleScope          `json:"ruleScope"`
}

// GetId returns CustomSignatureFields.Id, and is useful for accessing the field via an interface.
func (v *CustomSignatureFields) GetId() string { return v.Id }

// GetName returns CustomSignatureFields.Name, and is useful for accessing the field via an interface.
func (v *CustomSignatureFields) GetName() string { return v.Name }

// GetDescription returns CustomSignatureFields.Description, and is useful for accessing the field via an interface.
func (v *CustomSignatureFields) GetDescription() string { return v.Description }

// GetDisabled returns CustomSignatureFields.Disabled, and is useful for accessing the field via an interface.
func (v *CustomSignatureFields) GetDisabled() *bool { return v.Disabled }

// GetInternal returns CustomSignatureFields.Internal, and is useful for accessing the field via an interface.
func (v *CustomSignatureFields) GetInternal() *bool { return v.Internal }

// GetBlockingExpirationDuration returns CustomSignatureFields.BlockingExpirationDuration, and is useful for accessing the field via an interface.
func (v *CustomSignatureFields) GetBlockingExpirationDuration() *string {
	return v.BlockingExpirationDuration
}

// GetBlockingExpirationTime returns CustomSignatureFields.BlockingExpirationTime, and is useful for accessing the field via an interface.
func (v *CustomSignatureFields) GetBlockingExpirationTime() *string { return v.BlockingExpirationTime }

// GetRuleSource returns CustomSignatureFields.RuleSource, and is useful for accessing the field via an interface.
func (v *CustomSignatureFields) GetRuleSource() *CustomSignatureRuleSource { return v.RuleSource }

// GetRuleEffect returns CustomSignatureFields.RuleEffect, and is useful for accessing the field via an interface.
func (v *CustomSignatureFields) GetRuleEffect() CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect {
	return v.RuleEffect
}

// GetRuleDefinition returns CustomSignatureFields.RuleDefinition, and is useful for accessing the field via an interface.
func (v *CustomSignatureFields) GetRuleDefinition() CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition {
	return v.RuleDefinition
}

// GetRuleScope returns CustomSignatureFields.RuleScope, and is useful for accessing the field via an interface.
func (v *CustomSignatureFields) GetRuleScope() *CustomSignatureFieldsRuleScopeCustomSignatureRuleScope {
	return v.RuleScope
}

// CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition includes the requested fields of the GraphQL type CustomSignatureRuleDefinition.
type CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition struct {
	Labels      []*CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionLabelsCustomSignatureRuleLabel         `json:"labels"`
	ClauseGroup CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroup `json:"clauseGroup"`
}

// GetLabels returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition.Labels, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition) GetLabels() []*CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionLabelsCustomSignatureRuleLabel {
	return v.Labels
}

// GetClauseGroup returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition.ClauseGroup, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition) GetClauseGroup() CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroup {
	return v.ClauseGroup
}

// CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroup includes the requested fields of the GraphQL type CustomSignatureRuleClauseGroup.
type CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroup struct {
	ClauseOperator CustomSignatureRuleClauseOperator                                                                                                                   `json:"clauseOperator"`
	Clauses        []*CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest `json:"clauses"`
}

// GetClauseOperator returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroup.ClauseOperator, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroup) GetClauseOperator() CustomSignatureRuleClauseOperator {
	return v.ClauseOperator
}

// GetClauses returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroup.Clauses, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroup) GetClauses() []*CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest {
	return v.Clauses
}

// CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest includes the requested fields of the GraphQL type CustomSignatureRuleClauseRequest.
type CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest struct {
	ClauseType                  CustomSignatureRuleClauseType                                                                                                                                                                                              `json:"clauseType"`
	MatchExpression             *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression                         `json:"matchExpression"`
	KeyValueExpression          *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression                   `json:"keyValueExpression"`
	AttributeKeyValueExpression *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpression `json:"attributeKeyValueExpression"`
	// Custom sec rule
	CustomSecRule *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestCustomSecRuleCustomSignatureSecRule `json:"customSecRule"`
}

// GetClauseType returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest.ClauseType, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest) GetClauseType() CustomSignatureRuleClauseType {
	return v.ClauseType
}

// GetMatchExpression returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest.MatchExpression, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest) GetMatchExpression() *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression {
	return v.MatchExpression
}

// GetKeyValueExpression returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest.KeyValueExpression, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest) GetKeyValueExpression() *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression {
	return v.KeyValueExpression
}

// GetAttributeKeyValueExpression returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest.AttributeKeyValueExpression, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest) GetAttributeKeyValueExpression() *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpression {
	return v.AttributeKeyValueExpression
}

// GetCustomSecRule returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest.CustomSecRule, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequest) GetCustomSecRule() *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestCustomSecRuleCustomSignatureSecRule {
	return v.CustomSecRule
}

// CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpression includes the requested fields of the GraphQL type CustomSignatureRuleAttributeKeyValueExpression.
type CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpression struct {
	// Key condition
	KeyCondition *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionKeyConditionCustomSignatureStringMatchCondition `json:"keyCondition"`
	// Value condition
	ValueCondition *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionValueConditionCustomSignatureStringMatchCondition `json:"valueCondition"`
}

// GetKeyCondition returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpression.KeyCondition, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpression) GetKeyCondition() *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionKeyConditionCustomSignatureStringMatchCondition {
	return v.KeyCondition
}

// GetValueCondition returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpression.ValueCondition, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpression) GetValueCondition() *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionValueConditionCustomSignatureStringMatchCondition {
	return v.ValueCondition
}

// CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionKeyConditionCustomSignatureStringMatchCondition includes the requested fields of the GraphQL type CustomSignatureStringMatchCondition.
type CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionKeyConditionCustomSignatureStringMatchCondition struct {
	// Key match operator
	Operator CustomSignatureRuleMatchOperator `json:"operator"`
	// Match key
	Value string `json:"value"`
}

// GetOperator returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionKeyConditionCustomSignatureStringMatchCondition.Operator, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionKeyConditionCustomSignatureStringMatchCondition) GetOperator() CustomSignatureRuleMatchOperator {
	return v.Operator
}

// GetValue returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionKeyConditionCustomSignatureStringMatchCondition.Value, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionKeyConditionCustomSignatureStringMatchCondition) GetValue() string {
	return v.Value
}

// CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionValueConditionCustomSignatureStringMatchCondition includes the requested fields of the GraphQL type CustomSignatureStringMatchCondition.
type CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionValueConditionCustomSignatureStringMatchCondition struct {
	// Key match operator
	Operator CustomSignatureRuleMatchOperator `json:"operator"`
	// Match key
	Value string `json:"value"`
}

// GetOperator returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionValueConditionCustomSignatureStringMatchCondition.Operator, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionValueConditionCustomSignatureStringMatchCondition) GetOperator() CustomSignatureRuleMatchOperator {
	return v.Operator
}

// GetValue returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionValueConditionCustomSignatureStringMatchCondition.Value, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestAttributeKeyValueExpressionCustomSignatureRuleAttributeKeyValueExpressionValueConditionCustomSignatureStringMatchCondition) GetValue() string {
	return v.Value
}

// CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestCustomSecRuleCustomSignatureSecRule includes the requested fields of the GraphQL type CustomSignatureSecRule.
type CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestCustomSecRuleCustomSignatureSecRule struct {
	// Input sec rule string
	InputSecRuleString *string `json:"inputSecRuleString"`
}

// GetInputSecRuleString returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestCustomSecRuleCustomSignatureSecRule.InputSecRuleString, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestCustomSecRuleCustomSignatureSecRule) GetInputSecRuleString() *string {
	return v.InputSecRuleString
}

// CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression includes the requested fields of the GraphQL type CustomSignatureRuleKeyValueExpression.
type CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression struct {
	KeyValueTag        CustomSignatureRuleKeyValueTag    `json:"keyValueTag"`
	MatchKey           string                            `json:"matchKey"`
	MatchValue         string                            `json:"matchValue"`
	KeyMatchOperator   CustomSignatureRuleMatchOperator  `json:"keyMatchOperator"`
	ValueMatchOperator CustomSignatureRuleMatchOperator  `json:"valueMatchOperator"`
	MatchCategory      *CustomSignatureRuleMatchCategory `json:"matchCategory"`
}

// GetKeyValueTag returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression.KeyValueTag, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression) GetKeyValueTag() CustomSignatureRuleKeyValueTag {
	return v.KeyValueTag
}

// GetMatchKey returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression.MatchKey, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression) GetMatchKey() string {
	return v.MatchKey
}

// GetMatchValue returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression.MatchValue, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression) GetMatchValue() string {
	return v.MatchValue
}

// GetKeyMatchOperator returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression.KeyMatchOperator, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression) GetKeyMatchOperator() CustomSignatureRuleMatchOperator {
	return v.KeyMatchOperator
}

// GetValueMatchOperator returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression.ValueMatchOperator, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression) GetValueMatchOperator() CustomSignatureRuleMatchOperator {
	return v.ValueMatchOperator
}

// GetMatchCategory returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression.MatchCategory, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestKeyValueExpressionCustomSignatureRuleKeyValueExpression) GetMatchCategory() *CustomSignatureRuleMatchCategory {
	return v.MatchCategory
}

// CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression includes the requested fields of the GraphQL type CustomSignatureRuleMatchExpression.
type CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression struct {
	MatchKey      CustomSignatureRuleMatchKey       `json:"matchKey"`
	MatchOperator CustomSignatureRuleMatchOperator  `json:"matchOperator"`
	MatchValue    *string                           `json:"matchValue"`
	MatchCategory *CustomSignatureRuleMatchCategory `json:"matchCategory"`
}

// GetMatchKey returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression.MatchKey, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression) GetMatchKey() CustomSignatureRuleMatchKey {
	return v.MatchKey
}

// GetMatchOperator returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression.MatchOperator, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression) GetMatchOperator() CustomSignatureRuleMatchOperator {
	return v.MatchOperator
}

// GetMatchValue returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression.MatchValue, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression) GetMatchValue() *string {
	return v.MatchValue
}

// GetMatchCategory returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression.MatchCategory, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionClauseGroupCustomSignatureRuleClauseGroupClausesCustomSignatureRuleClauseRequestMatchExpressionCustomSignatureRuleMatchExpression) GetMatchCategory() *CustomSignatureRuleMatchCategory {
	return v.MatchCategory
}

// CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionLabelsCustomSignatureRuleLabel includes the requested fields of the GraphQL type CustomSignatureRuleLabel.
type CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionLabelsCustomSignatureRuleLabel struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetKey returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionLabelsCustomSignatureRuleLabel.Key, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionLabelsCustomSignatureRuleLabel) GetKey() string {
	return v.Key
}

// GetValue returns CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionLabelsCustomSignatureRuleLabel.Value, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinitionLabelsCustomSignatureRuleLabel) GetValue() string {
	return v.Value
}

// CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect includes the requested fields of the GraphQL type CustomSignatureRuleEffect.
type CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect struct {
	EventType     CustomSignatureRuleEventType                                                                                `json:"eventType"`
	EventSeverity *CustomSignatureRuleEventSeverity                                                                           `json:"eventSeverity"`
	Effects       []*CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModification `json:"effects"`
}

// GetEventType returns CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect.EventType, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect) GetEventType() CustomSignatureRuleEventType {
	return v.EventType
}

// GetEventSeverity returns CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect.EventSeverity, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect) GetEventSeverity() *CustomSignatureRuleEventSeverity {
	return v.EventSeverity
}

// GetEffects returns CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect.Effects, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect) GetEffects() []*CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModification {
	return v.Effects
}

// CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModification includes the requested fields of the GraphQL type CustomSignatureRuleEffectWithModification.
type CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModification struct {
	RuleEffectType CustomSignatureRuleEffectModificationType `json:"ruleEffectType"`
	// Effects enforced for agent while inline processing of requests
	AgentEffect CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffect `json:"agentEffect"`
}

// GetRuleEffectType returns CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModification) GetRuleEffectType() CustomSignatureRuleEffectModificationType {
	return v.RuleEffectType
}

// GetAgentEffect returns CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModification) GetAgentEffect() CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffect {
	return v.AgentEffect
}

// CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffect includes the requested fields of the GraphQL type CustomSignatureRuleAgentEffect.
type CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffect struct {
	AgentModifications []*CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffect) GetAgentModifications() []*CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModification {
	return v.AgentModifications
}

// CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModification includes the requested fields of the GraphQL type CustomSignatureRuleAgentModification.
type CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModification struct {
	AgentModificationType CustomSignatureRuleAgentModificationType                                                                                                                                                                                                                 `json:"agentModificationType"`
	HeaderInjection       CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModificationHeaderInjectionCustomSignatureRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModification) GetAgentModificationType() CustomSignatureRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModification) GetHeaderInjection() CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModificationHeaderInjectionCustomSignatureRuleHeaderInjection {
	return v.HeaderInjection
}

// CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModificationHeaderInjectionCustomSignatureRuleHeaderInjection includes the requested fields of the GraphQL type CustomSignatureRuleHeaderInjection.
type CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModificationHeaderInjectionCustomSignatureRuleHeaderInjection struct {
	Key            string                           `json:"key"`
	Value          string                           `json:"value"`
	HeaderCategory CustomSignatureRuleMatchCategory `json:"headerCategory"`
}

// GetKey returns CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModificationHeaderInjectionCustomSignatureRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModificationHeaderInjectionCustomSignatureRuleHeaderInjection) GetKey() string {
	return v.Key
}

// GetValue returns CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModificationHeaderInjectionCustomSignatureRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModificationHeaderInjectionCustomSignatureRuleHeaderInjection) GetValue() string {
	return v.Value
}

// GetHeaderCategory returns CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModificationHeaderInjectionCustomSignatureRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleEffectCustomSignatureRuleEffectEffectsCustomSignatureRuleEffectWithModificationAgentEffectCustomSignatureRuleAgentEffectAgentModificationsCustomSignatureRuleAgentModificationHeaderInjectionCustomSignatureRuleHeaderInjection) GetHeaderCategory() CustomSignatureRuleMatchCategory {
	return v.HeaderCategory
}

// CustomSignatureFieldsRuleScopeCustomSignatureRuleScope includes the requested fields of the GraphQL type CustomSignatureRuleScope.
type CustomSignatureFieldsRuleScopeCustomSignatureRuleScope struct {
	EnvironmentScope *CustomSignatureFieldsRuleScopeCustomSignatureRuleScopeEnvironmentScopeCustomSignatureEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns CustomSignatureFieldsRuleScopeCustomSignatureRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleScopeCustomSignatureRuleScope) GetEnvironmentScope() *CustomSignatureFieldsRuleScopeCustomSignatureRuleScopeEnvironmentScopeCustomSignatureEnvironmentScope {
	return v.EnvironmentScope
}

// CustomSignatureFieldsRuleScopeCustomSignatureRuleScopeEnvironmentScopeCustomSignatureEnvironmentScope includes the requested fields of the GraphQL type CustomSignatureEnvironmentScope.
type CustomSignatureFieldsRuleScopeCustomSignatureRuleScopeEnvironmentScopeCustomSignatureEnvironmentScope struct {
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns CustomSignatureFieldsRuleScopeCustomSignatureRuleScopeEnvironmentScopeCustomSignatureEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *CustomSignatureFieldsRuleScopeCustomSignatureRuleScopeEnvironmentScopeCustomSignatureEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

type CustomSignatureRuleAgentModificationType string

const (
	// Add a header with inline processing of request on matching conditions
	CustomSignatureRuleAgentModificationTypeHeaderInjection CustomSignatureRuleAgentModificationType = "HEADER_INJECTION"
)

var AllCustomSignatureRuleAgentModificationType = []CustomSignatureRuleAgentModificationType{
	CustomSignatureRuleAgentModificationTypeHeaderInjection,
}

type CustomSignatureRuleClauseOperator string

const (
	// AND
	CustomSignatureRuleClauseOperatorAnd CustomSignatureRuleClauseOperator = "AND"
	// OR
	CustomSignatureRuleClauseOperatorOr CustomSignatureRuleClauseOperator = "OR"
)

var AllCustomSignatureRuleClauseOperator = []CustomSignatureRuleClauseOperator{
	CustomSignatureRuleClauseOperatorAnd,
	CustomSignatureRuleClauseOperatorOr,
}

type CustomSignatureRuleClauseType string

const (
	// MATCH_EXPRESSION
	CustomSignatureRuleClauseTypeMatchExpression CustomSignatureRuleClauseType = "MATCH_EXPRESSION"
	// KEY_VALUE_EXPRESSION
	CustomSignatureRuleClauseTypeKeyValueExpression CustomSignatureRuleClauseType = "KEY_VALUE_EXPRESSION"
	// ATTRIBUTE_KEY_VALUE_EXPRESSION
	CustomSignatureRuleClauseTypeAttributeKeyValueExpression CustomSignatureRuleClauseType = "ATTRIBUTE_KEY_VALUE_EXPRESSION"
	// CUSTOM_SEC_RULE
	CustomSignatureRuleClauseTypeCustomSecRule CustomSignatureRuleClauseType = "CUSTOM_SEC_RULE"
	// IP_ADDRESS_EXPRESSION
	CustomSignatureRuleClauseTypeIpAddressExpression CustomSignatureRuleClauseType = "IP_ADDRESS_EXPRESSION"
	// IP_TYPE_EXPRESSION
	CustomSignatureRuleClauseTypeIpTypeExpression CustomSignatureRuleClauseType = "IP_TYPE_EXPRESSION"
	// IP_REPUTATION_EXPRESSION
	CustomSignatureRuleClauseTypeIpReputationExpression CustomSignatureRuleClauseType = "IP_REPUTATION_EXPRESSION"
	// IP_CONNECTION_TYPE_EXPRESSION
	CustomSignatureRuleClauseTypeIpConnectionTypeExpression CustomSignatureRuleClauseType = "IP_CONNECTION_TYPE_EXPRESSION"
	// IP_ORGANISATION_EXPRESSION
	CustomSignatureRuleClauseTypeIpOrganisationExpression CustomSignatureRuleClauseType = "IP_ORGANISATION_EXPRESSION"
	// IP_ASN_EXPRESSION
	CustomSignatureRuleClauseTypeIpAsnExpression CustomSignatureRuleClauseType = "IP_ASN_EXPRESSION"
	// IP_ABUSE_VELOCITY_EXPRESSION
	CustomSignatureRuleClauseTypeIpAbuseVelocityExpression CustomSignatureRuleClauseType = "IP_ABUSE_VELOCITY_EXPRESSION"
	// REGION_EXPRESSION
	CustomSignatureRuleClauseTypeRegionExpression CustomSignatureRuleClauseType = "REGION_EXPRESSION"
	// USER_ID_EXPRESSION
	CustomSignatureRuleClauseTypeUserIdExpression CustomSignatureRuleClauseType = "USER_ID_EXPRESSION"
	// EMAIL_DOMAIN_EXPRESSION
	CustomSignatureRuleClauseTypeEmailDomainExpression CustomSignatureRuleClauseType = "EMAIL_DOMAIN_EXPRESSION"
	// USER_AGENT_EXPRESSION
	CustomSignatureRuleClauseTypeUserAgentExpression CustomSignatureRuleClauseType = "USER_AGENT_EXPRESSION"
	// REQUEST_SCANNER_TYPE_EXPRESSION
	CustomSignatureRuleClauseTypeRequestScannerTypeExpression CustomSignatureRuleClauseType = "REQUEST_SCANNER_TYPE_EXPRESSION"
	// SCOPE_EXPRESSION
	CustomSignatureRuleClauseTypeScopeExpression CustomSignatureRuleClauseType = "SCOPE_EXPRESSION"
	// CLAUSE_GROUP
	CustomSignatureRuleClauseTypeClauseGroup CustomSignatureRuleClauseType = "CLAUSE_GROUP"
	// LHS_RHS_KEYS_EXPRESSION
	CustomSignatureRuleClauseTypeLhsRhsKeysExpression CustomSignatureRuleClauseType = "LHS_RHS_KEYS_EXPRESSION"
)

var AllCustomSignatureRuleClauseType = []CustomSignatureRuleClauseType{
	CustomSignatureRuleClauseTypeMatchExpression,
	CustomSignatureRuleClauseTypeKeyValueExpression,
	CustomSignatureRuleClauseTypeAttributeKeyValueExpression,
	CustomSignatureRuleClauseTypeCustomSecRule,
	CustomSignatureRuleClauseTypeIpAddressExpression,
	CustomSignatureRuleClauseTypeIpTypeExpression,
	CustomSignatureRuleClauseTypeIpReputationExpression,
	CustomSignatureRuleClauseTypeIpConnectionTypeExpression,
	CustomSignatureRuleClauseTypeIpOrganisationExpression,
	CustomSignatureRuleClauseTypeIpAsnExpression,
	CustomSignatureRuleClauseTypeIpAbuseVelocityExpression,
	CustomSignatureRuleClauseTypeRegionExpression,
	CustomSignatureRuleClauseTypeUserIdExpression,
	CustomSignatureRuleClauseTypeEmailDomainExpression,
	CustomSignatureRuleClauseTypeUserAgentExpression,
	CustomSignatureRuleClauseTypeRequestScannerTypeExpression,
	CustomSignatureRuleClauseTypeScopeExpression,
	CustomSignatureRuleClauseTypeClauseGroup,
	CustomSignatureRuleClauseTypeLhsRhsKeysExpression,
}

type CustomSignatureRuleEffectModificationType string

const (
	// Modifications to be done on agent
	CustomSignatureRuleEffectModificationTypeAgentEffect CustomSignatureRuleEffectModificationType = "AGENT_EFFECT"
)

var AllCustomSignatureRuleEffectModificationType = []CustomSignatureRuleEffectModificationType{
	CustomSignatureRuleEffectModificationTypeAgentEffect,
}

type CustomSignatureRuleEntityType string

const (
	// API
	CustomSignatureRuleEntityTypeApi CustomSignatureRuleEntityType = "API"
	// SERVICE
	CustomSignatureRuleEntityTypeService CustomSignatureRuleEntityType = "SERVICE"
)

var AllCustomSignatureRuleEntityType = []CustomSignatureRuleEntityType{
	CustomSignatureRuleEntityTypeApi,
	CustomSignatureRuleEntityTypeService,
}

type CustomSignatureRuleEvaluationPoint string

const (
	// EDGE
	CustomSignatureRuleEvaluationPointEdge CustomSignatureRuleEvaluationPoint = "EDGE"
	// INLINE_TRACING_AGENT
	CustomSignatureRuleEvaluationPointInlineTracingAgent CustomSignatureRuleEvaluationPoint = "INLINE_TRACING_AGENT"
	// PLATFORM
	CustomSignatureRuleEvaluationPointPlatform CustomSignatureRuleEvaluationPoint = "PLATFORM"
)

var AllCustomSignatureRuleEvaluationPoint = []CustomSignatureRuleEvaluationPoint{
	CustomSignatureRuleEvaluationPointEdge,
	CustomSignatureRuleEvaluationPointInlineTracingAgent,
	CustomSignatureRuleEvaluationPointPlatform,
}

type CustomSignatureRuleEventSeverity string

const (
	// LOW
	CustomSignatureRuleEventSeverityLow CustomSignatureRuleEventSeverity = "LOW"
	// MEDIUM
	CustomSignatureRuleEventSeverityMedium CustomSignatureRuleEventSeverity = "MEDIUM"
	// HIGH
	CustomSignatureRuleEventSeverityHigh CustomSignatureRuleEventSeverity = "HIGH"
	// CRITICAL
	CustomSignatureRuleEventSeverityCritical CustomSignatureRuleEventSeverity = "CRITICAL"
)

var AllCustomSignatureRuleEventSeverity = []CustomSignatureRuleEventSeverity{
	CustomSignatureRuleEventSeverityLow,
	CustomSignatureRuleEventSeverityMedium,
	CustomSignatureRuleEventSeverityHigh,
	CustomSignatureRuleEventSeverityCritical,
}

type CustomSignatureRuleEventType string

const (
	// Mark for Testing and Generate Events
	CustomSignatureRuleEventTypeTestingDetection CustomSignatureRuleEventType = "TESTING_DETECTION"
	// Generate Events
	CustomSignatureRuleEventTypeNormalDetection CustomSignatureRuleEventType = "NORMAL_DETECTION"
	// Block Requests and Generate Events
	CustomSignatureRuleEventTypeDetectionAndBlocking CustomSignatureRuleEventType = "DETECTION_AND_BLOCKING"
	// Allow Requests
	CustomSignatureRuleEventTypeAllow CustomSignatureRuleEventType = "ALLOW"
)

var AllCustomSignatureRuleEventType = []CustomSignatureRuleEventType{
	CustomSignatureRuleEventTypeTestingDetection,
	CustomSignatureRuleEventTypeNormalDetection,
	CustomSignatureRuleEventTypeDetectionAndBlocking,
	CustomSignatureRuleEventTypeAllow,
}

type CustomSignatureRuleIpAbuseVelocity string

const (
	// LOW
	CustomSignatureRuleIpAbuseVelocityLow CustomSignatureRuleIpAbuseVelocity = "LOW"
	// MEDIUM
	CustomSignatureRuleIpAbuseVelocityMedium CustomSignatureRuleIpAbuseVelocity = "MEDIUM"
	// HIGH
	CustomSignatureRuleIpAbuseVelocityHigh CustomSignatureRuleIpAbuseVelocity = "HIGH"
)

var AllCustomSignatureRuleIpAbuseVelocity = []CustomSignatureRuleIpAbuseVelocity{
	CustomSignatureRuleIpAbuseVelocityLow,
	CustomSignatureRuleIpAbuseVelocityMedium,
	CustomSignatureRuleIpAbuseVelocityHigh,
}

type CustomSignatureRuleIpAddressExpressionType string

const (
	// ALL_INTERNAL
	CustomSignatureRuleIpAddressExpressionTypeAllInternal CustomSignatureRuleIpAddressExpressionType = "ALL_INTERNAL"
	// ALL_EXTERNAL
	CustomSignatureRuleIpAddressExpressionTypeAllExternal CustomSignatureRuleIpAddressExpressionType = "ALL_EXTERNAL"
)

var AllCustomSignatureRuleIpAddressExpressionType = []CustomSignatureRuleIpAddressExpressionType{
	CustomSignatureRuleIpAddressExpressionTypeAllInternal,
	CustomSignatureRuleIpAddressExpressionTypeAllExternal,
}

type CustomSignatureRuleIpConnectionType string

const (
	// RESIDENTIAL
	CustomSignatureRuleIpConnectionTypeResidential CustomSignatureRuleIpConnectionType = "RESIDENTIAL"
	// MOBILE
	CustomSignatureRuleIpConnectionTypeMobile CustomSignatureRuleIpConnectionType = "MOBILE"
	// CORPORATE
	CustomSignatureRuleIpConnectionTypeCorporate CustomSignatureRuleIpConnectionType = "CORPORATE"
	// DATA_CENTER
	CustomSignatureRuleIpConnectionTypeDataCenter CustomSignatureRuleIpConnectionType = "DATA_CENTER"
	// EDUCATION
	CustomSignatureRuleIpConnectionTypeEducation CustomSignatureRuleIpConnectionType = "EDUCATION"
)

var AllCustomSignatureRuleIpConnectionType = []CustomSignatureRuleIpConnectionType{
	CustomSignatureRuleIpConnectionTypeResidential,
	CustomSignatureRuleIpConnectionTypeMobile,
	CustomSignatureRuleIpConnectionTypeCorporate,
	CustomSignatureRuleIpConnectionTypeDataCenter,
	CustomSignatureRuleIpConnectionTypeEducation,
}

type CustomSignatureRuleIpReputationSeverity string

const (
	// LOW
	CustomSignatureRuleIpReputationSeverityLow CustomSignatureRuleIpReputationSeverity = "LOW"
	// MEDIUM
	CustomSignatureRuleIpReputationSeverityMedium CustomSignatureRuleIpReputationSeverity = "MEDIUM"
	// HIGH
	CustomSignatureRuleIpReputationSeverityHigh CustomSignatureRuleIpReputationSeverity = "HIGH"
	// CRITICAL
	CustomSignatureRuleIpReputationSeverityCritical CustomSignatureRuleIpReputationSeverity = "CRITICAL"
)

var AllCustomSignatureRuleIpReputationSeverity = []CustomSignatureRuleIpReputationSeverity{
	CustomSignatureRuleIpReputationSeverityLow,
	CustomSignatureRuleIpReputationSeverityMedium,
	CustomSignatureRuleIpReputationSeverityHigh,
	CustomSignatureRuleIpReputationSeverityCritical,
}

type CustomSignatureRuleIpType string

const (
	// ANONYMOUS_VPN
	CustomSignatureRuleIpTypeAnonymousVpn CustomSignatureRuleIpType = "ANONYMOUS_VPN"
	// HOSTING_PROVIDER
	CustomSignatureRuleIpTypeHostingProvider CustomSignatureRuleIpType = "HOSTING_PROVIDER"
	// PUBLIC_PROXY
	CustomSignatureRuleIpTypePublicProxy CustomSignatureRuleIpType = "PUBLIC_PROXY"
	// TOR_EXIT_NODE
	CustomSignatureRuleIpTypeTorExitNode CustomSignatureRuleIpType = "TOR_EXIT_NODE"
	// BOT
	CustomSignatureRuleIpTypeBot CustomSignatureRuleIpType = "BOT"
	// SCANNER
	CustomSignatureRuleIpTypeScanner CustomSignatureRuleIpType = "SCANNER"
)

var AllCustomSignatureRuleIpType = []CustomSignatureRuleIpType{
	CustomSignatureRuleIpTypeAnonymousVpn,
	CustomSignatureRuleIpTypeHostingProvider,
	CustomSignatureRuleIpTypePublicProxy,
	CustomSignatureRuleIpTypeTorExitNode,
	CustomSignatureRuleIpTypeBot,
	CustomSignatureRuleIpTypeScanner,
}

type CustomSignatureRuleKeyValueTag string

const (
	// HEADER
	CustomSignatureRuleKeyValueTagHeader CustomSignatureRuleKeyValueTag = "HEADER"
	// PARAMETER
	CustomSignatureRuleKeyValueTagParameter CustomSignatureRuleKeyValueTag = "PARAMETER"
	// COOKIE
	CustomSignatureRuleKeyValueTagCookie CustomSignatureRuleKeyValueTag = "COOKIE"
)

var AllCustomSignatureRuleKeyValueTag = []CustomSignatureRuleKeyValueTag{
	CustomSignatureRuleKeyValueTagHeader,
	CustomSignatureRuleKeyValueTagParameter,
	CustomSignatureRuleKeyValueTagCookie,
}

type CustomSignatureRuleLabelType string

const (
	// API
	CustomSignatureRuleLabelTypeApi CustomSignatureRuleLabelType = "API"
	// SERVICE
	CustomSignatureRuleLabelTypeService CustomSignatureRuleLabelType = "SERVICE"
)

var AllCustomSignatureRuleLabelType = []CustomSignatureRuleLabelType{
	CustomSignatureRuleLabelTypeApi,
	CustomSignatureRuleLabelTypeService,
}

type CustomSignatureRuleMatchCategory string

const (
	// REQUEST
	CustomSignatureRuleMatchCategoryRequest CustomSignatureRuleMatchCategory = "REQUEST"
	// RESPONSE
	CustomSignatureRuleMatchCategoryResponse CustomSignatureRuleMatchCategory = "RESPONSE"
)

var AllCustomSignatureRuleMatchCategory = []CustomSignatureRuleMatchCategory{
	CustomSignatureRuleMatchCategoryRequest,
	CustomSignatureRuleMatchCategoryResponse,
}

type CustomSignatureRuleMatchKey string

const (
	// URL
	CustomSignatureRuleMatchKeyUrl CustomSignatureRuleMatchKey = "URL"
	// HEADER_NAME
	CustomSignatureRuleMatchKeyHeaderName CustomSignatureRuleMatchKey = "HEADER_NAME"
	// HEADER_VALUE
	CustomSignatureRuleMatchKeyHeaderValue CustomSignatureRuleMatchKey = "HEADER_VALUE"
	// PARAMETER_NAME
	CustomSignatureRuleMatchKeyParameterName CustomSignatureRuleMatchKey = "PARAMETER_NAME"
	// PARAMETER_VALUE
	CustomSignatureRuleMatchKeyParameterValue CustomSignatureRuleMatchKey = "PARAMETER_VALUE"
	// HTTP_METHOD
	CustomSignatureRuleMatchKeyHttpMethod CustomSignatureRuleMatchKey = "HTTP_METHOD"
	// HOST
	CustomSignatureRuleMatchKeyHost CustomSignatureRuleMatchKey = "HOST"
	// USER_AGENT
	CustomSignatureRuleMatchKeyUserAgent CustomSignatureRuleMatchKey = "USER_AGENT"
	// STATUS_CODE
	CustomSignatureRuleMatchKeyStatusCode CustomSignatureRuleMatchKey = "STATUS_CODE"
	// BODY
	CustomSignatureRuleMatchKeyBody CustomSignatureRuleMatchKey = "BODY"
	// BODY_SIZE
	CustomSignatureRuleMatchKeyBodySize CustomSignatureRuleMatchKey = "BODY_SIZE"
	// COOKIE_NAME
	CustomSignatureRuleMatchKeyCookieName CustomSignatureRuleMatchKey = "COOKIE_NAME"
	// COOKIE_VALUE
	CustomSignatureRuleMatchKeyCookieValue CustomSignatureRuleMatchKey = "COOKIE_VALUE"
	// QUERY_PARAMS_COUNT
	CustomSignatureRuleMatchKeyQueryParamsCount CustomSignatureRuleMatchKey = "QUERY_PARAMS_COUNT"
	// HEADERS_COUNT
	CustomSignatureRuleMatchKeyHeadersCount CustomSignatureRuleMatchKey = "HEADERS_COUNT"
	// COOKIES_COUNT
	CustomSignatureRuleMatchKeyCookiesCount CustomSignatureRuleMatchKey = "COOKIES_COUNT"
)

var AllCustomSignatureRuleMatchKey = []CustomSignatureRuleMatchKey{
	CustomSignatureRuleMatchKeyUrl,
	CustomSignatureRuleMatchKeyHeaderName,
	CustomSignatureRuleMatchKeyHeaderValue,
	CustomSignatureRuleMatchKeyParameterName,
	CustomSignatureRuleMatchKeyParameterValue,
	CustomSignatureRuleMatchKeyHttpMethod,
	CustomSignatureRuleMatchKeyHost,
	CustomSignatureRuleMatchKeyUserAgent,
	CustomSignatureRuleMatchKeyStatusCode,
	CustomSignatureRuleMatchKeyBody,
	CustomSignatureRuleMatchKeyBodySize,
	CustomSignatureRuleMatchKeyCookieName,
	CustomSignatureRuleMatchKeyCookieValue,
	CustomSignatureRuleMatchKeyQueryParamsCount,
	CustomSignatureRuleMatchKeyHeadersCount,
	CustomSignatureRuleMatchKeyCookiesCount,
}

type CustomSignatureRuleMatchOperator string

const (
	// EQUALS
	CustomSignatureRuleMatchOperatorEquals CustomSignatureRuleMatchOperator = "EQUALS"
	// NOT_EQUAL
	CustomSignatureRuleMatchOperatorNotEqual CustomSignatureRuleMatchOperator = "NOT_EQUAL"
	// CONTAINS
	CustomSignatureRuleMatchOperatorContains CustomSignatureRuleMatchOperator = "CONTAINS"
	// NOT_CONTAIN
	CustomSignatureRuleMatchOperatorNotContain CustomSignatureRuleMatchOperator = "NOT_CONTAIN"
	// MATCHES_REGEX
	CustomSignatureRuleMatchOperatorMatchesRegex CustomSignatureRuleMatchOperator = "MATCHES_REGEX"
	// NOT_MATCH_REGEX
	CustomSignatureRuleMatchOperatorNotMatchRegex CustomSignatureRuleMatchOperator = "NOT_MATCH_REGEX"
	// GREATER_THAN
	CustomSignatureRuleMatchOperatorGreaterThan CustomSignatureRuleMatchOperator = "GREATER_THAN"
	// LESS_THAN
	CustomSignatureRuleMatchOperatorLessThan CustomSignatureRuleMatchOperator = "LESS_THAN"
)

var AllCustomSignatureRuleMatchOperator = []CustomSignatureRuleMatchOperator{
	CustomSignatureRuleMatchOperatorEquals,
	CustomSignatureRuleMatchOperatorNotEqual,
	CustomSignatureRuleMatchOperatorContains,
	CustomSignatureRuleMatchOperatorNotContain,
	CustomSignatureRuleMatchOperatorMatchesRegex,
	CustomSignatureRuleMatchOperatorNotMatchRegex,
	CustomSignatureRuleMatchOperatorGreaterThan,
	CustomSignatureRuleMatchOperatorLessThan,
}

// The source of the rule, or who created the rule
type CustomSignatureRuleSource string

const (
	// Rule created by the customer
	CustomSignatureRuleSourceCustomer CustomSignatureRuleSource = "CUSTOMER"
	// Rule created by a Traceable user
	CustomSignatureRuleSourceTraceable CustomSignatureRuleSource = "TRACEABLE"
	// Rule created by the Traceable system
	CustomSignatureRuleSourceSystem CustomSignatureRuleSource = "SYSTEM"
)

var AllCustomSignatureRuleSource = []CustomSignatureRuleSource{
	CustomSignatureRuleSourceCustomer,
	CustomSignatureRuleSourceTraceable,
	CustomSignatureRuleSourceSystem,
}

type DataSensitivity string

const (
	// LOW
	DataSensitivityLow DataSensitivity = "LOW"
	// MEDIUM
	DataSensitivityMedium DataSensitivity = "MEDIUM"
	// HIGH
	DataSensitivityHigh DataSensitivity = "HIGH"
	// CRITICAL
	DataSensitivityCritical DataSensitivity = "CRITICAL"
)

var AllDataSensitivity = []DataSensitivity{
	DataSensitivityLow,
	DataSensitivityMedium,
	DataSensitivityHigh,
	DataSensitivityCritical,
}

// DataSetsDataSetsDataSetResultSet includes the requested fields of the GraphQL type DataSetResultSet.
type DataSetsDataSetsDataSetResultSet struct {
	Count   int64                                             `json:"count"`
	Results []*DataSetsDataSetsDataSetResultSetResultsDataSet `json:"results"`
	Total   int64                                             `json:"total"`
}

// GetCount returns DataSetsDataSetsDataSetResultSet.Count, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSet) GetCount() int64 { return v.Count }

// GetResults returns DataSetsDataSetsDataSetResultSet.Results, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSet) GetResults() []*DataSetsDataSetsDataSetResultSetResultsDataSet {
	return v.Results
}

// GetTotal returns DataSetsDataSetsDataSetResultSet.Total, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSet) GetTotal() int64 { return v.Total }

// DataSetsDataSetsDataSetResultSetResultsDataSet includes the requested fields of the GraphQL type DataSet.
type DataSetsDataSetsDataSetResultSetResultsDataSet struct {
	Id          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	// An icon used to represent this Dataset visually
	IconType *string `json:"iconType"`
}

// GetId returns DataSetsDataSetsDataSetResultSetResultsDataSet.Id, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSetResultsDataSet) GetId() string { return v.Id }

// GetName returns DataSetsDataSetsDataSetResultSetResultsDataSet.Name, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSetResultsDataSet) GetName() string { return v.Name }

// GetDescription returns DataSetsDataSetsDataSetResultSetResultsDataSet.Description, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSetResultsDataSet) GetDescription() *string {
	return v.Description
}

// GetIconType returns DataSetsDataSetsDataSetResultSetResultsDataSet.IconType, and is useful for accessing the field via an interface.
func (v *DataSetsDataSetsDataSetResultSetResultsDataSet) GetIconType() *string { return v.IconType }

// DataSetsResponse is returned by DataSets on success.
type DataSetsResponse struct {
	DataSets DataSetsDataSetsDataSetResultSet `json:"dataSets"`
}

// GetDataSets returns DataSetsResponse.DataSets, and is useful for accessing the field via an interface.
func (v *DataSetsResponse) GetDataSets() DataSetsDataSetsDataSetResultSet { return v.DataSets }

type DataSuppression string

const (
	// RAW
	DataSuppressionRaw DataSuppression = "RAW"
	// REDACT
	DataSuppressionRedact DataSuppression = "REDACT"
	// OBFUSCATE
	DataSuppressionObfuscate DataSuppression = "OBFUSCATE"
)

var AllDataSuppression = []DataSuppression{
	DataSuppressionRaw,
	DataSuppressionRedact,
	DataSuppressionObfuscate,
}

// DeleteApiNamingRuleDeleteApiNamingRuleDeleteTraceableSpanProcessingRuleResponse includes the requested fields of the GraphQL type DeleteTraceableSpanProcessingRuleResponse.
type DeleteApiNamingRuleDeleteApiNamingRuleDeleteTraceableSpanProcessingRuleResponse struct {
	Success bool `json:"success"`
}

// GetSuccess returns DeleteApiNamingRuleDeleteApiNamingRuleDeleteTraceableSpanProcessingRuleResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteApiNamingRuleDeleteApiNamingRuleDeleteTraceableSpanProcessingRuleResponse) GetSuccess() bool {
	return v.Success
}

// DeleteApiNamingRuleResponse is returned by DeleteApiNamingRule on success.
type DeleteApiNamingRuleResponse struct {
	// Mutation to delete api naming rule
	DeleteApiNamingRule DeleteApiNamingRuleDeleteApiNamingRuleDeleteTraceableSpanProcessingRuleResponse `json:"deleteApiNamingRule"`
}

// GetDeleteApiNamingRule returns DeleteApiNamingRuleResponse.DeleteApiNamingRule, and is useful for accessing the field via an interface.
func (v *DeleteApiNamingRuleResponse) GetDeleteApiNamingRule() DeleteApiNamingRuleDeleteApiNamingRuleDeleteTraceableSpanProcessingRuleResponse {
	return v.DeleteApiNamingRule
}

// DeleteCustomSignatureDeleteCustomSignatureRuleDeleteCustomSignatureRuleResponse includes the requested fields of the GraphQL type DeleteCustomSignatureRuleResponse.
type DeleteCustomSignatureDeleteCustomSignatureRuleDeleteCustomSignatureRuleResponse struct {
	Success bool `json:"success"`
}

// GetSuccess returns DeleteCustomSignatureDeleteCustomSignatureRuleDeleteCustomSignatureRuleResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteCustomSignatureDeleteCustomSignatureRuleDeleteCustomSignatureRuleResponse) GetSuccess() bool {
	return v.Success
}

// DeleteCustomSignatureResponse is returned by DeleteCustomSignature on success.
type DeleteCustomSignatureResponse struct {
	DeleteCustomSignatureRule DeleteCustomSignatureDeleteCustomSignatureRuleDeleteCustomSignatureRuleResponse `json:"deleteCustomSignatureRule"`
}

// GetDeleteCustomSignatureRule returns DeleteCustomSignatureResponse.DeleteCustomSignatureRule, and is useful for accessing the field via an interface.
func (v *DeleteCustomSignatureResponse) GetDeleteCustomSignatureRule() DeleteCustomSignatureDeleteCustomSignatureRuleDeleteCustomSignatureRuleResponse {
	return v.DeleteCustomSignatureRule
}

// DeleteDataSetResponse is returned by DeleteDataSet on success.
type DeleteDataSetResponse struct {
	DeleteDataSet bool `json:"deleteDataSet"`
}

// GetDeleteDataSet returns DeleteDataSetResponse.DeleteDataSet, and is useful for accessing the field via an interface.
func (v *DeleteDataSetResponse) GetDeleteDataSet() bool { return v.DeleteDataSet }

// DeleteMaliciousEmailDomainRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse includes the requested fields of the GraphQL type DeleteMaliciousSourcesRuleResponse.
// The GraphQL type's documentation follows.
//
// Delete response denoting success
type DeleteMaliciousEmailDomainRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse struct {
	// Flag to check the success of a delete request
	Success bool `json:"success"`
}

// GetSuccess returns DeleteMaliciousEmailDomainRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousEmailDomainRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse) GetSuccess() bool {
	return v.Success
}

// DeleteMaliciousEmailDomainRuleResponse is returned by DeleteMaliciousEmailDomainRule on success.
type DeleteMaliciousEmailDomainRuleResponse struct {
	// Mutation API to delete Malicious Sources rule
	DeleteMaliciousSourcesRule DeleteMaliciousEmailDomainRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse `json:"deleteMaliciousSourcesRule"`
}

// GetDeleteMaliciousSourcesRule returns DeleteMaliciousEmailDomainRuleResponse.DeleteMaliciousSourcesRule, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousEmailDomainRuleResponse) GetDeleteMaliciousSourcesRule() DeleteMaliciousEmailDomainRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse {
	return v.DeleteMaliciousSourcesRule
}

// DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse includes the requested fields of the GraphQL type DeleteIpRangeRuleResponse.
type DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse struct {
	Success bool `json:"success"`
}

// GetSuccess returns DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse) GetSuccess() bool {
	return v.Success
}

// DeleteMaliciousIpRangeRuleResponse is returned by DeleteMaliciousIpRangeRule on success.
type DeleteMaliciousIpRangeRuleResponse struct {
	DeleteIpRangeRule DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse `json:"deleteIpRangeRule"`
}

// GetDeleteIpRangeRule returns DeleteMaliciousIpRangeRuleResponse.DeleteIpRangeRule, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousIpRangeRuleResponse) GetDeleteIpRangeRule() DeleteMaliciousIpRangeRuleDeleteIpRangeRuleDeleteIpRangeRuleResponse {
	return v.DeleteIpRangeRule
}

// DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse includes the requested fields of the GraphQL type DeleteMaliciousSourcesRuleResponse.
// The GraphQL type's documentation follows.
//
// Delete response denoting success
type DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse struct {
	// Flag to check the success of a delete request
	Success bool `json:"success"`
}

// GetSuccess returns DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse) GetSuccess() bool {
	return v.Success
}

// DeleteMaliciousIpTypeRuleResponse is returned by DeleteMaliciousIpTypeRule on success.
type DeleteMaliciousIpTypeRuleResponse struct {
	// Mutation API to delete Malicious Sources rule
	DeleteMaliciousSourcesRule DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse `json:"deleteMaliciousSourcesRule"`
}

// GetDeleteMaliciousSourcesRule returns DeleteMaliciousIpTypeRuleResponse.DeleteMaliciousSourcesRule, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousIpTypeRuleResponse) GetDeleteMaliciousSourcesRule() DeleteMaliciousIpTypeRuleDeleteMaliciousSourcesRuleDeleteMaliciousSourcesRuleResponse {
	return v.DeleteMaliciousSourcesRule
}

// DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse includes the requested fields of the GraphQL type DeleteRegionRuleResponse.
type DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse struct {
	Success bool `json:"success"`
}

// GetSuccess returns DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse) GetSuccess() bool {
	return v.Success
}

// DeleteMaliciousRegionRuleResponse is returned by DeleteMaliciousRegionRule on success.
type DeleteMaliciousRegionRuleResponse struct {
	DeleteRegionRule DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse `json:"deleteRegionRule"`
}

// GetDeleteRegionRule returns DeleteMaliciousRegionRuleResponse.DeleteRegionRule, and is useful for accessing the field via an interface.
func (v *DeleteMaliciousRegionRuleResponse) GetDeleteRegionRule() DeleteMaliciousRegionRuleDeleteRegionRuleDeleteRegionRuleResponse {
	return v.DeleteRegionRule
}

// DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse includes the requested fields of the GraphQL type DeleteRateLimitingRuleResponse.
type DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse struct {
	Success bool `json:"success"`
}

// GetSuccess returns DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse.Success, and is useful for accessing the field via an interface.
func (v *DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse) GetSuccess() bool {
	return v.Success
}

// DeleteRateLimitingRuleResponse is returned by DeleteRateLimitingRule on success.
type DeleteRateLimitingRuleResponse struct {
	DeleteRateLimitingRule DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse `json:"deleteRateLimitingRule"`
}

// GetDeleteRateLimitingRule returns DeleteRateLimitingRuleResponse.DeleteRateLimitingRule, and is useful for accessing the field via an interface.
func (v *DeleteRateLimitingRuleResponse) GetDeleteRateLimitingRule() DeleteRateLimitingRuleDeleteRateLimitingRuleDeleteRateLimitingRuleResponse {
	return v.DeleteRateLimitingRule
}

// DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfig includes the requested fields of the GraphQL type ScopedAnomalyDetectionConfig.
type DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfig struct {
	AnomalyScope DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfigAnomalyScope `json:"anomalyScope"`
}

// GetAnomalyScope returns DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfig.AnomalyScope, and is useful for accessing the field via an interface.
func (v *DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfig) GetAnomalyScope() DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfigAnomalyScope {
	return v.AnomalyScope
}

// DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfigAnomalyScope includes the requested fields of the GraphQL type AnomalyScope.
// The GraphQL type's documentation follows.
//
// Scope for anomaly configs
type DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfigAnomalyScope struct {
	// Scope Type
	ScopeType AnomalyScopeType `json:"scopeType"`
}

// GetScopeType returns DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfigAnomalyScope.ScopeType, and is useful for accessing the field via an interface.
func (v *DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfigAnomalyScope) GetScopeType() AnomalyScopeType {
	return v.ScopeType
}

// DeleteScopedAnomalyDetectionConfigResponse is returned by DeleteScopedAnomalyDetectionConfig on success.
type DeleteScopedAnomalyDetectionConfigResponse struct {
	DeleteScopedAnomalyDetectionConfig DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfig `json:"deleteScopedAnomalyDetectionConfig"`
}

// GetDeleteScopedAnomalyDetectionConfig returns DeleteScopedAnomalyDetectionConfigResponse.DeleteScopedAnomalyDetectionConfig, and is useful for accessing the field via an interface.
func (v *DeleteScopedAnomalyDetectionConfigResponse) GetDeleteScopedAnomalyDetectionConfig() DeleteScopedAnomalyDetectionConfigDeleteScopedAnomalyDetectionConfig {
	return v.DeleteScopedAnomalyDetectionConfig
}

// User ID source type
type DetectionUserIdSourceType string

const (
	// USER_ATTRIBUTION_EXTRACTED_ID
	DetectionUserIdSourceTypeUserAttributionExtractedId DetectionUserIdSourceType = "USER_ATTRIBUTION_EXTRACTED_ID"
	// USER_ATTRIBUTION_EXTRACTED_ID_FROM_JWT
	DetectionUserIdSourceTypeUserAttributionExtractedIdFromJwt DetectionUserIdSourceType = "USER_ATTRIBUTION_EXTRACTED_ID_FROM_JWT"
	// USER_ID_CUSTOM_ATTRIBUTE
	DetectionUserIdSourceTypeUserIdCustomAttribute DetectionUserIdSourceType = "USER_ID_CUSTOM_ATTRIBUTE"
)

var AllDetectionUserIdSourceType = []DetectionUserIdSourceType{
	DetectionUserIdSourceTypeUserAttributionExtractedId,
	DetectionUserIdSourceTypeUserAttributionExtractedIdFromJwt,
	DetectionUserIdSourceTypeUserIdCustomAttribute,
}

type EntityType string

const (
	// API
	EntityTypeApi EntityType = "API"
	// SERVICE
	EntityTypeService EntityType = "SERVICE"
	// BACKEND
	EntityTypeBackend EntityType = "BACKEND"
	// DOMAIN
	EntityTypeDomain EntityType = "DOMAIN"
	// ACTOR
	EntityTypeActor EntityType = "ACTOR"
)

var AllEntityType = []EntityType{
	EntityTypeApi,
	EntityTypeService,
	EntityTypeBackend,
	EntityTypeDomain,
	EntityTypeActor,
}

type FilterOperatorType string

const (
	// EQUALS
	FilterOperatorTypeEquals FilterOperatorType = "EQUALS"
	// NOT_EQUALS
	FilterOperatorTypeNotEquals FilterOperatorType = "NOT_EQUALS"
	// LESS_THAN
	FilterOperatorTypeLessThan FilterOperatorType = "LESS_THAN"
	// LESS_THAN_OR_EQUAL_TO
	FilterOperatorTypeLessThanOrEqualTo FilterOperatorType = "LESS_THAN_OR_EQUAL_TO"
	// GREATER_THAN
	FilterOperatorTypeGreaterThan FilterOperatorType = "GREATER_THAN"
	// GREATER_THAN_OR_EQUAL_TO
	FilterOperatorTypeGreaterThanOrEqualTo FilterOperatorType = "GREATER_THAN_OR_EQUAL_TO"
	// LIKE
	FilterOperatorTypeLike FilterOperatorType = "LIKE"
	// IN
	FilterOperatorTypeIn FilterOperatorType = "IN"
	// NOT_IN
	FilterOperatorTypeNotIn FilterOperatorType = "NOT_IN"
	// CONTAINS_KEY
	FilterOperatorTypeContainsKey FilterOperatorType = "CONTAINS_KEY"
	// CONTAINS_KEY_VALUE
	FilterOperatorTypeContainsKeyValue FilterOperatorType = "CONTAINS_KEY_VALUE"
	// CONTAINS_KEY_LIKE
	FilterOperatorTypeContainsKeyLike FilterOperatorType = "CONTAINS_KEY_LIKE"
	// NOT_CONTAINS_KEY
	FilterOperatorTypeNotContainsKey FilterOperatorType = "NOT_CONTAINS_KEY"
)

var AllFilterOperatorType = []FilterOperatorType{
	FilterOperatorTypeEquals,
	FilterOperatorTypeNotEquals,
	FilterOperatorTypeLessThan,
	FilterOperatorTypeLessThanOrEqualTo,
	FilterOperatorTypeGreaterThan,
	FilterOperatorTypeGreaterThanOrEqualTo,
	FilterOperatorTypeLike,
	FilterOperatorTypeIn,
	FilterOperatorTypeNotIn,
	FilterOperatorTypeContainsKey,
	FilterOperatorTypeContainsKeyValue,
	FilterOperatorTypeContainsKeyLike,
	FilterOperatorTypeNotContainsKey,
}

type FilterType string

const (
	// ATTRIBUTE
	FilterTypeAttribute FilterType = "ATTRIBUTE"
	// ID
	FilterTypeId FilterType = "ID"
)

var AllFilterType = []FilterType{
	FilterTypeAttribute,
	FilterTypeId,
}

// GetApiNamingRuleApiNamingRulesApiNamingRuleResultSet includes the requested fields of the GraphQL type ApiNamingRuleResultSet.
type GetApiNamingRuleApiNamingRulesApiNamingRuleResultSet struct {
	// List of api naming rules
	Results []*GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule `json:"results"`
}

// GetResults returns GetApiNamingRuleApiNamingRulesApiNamingRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleApiNamingRulesApiNamingRuleResultSet) GetResults() []*GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule {
	return v.Results
}

// GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule includes the requested fields of the GraphQL type ApiNamingRule.
type GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule struct {
	ApiNamingRuleFields `json:"-"`
}

// GetId returns GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule.Id, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) GetId() string {
	return v.ApiNamingRuleFields.Id
}

// GetName returns GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule.Name, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) GetName() string {
	return v.ApiNamingRuleFields.Name
}

// GetCreationTime returns GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule.CreationTime, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) GetCreationTime() string {
	return v.ApiNamingRuleFields.CreationTime
}

// GetLastUpdatedTime returns GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule.LastUpdatedTime, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) GetLastUpdatedTime() string {
	return v.ApiNamingRuleFields.LastUpdatedTime
}

// GetDisabled returns GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule.Disabled, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) GetDisabled() bool {
	return v.ApiNamingRuleFields.Disabled
}

// GetApiNamingRuleConfig returns GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule.ApiNamingRuleConfig, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) GetApiNamingRuleConfig() ApiNamingRuleFieldsApiNamingRuleConfig {
	return v.ApiNamingRuleFields.ApiNamingRuleConfig
}

// GetSpanFilter returns GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule.SpanFilter, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) GetSpanFilter() ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter {
	return v.ApiNamingRuleFields.SpanFilter
}

func (v *GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ApiNamingRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	CreationTime string `json:"creationTime"`

	LastUpdatedTime string `json:"lastUpdatedTime"`

	Disabled bool `json:"disabled"`

	ApiNamingRuleConfig ApiNamingRuleFieldsApiNamingRuleConfig `json:"apiNamingRuleConfig"`

	SpanFilter ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter `json:"spanFilter"`
}

func (v *GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) __premarshalJSON() (*__premarshalGetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule, error) {
	var retval __premarshalGetApiNamingRuleApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule

	retval.Id = v.ApiNamingRuleFields.Id
	retval.Name = v.ApiNamingRuleFields.Name
	retval.CreationTime = v.ApiNamingRuleFields.CreationTime
	retval.LastUpdatedTime = v.ApiNamingRuleFields.LastUpdatedTime
	retval.Disabled = v.ApiNamingRuleFields.Disabled
	retval.ApiNamingRuleConfig = v.ApiNamingRuleFields.ApiNamingRuleConfig
	retval.SpanFilter = v.ApiNamingRuleFields.SpanFilter
	return &retval, nil
}

// GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSet includes the requested fields of the GraphQL type ApiNamingRuleResultSet.
type GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSet struct {
	// List of api naming rules
	Results []*GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule `json:"results"`
}

// GetResults returns GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSet) GetResults() []*GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule {
	return v.Results
}

// GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule includes the requested fields of the GraphQL type ApiNamingRule.
type GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule struct {
	Id string `json:"id"`
	// Name of the api naming rule
	Name string `json:"name"`
}

// GetId returns GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule.Id, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) GetId() string {
	return v.Id
}

// GetName returns GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule.Name, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSetResultsApiNamingRule) GetName() string {
	return v.Name
}

// GetApiNamingRuleIdResponse is returned by GetApiNamingRuleId on success.
type GetApiNamingRuleIdResponse struct {
	// Query to get api naming rules
	ApiNamingRules GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSet `json:"apiNamingRules"`
}

// GetApiNamingRules returns GetApiNamingRuleIdResponse.ApiNamingRules, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleIdResponse) GetApiNamingRules() GetApiNamingRuleIdApiNamingRulesApiNamingRuleResultSet {
	return v.ApiNamingRules
}

// GetApiNamingRuleResponse is returned by GetApiNamingRule on success.
type GetApiNamingRuleResponse struct {
	// Query to get api naming rules
	ApiNamingRules GetApiNamingRuleApiNamingRulesApiNamingRuleResultSet `json:"apiNamingRules"`
}

// GetApiNamingRules returns GetApiNamingRuleResponse.ApiNamingRules, and is useful for accessing the field via an interface.
func (v *GetApiNamingRuleResponse) GetApiNamingRules() GetApiNamingRuleApiNamingRulesApiNamingRuleResultSet {
	return v.ApiNamingRules
}

// GetCountriesCountriesRegionResultSet includes the requested fields of the GraphQL type RegionResultSet.
type GetCountriesCountriesRegionResultSet struct {
	Results []*GetCountriesCountriesRegionResultSetResultsRegion `json:"results"`
}

// GetResults returns GetCountriesCountriesRegionResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetCountriesCountriesRegionResultSet) GetResults() []*GetCountriesCountriesRegionResultSetResultsRegion {
	return v.Results
}

// GetCountriesCountriesRegionResultSetResultsRegion includes the requested fields of the GraphQL type Region.
type GetCountriesCountriesRegionResultSetResultsRegion struct {
	Id string `json:"id"`
	// Country data for region
	Country *GetCountriesCountriesRegionResultSetResultsRegionCountry `json:"country"`
}

// GetId returns GetCountriesCountriesRegionResultSetResultsRegion.Id, and is useful for accessing the field via an interface.
func (v *GetCountriesCountriesRegionResultSetResultsRegion) GetId() string { return v.Id }

// GetCountry returns GetCountriesCountriesRegionResultSetResultsRegion.Country, and is useful for accessing the field via an interface.
func (v *GetCountriesCountriesRegionResultSetResultsRegion) GetCountry() *GetCountriesCountriesRegionResultSetResultsRegionCountry {
	return v.Country
}

// GetCountriesCountriesRegionResultSetResultsRegionCountry includes the requested fields of the GraphQL type Country.
type GetCountriesCountriesRegionResultSetResultsRegionCountry struct {
	// Country iso code
	IsoCode string `json:"isoCode"`
	// Country name
	Name string `json:"name"`
}

// GetIsoCode returns GetCountriesCountriesRegionResultSetResultsRegionCountry.IsoCode, and is useful for accessing the field via an interface.
func (v *GetCountriesCountriesRegionResultSetResultsRegionCountry) GetIsoCode() string {
	return v.IsoCode
}

// GetName returns GetCountriesCountriesRegionResultSetResultsRegionCountry.Name, and is useful for accessing the field via an interface.
func (v *GetCountriesCountriesRegionResultSetResultsRegionCountry) GetName() string { return v.Name }

// GetCountriesResponse is returned by GetCountries on success.
type GetCountriesResponse struct {
	Countries GetCountriesCountriesRegionResultSet `json:"countries"`
}

// GetCountries returns GetCountriesResponse.Countries, and is useful for accessing the field via an interface.
func (v *GetCountriesResponse) GetCountries() GetCountriesCountriesRegionResultSet {
	return v.Countries
}

// GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSet includes the requested fields of the GraphQL type CustomSignatureRuleResultSet.
type GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSet struct {
	Results []*GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule `json:"results"`
}

// GetResults returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSet) GetResults() []*GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule {
	return v.Results
}

// GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule includes the requested fields of the GraphQL type CustomSignatureRule.
type GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule struct {
	CustomSignatureFields `json:"-"`
}

// GetId returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.Id, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetId() string {
	return v.CustomSignatureFields.Id
}

// GetName returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.Name, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetName() string {
	return v.CustomSignatureFields.Name
}

// GetDescription returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.Description, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetDescription() string {
	return v.CustomSignatureFields.Description
}

// GetDisabled returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.Disabled, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetDisabled() *bool {
	return v.CustomSignatureFields.Disabled
}

// GetInternal returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.Internal, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetInternal() *bool {
	return v.CustomSignatureFields.Internal
}

// GetBlockingExpirationDuration returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.BlockingExpirationDuration, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetBlockingExpirationDuration() *string {
	return v.CustomSignatureFields.BlockingExpirationDuration
}

// GetBlockingExpirationTime returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.BlockingExpirationTime, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetBlockingExpirationTime() *string {
	return v.CustomSignatureFields.BlockingExpirationTime
}

// GetRuleSource returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.RuleSource, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetRuleSource() *CustomSignatureRuleSource {
	return v.CustomSignatureFields.RuleSource
}

// GetRuleEffect returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.RuleEffect, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetRuleEffect() CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect {
	return v.CustomSignatureFields.RuleEffect
}

// GetRuleDefinition returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.RuleDefinition, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetRuleDefinition() CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition {
	return v.CustomSignatureFields.RuleDefinition
}

// GetRuleScope returns GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.RuleScope, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetRuleScope() *CustomSignatureFieldsRuleScopeCustomSignatureRuleScope {
	return v.CustomSignatureFields.RuleScope
}

func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.CustomSignatureFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	Description string `json:"description"`

	Disabled *bool `json:"disabled"`

	Internal *bool `json:"internal"`

	BlockingExpirationDuration *string `json:"blockingExpirationDuration"`

	BlockingExpirationTime *string `json:"blockingExpirationTime"`

	RuleSource *CustomSignatureRuleSource `json:"ruleSource"`

	RuleEffect CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect `json:"ruleEffect"`

	RuleDefinition CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition `json:"ruleDefinition"`

	RuleScope *CustomSignatureFieldsRuleScopeCustomSignatureRuleScope `json:"ruleScope"`
}

func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) __premarshalJSON() (*__premarshalGetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule, error) {
	var retval __premarshalGetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule

	retval.Id = v.CustomSignatureFields.Id
	retval.Name = v.CustomSignatureFields.Name
	retval.Description = v.CustomSignatureFields.Description
	retval.Disabled = v.CustomSignatureFields.Disabled
	retval.Internal = v.CustomSignatureFields.Internal
	retval.BlockingExpirationDuration = v.CustomSignatureFields.BlockingExpirationDuration
	retval.BlockingExpirationTime = v.CustomSignatureFields.BlockingExpirationTime
	retval.RuleSource = v.CustomSignatureFields.RuleSource
	retval.RuleEffect = v.CustomSignatureFields.RuleEffect
	retval.RuleDefinition = v.CustomSignatureFields.RuleDefinition
	retval.RuleScope = v.CustomSignatureFields.RuleScope
	return &retval, nil
}

// GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSet includes the requested fields of the GraphQL type CustomSignatureRuleResultSet.
type GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSet struct {
	Results []*GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule `json:"results"`
}

// GetResults returns GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSet) GetResults() []*GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule {
	return v.Results
}

// GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule includes the requested fields of the GraphQL type CustomSignatureRule.
type GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.Id, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetId() string {
	return v.Id
}

// GetName returns GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule.Name, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSetResultsCustomSignatureRule) GetName() string {
	return v.Name
}

// GetCustomSignatureIdResponse is returned by GetCustomSignatureId on success.
type GetCustomSignatureIdResponse struct {
	CustomSignatureRules GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSet `json:"customSignatureRules"`
}

// GetCustomSignatureRules returns GetCustomSignatureIdResponse.CustomSignatureRules, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureIdResponse) GetCustomSignatureRules() GetCustomSignatureIdCustomSignatureRulesCustomSignatureRuleResultSet {
	return v.CustomSignatureRules
}

// GetCustomSignatureResponse is returned by GetCustomSignature on success.
type GetCustomSignatureResponse struct {
	CustomSignatureRules GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSet `json:"customSignatureRules"`
}

// GetCustomSignatureRules returns GetCustomSignatureResponse.CustomSignatureRules, and is useful for accessing the field via an interface.
func (v *GetCustomSignatureResponse) GetCustomSignatureRules() GetCustomSignatureCustomSignatureRulesCustomSignatureRuleResultSet {
	return v.CustomSignatureRules
}

// GetDataSetsIdDataSetsDataSetResultSet includes the requested fields of the GraphQL type DataSetResultSet.
type GetDataSetsIdDataSetsDataSetResultSet struct {
	Results []*GetDataSetsIdDataSetsDataSetResultSetResultsDataSet `json:"results"`
}

// GetResults returns GetDataSetsIdDataSetsDataSetResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetDataSetsIdDataSetsDataSetResultSet) GetResults() []*GetDataSetsIdDataSetsDataSetResultSetResultsDataSet {
	return v.Results
}

// GetDataSetsIdDataSetsDataSetResultSetResultsDataSet includes the requested fields of the GraphQL type DataSet.
type GetDataSetsIdDataSetsDataSetResultSetResultsDataSet struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetDataSetsIdDataSetsDataSetResultSetResultsDataSet.Id, and is useful for accessing the field via an interface.
func (v *GetDataSetsIdDataSetsDataSetResultSetResultsDataSet) GetId() string { return v.Id }

// GetName returns GetDataSetsIdDataSetsDataSetResultSetResultsDataSet.Name, and is useful for accessing the field via an interface.
func (v *GetDataSetsIdDataSetsDataSetResultSetResultsDataSet) GetName() string { return v.Name }

// GetDataSetsIdResponse is returned by GetDataSetsId on success.
type GetDataSetsIdResponse struct {
	DataSets GetDataSetsIdDataSetsDataSetResultSet `json:"dataSets"`
}

// GetDataSets returns GetDataSetsIdResponse.DataSets, and is useful for accessing the field via an interface.
func (v *GetDataSetsIdResponse) GetDataSets() GetDataSetsIdDataSetsDataSetResultSet {
	return v.DataSets
}

// GetDataTypesIdDataTypesDataTypeResultSet includes the requested fields of the GraphQL type DataTypeResultSet.
type GetDataTypesIdDataTypesDataTypeResultSet struct {
	Results []*GetDataTypesIdDataTypesDataTypeResultSetResultsResolvedDatatype `json:"results"`
}

// GetResults returns GetDataTypesIdDataTypesDataTypeResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetDataTypesIdDataTypesDataTypeResultSet) GetResults() []*GetDataTypesIdDataTypesDataTypeResultSetResultsResolvedDatatype {
	return v.Results
}

// GetDataTypesIdDataTypesDataTypeResultSetResultsResolvedDatatype includes the requested fields of the GraphQL type ResolvedDatatype.
type GetDataTypesIdDataTypesDataTypeResultSetResultsResolvedDatatype struct {
	// Unique Identifier for the datatype. This cannot be changed
	Id string `json:"id"`
	// The configured name for the datatype
	Name string `json:"name"`
}

// GetId returns GetDataTypesIdDataTypesDataTypeResultSetResultsResolvedDatatype.Id, and is useful for accessing the field via an interface.
func (v *GetDataTypesIdDataTypesDataTypeResultSetResultsResolvedDatatype) GetId() string { return v.Id }

// GetName returns GetDataTypesIdDataTypesDataTypeResultSetResultsResolvedDatatype.Name, and is useful for accessing the field via an interface.
func (v *GetDataTypesIdDataTypesDataTypeResultSetResultsResolvedDatatype) GetName() string {
	return v.Name
}

// GetDataTypesIdResponse is returned by GetDataTypesId on success.
type GetDataTypesIdResponse struct {
	DataTypes GetDataTypesIdDataTypesDataTypeResultSet `json:"dataTypes"`
}

// GetDataTypes returns GetDataTypesIdResponse.DataTypes, and is useful for accessing the field via an interface.
func (v *GetDataTypesIdResponse) GetDataTypes() GetDataTypesIdDataTypesDataTypeResultSet {
	return v.DataTypes
}

// GetEndpointLabelsIdLabelsLabelResultSet includes the requested fields of the GraphQL type LabelResultSet.
type GetEndpointLabelsIdLabelsLabelResultSet struct {
	Count   int64                                                  `json:"count"`
	Results []*GetEndpointLabelsIdLabelsLabelResultSetResultsLabel `json:"results"`
	Total   int64                                                  `json:"total"`
}

// GetCount returns GetEndpointLabelsIdLabelsLabelResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetEndpointLabelsIdLabelsLabelResultSet) GetCount() int64 { return v.Count }

// GetResults returns GetEndpointLabelsIdLabelsLabelResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetEndpointLabelsIdLabelsLabelResultSet) GetResults() []*GetEndpointLabelsIdLabelsLabelResultSetResultsLabel {
	return v.Results
}

// GetTotal returns GetEndpointLabelsIdLabelsLabelResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetEndpointLabelsIdLabelsLabelResultSet) GetTotal() int64 { return v.Total }

// GetEndpointLabelsIdLabelsLabelResultSetResultsLabel includes the requested fields of the GraphQL type Label.
type GetEndpointLabelsIdLabelsLabelResultSetResultsLabel struct {
	Id  string `json:"id"`
	Key string `json:"key"`
}

// GetId returns GetEndpointLabelsIdLabelsLabelResultSetResultsLabel.Id, and is useful for accessing the field via an interface.
func (v *GetEndpointLabelsIdLabelsLabelResultSetResultsLabel) GetId() string { return v.Id }

// GetKey returns GetEndpointLabelsIdLabelsLabelResultSetResultsLabel.Key, and is useful for accessing the field via an interface.
func (v *GetEndpointLabelsIdLabelsLabelResultSetResultsLabel) GetKey() string { return v.Key }

// GetEndpointLabelsIdResponse is returned by GetEndpointLabelsId on success.
type GetEndpointLabelsIdResponse struct {
	Labels GetEndpointLabelsIdLabelsLabelResultSet `json:"labels"`
}

// GetLabels returns GetEndpointLabelsIdResponse.Labels, and is useful for accessing the field via an interface.
func (v *GetEndpointLabelsIdResponse) GetLabels() GetEndpointLabelsIdLabelsLabelResultSet {
	return v.Labels
}

// GetEntitiesIdsEntitiesEntityResultSet includes the requested fields of the GraphQL type EntityResultSet.
type GetEntitiesIdsEntitiesEntityResultSet struct {
	Results []*GetEntitiesIdsEntitiesEntityResultSetResultsEntity `json:"results"`
	Total   int64                                                 `json:"total"`
}

// GetResults returns GetEntitiesIdsEntitiesEntityResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetEntitiesIdsEntitiesEntityResultSet) GetResults() []*GetEntitiesIdsEntitiesEntityResultSetResultsEntity {
	return v.Results
}

// GetTotal returns GetEntitiesIdsEntitiesEntityResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetEntitiesIdsEntitiesEntityResultSet) GetTotal() int64 { return v.Total }

// GetEntitiesIdsEntitiesEntityResultSetResultsEntity includes the requested fields of the GraphQL type Entity.
type GetEntitiesIdsEntitiesEntityResultSetResultsEntity struct {
	EntityId string       `json:"entityId"`
	Id       *interface{} `json:"id"`
	Name     *interface{} `json:"name"`
}

// GetEntityId returns GetEntitiesIdsEntitiesEntityResultSetResultsEntity.EntityId, and is useful for accessing the field via an interface.
func (v *GetEntitiesIdsEntitiesEntityResultSetResultsEntity) GetEntityId() string { return v.EntityId }

// GetId returns GetEntitiesIdsEntitiesEntityResultSetResultsEntity.Id, and is useful for accessing the field via an interface.
func (v *GetEntitiesIdsEntitiesEntityResultSetResultsEntity) GetId() *interface{} { return v.Id }

// GetName returns GetEntitiesIdsEntitiesEntityResultSetResultsEntity.Name, and is useful for accessing the field via an interface.
func (v *GetEntitiesIdsEntitiesEntityResultSetResultsEntity) GetName() *interface{} { return v.Name }

// GetEntitiesIdsResponse is returned by GetEntitiesIds on success.
type GetEntitiesIdsResponse struct {
	Entities GetEntitiesIdsEntitiesEntityResultSet `json:"entities"`
}

// GetEntities returns GetEntitiesIdsResponse.Entities, and is useful for accessing the field via an interface.
func (v *GetEntitiesIdsResponse) GetEntities() GetEntitiesIdsEntitiesEntityResultSet {
	return v.Entities
}

// GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet includes the requested fields of the GraphQL type MaliciousSourcesRuleResultSet.
// The GraphQL type's documentation follows.
//
// Malicious sources rules results
type GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet struct {
	Count *int64 `json:"count"`
	Total *int64 `json:"total"`
	// List of Malicious Sources rules
	Results []*GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule `json:"results"`
}

// GetCount returns GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetCount() *int64 {
	return v.Count
}

// GetTotal returns GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetTotal() *int64 {
	return v.Total
}

// GetResults returns GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetResults() []*GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule {
	return v.Results
}

// GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule struct {
	MaliciousEmailDomainRuleFields `json:"-"`
}

// GetId returns GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetId() string {
	return v.MaliciousEmailDomainRuleFields.Id
}

// GetInfo returns GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetInfo() MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.MaliciousEmailDomainRuleFields.Info
}

// GetScope returns GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Scope, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetScope() *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.MaliciousEmailDomainRuleFields.Scope
}

// GetStatus returns GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Status, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetStatus() MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.MaliciousEmailDomainRuleFields.Status
}

func (v *GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousEmailDomainRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule struct {
	Id string `json:"id"`

	Info MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`

	Scope *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`

	Status MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

func (v *GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) __premarshalJSON() (*__premarshalGetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule, error) {
	var retval __premarshalGetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule

	retval.Id = v.MaliciousEmailDomainRuleFields.Id
	retval.Info = v.MaliciousEmailDomainRuleFields.Info
	retval.Scope = v.MaliciousEmailDomainRuleFields.Scope
	retval.Status = v.MaliciousEmailDomainRuleFields.Status
	return &retval, nil
}

// GetMaliciousEmailDomainRuleDetailsResponse is returned by GetMaliciousEmailDomainRuleDetails on success.
type GetMaliciousEmailDomainRuleDetailsResponse struct {
	// API to fetch malicious sources rules
	MaliciousSourcesRules GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet `json:"maliciousSourcesRules"`
}

// GetMaliciousSourcesRules returns GetMaliciousEmailDomainRuleDetailsResponse.MaliciousSourcesRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRuleDetailsResponse) GetMaliciousSourcesRules() GetMaliciousEmailDomainRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet {
	return v.MaliciousSourcesRules
}

// GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet includes the requested fields of the GraphQL type MaliciousSourcesRuleResultSet.
// The GraphQL type's documentation follows.
//
// Malicious sources rules results
type GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet struct {
	Count *int64 `json:"count"`
	Total *int64 `json:"total"`
	// List of Malicious Sources rules
	Results []*GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule `json:"results"`
}

// GetCount returns GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetCount() *int64 {
	return v.Count
}

// GetTotal returns GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetTotal() *int64 {
	return v.Total
}

// GetResults returns GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetResults() []*GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule {
	return v.Results
}

// GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule struct {
	// Malicious Sources rule information
	Info GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo `json:"info"`
	// Rule ID
	Id string `json:"id"`
}

// GetInfo returns GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetInfo() GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo {
	return v.Info
}

// GetId returns GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetId() string {
	return v.Id
}

// GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo includes the requested fields of the GraphQL type MaliciousSourcesRuleInfo.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule information
type GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo struct {
	// Rule name
	Name string `json:"name"`
}

// GetName returns GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo.Name, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo) GetName() string {
	return v.Name
}

// GetMaliciousEmailDomainRulesNameResponse is returned by GetMaliciousEmailDomainRulesName on success.
type GetMaliciousEmailDomainRulesNameResponse struct {
	// API to fetch malicious sources rules
	MaliciousSourcesRules GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet `json:"maliciousSourcesRules"`
}

// GetMaliciousSourcesRules returns GetMaliciousEmailDomainRulesNameResponse.MaliciousSourcesRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousEmailDomainRulesNameResponse) GetMaliciousSourcesRules() GetMaliciousEmailDomainRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet {
	return v.MaliciousSourcesRules
}

// GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet includes the requested fields of the GraphQL type IpRangeRuleResultSet.
type GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet struct {
	Count   *int64                                                                              `json:"count"`
	Total   *int64                                                                              `json:"total"`
	Results []*GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule `json:"results"`
}

// GetCount returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet) GetCount() *int64 {
	return v.Count
}

// GetTotal returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet) GetTotal() *int64 {
	return v.Total
}

// GetResults returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet) GetResults() []*GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule {
	return v.Results
}

// GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule includes the requested fields of the GraphQL type IpRangeRule.
type GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule struct {
	MaliciousIpRangeFields `json:"-"`
}

// GetId returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetId() *string {
	return v.MaliciousIpRangeFields.Id
}

// GetInternal returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.Internal, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetInternal() bool {
	return v.MaliciousIpRangeFields.Internal
}

// GetDisabled returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.Disabled, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetDisabled() bool {
	return v.MaliciousIpRangeFields.Disabled
}

// GetRuleDetails returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.RuleDetails, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetRuleDetails() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails {
	return v.MaliciousIpRangeFields.RuleDetails
}

// GetRuleScope returns GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.RuleScope, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetRuleScope() *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope {
	return v.MaliciousIpRangeFields.RuleScope
}

func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpRangeFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule struct {
	Id *string `json:"id"`

	Internal bool `json:"internal"`

	Disabled bool `json:"disabled"`

	RuleDetails MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails `json:"ruleDetails"`

	RuleScope *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope `json:"ruleScope"`
}

func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) __premarshalJSON() (*__premarshalGetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule, error) {
	var retval __premarshalGetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule

	retval.Id = v.MaliciousIpRangeFields.Id
	retval.Internal = v.MaliciousIpRangeFields.Internal
	retval.Disabled = v.MaliciousIpRangeFields.Disabled
	retval.RuleDetails = v.MaliciousIpRangeFields.RuleDetails
	retval.RuleScope = v.MaliciousIpRangeFields.RuleScope
	return &retval, nil
}

// GetMaliciousIpRangeRuleDetailsResponse is returned by GetMaliciousIpRangeRuleDetails on success.
type GetMaliciousIpRangeRuleDetailsResponse struct {
	IpRangeRules GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet `json:"ipRangeRules"`
}

// GetIpRangeRules returns GetMaliciousIpRangeRuleDetailsResponse.IpRangeRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRuleDetailsResponse) GetIpRangeRules() GetMaliciousIpRangeRuleDetailsIpRangeRulesIpRangeRuleResultSet {
	return v.IpRangeRules
}

// GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet includes the requested fields of the GraphQL type IpRangeRuleResultSet.
type GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet struct {
	Count   *int64                                                                            `json:"count"`
	Total   *int64                                                                            `json:"total"`
	Results []*GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule `json:"results"`
}

// GetCount returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet) GetCount() *int64 {
	return v.Count
}

// GetTotal returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet) GetTotal() *int64 {
	return v.Total
}

// GetResults returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet) GetResults() []*GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule {
	return v.Results
}

// GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule includes the requested fields of the GraphQL type IpRangeRule.
type GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule struct {
	RuleDetails GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails `json:"ruleDetails"`
	Id          *string                                                                                                     `json:"id"`
}

// GetRuleDetails returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.RuleDetails, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetRuleDetails() GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails {
	return v.RuleDetails
}

// GetId returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRule) GetId() *string {
	return v.Id
}

// GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails includes the requested fields of the GraphQL type IpRangeRuleDetails.
type GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails struct {
	Name string `json:"name"`
}

// GetName returns GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails.Name, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSetResultsIpRangeRuleRuleDetailsIpRangeRuleDetails) GetName() string {
	return v.Name
}

// GetMaliciousIpRangeRulesNameResponse is returned by GetMaliciousIpRangeRulesName on success.
type GetMaliciousIpRangeRulesNameResponse struct {
	IpRangeRules GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet `json:"ipRangeRules"`
}

// GetIpRangeRules returns GetMaliciousIpRangeRulesNameResponse.IpRangeRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpRangeRulesNameResponse) GetIpRangeRules() GetMaliciousIpRangeRulesNameIpRangeRulesIpRangeRuleResultSet {
	return v.IpRangeRules
}

// GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet includes the requested fields of the GraphQL type MaliciousSourcesRuleResultSet.
// The GraphQL type's documentation follows.
//
// Malicious sources rules results
type GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet struct {
	Count *int64 `json:"count"`
	Total *int64 `json:"total"`
	// List of Malicious Sources rules
	Results []*GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule `json:"results"`
}

// GetCount returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetCount() *int64 {
	return v.Count
}

// GetTotal returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetTotal() *int64 {
	return v.Total
}

// GetResults returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetResults() []*GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule {
	return v.Results
}

// GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule struct {
	MaliciousIpTypeRuleFields `json:"-"`
}

// GetId returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetId() string {
	return v.MaliciousIpTypeRuleFields.Id
}

// GetInfo returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetInfo() MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.MaliciousIpTypeRuleFields.Info
}

// GetScope returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Scope, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetScope() *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.MaliciousIpTypeRuleFields.Scope
}

// GetStatus returns GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Status, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetStatus() MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.MaliciousIpTypeRuleFields.Status
}

func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpTypeRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule struct {
	Id string `json:"id"`

	Info MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`

	Scope *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`

	Status MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) __premarshalJSON() (*__premarshalGetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule, error) {
	var retval __premarshalGetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule

	retval.Id = v.MaliciousIpTypeRuleFields.Id
	retval.Info = v.MaliciousIpTypeRuleFields.Info
	retval.Scope = v.MaliciousIpTypeRuleFields.Scope
	retval.Status = v.MaliciousIpTypeRuleFields.Status
	return &retval, nil
}

// GetMaliciousIpTypeRuleDetailsResponse is returned by GetMaliciousIpTypeRuleDetails on success.
type GetMaliciousIpTypeRuleDetailsResponse struct {
	// API to fetch malicious sources rules
	MaliciousSourcesRules GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet `json:"maliciousSourcesRules"`
}

// GetMaliciousSourcesRules returns GetMaliciousIpTypeRuleDetailsResponse.MaliciousSourcesRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRuleDetailsResponse) GetMaliciousSourcesRules() GetMaliciousIpTypeRuleDetailsMaliciousSourcesRulesMaliciousSourcesRuleResultSet {
	return v.MaliciousSourcesRules
}

// GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet includes the requested fields of the GraphQL type MaliciousSourcesRuleResultSet.
// The GraphQL type's documentation follows.
//
// Malicious sources rules results
type GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet struct {
	Count *int64 `json:"count"`
	Total *int64 `json:"total"`
	// List of Malicious Sources rules
	Results []*GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule `json:"results"`
}

// GetCount returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetCount() *int64 {
	return v.Count
}

// GetTotal returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetTotal() *int64 {
	return v.Total
}

// GetResults returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet) GetResults() []*GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule {
	return v.Results
}

// GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule struct {
	// Malicious Sources rule information
	Info GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo `json:"info"`
	// Rule ID
	Id string `json:"id"`
}

// GetInfo returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetInfo() GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo {
	return v.Info
}

// GetId returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRule) GetId() string {
	return v.Id
}

// GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo includes the requested fields of the GraphQL type MaliciousSourcesRuleInfo.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule information
type GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo struct {
	// Rule name
	Name string `json:"name"`
}

// GetName returns GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo.Name, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSetResultsMaliciousSourcesRuleInfo) GetName() string {
	return v.Name
}

// GetMaliciousIpTypeRulesNameResponse is returned by GetMaliciousIpTypeRulesName on success.
type GetMaliciousIpTypeRulesNameResponse struct {
	// API to fetch malicious sources rules
	MaliciousSourcesRules GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet `json:"maliciousSourcesRules"`
}

// GetMaliciousSourcesRules returns GetMaliciousIpTypeRulesNameResponse.MaliciousSourcesRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousIpTypeRulesNameResponse) GetMaliciousSourcesRules() GetMaliciousIpTypeRulesNameMaliciousSourcesRulesMaliciousSourcesRuleResultSet {
	return v.MaliciousSourcesRules
}

// GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet includes the requested fields of the GraphQL type RegionRuleResultSet.
type GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet struct {
	Count   int64                                                                           `json:"count"`
	Total   int64                                                                           `json:"total"`
	Results []*GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule `json:"results"`
}

// GetCount returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet) GetCount() int64 {
	return v.Count
}

// GetTotal returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet) GetTotal() int64 {
	return v.Total
}

// GetResults returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet) GetResults() []*GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule {
	return v.Results
}

// GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule includes the requested fields of the GraphQL type RegionRule.
type GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule struct {
	MaliciousRegionRuleFields `json:"-"`
}

// GetId returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetId() string {
	return v.MaliciousRegionRuleFields.Id
}

// GetName returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Name, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetName() string {
	return v.MaliciousRegionRuleFields.Name
}

// GetType returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Type, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetType() RegionRuleActionType {
	return v.MaliciousRegionRuleFields.Type
}

// GetDescription returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Description, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetDescription() *string {
	return v.MaliciousRegionRuleFields.Description
}

// GetDisabled returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Disabled, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetDisabled() bool {
	return v.MaliciousRegionRuleFields.Disabled
}

// GetInternal returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Internal, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetInternal() bool {
	return v.MaliciousRegionRuleFields.Internal
}

// GetEventSeverity returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.EventSeverity, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetEventSeverity() *RegionRuleEventSeverity {
	return v.MaliciousRegionRuleFields.EventSeverity
}

// GetExpiration returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Expiration, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetExpiration() *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration {
	return v.MaliciousRegionRuleFields.Expiration
}

// GetRegions returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Regions, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetRegions() []*MaliciousRegionRuleFieldsRegionsRegion {
	return v.MaliciousRegionRuleFields.Regions
}

// GetRuleScope returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.RuleScope, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetRuleScope() *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope {
	return v.MaliciousRegionRuleFields.RuleScope
}

// GetEffects returns GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule.Effects, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) GetEffects() []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification {
	return v.MaliciousRegionRuleFields.Effects
}

func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousRegionRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	Type RegionRuleActionType `json:"type"`

	Description *string `json:"description"`

	Disabled bool `json:"disabled"`

	Internal bool `json:"internal"`

	EventSeverity *RegionRuleEventSeverity `json:"eventSeverity"`

	Expiration *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration `json:"expiration"`

	Regions []*MaliciousRegionRuleFieldsRegionsRegion `json:"regions"`

	RuleScope *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope `json:"ruleScope"`

	Effects []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification `json:"effects"`
}

func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule) __premarshalJSON() (*__premarshalGetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule, error) {
	var retval __premarshalGetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSetResultsRegionRule

	retval.Id = v.MaliciousRegionRuleFields.Id
	retval.Name = v.MaliciousRegionRuleFields.Name
	retval.Type = v.MaliciousRegionRuleFields.Type
	retval.Description = v.MaliciousRegionRuleFields.Description
	retval.Disabled = v.MaliciousRegionRuleFields.Disabled
	retval.Internal = v.MaliciousRegionRuleFields.Internal
	retval.EventSeverity = v.MaliciousRegionRuleFields.EventSeverity
	retval.Expiration = v.MaliciousRegionRuleFields.Expiration
	retval.Regions = v.MaliciousRegionRuleFields.Regions
	retval.RuleScope = v.MaliciousRegionRuleFields.RuleScope
	retval.Effects = v.MaliciousRegionRuleFields.Effects
	return &retval, nil
}

// GetMaliciousRegionRuleDetailsResponse is returned by GetMaliciousRegionRuleDetails on success.
type GetMaliciousRegionRuleDetailsResponse struct {
	RegionRules GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet `json:"regionRules"`
}

// GetRegionRules returns GetMaliciousRegionRuleDetailsResponse.RegionRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRuleDetailsResponse) GetRegionRules() GetMaliciousRegionRuleDetailsRegionRulesRegionRuleResultSet {
	return v.RegionRules
}

// GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet includes the requested fields of the GraphQL type RegionRuleResultSet.
type GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet struct {
	Count   int64                                                                         `json:"count"`
	Total   int64                                                                         `json:"total"`
	Results []*GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule `json:"results"`
}

// GetCount returns GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet) GetCount() int64 { return v.Count }

// GetTotal returns GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet) GetTotal() int64 { return v.Total }

// GetResults returns GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet) GetResults() []*GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule {
	return v.Results
}

// GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule includes the requested fields of the GraphQL type RegionRule.
type GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule.Id, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule) GetId() string {
	return v.Id
}

// GetName returns GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule.Name, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSetResultsRegionRule) GetName() string {
	return v.Name
}

// GetMaliciousRegionRulesNameResponse is returned by GetMaliciousRegionRulesName on success.
type GetMaliciousRegionRulesNameResponse struct {
	RegionRules GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet `json:"regionRules"`
}

// GetRegionRules returns GetMaliciousRegionRulesNameResponse.RegionRules, and is useful for accessing the field via an interface.
func (v *GetMaliciousRegionRulesNameResponse) GetRegionRules() GetMaliciousRegionRulesNameRegionRulesRegionRuleResultSet {
	return v.RegionRules
}

// GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet includes the requested fields of the GraphQL type RateLimitingRuleResultSet.
type GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet struct {
	Count   int64                                                                                      `json:"count"`
	Total   int64                                                                                      `json:"total"`
	Results []*GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule `json:"results"`
}

// GetCount returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet) GetCount() int64 {
	return v.Count
}

// GetTotal returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet) GetTotal() int64 {
	return v.Total
}

// GetResults returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet) GetResults() []*GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule {
	return v.Results
}

// GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule includes the requested fields of the GraphQL type RateLimitingRule.
// The GraphQL type's documentation follows.
//
// Custom rule to protect endpoints and other services from brute-force attacks
type GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule struct {
	RateLimitingRuleFields `json:"-"`
}

// GetCategory returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Category, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetCategory() RateLimitingRuleCategory {
	return v.RateLimitingRuleFields.Category
}

// GetDescription returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Description, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetDescription() *string {
	return v.RateLimitingRuleFields.Description
}

// GetEnabled returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Enabled, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetEnabled() bool {
	return v.RateLimitingRuleFields.Enabled
}

// GetId returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Id, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetId() string {
	return v.RateLimitingRuleFields.Id
}

// GetName returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Name, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetName() string {
	return v.RateLimitingRuleFields.Name
}

// GetLabels returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Labels, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetLabels() []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel {
	return v.RateLimitingRuleFields.Labels
}

// GetThresholdActionConfigs returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetThresholdActionConfigs() []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig {
	return v.RateLimitingRuleFields.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetTransactionActionConfigs() *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig {
	return v.RateLimitingRuleFields.TransactionActionConfigs
}

// GetRuleConfigScope returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetRuleConfigScope() *RateLimitingRuleFieldsRuleConfigScope {
	return v.RateLimitingRuleFields.RuleConfigScope
}

// GetRuleStatus returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.RuleStatus, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetRuleStatus() *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus {
	return v.RateLimitingRuleFields.RuleStatus
}

// GetConditions returns GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Conditions, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetConditions() []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition {
	return v.RateLimitingRuleFields.Conditions
}

func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.RateLimitingRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule struct {
	Category RateLimitingRuleCategory `json:"category"`

	Description *string `json:"description"`

	Enabled bool `json:"enabled"`

	Id string `json:"id"`

	Name string `json:"name"`

	Labels []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel `json:"labels"`

	ThresholdActionConfigs []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`

	TransactionActionConfigs *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`

	RuleConfigScope *RateLimitingRuleFieldsRuleConfigScope `json:"ruleConfigScope"`

	RuleStatus *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus `json:"ruleStatus"`

	Conditions []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition `json:"conditions"`
}

func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) __premarshalJSON() (*__premarshalGetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule, error) {
	var retval __premarshalGetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule

	retval.Category = v.RateLimitingRuleFields.Category
	retval.Description = v.RateLimitingRuleFields.Description
	retval.Enabled = v.RateLimitingRuleFields.Enabled
	retval.Id = v.RateLimitingRuleFields.Id
	retval.Name = v.RateLimitingRuleFields.Name
	retval.Labels = v.RateLimitingRuleFields.Labels
	retval.ThresholdActionConfigs = v.RateLimitingRuleFields.ThresholdActionConfigs
	retval.TransactionActionConfigs = v.RateLimitingRuleFields.TransactionActionConfigs
	retval.RuleConfigScope = v.RateLimitingRuleFields.RuleConfigScope
	retval.RuleStatus = v.RateLimitingRuleFields.RuleStatus
	retval.Conditions = v.RateLimitingRuleFields.Conditions
	return &retval, nil
}

// GetRateLimitingDetailsResponse is returned by GetRateLimitingDetails on success.
type GetRateLimitingDetailsResponse struct {
	RateLimitingRules GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet `json:"rateLimitingRules"`
}

// GetRateLimitingRules returns GetRateLimitingDetailsResponse.RateLimitingRules, and is useful for accessing the field via an interface.
func (v *GetRateLimitingDetailsResponse) GetRateLimitingRules() GetRateLimitingDetailsRateLimitingRulesRateLimitingRuleResultSet {
	return v.RateLimitingRules
}

// GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet includes the requested fields of the GraphQL type RateLimitingRuleResultSet.
type GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet struct {
	Count   int64                                                                                        `json:"count"`
	Total   int64                                                                                        `json:"total"`
	Results []*GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule `json:"results"`
}

// GetCount returns GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet.Count, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet) GetCount() int64 {
	return v.Count
}

// GetTotal returns GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet.Total, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet) GetTotal() int64 {
	return v.Total
}

// GetResults returns GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet.Results, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet) GetResults() []*GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule {
	return v.Results
}

// GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule includes the requested fields of the GraphQL type RateLimitingRule.
// The GraphQL type's documentation follows.
//
// Custom rule to protect endpoints and other services from brute-force attacks
type GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule struct {
	// Rate limit rule name
	Name string `json:"name"`
	// Rate limit rule ID
	Id string `json:"id"`
}

// GetName returns GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Name, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetName() string {
	return v.Name
}

// GetId returns GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule.Id, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSetResultsRateLimitingRule) GetId() string {
	return v.Id
}

// GetRateLimitingRulesNameResponse is returned by GetRateLimitingRulesName on success.
type GetRateLimitingRulesNameResponse struct {
	RateLimitingRules GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet `json:"rateLimitingRules"`
}

// GetRateLimitingRules returns GetRateLimitingRulesNameResponse.RateLimitingRules, and is useful for accessing the field via an interface.
func (v *GetRateLimitingRulesNameResponse) GetRateLimitingRules() GetRateLimitingRulesNameRateLimitingRulesRateLimitingRuleResultSet {
	return v.RateLimitingRules
}

type InputAccountTakeoverAnomalyDetectionConfig struct {
	KeyValuePairs []*InputAnomalyDetectionConfigKeyValuePair `json:"keyValuePairs"`
	Name          AccountTakeoverAnomalyDetectionConfigName  `json:"name"`
	RuleId        *string                                    `json:"ruleId"`
}

// GetKeyValuePairs returns InputAccountTakeoverAnomalyDetectionConfig.KeyValuePairs, and is useful for accessing the field via an interface.
func (v *InputAccountTakeoverAnomalyDetectionConfig) GetKeyValuePairs() []*InputAnomalyDetectionConfigKeyValuePair {
	return v.KeyValuePairs
}

// GetName returns InputAccountTakeoverAnomalyDetectionConfig.Name, and is useful for accessing the field via an interface.
func (v *InputAccountTakeoverAnomalyDetectionConfig) GetName() AccountTakeoverAnomalyDetectionConfigName {
	return v.Name
}

// GetRuleId returns InputAccountTakeoverAnomalyDetectionConfig.RuleId, and is useful for accessing the field via an interface.
func (v *InputAccountTakeoverAnomalyDetectionConfig) GetRuleId() *string { return v.RuleId }

type InputAggregatableOrder struct {
	Aggregation   *MetricAggregationType    `json:"aggregation"`
	Direction     *OrderDirection           `json:"direction"`
	Key           *string                   `json:"key"`
	KeyExpression *InputAttributeExpression `json:"keyExpression"`
	Size          *int64                    `json:"size"`
	// Time Units used for this orderBy argument
	Units *TimeUnit `json:"units"`
}

// GetAggregation returns InputAggregatableOrder.Aggregation, and is useful for accessing the field via an interface.
func (v *InputAggregatableOrder) GetAggregation() *MetricAggregationType { return v.Aggregation }

// GetDirection returns InputAggregatableOrder.Direction, and is useful for accessing the field via an interface.
func (v *InputAggregatableOrder) GetDirection() *OrderDirection { return v.Direction }

// GetKey returns InputAggregatableOrder.Key, and is useful for accessing the field via an interface.
func (v *InputAggregatableOrder) GetKey() *string { return v.Key }

// GetKeyExpression returns InputAggregatableOrder.KeyExpression, and is useful for accessing the field via an interface.
func (v *InputAggregatableOrder) GetKeyExpression() *InputAttributeExpression { return v.KeyExpression }

// GetSize returns InputAggregatableOrder.Size, and is useful for accessing the field via an interface.
func (v *InputAggregatableOrder) GetSize() *int64 { return v.Size }

// GetUnits returns InputAggregatableOrder.Units, and is useful for accessing the field via an interface.
func (v *InputAggregatableOrder) GetUnits() *TimeUnit { return v.Units }

// API Param scope for anomaly configs
type InputAnomalyApiParamScope struct {
	// API Scope
	ApiScope *InputAnomalyApiScope `json:"apiScope"`
	// Param Info
	ParamInfo *InputAnomalyParamInfo `json:"paramInfo"`
	// Parameter Name
	ParamName *string `json:"paramName"`
	// Param Info Scope
	Scope *InputAnomalyParamInfoScope `json:"scope"`
}

// GetApiScope returns InputAnomalyApiParamScope.ApiScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyApiParamScope) GetApiScope() *InputAnomalyApiScope { return v.ApiScope }

// GetParamInfo returns InputAnomalyApiParamScope.ParamInfo, and is useful for accessing the field via an interface.
func (v *InputAnomalyApiParamScope) GetParamInfo() *InputAnomalyParamInfo { return v.ParamInfo }

// GetParamName returns InputAnomalyApiParamScope.ParamName, and is useful for accessing the field via an interface.
func (v *InputAnomalyApiParamScope) GetParamName() *string { return v.ParamName }

// GetScope returns InputAnomalyApiParamScope.Scope, and is useful for accessing the field via an interface.
func (v *InputAnomalyApiParamScope) GetScope() *InputAnomalyParamInfoScope { return v.Scope }

// API scope for anomaly configs
type InputAnomalyApiScope struct {
	// API Identifier
	Id string `json:"id"`
	// Service Scope
	ServiceScope InputAnomalyServiceScope `json:"serviceScope"`
}

// GetId returns InputAnomalyApiScope.Id, and is useful for accessing the field via an interface.
func (v *InputAnomalyApiScope) GetId() string { return v.Id }

// GetServiceScope returns InputAnomalyApiScope.ServiceScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyApiScope) GetServiceScope() InputAnomalyServiceScope { return v.ServiceScope }

// Backend API scope for anomaly configs
type InputAnomalyBackendApiScope struct {
	// Backend Scope
	BackendScope InputAnomalyBackendScope `json:"backendScope"`
	// Backend API Identifier
	Id string `json:"id"`
}

// GetBackendScope returns InputAnomalyBackendApiScope.BackendScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyBackendApiScope) GetBackendScope() InputAnomalyBackendScope {
	return v.BackendScope
}

// GetId returns InputAnomalyBackendApiScope.Id, and is useful for accessing the field via an interface.
func (v *InputAnomalyBackendApiScope) GetId() string { return v.Id }

// Backend scope for anomaly configs
type InputAnomalyBackendScope struct {
	// Environment Scope
	EnvironmentScope *InputAnomalyEnvironmentScope `json:"environmentScope"`
	// Backend Identifier
	Id string `json:"id"`
}

// GetEnvironmentScope returns InputAnomalyBackendScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyBackendScope) GetEnvironmentScope() *InputAnomalyEnvironmentScope {
	return v.EnvironmentScope
}

// GetId returns InputAnomalyBackendScope.Id, and is useful for accessing the field via an interface.
func (v *InputAnomalyBackendScope) GetId() string { return v.Id }

type InputAnomalyCategoryConfig struct {
	EventScoreCategory    *AnomalyEventScoreCategory    `json:"eventScoreCategory"`
	SecurityEventCategory *AnomalySecurityEventCategory `json:"securityEventCategory"`
}

// GetEventScoreCategory returns InputAnomalyCategoryConfig.EventScoreCategory, and is useful for accessing the field via an interface.
func (v *InputAnomalyCategoryConfig) GetEventScoreCategory() *AnomalyEventScoreCategory {
	return v.EventScoreCategory
}

// GetSecurityEventCategory returns InputAnomalyCategoryConfig.SecurityEventCategory, and is useful for accessing the field via an interface.
func (v *InputAnomalyCategoryConfig) GetSecurityEventCategory() *AnomalySecurityEventCategory {
	return v.SecurityEventCategory
}

type InputAnomalyConfigStatusChange struct {
	Disabled *bool `json:"disabled"`
	Internal *bool `json:"internal"`
}

// GetDisabled returns InputAnomalyConfigStatusChange.Disabled, and is useful for accessing the field via an interface.
func (v *InputAnomalyConfigStatusChange) GetDisabled() *bool { return v.Disabled }

// GetInternal returns InputAnomalyConfigStatusChange.Internal, and is useful for accessing the field via an interface.
func (v *InputAnomalyConfigStatusChange) GetInternal() *bool { return v.Internal }

type InputAnomalyDetectionConfig struct {
	// AnomalyDetectionConfig for Account Takeover Anomaly Detection
	AccountTakeoverAnomalyDetectionConfig *InputAccountTakeoverAnomalyDetectionConfig `json:"accountTakeoverAnomalyDetectionConfig"`
	// AnomalyDetectionConfig for API Definition Metadata
	ApiDefinitionMetadataAnomalyDetectionConfig *InputApiDefinitionMetadataAnomalyDetectionConfig `json:"apiDefinitionMetadataAnomalyDetectionConfig"`
	// AnomalyDetectionConfig for API State Based detections
	ApiStateBasedAnomalyDetectionConfig *InputApiStateBasedAnomalyDetectionConfig `json:"apiStateBasedAnomalyDetectionConfig"`
	// AnomalyDetectionConfig for Blocking Metadata
	BlockingMetadataAnomalyDetectionConfig *InputBlockingMetadataAnomalyDetectionConfig `json:"blockingMetadataAnomalyDetectionConfig"`
	// Anomaly Config Category
	Category *InputAnomalyCategoryConfig `json:"category"`
	// Type for AnomalyDetectionConfig
	ConfigType AnomalyDetectionConfigType `json:"configType"`
	// AnomalyDetectionConfig for Credential Stuffing Anomaly Detection
	CredentialStuffingAnomalyDetectionConfig *InputCredentialStuffingAnomalyDetectionConfig `json:"credentialStuffingAnomalyDetectionConfig"`
	// AnomalyDetectionConfig for Custom Rules
	CustomRulesAnomalyDetectionConfig *InputCustomRulesAnomalyDetectionConfig `json:"customRulesAnomalyDetectionConfig"`
	// AnomalyDetectionConfig for modsecurity
	ModSecurityAnomalyDetectionConfig *InputModsecurityAnomalyDetectionConfig `json:"modSecurityAnomalyDetectionConfig"`
	// AnomalyDetectionConfig for Session Definition Metadata
	SessionDefinitionMetadataAnomalyDetectionConfig *InputSessionDefinitionMetadataAnomalyDetectionConfig `json:"sessionDefinitionMetadataAnomalyDetectionConfig"`
	// Anomaly Config status
	Status *InputAnomalyConfigStatusChange `json:"status"`
	// AnomalyDetectionConfig for Volumetric Anomaly Detection
	VolumetricAnomalyDetectionConfig *InputVolumetricAnomalyDetectionConfig `json:"volumetricAnomalyDetectionConfig"`
}

// GetAccountTakeoverAnomalyDetectionConfig returns InputAnomalyDetectionConfig.AccountTakeoverAnomalyDetectionConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetAccountTakeoverAnomalyDetectionConfig() *InputAccountTakeoverAnomalyDetectionConfig {
	return v.AccountTakeoverAnomalyDetectionConfig
}

// GetApiDefinitionMetadataAnomalyDetectionConfig returns InputAnomalyDetectionConfig.ApiDefinitionMetadataAnomalyDetectionConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetApiDefinitionMetadataAnomalyDetectionConfig() *InputApiDefinitionMetadataAnomalyDetectionConfig {
	return v.ApiDefinitionMetadataAnomalyDetectionConfig
}

// GetApiStateBasedAnomalyDetectionConfig returns InputAnomalyDetectionConfig.ApiStateBasedAnomalyDetectionConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetApiStateBasedAnomalyDetectionConfig() *InputApiStateBasedAnomalyDetectionConfig {
	return v.ApiStateBasedAnomalyDetectionConfig
}

// GetBlockingMetadataAnomalyDetectionConfig returns InputAnomalyDetectionConfig.BlockingMetadataAnomalyDetectionConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetBlockingMetadataAnomalyDetectionConfig() *InputBlockingMetadataAnomalyDetectionConfig {
	return v.BlockingMetadataAnomalyDetectionConfig
}

// GetCategory returns InputAnomalyDetectionConfig.Category, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetCategory() *InputAnomalyCategoryConfig { return v.Category }

// GetConfigType returns InputAnomalyDetectionConfig.ConfigType, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetConfigType() AnomalyDetectionConfigType { return v.ConfigType }

// GetCredentialStuffingAnomalyDetectionConfig returns InputAnomalyDetectionConfig.CredentialStuffingAnomalyDetectionConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetCredentialStuffingAnomalyDetectionConfig() *InputCredentialStuffingAnomalyDetectionConfig {
	return v.CredentialStuffingAnomalyDetectionConfig
}

// GetCustomRulesAnomalyDetectionConfig returns InputAnomalyDetectionConfig.CustomRulesAnomalyDetectionConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetCustomRulesAnomalyDetectionConfig() *InputCustomRulesAnomalyDetectionConfig {
	return v.CustomRulesAnomalyDetectionConfig
}

// GetModSecurityAnomalyDetectionConfig returns InputAnomalyDetectionConfig.ModSecurityAnomalyDetectionConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetModSecurityAnomalyDetectionConfig() *InputModsecurityAnomalyDetectionConfig {
	return v.ModSecurityAnomalyDetectionConfig
}

// GetSessionDefinitionMetadataAnomalyDetectionConfig returns InputAnomalyDetectionConfig.SessionDefinitionMetadataAnomalyDetectionConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetSessionDefinitionMetadataAnomalyDetectionConfig() *InputSessionDefinitionMetadataAnomalyDetectionConfig {
	return v.SessionDefinitionMetadataAnomalyDetectionConfig
}

// GetStatus returns InputAnomalyDetectionConfig.Status, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetStatus() *InputAnomalyConfigStatusChange { return v.Status }

// GetVolumetricAnomalyDetectionConfig returns InputAnomalyDetectionConfig.VolumetricAnomalyDetectionConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfig) GetVolumetricAnomalyDetectionConfig() *InputVolumetricAnomalyDetectionConfig {
	return v.VolumetricAnomalyDetectionConfig
}

type InputAnomalyDetectionConfigDelete struct {
	AnomalyDetectionConfigs []*InputAnomalyDetectionConfig `json:"anomalyDetectionConfigs"`
	// anomaly detection type
	AnomalyDetectionType *AnomalyDetectionType `json:"anomalyDetectionType"`
	AnomalyScope         InputAnomalyScope     `json:"anomalyScope"`
}

// GetAnomalyDetectionConfigs returns InputAnomalyDetectionConfigDelete.AnomalyDetectionConfigs, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigDelete) GetAnomalyDetectionConfigs() []*InputAnomalyDetectionConfig {
	return v.AnomalyDetectionConfigs
}

// GetAnomalyDetectionType returns InputAnomalyDetectionConfigDelete.AnomalyDetectionType, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigDelete) GetAnomalyDetectionType() *AnomalyDetectionType {
	return v.AnomalyDetectionType
}

// GetAnomalyScope returns InputAnomalyDetectionConfigDelete.AnomalyScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigDelete) GetAnomalyScope() InputAnomalyScope {
	return v.AnomalyScope
}

type InputAnomalyDetectionConfigKeyValuePair struct {
	ConfigKey   string                           `json:"configKey"`
	ConfigValue InputAnomalyDetectionConfigValue `json:"configValue"`
}

// GetConfigKey returns InputAnomalyDetectionConfigKeyValuePair.ConfigKey, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigKeyValuePair) GetConfigKey() string { return v.ConfigKey }

// GetConfigValue returns InputAnomalyDetectionConfigKeyValuePair.ConfigValue, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigKeyValuePair) GetConfigValue() InputAnomalyDetectionConfigValue {
	return v.ConfigValue
}

type InputAnomalyDetectionConfigValue struct {
	// API Call Spike tuning config list
	ApiCallSpikeTuningConfigList []*InputApiCallSpikeTuningConfig `json:"apiCallSpikeTuningConfigList"`
	// Credential Stuffing tuning config list
	CredentialStuffingTuningConfigList []*InputCredentialStuffingTuningConfig `json:"credentialStuffingTuningConfigList"`
	// Anomaly Config for Email Domain
	EmailDomainAnomalyConfig *InputEmailDomainAnomalyConfig `json:"emailDomainAnomalyConfig"`
	// Anomaly Config for Ip Type
	IpTypeAnomalyConfig *InputIpTypeAnomalyConfig `json:"ipTypeAnomalyConfig"`
	// Anomaly Config for Land Speed Violation
	LandSpeedViolationConfig *InputLandSpeedViolationConfig `json:"landSpeedViolationConfig"`
	// Multi valued string param rule list
	MultiValuedStringParamRuleList []*InputMultiValuedStringParamRule `json:"multiValuedStringParamRuleList"`
	// Param value type excluded by modsec
	ParamValueTypeModsecExcludes []*InputParamValueTypeModsecExclude `json:"paramValueTypeModsecExcludes"`
	// Config for predecessor successor API sequence
	PredecessorSuccessorApiSequenceConfig *InputPredecessorSuccessorApiSequenceConfig `json:"predecessorSuccessorApiSequenceConfig"`
	// Anomaly Config for Session Expiry
	SessionExpiryConfig *InputSessionExpiryConfig `json:"sessionExpiryConfig"`
	// Anomaly Detection Config value as string list
	StringList []*string `json:"stringList"`
	// Sub rule config list
	SubRuleConfigList []*InputAnomalyDetectionSubRuleConfig `json:"subRuleConfigList"`
	// User ID data config list
	UserIdDataConfigList []*InputDetectionUserIdDataConfig `json:"userIdDataConfigList"`
	// Anomaly Detection Config string value
	Value *string `json:"value"`
}

// GetApiCallSpikeTuningConfigList returns InputAnomalyDetectionConfigValue.ApiCallSpikeTuningConfigList, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetApiCallSpikeTuningConfigList() []*InputApiCallSpikeTuningConfig {
	return v.ApiCallSpikeTuningConfigList
}

// GetCredentialStuffingTuningConfigList returns InputAnomalyDetectionConfigValue.CredentialStuffingTuningConfigList, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetCredentialStuffingTuningConfigList() []*InputCredentialStuffingTuningConfig {
	return v.CredentialStuffingTuningConfigList
}

// GetEmailDomainAnomalyConfig returns InputAnomalyDetectionConfigValue.EmailDomainAnomalyConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetEmailDomainAnomalyConfig() *InputEmailDomainAnomalyConfig {
	return v.EmailDomainAnomalyConfig
}

// GetIpTypeAnomalyConfig returns InputAnomalyDetectionConfigValue.IpTypeAnomalyConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetIpTypeAnomalyConfig() *InputIpTypeAnomalyConfig {
	return v.IpTypeAnomalyConfig
}

// GetLandSpeedViolationConfig returns InputAnomalyDetectionConfigValue.LandSpeedViolationConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetLandSpeedViolationConfig() *InputLandSpeedViolationConfig {
	return v.LandSpeedViolationConfig
}

// GetMultiValuedStringParamRuleList returns InputAnomalyDetectionConfigValue.MultiValuedStringParamRuleList, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetMultiValuedStringParamRuleList() []*InputMultiValuedStringParamRule {
	return v.MultiValuedStringParamRuleList
}

// GetParamValueTypeModsecExcludes returns InputAnomalyDetectionConfigValue.ParamValueTypeModsecExcludes, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetParamValueTypeModsecExcludes() []*InputParamValueTypeModsecExclude {
	return v.ParamValueTypeModsecExcludes
}

// GetPredecessorSuccessorApiSequenceConfig returns InputAnomalyDetectionConfigValue.PredecessorSuccessorApiSequenceConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetPredecessorSuccessorApiSequenceConfig() *InputPredecessorSuccessorApiSequenceConfig {
	return v.PredecessorSuccessorApiSequenceConfig
}

// GetSessionExpiryConfig returns InputAnomalyDetectionConfigValue.SessionExpiryConfig, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetSessionExpiryConfig() *InputSessionExpiryConfig {
	return v.SessionExpiryConfig
}

// GetStringList returns InputAnomalyDetectionConfigValue.StringList, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetStringList() []*string { return v.StringList }

// GetSubRuleConfigList returns InputAnomalyDetectionConfigValue.SubRuleConfigList, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetSubRuleConfigList() []*InputAnomalyDetectionSubRuleConfig {
	return v.SubRuleConfigList
}

// GetUserIdDataConfigList returns InputAnomalyDetectionConfigValue.UserIdDataConfigList, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetUserIdDataConfigList() []*InputDetectionUserIdDataConfig {
	return v.UserIdDataConfigList
}

// GetValue returns InputAnomalyDetectionConfigValue.Value, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionConfigValue) GetValue() *string { return v.Value }

type InputAnomalyDetectionSubRuleConfig struct {
	BlockingEnabled *bool                           `json:"blockingEnabled"`
	Category        *InputAnomalyCategoryConfig     `json:"category"`
	Status          *InputAnomalyConfigStatusChange `json:"status"`
	SubRuleId       string                          `json:"subRuleId"`
}

// GetBlockingEnabled returns InputAnomalyDetectionSubRuleConfig.BlockingEnabled, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionSubRuleConfig) GetBlockingEnabled() *bool { return v.BlockingEnabled }

// GetCategory returns InputAnomalyDetectionSubRuleConfig.Category, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionSubRuleConfig) GetCategory() *InputAnomalyCategoryConfig {
	return v.Category
}

// GetStatus returns InputAnomalyDetectionSubRuleConfig.Status, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionSubRuleConfig) GetStatus() *InputAnomalyConfigStatusChange {
	return v.Status
}

// GetSubRuleId returns InputAnomalyDetectionSubRuleConfig.SubRuleId, and is useful for accessing the field via an interface.
func (v *InputAnomalyDetectionSubRuleConfig) GetSubRuleId() string { return v.SubRuleId }

// Environment scope for anomaly configs
type InputAnomalyEnvironmentScope struct {
	// Environment Identifier
	Id string `json:"id"`
}

// GetId returns InputAnomalyEnvironmentScope.Id, and is useful for accessing the field via an interface.
func (v *InputAnomalyEnvironmentScope) GetId() string { return v.Id }

type InputAnomalyParamInfo struct {
	ParamInfoType AnomalyParamInfoType `json:"paramInfoType"`
	ParamName     *string              `json:"paramName"`
	ParamRegex    *string              `json:"paramRegex"`
}

// GetParamInfoType returns InputAnomalyParamInfo.ParamInfoType, and is useful for accessing the field via an interface.
func (v *InputAnomalyParamInfo) GetParamInfoType() AnomalyParamInfoType { return v.ParamInfoType }

// GetParamName returns InputAnomalyParamInfo.ParamName, and is useful for accessing the field via an interface.
func (v *InputAnomalyParamInfo) GetParamName() *string { return v.ParamName }

// GetParamRegex returns InputAnomalyParamInfo.ParamRegex, and is useful for accessing the field via an interface.
func (v *InputAnomalyParamInfo) GetParamRegex() *string { return v.ParamRegex }

type InputAnomalyParamInfoScope struct {
	ApiScope     *InputAnomalyApiScope     `json:"apiScope"`
	ScopeType    AnomalyScopeType          `json:"scopeType"`
	ServiceScope *InputAnomalyServiceScope `json:"serviceScope"`
}

// GetApiScope returns InputAnomalyParamInfoScope.ApiScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyParamInfoScope) GetApiScope() *InputAnomalyApiScope { return v.ApiScope }

// GetScopeType returns InputAnomalyParamInfoScope.ScopeType, and is useful for accessing the field via an interface.
func (v *InputAnomalyParamInfoScope) GetScopeType() AnomalyScopeType { return v.ScopeType }

// GetServiceScope returns InputAnomalyParamInfoScope.ServiceScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyParamInfoScope) GetServiceScope() *InputAnomalyServiceScope {
	return v.ServiceScope
}

type InputAnomalyRuleConfigUpdate struct {
	ConfigStatus   *InputAnomalyConfigStatusChange    `json:"configStatus"`
	ConfigType     AnomalyDetectionConfigType         `json:"configType"`
	RuleId         string                             `json:"ruleId"`
	SubRuleConfigs []*InputAnomalySubRuleConfigUpdate `json:"subRuleConfigs"`
}

// GetConfigStatus returns InputAnomalyRuleConfigUpdate.ConfigStatus, and is useful for accessing the field via an interface.
func (v *InputAnomalyRuleConfigUpdate) GetConfigStatus() *InputAnomalyConfigStatusChange {
	return v.ConfigStatus
}

// GetConfigType returns InputAnomalyRuleConfigUpdate.ConfigType, and is useful for accessing the field via an interface.
func (v *InputAnomalyRuleConfigUpdate) GetConfigType() AnomalyDetectionConfigType {
	return v.ConfigType
}

// GetRuleId returns InputAnomalyRuleConfigUpdate.RuleId, and is useful for accessing the field via an interface.
func (v *InputAnomalyRuleConfigUpdate) GetRuleId() string { return v.RuleId }

// GetSubRuleConfigs returns InputAnomalyRuleConfigUpdate.SubRuleConfigs, and is useful for accessing the field via an interface.
func (v *InputAnomalyRuleConfigUpdate) GetSubRuleConfigs() []*InputAnomalySubRuleConfigUpdate {
	return v.SubRuleConfigs
}

// Scope for anomaly configs
type InputAnomalyScope struct {
	// API Param Scope populated when scopeType = AnomalyScopeType.API_PARAM
	ApiParamScope *InputAnomalyApiParamScope `json:"apiParamScope"`
	// API Scope populated when scopeType = AnomalyScopeType.API
	ApiScope *InputAnomalyApiScope `json:"apiScope"`
	// Backend API Scope populated when scopeType = AnomalyScopeType.BACKEND_API
	BackendApiScope *InputAnomalyBackendApiScope `json:"backendApiScope"`
	// Backend Scope populated when scopeType = AnomalyScopeType.BACKEND
	BackendScope *InputAnomalyBackendScope `json:"backendScope"`
	// Environment Scope populated when scopeType = AnomalyScopeType.ENVIRONMENT
	EnvironmentScope *InputAnomalyEnvironmentScope `json:"environmentScope"`
	// Scope Type
	ScopeType AnomalyScopeType `json:"scopeType"`
	// Service Scope populated when scopeType = AnomalyScopeType.SERVICE
	ServiceScope *InputAnomalyServiceScope `json:"serviceScope"`
}

// GetApiParamScope returns InputAnomalyScope.ApiParamScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyScope) GetApiParamScope() *InputAnomalyApiParamScope { return v.ApiParamScope }

// GetApiScope returns InputAnomalyScope.ApiScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyScope) GetApiScope() *InputAnomalyApiScope { return v.ApiScope }

// GetBackendApiScope returns InputAnomalyScope.BackendApiScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyScope) GetBackendApiScope() *InputAnomalyBackendApiScope {
	return v.BackendApiScope
}

// GetBackendScope returns InputAnomalyScope.BackendScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyScope) GetBackendScope() *InputAnomalyBackendScope { return v.BackendScope }

// GetEnvironmentScope returns InputAnomalyScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyScope) GetEnvironmentScope() *InputAnomalyEnvironmentScope {
	return v.EnvironmentScope
}

// GetScopeType returns InputAnomalyScope.ScopeType, and is useful for accessing the field via an interface.
func (v *InputAnomalyScope) GetScopeType() AnomalyScopeType { return v.ScopeType }

// GetServiceScope returns InputAnomalyScope.ServiceScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyScope) GetServiceScope() *InputAnomalyServiceScope { return v.ServiceScope }

// Service scope for anomaly configs
type InputAnomalyServiceScope struct {
	// Environment Scope
	EnvironmentScope *InputAnomalyEnvironmentScope `json:"environmentScope"`
	// Service Identifier
	Id string `json:"id"`
}

// GetEnvironmentScope returns InputAnomalyServiceScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputAnomalyServiceScope) GetEnvironmentScope() *InputAnomalyEnvironmentScope {
	return v.EnvironmentScope
}

// GetId returns InputAnomalyServiceScope.Id, and is useful for accessing the field via an interface.
func (v *InputAnomalyServiceScope) GetId() string { return v.Id }

type InputAnomalySubRuleConfigUpdate struct {
	// Action for the anomaly sub rule
	AnomalySubRuleAction *AnomalySubRuleAction           `json:"anomalySubRuleAction"`
	BlockingEnabled      *bool                           `json:"blockingEnabled"`
	ConfigStatus         *InputAnomalyConfigStatusChange `json:"configStatus"`
	SubRuleId            string                          `json:"subRuleId"`
}

// GetAnomalySubRuleAction returns InputAnomalySubRuleConfigUpdate.AnomalySubRuleAction, and is useful for accessing the field via an interface.
func (v *InputAnomalySubRuleConfigUpdate) GetAnomalySubRuleAction() *AnomalySubRuleAction {
	return v.AnomalySubRuleAction
}

// GetBlockingEnabled returns InputAnomalySubRuleConfigUpdate.BlockingEnabled, and is useful for accessing the field via an interface.
func (v *InputAnomalySubRuleConfigUpdate) GetBlockingEnabled() *bool { return v.BlockingEnabled }

// GetConfigStatus returns InputAnomalySubRuleConfigUpdate.ConfigStatus, and is useful for accessing the field via an interface.
func (v *InputAnomalySubRuleConfigUpdate) GetConfigStatus() *InputAnomalyConfigStatusChange {
	return v.ConfigStatus
}

// GetSubRuleId returns InputAnomalySubRuleConfigUpdate.SubRuleId, and is useful for accessing the field via an interface.
func (v *InputAnomalySubRuleConfigUpdate) GetSubRuleId() string { return v.SubRuleId }

type InputApiCallSpikeTuningConfig struct {
	// The detection config would be applied on the endpoints identified by this config
	DetectionScopeConfig InputDetectionScopeConfig `json:"detectionScopeConfig"`
	// Minimum span count for the API to be present during the detection run for the
	// API data to be qualified to be run through the detector
	EndpointSpanCountDetectionThreshold int64 `json:"endpointSpanCountDetectionThreshold"`
}

// GetDetectionScopeConfig returns InputApiCallSpikeTuningConfig.DetectionScopeConfig, and is useful for accessing the field via an interface.
func (v *InputApiCallSpikeTuningConfig) GetDetectionScopeConfig() InputDetectionScopeConfig {
	return v.DetectionScopeConfig
}

// GetEndpointSpanCountDetectionThreshold returns InputApiCallSpikeTuningConfig.EndpointSpanCountDetectionThreshold, and is useful for accessing the field via an interface.
func (v *InputApiCallSpikeTuningConfig) GetEndpointSpanCountDetectionThreshold() int64 {
	return v.EndpointSpanCountDetectionThreshold
}

type InputApiDefinitionMetadataAnomalyDetectionConfig struct {
	KeyValuePairs []*InputAnomalyDetectionConfigKeyValuePair      `json:"keyValuePairs"`
	Name          ApiDefinitionMetadataAnomalyDetectionConfigName `json:"name"`
	RuleId        *string                                         `json:"ruleId"`
}

// GetKeyValuePairs returns InputApiDefinitionMetadataAnomalyDetectionConfig.KeyValuePairs, and is useful for accessing the field via an interface.
func (v *InputApiDefinitionMetadataAnomalyDetectionConfig) GetKeyValuePairs() []*InputAnomalyDetectionConfigKeyValuePair {
	return v.KeyValuePairs
}

// GetName returns InputApiDefinitionMetadataAnomalyDetectionConfig.Name, and is useful for accessing the field via an interface.
func (v *InputApiDefinitionMetadataAnomalyDetectionConfig) GetName() ApiDefinitionMetadataAnomalyDetectionConfigName {
	return v.Name
}

// GetRuleId returns InputApiDefinitionMetadataAnomalyDetectionConfig.RuleId, and is useful for accessing the field via an interface.
func (v *InputApiDefinitionMetadataAnomalyDetectionConfig) GetRuleId() *string { return v.RuleId }

// Api naming rule config. There may be multiple configs, but only the one
// corresponding to the api naming rule config type would be non null
type InputApiNamingRuleConfig struct {
	// Specifies the api naming rule config type
	ApiNamingRuleConfigType ApiNamingRuleConfigType `json:"apiNamingRuleConfigType"`
	// Segment matching based api naming rule config
	SegmentMatchingBasedRuleConfig *InputSegmentMatchingBasedRuleConfig `json:"segmentMatchingBasedRuleConfig"`
}

// GetApiNamingRuleConfigType returns InputApiNamingRuleConfig.ApiNamingRuleConfigType, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleConfig) GetApiNamingRuleConfigType() ApiNamingRuleConfigType {
	return v.ApiNamingRuleConfigType
}

// GetSegmentMatchingBasedRuleConfig returns InputApiNamingRuleConfig.SegmentMatchingBasedRuleConfig, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleConfig) GetSegmentMatchingBasedRuleConfig() *InputSegmentMatchingBasedRuleConfig {
	return v.SegmentMatchingBasedRuleConfig
}

// Input to create api naming rule
type InputApiNamingRuleCreate struct {
	// Api naming rule config
	ApiNamingRuleConfig InputApiNamingRuleConfig `json:"apiNamingRuleConfig"`
	// Says if api naming rule is disabled
	Disabled bool `json:"disabled"`
	// Name of the api naming rule
	Name string `json:"name"`
	// Filter to match the spans to apply the api naming rule
	SpanFilter InputTraceableSpanProcessingRuleFilter `json:"spanFilter"`
}

// GetApiNamingRuleConfig returns InputApiNamingRuleCreate.ApiNamingRuleConfig, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleCreate) GetApiNamingRuleConfig() InputApiNamingRuleConfig {
	return v.ApiNamingRuleConfig
}

// GetDisabled returns InputApiNamingRuleCreate.Disabled, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleCreate) GetDisabled() bool { return v.Disabled }

// GetName returns InputApiNamingRuleCreate.Name, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleCreate) GetName() string { return v.Name }

// GetSpanFilter returns InputApiNamingRuleCreate.SpanFilter, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleCreate) GetSpanFilter() InputTraceableSpanProcessingRuleFilter {
	return v.SpanFilter
}

// Input to delete api naming rule
type InputApiNamingRuleDelete struct {
	Id string `json:"id"`
}

// GetId returns InputApiNamingRuleDelete.Id, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleDelete) GetId() string { return v.Id }

// Input to update api naming rule
type InputApiNamingRuleUpdate struct {
	ApiNamingRuleConfig InputApiNamingRuleConfig               `json:"apiNamingRuleConfig"`
	Disabled            bool                                   `json:"disabled"`
	Id                  string                                 `json:"id"`
	Name                string                                 `json:"name"`
	SpanFilter          InputTraceableSpanProcessingRuleFilter `json:"spanFilter"`
}

// GetApiNamingRuleConfig returns InputApiNamingRuleUpdate.ApiNamingRuleConfig, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleUpdate) GetApiNamingRuleConfig() InputApiNamingRuleConfig {
	return v.ApiNamingRuleConfig
}

// GetDisabled returns InputApiNamingRuleUpdate.Disabled, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleUpdate) GetDisabled() bool { return v.Disabled }

// GetId returns InputApiNamingRuleUpdate.Id, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleUpdate) GetId() string { return v.Id }

// GetName returns InputApiNamingRuleUpdate.Name, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleUpdate) GetName() string { return v.Name }

// GetSpanFilter returns InputApiNamingRuleUpdate.SpanFilter, and is useful for accessing the field via an interface.
func (v *InputApiNamingRuleUpdate) GetSpanFilter() InputTraceableSpanProcessingRuleFilter {
	return v.SpanFilter
}

type InputApiStateBasedAnomalyDetectionConfig struct {
	KeyValuePairs []*InputAnomalyDetectionConfigKeyValuePair `json:"keyValuePairs"`
	Name          ApiStateBasedAnomalyDetectionConfigName    `json:"name"`
}

// GetKeyValuePairs returns InputApiStateBasedAnomalyDetectionConfig.KeyValuePairs, and is useful for accessing the field via an interface.
func (v *InputApiStateBasedAnomalyDetectionConfig) GetKeyValuePairs() []*InputAnomalyDetectionConfigKeyValuePair {
	return v.KeyValuePairs
}

// GetName returns InputApiStateBasedAnomalyDetectionConfig.Name, and is useful for accessing the field via an interface.
func (v *InputApiStateBasedAnomalyDetectionConfig) GetName() ApiStateBasedAnomalyDetectionConfigName {
	return v.Name
}

type InputAttributeExpression struct {
	Key     string  `json:"key"`
	Subpath *string `json:"subpath"`
}

// GetKey returns InputAttributeExpression.Key, and is useful for accessing the field via an interface.
func (v *InputAttributeExpression) GetKey() string { return v.Key }

// GetSubpath returns InputAttributeExpression.Subpath, and is useful for accessing the field via an interface.
func (v *InputAttributeExpression) GetSubpath() *string { return v.Subpath }

type InputBlockingMetadataAnomalyDetectionConfig struct {
	KeyValuePairs []*InputAnomalyDetectionConfigKeyValuePair `json:"keyValuePairs"`
	Name          BlockingMetadataAnomalyDetectionConfigName `json:"name"`
}

// GetKeyValuePairs returns InputBlockingMetadataAnomalyDetectionConfig.KeyValuePairs, and is useful for accessing the field via an interface.
func (v *InputBlockingMetadataAnomalyDetectionConfig) GetKeyValuePairs() []*InputAnomalyDetectionConfigKeyValuePair {
	return v.KeyValuePairs
}

// GetName returns InputBlockingMetadataAnomalyDetectionConfig.Name, and is useful for accessing the field via an interface.
func (v *InputBlockingMetadataAnomalyDetectionConfig) GetName() BlockingMetadataAnomalyDetectionConfigName {
	return v.Name
}

type InputCredentialStuffingAnomalyDetectionConfig struct {
	KeyValuePairs []*InputAnomalyDetectionConfigKeyValuePair   `json:"keyValuePairs"`
	Name          CredentialStuffingAnomalyDetectionConfigName `json:"name"`
	RuleId        *string                                      `json:"ruleId"`
}

// GetKeyValuePairs returns InputCredentialStuffingAnomalyDetectionConfig.KeyValuePairs, and is useful for accessing the field via an interface.
func (v *InputCredentialStuffingAnomalyDetectionConfig) GetKeyValuePairs() []*InputAnomalyDetectionConfigKeyValuePair {
	return v.KeyValuePairs
}

// GetName returns InputCredentialStuffingAnomalyDetectionConfig.Name, and is useful for accessing the field via an interface.
func (v *InputCredentialStuffingAnomalyDetectionConfig) GetName() CredentialStuffingAnomalyDetectionConfigName {
	return v.Name
}

// GetRuleId returns InputCredentialStuffingAnomalyDetectionConfig.RuleId, and is useful for accessing the field via an interface.
func (v *InputCredentialStuffingAnomalyDetectionConfig) GetRuleId() *string { return v.RuleId }

type InputCredentialStuffingTuningConfig struct {
	// The detection config would be applied on the endpoints identified by this config
	DetectionScopeConfig InputDetectionScopeConfig `json:"detectionScopeConfig"`
	// Percentage threshold for the failed attempts to be considered as credntial stuffing attack
	FailedLoginPercentageThreshold int64 `json:"failedLoginPercentageThreshold"`
	// Look back duration for the detector
	LookBackDuration string `json:"lookBackDuration"`
	// Threshold for the number of user accounts attacked per IP to be considered as credential stuffing attack
	UniqueUsersThreshold int64 `json:"uniqueUsersThreshold"`
	// Config for extracting the username from the API
	UsernameExtractionConfig InputParameterExtractionConfig `json:"usernameExtractionConfig"`
}

// GetDetectionScopeConfig returns InputCredentialStuffingTuningConfig.DetectionScopeConfig, and is useful for accessing the field via an interface.
func (v *InputCredentialStuffingTuningConfig) GetDetectionScopeConfig() InputDetectionScopeConfig {
	return v.DetectionScopeConfig
}

// GetFailedLoginPercentageThreshold returns InputCredentialStuffingTuningConfig.FailedLoginPercentageThreshold, and is useful for accessing the field via an interface.
func (v *InputCredentialStuffingTuningConfig) GetFailedLoginPercentageThreshold() int64 {
	return v.FailedLoginPercentageThreshold
}

// GetLookBackDuration returns InputCredentialStuffingTuningConfig.LookBackDuration, and is useful for accessing the field via an interface.
func (v *InputCredentialStuffingTuningConfig) GetLookBackDuration() string { return v.LookBackDuration }

// GetUniqueUsersThreshold returns InputCredentialStuffingTuningConfig.UniqueUsersThreshold, and is useful for accessing the field via an interface.
func (v *InputCredentialStuffingTuningConfig) GetUniqueUsersThreshold() int64 {
	return v.UniqueUsersThreshold
}

// GetUsernameExtractionConfig returns InputCredentialStuffingTuningConfig.UsernameExtractionConfig, and is useful for accessing the field via an interface.
func (v *InputCredentialStuffingTuningConfig) GetUsernameExtractionConfig() InputParameterExtractionConfig {
	return v.UsernameExtractionConfig
}

// AnomalyDetectionConfig for Custom Rules
type InputCustomRulesAnomalyDetectionConfig struct {
	// AnomalyDetectionConfig key value pair list
	KeyValuePairs []*InputAnomalyDetectionConfigKeyValuePair `json:"keyValuePairs"`
	// CustomRulesAnomalyDetectionConfig name
	Name CustomRulesAnomalyDetectionConfigName `json:"name"`
}

// GetKeyValuePairs returns InputCustomRulesAnomalyDetectionConfig.KeyValuePairs, and is useful for accessing the field via an interface.
func (v *InputCustomRulesAnomalyDetectionConfig) GetKeyValuePairs() []*InputAnomalyDetectionConfigKeyValuePair {
	return v.KeyValuePairs
}

// GetName returns InputCustomRulesAnomalyDetectionConfig.Name, and is useful for accessing the field via an interface.
func (v *InputCustomRulesAnomalyDetectionConfig) GetName() CustomRulesAnomalyDetectionConfigName {
	return v.Name
}

type InputCustomSignatureEnvironmentScope struct {
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns InputCustomSignatureEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureEnvironmentScope) GetEnvironmentIds() []*string { return v.EnvironmentIds }

type InputCustomSignatureRuleAgentEffect struct {
	AgentModifications []*InputCustomSignatureRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns InputCustomSignatureRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleAgentEffect) GetAgentModifications() []*InputCustomSignatureRuleAgentModification {
	return v.AgentModifications
}

type InputCustomSignatureRuleAgentModification struct {
	AgentModificationType CustomSignatureRuleAgentModificationType `json:"agentModificationType"`
	HeaderInjection       InputCustomSignatureRuleHeaderInjection  `json:"headerInjection"`
}

// GetAgentModificationType returns InputCustomSignatureRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleAgentModification) GetAgentModificationType() CustomSignatureRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns InputCustomSignatureRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleAgentModification) GetHeaderInjection() InputCustomSignatureRuleHeaderInjection {
	return v.HeaderInjection
}

type InputCustomSignatureRuleAttributeKeyValueExpression struct {
	// Key condition
	KeyCondition *InputCustomSignatureStringMatchCondition `json:"keyCondition"`
	// Key match operator
	KeyMatchOperator *CustomSignatureRuleMatchOperator `json:"keyMatchOperator"`
	// Match key
	MatchKey *string `json:"matchKey"`
	// Match value
	MatchValue *string `json:"matchValue"`
	// Value condition
	ValueCondition *InputCustomSignatureStringMatchCondition `json:"valueCondition"`
	// Value match operator
	ValueMatchOperator *CustomSignatureRuleMatchOperator `json:"valueMatchOperator"`
}

// GetKeyCondition returns InputCustomSignatureRuleAttributeKeyValueExpression.KeyCondition, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleAttributeKeyValueExpression) GetKeyCondition() *InputCustomSignatureStringMatchCondition {
	return v.KeyCondition
}

// GetKeyMatchOperator returns InputCustomSignatureRuleAttributeKeyValueExpression.KeyMatchOperator, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleAttributeKeyValueExpression) GetKeyMatchOperator() *CustomSignatureRuleMatchOperator {
	return v.KeyMatchOperator
}

// GetMatchKey returns InputCustomSignatureRuleAttributeKeyValueExpression.MatchKey, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleAttributeKeyValueExpression) GetMatchKey() *string {
	return v.MatchKey
}

// GetMatchValue returns InputCustomSignatureRuleAttributeKeyValueExpression.MatchValue, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleAttributeKeyValueExpression) GetMatchValue() *string {
	return v.MatchValue
}

// GetValueCondition returns InputCustomSignatureRuleAttributeKeyValueExpression.ValueCondition, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleAttributeKeyValueExpression) GetValueCondition() *InputCustomSignatureStringMatchCondition {
	return v.ValueCondition
}

// GetValueMatchOperator returns InputCustomSignatureRuleAttributeKeyValueExpression.ValueMatchOperator, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleAttributeKeyValueExpression) GetValueMatchOperator() *CustomSignatureRuleMatchOperator {
	return v.ValueMatchOperator
}

type InputCustomSignatureRuleClauseGroup struct {
	ClauseOperator CustomSignatureRuleClauseOperator        `json:"clauseOperator"`
	Clauses        []*InputCustomSignatureRuleClauseRequest `json:"clauses"`
}

// GetClauseOperator returns InputCustomSignatureRuleClauseGroup.ClauseOperator, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseGroup) GetClauseOperator() CustomSignatureRuleClauseOperator {
	return v.ClauseOperator
}

// GetClauses returns InputCustomSignatureRuleClauseGroup.Clauses, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseGroup) GetClauses() []*InputCustomSignatureRuleClauseRequest {
	return v.Clauses
}

type InputCustomSignatureRuleClauseRequest struct {
	AttributeKeyValueExpression *InputCustomSignatureRuleAttributeKeyValueExpression `json:"attributeKeyValueExpression"`
	// Nested clause group schema for a custom signature rule
	ClauseGroup *InputCustomSignatureRuleClauseGroup `json:"clauseGroup"`
	ClauseType  CustomSignatureRuleClauseType        `json:"clauseType"`
	// Custom sec rule
	CustomSecRule *InputCustomSignatureSecRule `json:"customSecRule"`
	// Email domain expression applicable on a custom signature rule
	EmailDomainExpression *InputCustomSignatureRuleEmailDomainExpression `json:"emailDomainExpression"`
	// Ip abuse velocity expression applicable on a custom signature rule
	IpAbuseVelocityExpression *InputCustomSignatureRuleIpAbuseVelocityExpression `json:"ipAbuseVelocityExpression"`
	// IP address expression applicable on a custom signature rule
	IpAddressExpression *InputCustomSignatureRuleIpAddressExpression `json:"ipAddressExpression"`
	// Ip asn expression applicable on a custom signature rule
	IpAsnExpression *InputCustomSignatureRuleIpAsnExpression `json:"ipAsnExpression"`
	// IP connection type expression applicable on a custom signature rule
	IpConnectionTypeExpression *InputCustomSignatureRuleIpConnectionTypeExpression `json:"ipConnectionTypeExpression"`
	// Ip organisation expression applicable on a custom signature rule
	IpOrganisationExpression *InputCustomSignatureRuleIpOrganisationExpression `json:"ipOrganisationExpression"`
	// IP reputation expression applicable on a custom signature rule
	IpReputationExpression *InputCustomSignatureRuleIpReputationExpression `json:"ipReputationExpression"`
	// IP type expression applicable on a custom signature rule
	IpTypeExpression   *InputCustomSignatureRuleIpTypeExpression   `json:"ipTypeExpression"`
	KeyValueExpression *InputCustomSignatureRuleKeyValueExpression `json:"keyValueExpression"`
	// LHS and RHS keys expression for dynamic matching applicable on a custom signature rule
	LhsRhsKeysExpression *InputCustomSignatureRuleLhsRhsKeysExpression `json:"lhsRhsKeysExpression"`
	MatchExpression      *InputCustomSignatureRuleMatchExpression      `json:"matchExpression"`
	// Region expression applicable on a custom signature rule
	RegionExpression *InputCustomSignatureRuleRegionExpression `json:"regionExpression"`
	// Request scanner type expression applicable on a custom signature rule
	RequestScannerTypeExpression *InputCustomSignatureRuleRequestScannerTypeExpression `json:"requestScannerTypeExpression"`
	// Scope expression applicable on a custom signature rule
	ScopeExpression *InputCustomSignatureRuleScopeExpression `json:"scopeExpression"`
	// User agent expression applicable on a custom signature rule
	UserAgentExpression *InputCustomSignatureRuleUserAgentExpression `json:"userAgentExpression"`
	// User ID expression applicable on a custom signature rule
	UserIdExpression *InputCustomSignatureRuleUserIdExpression `json:"userIdExpression"`
}

// GetAttributeKeyValueExpression returns InputCustomSignatureRuleClauseRequest.AttributeKeyValueExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetAttributeKeyValueExpression() *InputCustomSignatureRuleAttributeKeyValueExpression {
	return v.AttributeKeyValueExpression
}

// GetClauseGroup returns InputCustomSignatureRuleClauseRequest.ClauseGroup, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetClauseGroup() *InputCustomSignatureRuleClauseGroup {
	return v.ClauseGroup
}

// GetClauseType returns InputCustomSignatureRuleClauseRequest.ClauseType, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetClauseType() CustomSignatureRuleClauseType {
	return v.ClauseType
}

// GetCustomSecRule returns InputCustomSignatureRuleClauseRequest.CustomSecRule, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetCustomSecRule() *InputCustomSignatureSecRule {
	return v.CustomSecRule
}

// GetEmailDomainExpression returns InputCustomSignatureRuleClauseRequest.EmailDomainExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetEmailDomainExpression() *InputCustomSignatureRuleEmailDomainExpression {
	return v.EmailDomainExpression
}

// GetIpAbuseVelocityExpression returns InputCustomSignatureRuleClauseRequest.IpAbuseVelocityExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetIpAbuseVelocityExpression() *InputCustomSignatureRuleIpAbuseVelocityExpression {
	return v.IpAbuseVelocityExpression
}

// GetIpAddressExpression returns InputCustomSignatureRuleClauseRequest.IpAddressExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetIpAddressExpression() *InputCustomSignatureRuleIpAddressExpression {
	return v.IpAddressExpression
}

// GetIpAsnExpression returns InputCustomSignatureRuleClauseRequest.IpAsnExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetIpAsnExpression() *InputCustomSignatureRuleIpAsnExpression {
	return v.IpAsnExpression
}

// GetIpConnectionTypeExpression returns InputCustomSignatureRuleClauseRequest.IpConnectionTypeExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetIpConnectionTypeExpression() *InputCustomSignatureRuleIpConnectionTypeExpression {
	return v.IpConnectionTypeExpression
}

// GetIpOrganisationExpression returns InputCustomSignatureRuleClauseRequest.IpOrganisationExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetIpOrganisationExpression() *InputCustomSignatureRuleIpOrganisationExpression {
	return v.IpOrganisationExpression
}

// GetIpReputationExpression returns InputCustomSignatureRuleClauseRequest.IpReputationExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetIpReputationExpression() *InputCustomSignatureRuleIpReputationExpression {
	return v.IpReputationExpression
}

// GetIpTypeExpression returns InputCustomSignatureRuleClauseRequest.IpTypeExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetIpTypeExpression() *InputCustomSignatureRuleIpTypeExpression {
	return v.IpTypeExpression
}

// GetKeyValueExpression returns InputCustomSignatureRuleClauseRequest.KeyValueExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetKeyValueExpression() *InputCustomSignatureRuleKeyValueExpression {
	return v.KeyValueExpression
}

// GetLhsRhsKeysExpression returns InputCustomSignatureRuleClauseRequest.LhsRhsKeysExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetLhsRhsKeysExpression() *InputCustomSignatureRuleLhsRhsKeysExpression {
	return v.LhsRhsKeysExpression
}

// GetMatchExpression returns InputCustomSignatureRuleClauseRequest.MatchExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetMatchExpression() *InputCustomSignatureRuleMatchExpression {
	return v.MatchExpression
}

// GetRegionExpression returns InputCustomSignatureRuleClauseRequest.RegionExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetRegionExpression() *InputCustomSignatureRuleRegionExpression {
	return v.RegionExpression
}

// GetRequestScannerTypeExpression returns InputCustomSignatureRuleClauseRequest.RequestScannerTypeExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetRequestScannerTypeExpression() *InputCustomSignatureRuleRequestScannerTypeExpression {
	return v.RequestScannerTypeExpression
}

// GetScopeExpression returns InputCustomSignatureRuleClauseRequest.ScopeExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetScopeExpression() *InputCustomSignatureRuleScopeExpression {
	return v.ScopeExpression
}

// GetUserAgentExpression returns InputCustomSignatureRuleClauseRequest.UserAgentExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetUserAgentExpression() *InputCustomSignatureRuleUserAgentExpression {
	return v.UserAgentExpression
}

// GetUserIdExpression returns InputCustomSignatureRuleClauseRequest.UserIdExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleClauseRequest) GetUserIdExpression() *InputCustomSignatureRuleUserIdExpression {
	return v.UserIdExpression
}

type InputCustomSignatureRuleDefinition struct {
	ClauseGroup InputCustomSignatureRuleClauseGroup `json:"clauseGroup"`
	Labels      []*InputCustomSignatureRuleLabel    `json:"labels"`
}

// GetClauseGroup returns InputCustomSignatureRuleDefinition.ClauseGroup, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDefinition) GetClauseGroup() InputCustomSignatureRuleClauseGroup {
	return v.ClauseGroup
}

// GetLabels returns InputCustomSignatureRuleDefinition.Labels, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDefinition) GetLabels() []*InputCustomSignatureRuleLabel {
	return v.Labels
}

type InputCustomSignatureRuleDelete struct {
	Id string `json:"id"`
}

// GetId returns InputCustomSignatureRuleDelete.Id, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDelete) GetId() string { return v.Id }

type InputCustomSignatureRuleDescriptor struct {
	BlockingExpirationDuration *string                            `json:"blockingExpirationDuration"`
	Description                string                             `json:"description"`
	Disabled                   *bool                              `json:"disabled"`
	Internal                   *bool                              `json:"internal"`
	Name                       string                             `json:"name"`
	RuleDefinition             InputCustomSignatureRuleDefinition `json:"ruleDefinition"`
	RuleEffect                 InputCustomSignatureRuleEffect     `json:"ruleEffect"`
	RuleScope                  *InputCustomSignatureRuleScope     `json:"ruleScope"`
	RuleSource                 *CustomSignatureRuleSource         `json:"ruleSource"`
}

// GetBlockingExpirationDuration returns InputCustomSignatureRuleDescriptor.BlockingExpirationDuration, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDescriptor) GetBlockingExpirationDuration() *string {
	return v.BlockingExpirationDuration
}

// GetDescription returns InputCustomSignatureRuleDescriptor.Description, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDescriptor) GetDescription() string { return v.Description }

// GetDisabled returns InputCustomSignatureRuleDescriptor.Disabled, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDescriptor) GetDisabled() *bool { return v.Disabled }

// GetInternal returns InputCustomSignatureRuleDescriptor.Internal, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDescriptor) GetInternal() *bool { return v.Internal }

// GetName returns InputCustomSignatureRuleDescriptor.Name, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDescriptor) GetName() string { return v.Name }

// GetRuleDefinition returns InputCustomSignatureRuleDescriptor.RuleDefinition, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDescriptor) GetRuleDefinition() InputCustomSignatureRuleDefinition {
	return v.RuleDefinition
}

// GetRuleEffect returns InputCustomSignatureRuleDescriptor.RuleEffect, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDescriptor) GetRuleEffect() InputCustomSignatureRuleEffect {
	return v.RuleEffect
}

// GetRuleScope returns InputCustomSignatureRuleDescriptor.RuleScope, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDescriptor) GetRuleScope() *InputCustomSignatureRuleScope {
	return v.RuleScope
}

// GetRuleSource returns InputCustomSignatureRuleDescriptor.RuleSource, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleDescriptor) GetRuleSource() *CustomSignatureRuleSource {
	return v.RuleSource
}

type InputCustomSignatureRuleEffect struct {
	Effects              []*InputCustomSignatureRuleEffectWithModification `json:"effects"`
	EventSeverity        *CustomSignatureRuleEventSeverity                 `json:"eventSeverity"`
	EventType            CustomSignatureRuleEventType                      `json:"eventType"`
	RuleEvaluationPoints []*CustomSignatureRuleEvaluationPoint             `json:"ruleEvaluationPoints"`
}

// GetEffects returns InputCustomSignatureRuleEffect.Effects, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleEffect) GetEffects() []*InputCustomSignatureRuleEffectWithModification {
	return v.Effects
}

// GetEventSeverity returns InputCustomSignatureRuleEffect.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleEffect) GetEventSeverity() *CustomSignatureRuleEventSeverity {
	return v.EventSeverity
}

// GetEventType returns InputCustomSignatureRuleEffect.EventType, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleEffect) GetEventType() CustomSignatureRuleEventType {
	return v.EventType
}

// GetRuleEvaluationPoints returns InputCustomSignatureRuleEffect.RuleEvaluationPoints, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleEffect) GetRuleEvaluationPoints() []*CustomSignatureRuleEvaluationPoint {
	return v.RuleEvaluationPoints
}

type InputCustomSignatureRuleEffectWithModification struct {
	// Effects enforced for agent while inline processing of requests
	AgentEffect    InputCustomSignatureRuleAgentEffect       `json:"agentEffect"`
	RuleEffectType CustomSignatureRuleEffectModificationType `json:"ruleEffectType"`
}

// GetAgentEffect returns InputCustomSignatureRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleEffectWithModification) GetAgentEffect() InputCustomSignatureRuleAgentEffect {
	return v.AgentEffect
}

// GetRuleEffectType returns InputCustomSignatureRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleEffectWithModification) GetRuleEffectType() CustomSignatureRuleEffectModificationType {
	return v.RuleEffectType
}

type InputCustomSignatureRuleEmailDomainExpression struct {
	// List of email domains
	EmailDomains []*string `json:"emailDomains"`
	// List of email regexes
	EmailRegexes []*string `json:"emailRegexes"`
	// Boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetEmailDomains returns InputCustomSignatureRuleEmailDomainExpression.EmailDomains, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleEmailDomainExpression) GetEmailDomains() []*string {
	return v.EmailDomains
}

// GetEmailRegexes returns InputCustomSignatureRuleEmailDomainExpression.EmailRegexes, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleEmailDomainExpression) GetEmailRegexes() []*string {
	return v.EmailRegexes
}

// GetExclude returns InputCustomSignatureRuleEmailDomainExpression.Exclude, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleEmailDomainExpression) GetExclude() *bool { return v.Exclude }

type InputCustomSignatureRuleEntityScopeExpression struct {
	// Entity ids for entity scope expression type of custom signature rule
	EntityIds []*string `json:"entityIds"`
	// Entity type for entity scope expression type of custom signature rule
	EntityType CustomSignatureRuleEntityType `json:"entityType"`
}

// GetEntityIds returns InputCustomSignatureRuleEntityScopeExpression.EntityIds, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleEntityScopeExpression) GetEntityIds() []*string { return v.EntityIds }

// GetEntityType returns InputCustomSignatureRuleEntityScopeExpression.EntityType, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleEntityScopeExpression) GetEntityType() CustomSignatureRuleEntityType {
	return v.EntityType
}

type InputCustomSignatureRuleHeaderInjection struct {
	HeaderCategory CustomSignatureRuleMatchCategory `json:"headerCategory"`
	Key            string                           `json:"key"`
	Value          string                           `json:"value"`
}

// GetHeaderCategory returns InputCustomSignatureRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleHeaderInjection) GetHeaderCategory() CustomSignatureRuleMatchCategory {
	return v.HeaderCategory
}

// GetKey returns InputCustomSignatureRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleHeaderInjection) GetKey() string { return v.Key }

// GetValue returns InputCustomSignatureRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleHeaderInjection) GetValue() string { return v.Value }

type InputCustomSignatureRuleIpAbuseVelocityExpression struct {
	// Minimum IP abuse velocity applicable
	MinIpAbuseVelocity CustomSignatureRuleIpAbuseVelocity `json:"minIpAbuseVelocity"`
}

// GetMinIpAbuseVelocity returns InputCustomSignatureRuleIpAbuseVelocityExpression.MinIpAbuseVelocity, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpAbuseVelocityExpression) GetMinIpAbuseVelocity() CustomSignatureRuleIpAbuseVelocity {
	return v.MinIpAbuseVelocity
}

type InputCustomSignatureRuleIpAddressExpression struct {
	// List of CIDR IP ranges
	CidrIpRanges []*string `json:"cidrIpRanges"`
	// Boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// IP address expression type
	IpAddressExpressionType *CustomSignatureRuleIpAddressExpressionType `json:"ipAddressExpressionType"`
	// List of IP addresses
	IpAddresses []*string `json:"ipAddresses"`
	// List of IP addresses and CIDR IP ranges
	RawInputIpData []*string `json:"rawInputIpData"`
}

// GetCidrIpRanges returns InputCustomSignatureRuleIpAddressExpression.CidrIpRanges, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpAddressExpression) GetCidrIpRanges() []*string {
	return v.CidrIpRanges
}

// GetExclude returns InputCustomSignatureRuleIpAddressExpression.Exclude, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpAddressExpression) GetExclude() *bool { return v.Exclude }

// GetIpAddressExpressionType returns InputCustomSignatureRuleIpAddressExpression.IpAddressExpressionType, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpAddressExpression) GetIpAddressExpressionType() *CustomSignatureRuleIpAddressExpressionType {
	return v.IpAddressExpressionType
}

// GetIpAddresses returns InputCustomSignatureRuleIpAddressExpression.IpAddresses, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpAddressExpression) GetIpAddresses() []*string {
	return v.IpAddresses
}

// GetRawInputIpData returns InputCustomSignatureRuleIpAddressExpression.RawInputIpData, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpAddressExpression) GetRawInputIpData() []*string {
	return v.RawInputIpData
}

type InputCustomSignatureRuleIpAsnExpression struct {
	// Boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of IP ASN regexes
	IpAsnRegexes []*string `json:"ipAsnRegexes"`
}

// GetExclude returns InputCustomSignatureRuleIpAsnExpression.Exclude, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpAsnExpression) GetExclude() *bool { return v.Exclude }

// GetIpAsnRegexes returns InputCustomSignatureRuleIpAsnExpression.IpAsnRegexes, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpAsnExpression) GetIpAsnRegexes() []*string { return v.IpAsnRegexes }

type InputCustomSignatureRuleIpConnectionTypeExpression struct {
	// Boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of IP connection types
	IpConnectionTypes []*CustomSignatureRuleIpConnectionType `json:"ipConnectionTypes"`
}

// GetExclude returns InputCustomSignatureRuleIpConnectionTypeExpression.Exclude, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpConnectionTypeExpression) GetExclude() *bool { return v.Exclude }

// GetIpConnectionTypes returns InputCustomSignatureRuleIpConnectionTypeExpression.IpConnectionTypes, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpConnectionTypeExpression) GetIpConnectionTypes() []*CustomSignatureRuleIpConnectionType {
	return v.IpConnectionTypes
}

type InputCustomSignatureRuleIpOrganisationExpression struct {
	// Boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of IP organisation regexes
	IpOrganisationRegexes []*string `json:"ipOrganisationRegexes"`
}

// GetExclude returns InputCustomSignatureRuleIpOrganisationExpression.Exclude, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpOrganisationExpression) GetExclude() *bool { return v.Exclude }

// GetIpOrganisationRegexes returns InputCustomSignatureRuleIpOrganisationExpression.IpOrganisationRegexes, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpOrganisationExpression) GetIpOrganisationRegexes() []*string {
	return v.IpOrganisationRegexes
}

type InputCustomSignatureRuleIpReputationExpression struct {
	// Minimum IP reputation severity applicable
	MinIpReputationSeverity CustomSignatureRuleIpReputationSeverity `json:"minIpReputationSeverity"`
}

// GetMinIpReputationSeverity returns InputCustomSignatureRuleIpReputationExpression.MinIpReputationSeverity, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpReputationExpression) GetMinIpReputationSeverity() CustomSignatureRuleIpReputationSeverity {
	return v.MinIpReputationSeverity
}

type InputCustomSignatureRuleIpTypeExpression struct {
	// Boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of IP types applicable
	IpTypes []*CustomSignatureRuleIpType `json:"ipTypes"`
}

// GetExclude returns InputCustomSignatureRuleIpTypeExpression.Exclude, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpTypeExpression) GetExclude() *bool { return v.Exclude }

// GetIpTypes returns InputCustomSignatureRuleIpTypeExpression.IpTypes, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleIpTypeExpression) GetIpTypes() []*CustomSignatureRuleIpType {
	return v.IpTypes
}

type InputCustomSignatureRuleKeyValueExpression struct {
	KeyMatchOperator   CustomSignatureRuleMatchOperator  `json:"keyMatchOperator"`
	KeyValueTag        CustomSignatureRuleKeyValueTag    `json:"keyValueTag"`
	MatchCategory      *CustomSignatureRuleMatchCategory `json:"matchCategory"`
	MatchKey           string                            `json:"matchKey"`
	MatchValue         string                            `json:"matchValue"`
	ValueMatchOperator CustomSignatureRuleMatchOperator  `json:"valueMatchOperator"`
}

// GetKeyMatchOperator returns InputCustomSignatureRuleKeyValueExpression.KeyMatchOperator, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleKeyValueExpression) GetKeyMatchOperator() CustomSignatureRuleMatchOperator {
	return v.KeyMatchOperator
}

// GetKeyValueTag returns InputCustomSignatureRuleKeyValueExpression.KeyValueTag, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleKeyValueExpression) GetKeyValueTag() CustomSignatureRuleKeyValueTag {
	return v.KeyValueTag
}

// GetMatchCategory returns InputCustomSignatureRuleKeyValueExpression.MatchCategory, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleKeyValueExpression) GetMatchCategory() *CustomSignatureRuleMatchCategory {
	return v.MatchCategory
}

// GetMatchKey returns InputCustomSignatureRuleKeyValueExpression.MatchKey, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleKeyValueExpression) GetMatchKey() string { return v.MatchKey }

// GetMatchValue returns InputCustomSignatureRuleKeyValueExpression.MatchValue, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleKeyValueExpression) GetMatchValue() string { return v.MatchValue }

// GetValueMatchOperator returns InputCustomSignatureRuleKeyValueExpression.ValueMatchOperator, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleKeyValueExpression) GetValueMatchOperator() CustomSignatureRuleMatchOperator {
	return v.ValueMatchOperator
}

type InputCustomSignatureRuleLabel struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetKey returns InputCustomSignatureRuleLabel.Key, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleLabel) GetKey() string { return v.Key }

// GetValue returns InputCustomSignatureRuleLabel.Value, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleLabel) GetValue() string { return v.Value }

type InputCustomSignatureRuleLabelScopeExpression struct {
	// Label ids for label scope expression type of custom signature rule
	LabelIds []*string `json:"labelIds"`
	// Label type for label scope expression type of custom signature rule
	LabelType CustomSignatureRuleLabelType `json:"labelType"`
}

// GetLabelIds returns InputCustomSignatureRuleLabelScopeExpression.LabelIds, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleLabelScopeExpression) GetLabelIds() []*string { return v.LabelIds }

// GetLabelType returns InputCustomSignatureRuleLabelScopeExpression.LabelType, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleLabelScopeExpression) GetLabelType() CustomSignatureRuleLabelType {
	return v.LabelType
}

type InputCustomSignatureRuleLhsRhsKeysExpression struct {
	LhsKeyExpression InputCustomSignatureRuleMatchExpression `json:"lhsKeyExpression"`
	MatchOperator    CustomSignatureRuleMatchOperator        `json:"matchOperator"`
	RhsKeyExpression InputCustomSignatureRuleMatchExpression `json:"rhsKeyExpression"`
}

// GetLhsKeyExpression returns InputCustomSignatureRuleLhsRhsKeysExpression.LhsKeyExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleLhsRhsKeysExpression) GetLhsKeyExpression() InputCustomSignatureRuleMatchExpression {
	return v.LhsKeyExpression
}

// GetMatchOperator returns InputCustomSignatureRuleLhsRhsKeysExpression.MatchOperator, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleLhsRhsKeysExpression) GetMatchOperator() CustomSignatureRuleMatchOperator {
	return v.MatchOperator
}

// GetRhsKeyExpression returns InputCustomSignatureRuleLhsRhsKeysExpression.RhsKeyExpression, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleLhsRhsKeysExpression) GetRhsKeyExpression() InputCustomSignatureRuleMatchExpression {
	return v.RhsKeyExpression
}

type InputCustomSignatureRuleMatchExpression struct {
	MatchCategory *CustomSignatureRuleMatchCategory `json:"matchCategory"`
	MatchKey      CustomSignatureRuleMatchKey       `json:"matchKey"`
	MatchOperator CustomSignatureRuleMatchOperator  `json:"matchOperator"`
	MatchValue    *string                           `json:"matchValue"`
	Value         *interface{}                      `json:"value"`
}

// GetMatchCategory returns InputCustomSignatureRuleMatchExpression.MatchCategory, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleMatchExpression) GetMatchCategory() *CustomSignatureRuleMatchCategory {
	return v.MatchCategory
}

// GetMatchKey returns InputCustomSignatureRuleMatchExpression.MatchKey, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleMatchExpression) GetMatchKey() CustomSignatureRuleMatchKey {
	return v.MatchKey
}

// GetMatchOperator returns InputCustomSignatureRuleMatchExpression.MatchOperator, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleMatchExpression) GetMatchOperator() CustomSignatureRuleMatchOperator {
	return v.MatchOperator
}

// GetMatchValue returns InputCustomSignatureRuleMatchExpression.MatchValue, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleMatchExpression) GetMatchValue() *string { return v.MatchValue }

// GetValue returns InputCustomSignatureRuleMatchExpression.Value, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleMatchExpression) GetValue() *interface{} { return v.Value }

type InputCustomSignatureRuleRegionExpression struct {
	// Boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of region identifiers
	RegionIdentifiers []*InputCustomSignatureRuleRegionIdentifier `json:"regionIdentifiers"`
}

// GetExclude returns InputCustomSignatureRuleRegionExpression.Exclude, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleRegionExpression) GetExclude() *bool { return v.Exclude }

// GetRegionIdentifiers returns InputCustomSignatureRuleRegionExpression.RegionIdentifiers, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleRegionExpression) GetRegionIdentifiers() []*InputCustomSignatureRuleRegionIdentifier {
	return v.RegionIdentifiers
}

type InputCustomSignatureRuleRegionIdentifier struct {
	// Country ISO code for region identifier
	CountryIsoCode string `json:"countryIsoCode"`
}

// GetCountryIsoCode returns InputCustomSignatureRuleRegionIdentifier.CountryIsoCode, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleRegionIdentifier) GetCountryIsoCode() string {
	return v.CountryIsoCode
}

type InputCustomSignatureRuleRequestScannerTypeExpression struct {
	// Boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of scanner types
	ScannerTypes []*string `json:"scannerTypes"`
}

// GetExclude returns InputCustomSignatureRuleRequestScannerTypeExpression.Exclude, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleRequestScannerTypeExpression) GetExclude() *bool { return v.Exclude }

// GetScannerTypes returns InputCustomSignatureRuleRequestScannerTypeExpression.ScannerTypes, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleRequestScannerTypeExpression) GetScannerTypes() []*string {
	return v.ScannerTypes
}

type InputCustomSignatureRuleScope struct {
	EnvironmentScope *InputCustomSignatureEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns InputCustomSignatureRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleScope) GetEnvironmentScope() *InputCustomSignatureEnvironmentScope {
	return v.EnvironmentScope
}

type InputCustomSignatureRuleScopeExpression struct {
	// Scope expression of type ENTITY
	EntityScope *InputCustomSignatureRuleEntityScopeExpression `json:"entityScope"`
	// Exclude field for scope expression in custom signature rule
	Exclude *bool `json:"exclude"`
	// Scope expression of type LABEL
	LabelScope *InputCustomSignatureRuleLabelScopeExpression `json:"labelScope"`
	// Scope expression of type URL
	UrlScope *InputCustomSignatureUrlScopeExpression `json:"urlScope"`
}

// GetEntityScope returns InputCustomSignatureRuleScopeExpression.EntityScope, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleScopeExpression) GetEntityScope() *InputCustomSignatureRuleEntityScopeExpression {
	return v.EntityScope
}

// GetExclude returns InputCustomSignatureRuleScopeExpression.Exclude, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleScopeExpression) GetExclude() *bool { return v.Exclude }

// GetLabelScope returns InputCustomSignatureRuleScopeExpression.LabelScope, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleScopeExpression) GetLabelScope() *InputCustomSignatureRuleLabelScopeExpression {
	return v.LabelScope
}

// GetUrlScope returns InputCustomSignatureRuleScopeExpression.UrlScope, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleScopeExpression) GetUrlScope() *InputCustomSignatureUrlScopeExpression {
	return v.UrlScope
}

type InputCustomSignatureRuleUpdate struct {
	BlockingExpirationDuration *string                            `json:"blockingExpirationDuration"`
	Description                string                             `json:"description"`
	Disabled                   *bool                              `json:"disabled"`
	Id                         string                             `json:"id"`
	Internal                   *bool                              `json:"internal"`
	Name                       string                             `json:"name"`
	RuleDefinition             InputCustomSignatureRuleDefinition `json:"ruleDefinition"`
	RuleEffect                 InputCustomSignatureRuleEffect     `json:"ruleEffect"`
	RuleScope                  *InputCustomSignatureRuleScope     `json:"ruleScope"`
	RuleSource                 *CustomSignatureRuleSource         `json:"ruleSource"`
}

// GetBlockingExpirationDuration returns InputCustomSignatureRuleUpdate.BlockingExpirationDuration, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUpdate) GetBlockingExpirationDuration() *string {
	return v.BlockingExpirationDuration
}

// GetDescription returns InputCustomSignatureRuleUpdate.Description, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUpdate) GetDescription() string { return v.Description }

// GetDisabled returns InputCustomSignatureRuleUpdate.Disabled, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUpdate) GetDisabled() *bool { return v.Disabled }

// GetId returns InputCustomSignatureRuleUpdate.Id, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUpdate) GetId() string { return v.Id }

// GetInternal returns InputCustomSignatureRuleUpdate.Internal, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUpdate) GetInternal() *bool { return v.Internal }

// GetName returns InputCustomSignatureRuleUpdate.Name, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUpdate) GetName() string { return v.Name }

// GetRuleDefinition returns InputCustomSignatureRuleUpdate.RuleDefinition, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUpdate) GetRuleDefinition() InputCustomSignatureRuleDefinition {
	return v.RuleDefinition
}

// GetRuleEffect returns InputCustomSignatureRuleUpdate.RuleEffect, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUpdate) GetRuleEffect() InputCustomSignatureRuleEffect {
	return v.RuleEffect
}

// GetRuleScope returns InputCustomSignatureRuleUpdate.RuleScope, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUpdate) GetRuleScope() *InputCustomSignatureRuleScope {
	return v.RuleScope
}

// GetRuleSource returns InputCustomSignatureRuleUpdate.RuleSource, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUpdate) GetRuleSource() *CustomSignatureRuleSource {
	return v.RuleSource
}

type InputCustomSignatureRuleUserAgentExpression struct {
	// Boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of user agent regexes
	UserAgentRegexes []*string `json:"userAgentRegexes"`
	// List of user agents
	UserAgents []*string `json:"userAgents"`
}

// GetExclude returns InputCustomSignatureRuleUserAgentExpression.Exclude, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUserAgentExpression) GetExclude() *bool { return v.Exclude }

// GetUserAgentRegexes returns InputCustomSignatureRuleUserAgentExpression.UserAgentRegexes, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUserAgentExpression) GetUserAgentRegexes() []*string {
	return v.UserAgentRegexes
}

// GetUserAgents returns InputCustomSignatureRuleUserAgentExpression.UserAgents, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUserAgentExpression) GetUserAgents() []*string { return v.UserAgents }

type InputCustomSignatureRuleUserIdExpression struct {
	// Boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of user ID regexes
	UserIdRegexes []*string `json:"userIdRegexes"`
	// List of user IDs
	UserIds []*string `json:"userIds"`
}

// GetExclude returns InputCustomSignatureRuleUserIdExpression.Exclude, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUserIdExpression) GetExclude() *bool { return v.Exclude }

// GetUserIdRegexes returns InputCustomSignatureRuleUserIdExpression.UserIdRegexes, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUserIdExpression) GetUserIdRegexes() []*string {
	return v.UserIdRegexes
}

// GetUserIds returns InputCustomSignatureRuleUserIdExpression.UserIds, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRuleUserIdExpression) GetUserIds() []*string { return v.UserIds }

type InputCustomSignatureRulesFilter struct {
	RuleScope InputCustomSignatureRuleScope `json:"ruleScope"`
}

// GetRuleScope returns InputCustomSignatureRulesFilter.RuleScope, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureRulesFilter) GetRuleScope() InputCustomSignatureRuleScope {
	return v.RuleScope
}

type InputCustomSignatureSecRule struct {
	// Input sec rule string
	InputSecRuleString *string `json:"inputSecRuleString"`
}

// GetInputSecRuleString returns InputCustomSignatureSecRule.InputSecRuleString, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureSecRule) GetInputSecRuleString() *string { return v.InputSecRuleString }

type InputCustomSignatureStringMatchCondition struct {
	// Key match operator
	Operator CustomSignatureRuleMatchOperator `json:"operator"`
	// Match key
	Value string `json:"value"`
}

// GetOperator returns InputCustomSignatureStringMatchCondition.Operator, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureStringMatchCondition) GetOperator() CustomSignatureRuleMatchOperator {
	return v.Operator
}

// GetValue returns InputCustomSignatureStringMatchCondition.Value, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureStringMatchCondition) GetValue() string { return v.Value }

type InputCustomSignatureUrlScopeExpression struct {
	// Url regexes for url type scope expression of custom signature rule
	UrlRegexes []*string `json:"urlRegexes"`
}

// GetUrlRegexes returns InputCustomSignatureUrlScopeExpression.UrlRegexes, and is useful for accessing the field via an interface.
func (v *InputCustomSignatureUrlScopeExpression) GetUrlRegexes() []*string { return v.UrlRegexes }

type InputDataSetCreate struct {
	Color           *string          `json:"color"`
	DataSuppression *DataSuppression `json:"dataSuppression"`
	DataTypeIds     []*string        `json:"dataTypeIds"`
	Description     *string          `json:"description"`
	Enabled         *bool            `json:"enabled"`
	IconType        *string          `json:"iconType"`
	Name            string           `json:"name"`
	Sensitivity     *DataSensitivity `json:"sensitivity"`
}

// GetColor returns InputDataSetCreate.Color, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetColor() *string { return v.Color }

// GetDataSuppression returns InputDataSetCreate.DataSuppression, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetDataSuppression() *DataSuppression { return v.DataSuppression }

// GetDataTypeIds returns InputDataSetCreate.DataTypeIds, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetDataTypeIds() []*string { return v.DataTypeIds }

// GetDescription returns InputDataSetCreate.Description, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetDescription() *string { return v.Description }

// GetEnabled returns InputDataSetCreate.Enabled, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetEnabled() *bool { return v.Enabled }

// GetIconType returns InputDataSetCreate.IconType, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetIconType() *string { return v.IconType }

// GetName returns InputDataSetCreate.Name, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetName() string { return v.Name }

// GetSensitivity returns InputDataSetCreate.Sensitivity, and is useful for accessing the field via an interface.
func (v *InputDataSetCreate) GetSensitivity() *DataSensitivity { return v.Sensitivity }

type InputDataSetUpdate struct {
	Color           *string          `json:"color"`
	DataSuppression *DataSuppression `json:"dataSuppression"`
	DataTypeIds     []*string        `json:"dataTypeIds"`
	Description     *string          `json:"description"`
	Enabled         *bool            `json:"enabled"`
	IconType        *string          `json:"iconType"`
	Id              string           `json:"id"`
	Name            string           `json:"name"`
	Sensitivity     *DataSensitivity `json:"sensitivity"`
}

// GetColor returns InputDataSetUpdate.Color, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetColor() *string { return v.Color }

// GetDataSuppression returns InputDataSetUpdate.DataSuppression, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetDataSuppression() *DataSuppression { return v.DataSuppression }

// GetDataTypeIds returns InputDataSetUpdate.DataTypeIds, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetDataTypeIds() []*string { return v.DataTypeIds }

// GetDescription returns InputDataSetUpdate.Description, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetDescription() *string { return v.Description }

// GetEnabled returns InputDataSetUpdate.Enabled, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetEnabled() *bool { return v.Enabled }

// GetIconType returns InputDataSetUpdate.IconType, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetIconType() *string { return v.IconType }

// GetId returns InputDataSetUpdate.Id, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetId() string { return v.Id }

// GetName returns InputDataSetUpdate.Name, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetName() string { return v.Name }

// GetSensitivity returns InputDataSetUpdate.Sensitivity, and is useful for accessing the field via an interface.
func (v *InputDataSetUpdate) GetSensitivity() *DataSensitivity { return v.Sensitivity }

type InputDetectionScopeConfig struct {
	EndpointIds    []*string `json:"endpointIds"`
	EndpointLabels []*string `json:"endpointLabels"`
	UrlRegexes     []*string `json:"urlRegexes"`
}

// GetEndpointIds returns InputDetectionScopeConfig.EndpointIds, and is useful for accessing the field via an interface.
func (v *InputDetectionScopeConfig) GetEndpointIds() []*string { return v.EndpointIds }

// GetEndpointLabels returns InputDetectionScopeConfig.EndpointLabels, and is useful for accessing the field via an interface.
func (v *InputDetectionScopeConfig) GetEndpointLabels() []*string { return v.EndpointLabels }

// GetUrlRegexes returns InputDetectionScopeConfig.UrlRegexes, and is useful for accessing the field via an interface.
func (v *InputDetectionScopeConfig) GetUrlRegexes() []*string { return v.UrlRegexes }

type InputDetectionUserIdDataConfig struct {
	// User attribution extracted ID
	UserAttributionExtractedId *bool `json:"userAttributionExtractedId"`
	// User attribution extracted ID from JWT
	UserAttributionExtractedIdFromJwt *bool `json:"userAttributionExtractedIdFromJwt"`
	// User ID custom attribute
	UserIdCustomAttribute *string `json:"userIdCustomAttribute"`
	// User ID source type
	UserIdSourceType DetectionUserIdSourceType `json:"userIdSourceType"`
}

// GetUserAttributionExtractedId returns InputDetectionUserIdDataConfig.UserAttributionExtractedId, and is useful for accessing the field via an interface.
func (v *InputDetectionUserIdDataConfig) GetUserAttributionExtractedId() *bool {
	return v.UserAttributionExtractedId
}

// GetUserAttributionExtractedIdFromJwt returns InputDetectionUserIdDataConfig.UserAttributionExtractedIdFromJwt, and is useful for accessing the field via an interface.
func (v *InputDetectionUserIdDataConfig) GetUserAttributionExtractedIdFromJwt() *bool {
	return v.UserAttributionExtractedIdFromJwt
}

// GetUserIdCustomAttribute returns InputDetectionUserIdDataConfig.UserIdCustomAttribute, and is useful for accessing the field via an interface.
func (v *InputDetectionUserIdDataConfig) GetUserIdCustomAttribute() *string {
	return v.UserIdCustomAttribute
}

// GetUserIdSourceType returns InputDetectionUserIdDataConfig.UserIdSourceType, and is useful for accessing the field via an interface.
func (v *InputDetectionUserIdDataConfig) GetUserIdSourceType() DetectionUserIdSourceType {
	return v.UserIdSourceType
}

// Threshold config which specifies percentage allowed exceeding a mean countwhich
// is calculated over the specified duration for the given time range
type InputDynamicThresholdConfig struct {
	// Time range over which mean and counts are calculated
	Duration string `json:"duration"`
	// Duration for calculating mean over the specified time range
	MeanCalculationDuration string `json:"meanCalculationDuration"`
	// Allowed percentage exceeding mean
	PercentageExceedingMeanAllowed int64 `json:"percentageExceedingMeanAllowed"`
}

// GetDuration returns InputDynamicThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *InputDynamicThresholdConfig) GetDuration() string { return v.Duration }

// GetMeanCalculationDuration returns InputDynamicThresholdConfig.MeanCalculationDuration, and is useful for accessing the field via an interface.
func (v *InputDynamicThresholdConfig) GetMeanCalculationDuration() string {
	return v.MeanCalculationDuration
}

// GetPercentageExceedingMeanAllowed returns InputDynamicThresholdConfig.PercentageExceedingMeanAllowed, and is useful for accessing the field via an interface.
func (v *InputDynamicThresholdConfig) GetPercentageExceedingMeanAllowed() int64 {
	return v.PercentageExceedingMeanAllowed
}

type InputEmailDomainAnomalyConfig struct {
	// Minimum threshold for critical email fraud score
	CriticalEmailFraudScoreMinThreshold int64 `json:"criticalEmailFraudScoreMinThreshold"`
	// Is disabled or not
	Disabled bool `json:"disabled"`
	// Minimum threshold for high email fraud score
	HighEmailFraudScoreMinThreshold int64 `json:"highEmailFraudScoreMinThreshold"`
}

// GetCriticalEmailFraudScoreMinThreshold returns InputEmailDomainAnomalyConfig.CriticalEmailFraudScoreMinThreshold, and is useful for accessing the field via an interface.
func (v *InputEmailDomainAnomalyConfig) GetCriticalEmailFraudScoreMinThreshold() int64 {
	return v.CriticalEmailFraudScoreMinThreshold
}

// GetDisabled returns InputEmailDomainAnomalyConfig.Disabled, and is useful for accessing the field via an interface.
func (v *InputEmailDomainAnomalyConfig) GetDisabled() bool { return v.Disabled }

// GetHighEmailFraudScoreMinThreshold returns InputEmailDomainAnomalyConfig.HighEmailFraudScoreMinThreshold, and is useful for accessing the field via an interface.
func (v *InputEmailDomainAnomalyConfig) GetHighEmailFraudScoreMinThreshold() int64 {
	return v.HighEmailFraudScoreMinThreshold
}

// Environment scope applicable for rate limit rule
type InputEnvironmentScope struct {
	// List of environment ids applicable for rate limit rule
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns InputEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *InputEnvironmentScope) GetEnvironmentIds() []*string { return v.EnvironmentIds }

type InputFilter struct {
	IdScope       *string                   `json:"idScope"`
	IdType        *AttributeScope           `json:"idType"`
	Key           *string                   `json:"key"`
	KeyExpression *InputAttributeExpression `json:"keyExpression"`
	Operator      FilterOperatorType        `json:"operator"`
	// Transformation function
	TransformationFunction *InputTransformationFunction `json:"transformationFunction"`
	Type                   FilterType                   `json:"type"`
	Value                  interface{}                  `json:"value"`
}

// GetIdScope returns InputFilter.IdScope, and is useful for accessing the field via an interface.
func (v *InputFilter) GetIdScope() *string { return v.IdScope }

// GetIdType returns InputFilter.IdType, and is useful for accessing the field via an interface.
func (v *InputFilter) GetIdType() *AttributeScope { return v.IdType }

// GetKey returns InputFilter.Key, and is useful for accessing the field via an interface.
func (v *InputFilter) GetKey() *string { return v.Key }

// GetKeyExpression returns InputFilter.KeyExpression, and is useful for accessing the field via an interface.
func (v *InputFilter) GetKeyExpression() *InputAttributeExpression { return v.KeyExpression }

// GetOperator returns InputFilter.Operator, and is useful for accessing the field via an interface.
func (v *InputFilter) GetOperator() FilterOperatorType { return v.Operator }

// GetTransformationFunction returns InputFilter.TransformationFunction, and is useful for accessing the field via an interface.
func (v *InputFilter) GetTransformationFunction() *InputTransformationFunction {
	return v.TransformationFunction
}

// GetType returns InputFilter.Type, and is useful for accessing the field via an interface.
func (v *InputFilter) GetType() FilterType { return v.Type }

// GetValue returns InputFilter.Value, and is useful for accessing the field via an interface.
func (v *InputFilter) GetValue() interface{} { return v.Value }

type InputIpRangeEnvironmentScope struct {
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns InputIpRangeEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *InputIpRangeEnvironmentScope) GetEnvironmentIds() []*string { return v.EnvironmentIds }

// Ip range rule agent effect
type InputIpRangeRuleAgentEffect struct {
	// Ip range rule agent modification
	AgentModifications []*InputIpRangeRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns InputIpRangeRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleAgentEffect) GetAgentModifications() []*InputIpRangeRuleAgentModification {
	return v.AgentModifications
}

// Malicious sources rule agent modification
type InputIpRangeRuleAgentModification struct {
	// Ip range rule agent modification type
	AgentModificationType IpRangeRuleAgentModificationType `json:"agentModificationType"`
	// Ip range rule header injection
	HeaderInjection InputIpRangeRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns InputIpRangeRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleAgentModification) GetAgentModificationType() IpRangeRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns InputIpRangeRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleAgentModification) GetHeaderInjection() InputIpRangeRuleHeaderInjection {
	return v.HeaderInjection
}

type InputIpRangeRuleCreate struct {
	RuleDetails InputIpRangeRuleDetailsRequest `json:"ruleDetails"`
	RuleScope   *InputIpRangeRuleScope         `json:"ruleScope"`
}

// GetRuleDetails returns InputIpRangeRuleCreate.RuleDetails, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleCreate) GetRuleDetails() InputIpRangeRuleDetailsRequest {
	return v.RuleDetails
}

// GetRuleScope returns InputIpRangeRuleCreate.RuleScope, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleCreate) GetRuleScope() *InputIpRangeRuleScope { return v.RuleScope }

type InputIpRangeRuleDelete struct {
	Id *string `json:"id"`
}

// GetId returns InputIpRangeRuleDelete.Id, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDelete) GetId() *string { return v.Id }

type InputIpRangeRuleDetailsRequest struct {
	Description        *string                                   `json:"description"`
	Effects            []*InputIpRangeRuleEffectWithModification `json:"effects"`
	EventSeverity      *IpRangeEventSeverity                     `json:"eventSeverity"`
	ExpirationDuration *string                                   `json:"expirationDuration"`
	Name               string                                    `json:"name"`
	RawIpRangeData     []*string                                 `json:"rawIpRangeData"`
	RuleAction         IpRangeRuleActionType                     `json:"ruleAction"`
}

// GetDescription returns InputIpRangeRuleDetailsRequest.Description, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetDescription() *string { return v.Description }

// GetEffects returns InputIpRangeRuleDetailsRequest.Effects, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetEffects() []*InputIpRangeRuleEffectWithModification {
	return v.Effects
}

// GetEventSeverity returns InputIpRangeRuleDetailsRequest.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetEventSeverity() *IpRangeEventSeverity {
	return v.EventSeverity
}

// GetExpirationDuration returns InputIpRangeRuleDetailsRequest.ExpirationDuration, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetExpirationDuration() *string { return v.ExpirationDuration }

// GetName returns InputIpRangeRuleDetailsRequest.Name, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetName() string { return v.Name }

// GetRawIpRangeData returns InputIpRangeRuleDetailsRequest.RawIpRangeData, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetRawIpRangeData() []*string { return v.RawIpRangeData }

// GetRuleAction returns InputIpRangeRuleDetailsRequest.RuleAction, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleDetailsRequest) GetRuleAction() IpRangeRuleActionType { return v.RuleAction }

// Ip range rule effect with modification
type InputIpRangeRuleEffectWithModification struct {
	// Effects enforced for agent while inline processing of requests
	AgentEffect InputIpRangeRuleAgentEffect `json:"agentEffect"`
	// Ip range rule effect modification type
	RuleEffectType IpRangeRuleEffectModificationType `json:"ruleEffectType"`
}

// GetAgentEffect returns InputIpRangeRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleEffectWithModification) GetAgentEffect() InputIpRangeRuleAgentEffect {
	return v.AgentEffect
}

// GetRuleEffectType returns InputIpRangeRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleEffectWithModification) GetRuleEffectType() IpRangeRuleEffectModificationType {
	return v.RuleEffectType
}

// Actions associated with the rule
type InputIpRangeRuleHeaderInjection struct {
	// Header category
	HeaderCategory IpRangeRuleHeaderCategory `json:"headerCategory"`
	// Header key
	Key string `json:"key"`
	// Header value
	Value string `json:"value"`
}

// GetHeaderCategory returns InputIpRangeRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleHeaderInjection) GetHeaderCategory() IpRangeRuleHeaderCategory {
	return v.HeaderCategory
}

// GetKey returns InputIpRangeRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleHeaderInjection) GetKey() string { return v.Key }

// GetValue returns InputIpRangeRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleHeaderInjection) GetValue() string { return v.Value }

type InputIpRangeRuleScope struct {
	EnvironmentScope *InputIpRangeEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns InputIpRangeRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleScope) GetEnvironmentScope() *InputIpRangeEnvironmentScope {
	return v.EnvironmentScope
}

type InputIpRangeRuleUpdate struct {
	Id          *string                        `json:"id"`
	Disabled    *bool                          `json:"disabled"`
	Hidden      *bool                          `json:"hidden"`
	Internal    *bool                          `json:"internal"`
	RuleDetails InputIpRangeRuleDetailsRequest `json:"ruleDetails"`
	RuleScope   *InputIpRangeRuleScope         `json:"ruleScope"`
}

// GetId returns InputIpRangeRuleUpdate.Id, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleUpdate) GetId() *string { return v.Id }

// GetDisabled returns InputIpRangeRuleUpdate.Disabled, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleUpdate) GetDisabled() *bool { return v.Disabled }

// GetHidden returns InputIpRangeRuleUpdate.Hidden, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleUpdate) GetHidden() *bool { return v.Hidden }

// GetInternal returns InputIpRangeRuleUpdate.Internal, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleUpdate) GetInternal() *bool { return v.Internal }

// GetRuleDetails returns InputIpRangeRuleUpdate.RuleDetails, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleUpdate) GetRuleDetails() InputIpRangeRuleDetailsRequest {
	return v.RuleDetails
}

// GetRuleScope returns InputIpRangeRuleUpdate.RuleScope, and is useful for accessing the field via an interface.
func (v *InputIpRangeRuleUpdate) GetRuleScope() *InputIpRangeRuleScope { return v.RuleScope }

type InputIpRangeRulesFilter struct {
	RuleScope InputIpRangeRuleScope `json:"ruleScope"`
}

// GetRuleScope returns InputIpRangeRulesFilter.RuleScope, and is useful for accessing the field via an interface.
func (v *InputIpRangeRulesFilter) GetRuleScope() InputIpRangeRuleScope { return v.RuleScope }

type InputIpTypeAnomalyConfig struct {
	// Minimum threshold for Abuse Velocity score for generating events
	AbuseVelocityMinThreshold AnomalyConfigAbuseVelocity `json:"abuseVelocityMinThreshold"`
	// Minimum threshold for Ip reputation score for generating events
	IpReputationScoreMinThreshold int64 `json:"ipReputationScoreMinThreshold"`
}

// GetAbuseVelocityMinThreshold returns InputIpTypeAnomalyConfig.AbuseVelocityMinThreshold, and is useful for accessing the field via an interface.
func (v *InputIpTypeAnomalyConfig) GetAbuseVelocityMinThreshold() AnomalyConfigAbuseVelocity {
	return v.AbuseVelocityMinThreshold
}

// GetIpReputationScoreMinThreshold returns InputIpTypeAnomalyConfig.IpReputationScoreMinThreshold, and is useful for accessing the field via an interface.
func (v *InputIpTypeAnomalyConfig) GetIpReputationScoreMinThreshold() int64 {
	return v.IpReputationScoreMinThreshold
}

type InputJsonExtractTransformationFunction struct {
	// Attribute expression
	Attribute InputAttributeExpression `json:"attribute"`
	// Json path
	JsonPath string `json:"jsonPath"`
}

// GetAttribute returns InputJsonExtractTransformationFunction.Attribute, and is useful for accessing the field via an interface.
func (v *InputJsonExtractTransformationFunction) GetAttribute() InputAttributeExpression {
	return v.Attribute
}

// GetJsonPath returns InputJsonExtractTransformationFunction.JsonPath, and is useful for accessing the field via an interface.
func (v *InputJsonExtractTransformationFunction) GetJsonPath() string { return v.JsonPath }

type InputLandSpeedViolationConfig struct {
	// List of IpTypes (AND) to belong to for an ip to be considered
	IpTypes []*AnomalyConfigIpType `json:"ipTypes"`
	// Minimum threshold for Abuse Velocity for ips to be considered
	MinIpAbuseVelocity *AnomalyConfigAbuseVelocity `json:"minIpAbuseVelocity"`
	// Minimum threshold for Ip reputation score for ips to be considered
	MinIpReputationScore *int64 `json:"minIpReputationScore"`
	// Minimum threshold for external ip addresses for generating events
	UniqueExternalIpAddressesMinCount *int64 `json:"uniqueExternalIpAddressesMinCount"`
	// Minimum threshold for unique user cities for generating events
	UniqueUserCitiesMinCount *int64 `json:"uniqueUserCitiesMinCount"`
}

// GetIpTypes returns InputLandSpeedViolationConfig.IpTypes, and is useful for accessing the field via an interface.
func (v *InputLandSpeedViolationConfig) GetIpTypes() []*AnomalyConfigIpType { return v.IpTypes }

// GetMinIpAbuseVelocity returns InputLandSpeedViolationConfig.MinIpAbuseVelocity, and is useful for accessing the field via an interface.
func (v *InputLandSpeedViolationConfig) GetMinIpAbuseVelocity() *AnomalyConfigAbuseVelocity {
	return v.MinIpAbuseVelocity
}

// GetMinIpReputationScore returns InputLandSpeedViolationConfig.MinIpReputationScore, and is useful for accessing the field via an interface.
func (v *InputLandSpeedViolationConfig) GetMinIpReputationScore() *int64 {
	return v.MinIpReputationScore
}

// GetUniqueExternalIpAddressesMinCount returns InputLandSpeedViolationConfig.UniqueExternalIpAddressesMinCount, and is useful for accessing the field via an interface.
func (v *InputLandSpeedViolationConfig) GetUniqueExternalIpAddressesMinCount() *int64 {
	return v.UniqueExternalIpAddressesMinCount
}

// GetUniqueUserCitiesMinCount returns InputLandSpeedViolationConfig.UniqueUserCitiesMinCount, and is useful for accessing the field via an interface.
func (v *InputLandSpeedViolationConfig) GetUniqueUserCitiesMinCount() *int64 {
	return v.UniqueUserCitiesMinCount
}

// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type InputMaliciousSourcesRule struct {
	// Rule ID
	Id string `json:"id"`
	// Malicious Sources rule information
	Info InputMaliciousSourcesRuleInfo `json:"info"`
	// Malicious Sources rule scope
	Scope *InputMaliciousSourcesRuleScope `json:"scope"`
	// Malicious Sources rule status
	Status InputMaliciousSourcesRuleStatus `json:"status"`
}

// GetId returns InputMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRule) GetId() string { return v.Id }

// GetInfo returns InputMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRule) GetInfo() InputMaliciousSourcesRuleInfo { return v.Info }

// GetScope returns InputMaliciousSourcesRule.Scope, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRule) GetScope() *InputMaliciousSourcesRuleScope { return v.Scope }

// GetStatus returns InputMaliciousSourcesRule.Status, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRule) GetStatus() InputMaliciousSourcesRuleStatus { return v.Status }

// Actions associated with the rule
type InputMaliciousSourcesRuleAction struct {
	// List of malicious sources rule effect with modification
	Effects []*InputMaliciousSourcesRuleEffectWithModification `json:"effects"`
	// Severity of events generated by the rule
	EventSeverity *MaliciousSourcesRuleEventSeverity `json:"eventSeverity"`
	// Expiration details of the rule
	ExpirationDetails *InputMaliciousSourcesRuleExpirationDetails `json:"expirationDetails"`
	// Rule Action
	RuleActionType MaliciousSourcesRuleActionType `json:"ruleActionType"`
}

// GetEffects returns InputMaliciousSourcesRuleAction.Effects, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAction) GetEffects() []*InputMaliciousSourcesRuleEffectWithModification {
	return v.Effects
}

// GetEventSeverity returns InputMaliciousSourcesRuleAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAction) GetEventSeverity() *MaliciousSourcesRuleEventSeverity {
	return v.EventSeverity
}

// GetExpirationDetails returns InputMaliciousSourcesRuleAction.ExpirationDetails, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAction) GetExpirationDetails() *InputMaliciousSourcesRuleExpirationDetails {
	return v.ExpirationDetails
}

// GetRuleActionType returns InputMaliciousSourcesRuleAction.RuleActionType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAction) GetRuleActionType() MaliciousSourcesRuleActionType {
	return v.RuleActionType
}

// Malicious sources rule agent effect
type InputMaliciousSourcesRuleAgentEffect struct {
	// Malicious sources rule agent modification
	AgentModifications []*InputMaliciousSourcesRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns InputMaliciousSourcesRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAgentEffect) GetAgentModifications() []*InputMaliciousSourcesRuleAgentModification {
	return v.AgentModifications
}

// Malicious sources rule agent modification
type InputMaliciousSourcesRuleAgentModification struct {
	// Malicious sources rule agent modification type
	AgentModificationType MaliciousSourcesRuleAgentModificationType `json:"agentModificationType"`
	// Malicious sources rule header injection
	HeaderInjection InputMaliciousSourcesRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns InputMaliciousSourcesRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAgentModification) GetAgentModificationType() MaliciousSourcesRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns InputMaliciousSourcesRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleAgentModification) GetHeaderInjection() InputMaliciousSourcesRuleHeaderInjection {
	return v.HeaderInjection
}

// Condition for the malicious sources rule to be applied
type InputMaliciousSourcesRuleCondition struct {
	// Condition Type for a rule
	ConditionType MaliciousSourcesRuleConditionType `json:"conditionType"`
	// Email domain conditions for the rule to be applied
	EmailDomainCondition *InputMaliciousSourcesRuleEmailDomainCondition `json:"emailDomainCondition"`
	// IP address conditions for the rule to be applied
	IpAddressCondition *InputMaliciousSourcesRuleIpAddressCondition `json:"ipAddressCondition"`
	// IP location type conditions for the rule to be applied
	IpLocationTypeCondition *InputMaliciousSourcesRuleIpLocationTypeCondition `json:"ipLocationTypeCondition"`
	// IP reputation conditions for the rule to be applied
	IpReputationCondition *InputMaliciousSourcesRuleIpReputationCondition `json:"ipReputationCondition"`
	// Region conditions for the rule to be applied
	RegionCondition *InputMaliciousSourcesRuleRegionCondition `json:"regionCondition"`
}

// GetConditionType returns InputMaliciousSourcesRuleCondition.ConditionType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetConditionType() MaliciousSourcesRuleConditionType {
	return v.ConditionType
}

// GetEmailDomainCondition returns InputMaliciousSourcesRuleCondition.EmailDomainCondition, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetEmailDomainCondition() *InputMaliciousSourcesRuleEmailDomainCondition {
	return v.EmailDomainCondition
}

// GetIpAddressCondition returns InputMaliciousSourcesRuleCondition.IpAddressCondition, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetIpAddressCondition() *InputMaliciousSourcesRuleIpAddressCondition {
	return v.IpAddressCondition
}

// GetIpLocationTypeCondition returns InputMaliciousSourcesRuleCondition.IpLocationTypeCondition, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetIpLocationTypeCondition() *InputMaliciousSourcesRuleIpLocationTypeCondition {
	return v.IpLocationTypeCondition
}

// GetIpReputationCondition returns InputMaliciousSourcesRuleCondition.IpReputationCondition, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetIpReputationCondition() *InputMaliciousSourcesRuleIpReputationCondition {
	return v.IpReputationCondition
}

// GetRegionCondition returns InputMaliciousSourcesRuleCondition.RegionCondition, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCondition) GetRegionCondition() *InputMaliciousSourcesRuleRegionCondition {
	return v.RegionCondition
}

// Input to create malicious source rule
type InputMaliciousSourcesRuleCreate struct {
	// Malicious Sources rule information
	RuleInfo InputMaliciousSourcesRuleInfo `json:"ruleInfo"`
	// Malicious Sources rule scope
	RuleScope *InputMaliciousSourcesRuleScope `json:"ruleScope"`
}

// GetRuleInfo returns InputMaliciousSourcesRuleCreate.RuleInfo, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCreate) GetRuleInfo() InputMaliciousSourcesRuleInfo {
	return v.RuleInfo
}

// GetRuleScope returns InputMaliciousSourcesRuleCreate.RuleScope, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleCreate) GetRuleScope() *InputMaliciousSourcesRuleScope {
	return v.RuleScope
}

// Input to delete malicious source rule
type InputMaliciousSourcesRuleDelete struct {
	// Rule ID to be deleted
	Id string `json:"id"`
}

// GetId returns InputMaliciousSourcesRuleDelete.Id, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleDelete) GetId() string { return v.Id }

// Malicious sources rule effect with modification
type InputMaliciousSourcesRuleEffectWithModification struct {
	// Effects enforced for agent while inline processing of requests
	AgentEffect InputMaliciousSourcesRuleAgentEffect `json:"agentEffect"`
	// Malicious sources rule effect modification type
	RuleEffectType MaliciousSourcesRuleEffectModificationType `json:"ruleEffectType"`
}

// GetAgentEffect returns InputMaliciousSourcesRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEffectWithModification) GetAgentEffect() InputMaliciousSourcesRuleAgentEffect {
	return v.AgentEffect
}

// GetRuleEffectType returns InputMaliciousSourcesRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEffectWithModification) GetRuleEffectType() MaliciousSourcesRuleEffectModificationType {
	return v.RuleEffectType
}

// Email domain conditions for the rule to be applied
type InputMaliciousSourcesRuleEmailDomainCondition struct {
	// boolean denoting whether the rule should apply to data leaked email
	DataLeakedEmail *bool `json:"dataLeakedEmail"`
	// boolean denoting whether the rule should apply to disposable email domains
	DisposableEmailDomain *bool `json:"disposableEmailDomain"`
	// list of email domain where rule should apply
	EmailDomains []*string `json:"emailDomains"`
	// email fraud score where rule should apply
	EmailFraudScore *InputMaliciousSourcesRuleEmailFraudScore `json:"emailFraudScore"`
	// list of email regexes where rule should apply
	EmailRegexes []*string `json:"emailRegexes"`
}

// GetDataLeakedEmail returns InputMaliciousSourcesRuleEmailDomainCondition.DataLeakedEmail, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailDomainCondition) GetDataLeakedEmail() *bool {
	return v.DataLeakedEmail
}

// GetDisposableEmailDomain returns InputMaliciousSourcesRuleEmailDomainCondition.DisposableEmailDomain, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailDomainCondition) GetDisposableEmailDomain() *bool {
	return v.DisposableEmailDomain
}

// GetEmailDomains returns InputMaliciousSourcesRuleEmailDomainCondition.EmailDomains, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailDomainCondition) GetEmailDomains() []*string {
	return v.EmailDomains
}

// GetEmailFraudScore returns InputMaliciousSourcesRuleEmailDomainCondition.EmailFraudScore, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailDomainCondition) GetEmailFraudScore() *InputMaliciousSourcesRuleEmailFraudScore {
	return v.EmailFraudScore
}

// GetEmailRegexes returns InputMaliciousSourcesRuleEmailDomainCondition.EmailRegexes, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailDomainCondition) GetEmailRegexes() []*string {
	return v.EmailRegexes
}

// email fraud score where rule should apply
type InputMaliciousSourcesRuleEmailFraudScore struct {
	// Email Fraud Score type for a rule
	EmailFraudScoreType MaliciousSourcesRuleEmailFraudScoreType `json:"emailFraudScoreType"`
	// Minimum Email Fraud Score
	MinEmailFraudScore *int64 `json:"minEmailFraudScore"`
	// Minimum Email Fraud Score Level
	MinEmailFraudScoreLevel *MaliciousSourcesRuleEmailFraudScoreLevel `json:"minEmailFraudScoreLevel"`
}

// GetEmailFraudScoreType returns InputMaliciousSourcesRuleEmailFraudScore.EmailFraudScoreType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailFraudScore) GetEmailFraudScoreType() MaliciousSourcesRuleEmailFraudScoreType {
	return v.EmailFraudScoreType
}

// GetMinEmailFraudScore returns InputMaliciousSourcesRuleEmailFraudScore.MinEmailFraudScore, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailFraudScore) GetMinEmailFraudScore() *int64 {
	return v.MinEmailFraudScore
}

// GetMinEmailFraudScoreLevel returns InputMaliciousSourcesRuleEmailFraudScore.MinEmailFraudScoreLevel, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEmailFraudScore) GetMinEmailFraudScoreLevel() *MaliciousSourcesRuleEmailFraudScoreLevel {
	return v.MinEmailFraudScoreLevel
}

// Environment Scope on which the rule will apply
type InputMaliciousSourcesRuleEnvironmentScope struct {
	// List of environments on which the rule should apply
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns InputMaliciousSourcesRuleEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

// Expiration details of the rule
type InputMaliciousSourcesRuleExpirationDetails struct {
	// Requested expiration duration for the rule
	ExpirationDuration string `json:"expirationDuration"`
	// Requested expiration timestamp for the rule
	ExpirationTimestamp *string `json:"expirationTimestamp"`
}

// GetExpirationDuration returns InputMaliciousSourcesRuleExpirationDetails.ExpirationDuration, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleExpirationDetails) GetExpirationDuration() string {
	return v.ExpirationDuration
}

// GetExpirationTimestamp returns InputMaliciousSourcesRuleExpirationDetails.ExpirationTimestamp, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleExpirationDetails) GetExpirationTimestamp() *string {
	return v.ExpirationTimestamp
}

// Actions associated with the rule
type InputMaliciousSourcesRuleHeaderInjection struct {
	// Header category
	HeaderCategory MaliciousSourcesRuleHeaderCategory `json:"headerCategory"`
	// Header key
	Key string `json:"key"`
	// Header value
	Value string `json:"value"`
}

// GetHeaderCategory returns InputMaliciousSourcesRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleHeaderInjection) GetHeaderCategory() MaliciousSourcesRuleHeaderCategory {
	return v.HeaderCategory
}

// GetKey returns InputMaliciousSourcesRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleHeaderInjection) GetKey() string { return v.Key }

// GetValue returns InputMaliciousSourcesRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleHeaderInjection) GetValue() string { return v.Value }

// Malicious Sources rule information
type InputMaliciousSourcesRuleInfo struct {
	// Actions associated with the rule
	Action InputMaliciousSourcesRuleAction `json:"action"`
	// Condition for the malicious sources rule to be applied
	Conditions []*InputMaliciousSourcesRuleCondition `json:"conditions"`
	// Rule description
	Description *string `json:"description"`
	// Rule name
	Name string `json:"name"`
}

// GetAction returns InputMaliciousSourcesRuleInfo.Action, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleInfo) GetAction() InputMaliciousSourcesRuleAction { return v.Action }

// GetConditions returns InputMaliciousSourcesRuleInfo.Conditions, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleInfo) GetConditions() []*InputMaliciousSourcesRuleCondition {
	return v.Conditions
}

// GetDescription returns InputMaliciousSourcesRuleInfo.Description, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleInfo) GetDescription() *string { return v.Description }

// GetName returns InputMaliciousSourcesRuleInfo.Name, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleInfo) GetName() string { return v.Name }

// IP address conditions for the rule to be applied
type InputMaliciousSourcesRuleIpAddressCondition struct {
	// List of IP ranges following CIDR syntax
	CidrIpRanges []*string `json:"cidrIpRanges"`
	// List of IP addresses
	IpAddresses []*string `json:"ipAddresses"`
}

// GetCidrIpRanges returns InputMaliciousSourcesRuleIpAddressCondition.CidrIpRanges, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpAddressCondition) GetCidrIpRanges() []*string {
	return v.CidrIpRanges
}

// GetIpAddresses returns InputMaliciousSourcesRuleIpAddressCondition.IpAddresses, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpAddressCondition) GetIpAddresses() []*string {
	return v.IpAddresses
}

// IP location type conditions for the rule to be applied
type InputMaliciousSourcesRuleIpLocationTypeCondition struct {
	// IP location types where rule should apply
	IpLocationTypes []*MaliciousSourcesRuleIpLocationType `json:"ipLocationTypes"`
}

// GetIpLocationTypes returns InputMaliciousSourcesRuleIpLocationTypeCondition.IpLocationTypes, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpLocationTypeCondition) GetIpLocationTypes() []*MaliciousSourcesRuleIpLocationType {
	return v.IpLocationTypes
}

// IP reputation conditions for the rule to be applied
type InputMaliciousSourcesRuleIpReputationCondition struct {
	// IP reputation type for a rule
	IpReputationConditionType MaliciousSourcesRuleIpReputationConditionType `json:"ipReputationConditionType"`
	// Minimum IP Reputation Score
	MinIpReputationScore *int64 `json:"minIpReputationScore"`
	// Minimum IP Reputation Severity Level
	MinIpReputationSeverity *MaliciousSourcesRuleIpReputationSeverity `json:"minIpReputationSeverity"`
}

// GetIpReputationConditionType returns InputMaliciousSourcesRuleIpReputationCondition.IpReputationConditionType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpReputationCondition) GetIpReputationConditionType() MaliciousSourcesRuleIpReputationConditionType {
	return v.IpReputationConditionType
}

// GetMinIpReputationScore returns InputMaliciousSourcesRuleIpReputationCondition.MinIpReputationScore, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpReputationCondition) GetMinIpReputationScore() *int64 {
	return v.MinIpReputationScore
}

// GetMinIpReputationSeverity returns InputMaliciousSourcesRuleIpReputationCondition.MinIpReputationSeverity, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleIpReputationCondition) GetMinIpReputationSeverity() *MaliciousSourcesRuleIpReputationSeverity {
	return v.MinIpReputationSeverity
}

// Region on which rule should apply
type InputMaliciousSourcesRuleRegion struct {
	// Country ISO code
	CountryIsoCode *string `json:"countryIsoCode"`
	// Region Type for a rule
	RegionType MaliciousSourcesRuleRegionType `json:"regionType"`
}

// GetCountryIsoCode returns InputMaliciousSourcesRuleRegion.CountryIsoCode, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleRegion) GetCountryIsoCode() *string { return v.CountryIsoCode }

// GetRegionType returns InputMaliciousSourcesRuleRegion.RegionType, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleRegion) GetRegionType() MaliciousSourcesRuleRegionType {
	return v.RegionType
}

// Region conditions for the rule to be applied
type InputMaliciousSourcesRuleRegionCondition struct {
	// Regions on which rule should apply
	Regions []*InputMaliciousSourcesRuleRegion `json:"regions"`
}

// GetRegions returns InputMaliciousSourcesRuleRegionCondition.Regions, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleRegionCondition) GetRegions() []*InputMaliciousSourcesRuleRegion {
	return v.Regions
}

// Malicious Sources rule scope
type InputMaliciousSourcesRuleScope struct {
	// Environment Scope on which the rule will apply
	EnvironmentScope *InputMaliciousSourcesRuleEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns InputMaliciousSourcesRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleScope) GetEnvironmentScope() *InputMaliciousSourcesRuleEnvironmentScope {
	return v.EnvironmentScope
}

// Malicious Sources rule status
type InputMaliciousSourcesRuleStatus struct {
	// Disables rule
	Disabled bool `json:"disabled"`
	// Boolean denoting if rule should be hidden
	Hidden *bool `json:"hidden"`
	// Sets rule as internal, visible only to traceable users. Consumed only if disabled is set to true
	Internal *bool `json:"internal"`
}

// GetDisabled returns InputMaliciousSourcesRuleStatus.Disabled, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleStatus) GetDisabled() bool { return v.Disabled }

// GetHidden returns InputMaliciousSourcesRuleStatus.Hidden, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleStatus) GetHidden() *bool { return v.Hidden }

// GetInternal returns InputMaliciousSourcesRuleStatus.Internal, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleStatus) GetInternal() *bool { return v.Internal }

// Input to update malicious source rule
type InputMaliciousSourcesRuleUpdate struct {
	// Updated Malicious Sources rule
	Rule InputMaliciousSourcesRule `json:"rule"`
}

// GetRule returns InputMaliciousSourcesRuleUpdate.Rule, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRuleUpdate) GetRule() InputMaliciousSourcesRule { return v.Rule }

// Filter to fetch malicious source rule
type InputMaliciousSourcesRulesFilter struct {
	// Rule Scope
	RuleScope InputMaliciousSourcesRuleScope `json:"ruleScope"`
}

// GetRuleScope returns InputMaliciousSourcesRulesFilter.RuleScope, and is useful for accessing the field via an interface.
func (v *InputMaliciousSourcesRulesFilter) GetRuleScope() InputMaliciousSourcesRuleScope {
	return v.RuleScope
}

type InputModsecurityAnomalyDetectionConfig struct {
	KeyValuePairs []*InputAnomalyDetectionConfigKeyValuePair `json:"keyValuePairs"`
	Name          ModsecurityAnomalyDetectionConfigName      `json:"name"`
	RuleId        *string                                    `json:"ruleId"`
}

// GetKeyValuePairs returns InputModsecurityAnomalyDetectionConfig.KeyValuePairs, and is useful for accessing the field via an interface.
func (v *InputModsecurityAnomalyDetectionConfig) GetKeyValuePairs() []*InputAnomalyDetectionConfigKeyValuePair {
	return v.KeyValuePairs
}

// GetName returns InputModsecurityAnomalyDetectionConfig.Name, and is useful for accessing the field via an interface.
func (v *InputModsecurityAnomalyDetectionConfig) GetName() ModsecurityAnomalyDetectionConfigName {
	return v.Name
}

// GetRuleId returns InputModsecurityAnomalyDetectionConfig.RuleId, and is useful for accessing the field via an interface.
func (v *InputModsecurityAnomalyDetectionConfig) GetRuleId() *string { return v.RuleId }

type InputMultiValuedStringParamRule struct {
	KeyRegex       string  `json:"keyRegex"`
	ValueDelimiter string  `json:"valueDelimiter"`
	ValueRegex     *string `json:"valueRegex"`
}

// GetKeyRegex returns InputMultiValuedStringParamRule.KeyRegex, and is useful for accessing the field via an interface.
func (v *InputMultiValuedStringParamRule) GetKeyRegex() string { return v.KeyRegex }

// GetValueDelimiter returns InputMultiValuedStringParamRule.ValueDelimiter, and is useful for accessing the field via an interface.
func (v *InputMultiValuedStringParamRule) GetValueDelimiter() string { return v.ValueDelimiter }

// GetValueRegex returns InputMultiValuedStringParamRule.ValueRegex, and is useful for accessing the field via an interface.
func (v *InputMultiValuedStringParamRule) GetValueRegex() *string { return v.ValueRegex }

type InputParamValueTypeModsecExclude struct {
	ExcludedModsecRuleIds []*string      `json:"excludedModsecRuleIds"`
	ParamValueType        ParamValueType `json:"paramValueType"`
}

// GetExcludedModsecRuleIds returns InputParamValueTypeModsecExclude.ExcludedModsecRuleIds, and is useful for accessing the field via an interface.
func (v *InputParamValueTypeModsecExclude) GetExcludedModsecRuleIds() []*string {
	return v.ExcludedModsecRuleIds
}

// GetParamValueType returns InputParamValueTypeModsecExclude.ParamValueType, and is useful for accessing the field via an interface.
func (v *InputParamValueTypeModsecExclude) GetParamValueType() ParamValueType {
	return v.ParamValueType
}

type InputParameterExtractionConfig struct {
	// Extract the parameter labelled with one of the specified data type ids as per
	// the data classification rules. Priority will be given to the data type id
	// appearing first in the list.
	DataTypeIds []*string `json:"dataTypeIds"`
	// The logic to extract the parameter. Example: "get_json_object(request_body,
	// '$.email')". This doesn't have any checks - whether the syntax is correct, the
	// function is supported, etc.
	ExtractionLogic string `json:"extractionLogic"`
}

// GetDataTypeIds returns InputParameterExtractionConfig.DataTypeIds, and is useful for accessing the field via an interface.
func (v *InputParameterExtractionConfig) GetDataTypeIds() []*string { return v.DataTypeIds }

// GetExtractionLogic returns InputParameterExtractionConfig.ExtractionLogic, and is useful for accessing the field via an interface.
func (v *InputParameterExtractionConfig) GetExtractionLogic() string { return v.ExtractionLogic }

type InputPredecessorSuccessorApiConfig struct {
	PredecessorApiIds []*string `json:"predecessorApiIds"`
	SuccessorApiId    string    `json:"successorApiId"`
}

// GetPredecessorApiIds returns InputPredecessorSuccessorApiConfig.PredecessorApiIds, and is useful for accessing the field via an interface.
func (v *InputPredecessorSuccessorApiConfig) GetPredecessorApiIds() []*string {
	return v.PredecessorApiIds
}

// GetSuccessorApiId returns InputPredecessorSuccessorApiConfig.SuccessorApiId, and is useful for accessing the field via an interface.
func (v *InputPredecessorSuccessorApiConfig) GetSuccessorApiId() string { return v.SuccessorApiId }

type InputPredecessorSuccessorApiSequenceConfig struct {
	PredecessorSuccessorApiConfigs []*InputPredecessorSuccessorApiConfig `json:"predecessorSuccessorApiConfigs"`
}

// GetPredecessorSuccessorApiConfigs returns InputPredecessorSuccessorApiSequenceConfig.PredecessorSuccessorApiConfigs, and is useful for accessing the field via an interface.
func (v *InputPredecessorSuccessorApiSequenceConfig) GetPredecessorSuccessorApiConfigs() []*InputPredecessorSuccessorApiConfig {
	return v.PredecessorSuccessorApiConfigs
}

// Region identifier schema for rate limit region condition
type InputRateLimitingRegionIdentifier struct {
	// Country ISO code for region identifier
	CountryIsoCode string `json:"countryIsoCode"`
}

// GetCountryIsoCode returns InputRateLimitingRegionIdentifier.CountryIsoCode, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRegionIdentifier) GetCountryIsoCode() string { return v.CountryIsoCode }

// Custom rule to protect endpoints and other services from brute-force attacks
type InputRateLimitingRule struct {
	// Rate limit rule ID
	Id string `json:"id"`
	// Rate limit rule category
	Category RateLimitingRuleCategory `json:"category"`
	// List of rate limit rule conditions
	Conditions []*InputRateLimitingRuleCondition `json:"conditions"`
	// Rate limit rule description
	Description *string `json:"description"`
	// Rate limit rule enabled status
	Enabled bool `json:"enabled"`
	// Rate limit rule custom labels
	Labels []*InputRateLimitingRuleLabel `json:"labels"`
	// Rate limit rule name
	Name string `json:"name"`
	// Rate limit rule condition
	RateLimitingRuleCondition *InputRateLimitingRuleCondition `json:"rateLimitingRuleCondition"`
	// Rate limit rule scope
	RuleConfigScope *InputRuleConfigScope `json:"ruleConfigScope"`
	// Rate limit rule evaluation points
	RuleEvaluationPoints []*RateLimitingRuleEvaluationPoint `json:"ruleEvaluationPoints"`
	// Rate limit rule status
	RuleStatus *InputRateLimitingRuleStatus `json:"ruleStatus"`
	// List of configs containing thresholds and actions for a rate limit rule
	ThresholdActionConfigs []*InputRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`
	// Transaction action config for DLP rule
	TransactionActionConfigs *InputRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`
}

// GetId returns InputRateLimitingRule.Id, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetId() string { return v.Id }

// GetCategory returns InputRateLimitingRule.Category, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetCategory() RateLimitingRuleCategory { return v.Category }

// GetConditions returns InputRateLimitingRule.Conditions, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetConditions() []*InputRateLimitingRuleCondition {
	return v.Conditions
}

// GetDescription returns InputRateLimitingRule.Description, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetDescription() *string { return v.Description }

// GetEnabled returns InputRateLimitingRule.Enabled, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetEnabled() bool { return v.Enabled }

// GetLabels returns InputRateLimitingRule.Labels, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetLabels() []*InputRateLimitingRuleLabel { return v.Labels }

// GetName returns InputRateLimitingRule.Name, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetName() string { return v.Name }

// GetRateLimitingRuleCondition returns InputRateLimitingRule.RateLimitingRuleCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetRateLimitingRuleCondition() *InputRateLimitingRuleCondition {
	return v.RateLimitingRuleCondition
}

// GetRuleConfigScope returns InputRateLimitingRule.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetRuleConfigScope() *InputRuleConfigScope { return v.RuleConfigScope }

// GetRuleEvaluationPoints returns InputRateLimitingRule.RuleEvaluationPoints, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetRuleEvaluationPoints() []*RateLimitingRuleEvaluationPoint {
	return v.RuleEvaluationPoints
}

// GetRuleStatus returns InputRateLimitingRule.RuleStatus, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetRuleStatus() *InputRateLimitingRuleStatus { return v.RuleStatus }

// GetThresholdActionConfigs returns InputRateLimitingRule.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetThresholdActionConfigs() []*InputRateLimitingRuleThresholdActionConfig {
	return v.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns InputRateLimitingRule.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRule) GetTransactionActionConfigs() *InputRateLimitingTransactionActionConfig {
	return v.TransactionActionConfigs
}

// Action to take if a rate limit rule is applicable
type InputRateLimitingRuleAction struct {
	// Type of action
	ActionType RateLimitingRuleActionType `json:"actionType"`
	// Details regarding alert action
	Alert *InputRateLimitingRuleAlertAction `json:"alert"`
	// Details regarding allow action
	Allow *InputRateLimitingRuleAllowAction `json:"allow"`
	// Details regarding block action
	Block *InputRateLimitingRuleBlockAction `json:"block"`
	// Details regarding mark for testing action
	MarkForTesting *InputRateLimitingRuleMarkForTestingAction `json:"markForTesting"`
}

// GetActionType returns InputRateLimitingRuleAction.ActionType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAction) GetActionType() RateLimitingRuleActionType { return v.ActionType }

// GetAlert returns InputRateLimitingRuleAction.Alert, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAction) GetAlert() *InputRateLimitingRuleAlertAction { return v.Alert }

// GetAllow returns InputRateLimitingRuleAction.Allow, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAction) GetAllow() *InputRateLimitingRuleAllowAction { return v.Allow }

// GetBlock returns InputRateLimitingRuleAction.Block, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAction) GetBlock() *InputRateLimitingRuleBlockAction { return v.Block }

// GetMarkForTesting returns InputRateLimitingRuleAction.MarkForTesting, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAction) GetMarkForTesting() *InputRateLimitingRuleMarkForTestingAction {
	return v.MarkForTesting
}

// Details regarding agent effect applicable on a rate limit rule
type InputRateLimitingRuleAgentEffect struct {
	// List of agent modifications to be done as part of rate limiting rule action
	AgentModifications []*InputRateLimitingRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns InputRateLimitingRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAgentEffect) GetAgentModifications() []*InputRateLimitingRuleAgentModification {
	return v.AgentModifications
}

// Details regarding agent modification applicable on a rate limit rule
type InputRateLimitingRuleAgentModification struct {
	// Type of agent modification to be performed
	AgentModificationType RateLimitingRuleAgentModificationType `json:"agentModificationType"`
	// Details of header injection action
	HeaderInjection InputRateLimitingRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns InputRateLimitingRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAgentModification) GetAgentModificationType() RateLimitingRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns InputRateLimitingRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAgentModification) GetHeaderInjection() InputRateLimitingRuleHeaderInjection {
	return v.HeaderInjection
}

// Details regarding alert action applicable on a rate limit rule
type InputRateLimitingRuleAlertAction struct {
	// Agent effect associated with this action
	AgentEffect *InputRateLimitingRuleAgentEffect `json:"agentEffect"`
	// Severity of alert to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
}

// GetAgentEffect returns InputRateLimitingRuleAlertAction.AgentEffect, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAlertAction) GetAgentEffect() *InputRateLimitingRuleAgentEffect {
	return v.AgentEffect
}

// GetEventSeverity returns InputRateLimitingRuleAlertAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAlertAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// Details regarding allow action applicable on a rate limit rule
type InputRateLimitingRuleAllowAction struct {
	// Duration to allow the malicious actor
	Duration *string `json:"duration"`
}

// GetDuration returns InputRateLimitingRuleAllowAction.Duration, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleAllowAction) GetDuration() *string { return v.Duration }

// Details regarding block action applicable on a rate limit rule
type InputRateLimitingRuleBlockAction struct {
	// Duration to block the malicious actor
	Duration *string `json:"duration"`
	// Severity of blocked event to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
	// Use duration in threshold config
	UseThresholdDuration *bool `json:"useThresholdDuration"`
}

// GetDuration returns InputRateLimitingRuleBlockAction.Duration, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleBlockAction) GetDuration() *string { return v.Duration }

// GetEventSeverity returns InputRateLimitingRuleBlockAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleBlockAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// GetUseThresholdDuration returns InputRateLimitingRuleBlockAction.UseThresholdDuration, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleBlockAction) GetUseThresholdDuration() *bool {
	return v.UseThresholdDuration
}

// Condition applicable for a rate limit rule
type InputRateLimitingRuleCondition struct {
	// RateLimitingRuleCondition type
	ConditionType *RateLimitingRuleConditionType `json:"conditionType"`
	// Rate limit rule leaf condition
	LeafCondition *InputRateLimitingRuleLeafCondition `json:"leafCondition"`
	// Rate limit rule logical condition
	LogicalCondition *InputRateLimitingRuleLogicalCondition `json:"logicalCondition"`
}

// GetConditionType returns InputRateLimitingRuleCondition.ConditionType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleCondition) GetConditionType() *RateLimitingRuleConditionType {
	return v.ConditionType
}

// GetLeafCondition returns InputRateLimitingRuleCondition.LeafCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleCondition) GetLeafCondition() *InputRateLimitingRuleLeafCondition {
	return v.LeafCondition
}

// GetLogicalCondition returns InputRateLimitingRuleCondition.LogicalCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleCondition) GetLogicalCondition() *InputRateLimitingRuleLogicalCondition {
	return v.LogicalCondition
}

// Details regarding rate limit rule
type InputRateLimitingRuleData struct {
	// Rate limit rule category
	Category RateLimitingRuleCategory `json:"category"`
	// List of rate limit rule conditions
	Conditions []*InputRateLimitingRuleCondition `json:"conditions"`
	// Rate limit rule description
	Description *string `json:"description"`
	// Rate limit rule enabled status
	Enabled bool `json:"enabled"`
	// Rate limit rule custom labels
	Labels []*InputRateLimitingRuleLabel `json:"labels"`
	// Rate limit rule name
	Name string `json:"name"`
	// Rate limit rule condition
	RateLimitingRuleCondition *InputRateLimitingRuleCondition `json:"rateLimitingRuleCondition"`
	// Rate limit rule scope
	RuleConfigScope *InputRuleConfigScope `json:"ruleConfigScope"`
	// Rate limit rule evaluation points
	RuleEvaluationPoints []*RateLimitingRuleEvaluationPoint `json:"ruleEvaluationPoints"`
	// Rate limit rule status
	RuleStatus *InputRateLimitingRuleStatus `json:"ruleStatus"`
	// List of configs containing thresholds and actions for a rate limit rule
	ThresholdActionConfigs []*InputRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`
	// Transaction action config for a rate limit rule
	TransactionActionConfigs *InputRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`
}

// GetCategory returns InputRateLimitingRuleData.Category, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetCategory() RateLimitingRuleCategory { return v.Category }

// GetConditions returns InputRateLimitingRuleData.Conditions, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetConditions() []*InputRateLimitingRuleCondition {
	return v.Conditions
}

// GetDescription returns InputRateLimitingRuleData.Description, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetDescription() *string { return v.Description }

// GetEnabled returns InputRateLimitingRuleData.Enabled, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetEnabled() bool { return v.Enabled }

// GetLabels returns InputRateLimitingRuleData.Labels, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetLabels() []*InputRateLimitingRuleLabel { return v.Labels }

// GetName returns InputRateLimitingRuleData.Name, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetName() string { return v.Name }

// GetRateLimitingRuleCondition returns InputRateLimitingRuleData.RateLimitingRuleCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetRateLimitingRuleCondition() *InputRateLimitingRuleCondition {
	return v.RateLimitingRuleCondition
}

// GetRuleConfigScope returns InputRateLimitingRuleData.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetRuleConfigScope() *InputRuleConfigScope {
	return v.RuleConfigScope
}

// GetRuleEvaluationPoints returns InputRateLimitingRuleData.RuleEvaluationPoints, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetRuleEvaluationPoints() []*RateLimitingRuleEvaluationPoint {
	return v.RuleEvaluationPoints
}

// GetRuleStatus returns InputRateLimitingRuleData.RuleStatus, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetRuleStatus() *InputRateLimitingRuleStatus { return v.RuleStatus }

// GetThresholdActionConfigs returns InputRateLimitingRuleData.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetThresholdActionConfigs() []*InputRateLimitingRuleThresholdActionConfig {
	return v.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns InputRateLimitingRuleData.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleData) GetTransactionActionConfigs() *InputRateLimitingTransactionActionConfig {
	return v.TransactionActionConfigs
}

// Dataset and datatype condition for a rate limit rule
type InputRateLimitingRuleDatatypeCondition struct {
	// data location type
	DataLocation *RateLimitingRuleDataLocation `json:"dataLocation"`
	// List of dataset ids applicable
	DatasetIds []*string `json:"datasetIds"`
	// List of datatype ids applicable
	DatatypeIds []*string `json:"datatypeIds"`
	// datatype matching
	DatatypeMatching *InputRateLimitingRuleDatatypeMatching `json:"datatypeMatching"`
	// Minimum Data sensitivity level
	MinDataSensitivityLevel *RateLimitingRuleDataSensitivityLevel `json:"minDataSensitivityLevel"`
}

// GetDataLocation returns InputRateLimitingRuleDatatypeCondition.DataLocation, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeCondition) GetDataLocation() *RateLimitingRuleDataLocation {
	return v.DataLocation
}

// GetDatasetIds returns InputRateLimitingRuleDatatypeCondition.DatasetIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeCondition) GetDatasetIds() []*string { return v.DatasetIds }

// GetDatatypeIds returns InputRateLimitingRuleDatatypeCondition.DatatypeIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeCondition) GetDatatypeIds() []*string { return v.DatatypeIds }

// GetDatatypeMatching returns InputRateLimitingRuleDatatypeCondition.DatatypeMatching, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeCondition) GetDatatypeMatching() *InputRateLimitingRuleDatatypeMatching {
	return v.DatatypeMatching
}

// GetMinDataSensitivityLevel returns InputRateLimitingRuleDatatypeCondition.MinDataSensitivityLevel, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeCondition) GetMinDataSensitivityLevel() *RateLimitingRuleDataSensitivityLevel {
	return v.MinDataSensitivityLevel
}

// Rate limiting datatype matching
type InputRateLimitingRuleDatatypeMatching struct {
	// datatype matching type
	DatatypeMatchingType *RateLimitingRuleDatatypeMatchingType `json:"datatypeMatchingType"`
	// regex based matching
	RegexBasedMatching *InputRateLimitingRuleRegexBasedMatching `json:"regexBasedMatching"`
}

// GetDatatypeMatchingType returns InputRateLimitingRuleDatatypeMatching.DatatypeMatchingType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeMatching) GetDatatypeMatchingType() *RateLimitingRuleDatatypeMatchingType {
	return v.DatatypeMatchingType
}

// GetRegexBasedMatching returns InputRateLimitingRuleDatatypeMatching.RegexBasedMatching, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleDatatypeMatching) GetRegexBasedMatching() *InputRateLimitingRuleRegexBasedMatching {
	return v.RegexBasedMatching
}

// Email domain condition for a rate limit rule
type InputRateLimitingRuleEmailDomainCondition struct {
	// List of email domains
	EmailDomains []*string `json:"emailDomains"`
	// List of email regexes
	EmailRegexes []*string `json:"emailRegexes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetEmailDomains returns InputRateLimitingRuleEmailDomainCondition.EmailDomains, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleEmailDomainCondition) GetEmailDomains() []*string {
	return v.EmailDomains
}

// GetEmailRegexes returns InputRateLimitingRuleEmailDomainCondition.EmailRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleEmailDomainCondition) GetEmailRegexes() []*string {
	return v.EmailRegexes
}

// GetExclude returns InputRateLimitingRuleEmailDomainCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleEmailDomainCondition) GetExclude() *bool { return v.Exclude }

// Entity scope condition applicable on a rate limit rule
type InputRateLimitingRuleEntityScope struct {
	// List of entity ids applicable
	EntityIds []*string `json:"entityIds"`
	// Entity type
	EntityType RateLimitingRuleEntityType `json:"entityType"`
}

// GetEntityIds returns InputRateLimitingRuleEntityScope.EntityIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleEntityScope) GetEntityIds() []*string { return v.EntityIds }

// GetEntityType returns InputRateLimitingRuleEntityScope.EntityType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleEntityScope) GetEntityType() RateLimitingRuleEntityType {
	return v.EntityType
}

// Details regarding header injection applicable on a rate limit rule
type InputRateLimitingRuleHeaderInjection struct {
	// Category defining where the header needs to be injected
	HeaderCategory RateLimitingRuleMatchCategory `json:"headerCategory"`
	// Header name to be injected
	Key string `json:"key"`
	// Header value to be injected
	Value string `json:"value"`
}

// GetHeaderCategory returns InputRateLimitingRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleHeaderInjection) GetHeaderCategory() RateLimitingRuleMatchCategory {
	return v.HeaderCategory
}

// GetKey returns InputRateLimitingRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleHeaderInjection) GetKey() string { return v.Key }

// GetValue returns InputRateLimitingRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleHeaderInjection) GetValue() string { return v.Value }

// Ip abuse velocity condition applicable on a rate limit rule
type InputRateLimitingRuleIpAbuseVelocityCondition struct {
	// Minimum Ip abuse velocity applicable
	MinIpAbuseVelocity RateLimitingRuleIpAbuseVelocity `json:"minIpAbuseVelocity"`
}

// GetMinIpAbuseVelocity returns InputRateLimitingRuleIpAbuseVelocityCondition.MinIpAbuseVelocity, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAbuseVelocityCondition) GetMinIpAbuseVelocity() RateLimitingRuleIpAbuseVelocity {
	return v.MinIpAbuseVelocity
}

// IP address condition applicable on a rate limit rule
type InputRateLimitingRuleIpAddressCondition struct {
	// List of CIDR IP ranges
	CidrIpRanges []*string `json:"cidrIpRanges"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// ip address condition type
	IpAddressConditionType *RateLimitingRuleIpAddressConditionType `json:"ipAddressConditionType"`
	// List of IP addresses
	IpAddresses []*string `json:"ipAddresses"`
	// List of IP addresses and CIDR IP ranges
	RawInputIpData []*string `json:"rawInputIpData"`
}

// GetCidrIpRanges returns InputRateLimitingRuleIpAddressCondition.CidrIpRanges, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAddressCondition) GetCidrIpRanges() []*string { return v.CidrIpRanges }

// GetExclude returns InputRateLimitingRuleIpAddressCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAddressCondition) GetExclude() *bool { return v.Exclude }

// GetIpAddressConditionType returns InputRateLimitingRuleIpAddressCondition.IpAddressConditionType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAddressCondition) GetIpAddressConditionType() *RateLimitingRuleIpAddressConditionType {
	return v.IpAddressConditionType
}

// GetIpAddresses returns InputRateLimitingRuleIpAddressCondition.IpAddresses, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAddressCondition) GetIpAddresses() []*string { return v.IpAddresses }

// GetRawInputIpData returns InputRateLimitingRuleIpAddressCondition.RawInputIpData, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAddressCondition) GetRawInputIpData() []*string {
	return v.RawInputIpData
}

// Ip asn condition for a rate limit rule
type InputRateLimitingRuleIpAsnCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of ip asn regexes
	IpAsnRegexes []*string `json:"ipAsnRegexes"`
}

// GetExclude returns InputRateLimitingRuleIpAsnCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAsnCondition) GetExclude() *bool { return v.Exclude }

// GetIpAsnRegexes returns InputRateLimitingRuleIpAsnCondition.IpAsnRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpAsnCondition) GetIpAsnRegexes() []*string { return v.IpAsnRegexes }

// IP connection type condition for a rate limit rule
type InputRateLimitingRuleIpConnectionTypeCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of ip connection types
	IpConnectionTypes []*RateLimitingRuleIpConnectionType `json:"ipConnectionTypes"`
}

// GetExclude returns InputRateLimitingRuleIpConnectionTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpConnectionTypeCondition) GetExclude() *bool { return v.Exclude }

// GetIpConnectionTypes returns InputRateLimitingRuleIpConnectionTypeCondition.IpConnectionTypes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpConnectionTypeCondition) GetIpConnectionTypes() []*RateLimitingRuleIpConnectionType {
	return v.IpConnectionTypes
}

// IP location type condition applicable on a rate limit rule
type InputRateLimitingRuleIpLocationTypeCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of IP locations types applicable
	IpLocationTypes []*RateLimitingRuleIpLocationType `json:"ipLocationTypes"`
}

// GetExclude returns InputRateLimitingRuleIpLocationTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpLocationTypeCondition) GetExclude() *bool { return v.Exclude }

// GetIpLocationTypes returns InputRateLimitingRuleIpLocationTypeCondition.IpLocationTypes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpLocationTypeCondition) GetIpLocationTypes() []*RateLimitingRuleIpLocationType {
	return v.IpLocationTypes
}

// Ip organisation condition for a rate limit rule
type InputRateLimitingRuleIpOrganisationCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of ip organisation regexes
	IpOrganisationRegexes []*string `json:"ipOrganisationRegexes"`
}

// GetExclude returns InputRateLimitingRuleIpOrganisationCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpOrganisationCondition) GetExclude() *bool { return v.Exclude }

// GetIpOrganisationRegexes returns InputRateLimitingRuleIpOrganisationCondition.IpOrganisationRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpOrganisationCondition) GetIpOrganisationRegexes() []*string {
	return v.IpOrganisationRegexes
}

// IP reputation condition applicable on a rate limit rule
type InputRateLimitingRuleIpReputationCondition struct {
	// Minimum IP reputation severity applicable
	MinIpReputationSeverity RateLimitingRuleIpReputationSeverity `json:"minIpReputationSeverity"`
}

// GetMinIpReputationSeverity returns InputRateLimitingRuleIpReputationCondition.MinIpReputationSeverity, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleIpReputationCondition) GetMinIpReputationSeverity() RateLimitingRuleIpReputationSeverity {
	return v.MinIpReputationSeverity
}

// Key value condition applicable on a rate limit rule
type InputRateLimitingRuleKeyValueCondition struct {
	// Key condition
	KeyCondition *InputRateLimitingRuleStringCondition `json:"keyCondition"`
	// Key value condition metadata type
	MetadataType *RateLimitingRuleKeyValueConditionMetadataType `json:"metadataType"`
	// Type of key value condition - static value or lhs-rhs keys
	KeyValueType *RateLimitingRuleKeyValueConditionType `json:"keyValueType"`
	// LHS-RHS keys' values matching condition
	LhsRhsCondition *InputRateLimitingRuleLhsRhsKeysCondition `json:"lhsRhsCondition"`
	// Static values matching condition
	StaticValueCondition *InputRateLimitingRuleStaticValueCondition `json:"staticValueCondition"`
	// Value condition
	ValueCondition *InputRateLimitingRuleStringCondition `json:"valueCondition"`
}

// GetKeyCondition returns InputRateLimitingRuleKeyValueCondition.KeyCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetKeyCondition() *InputRateLimitingRuleStringCondition {
	return v.KeyCondition
}

// GetMetadataType returns InputRateLimitingRuleKeyValueCondition.MetadataType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetMetadataType() *RateLimitingRuleKeyValueConditionMetadataType {
	return v.MetadataType
}

// GetKeyValueType returns InputRateLimitingRuleKeyValueCondition.KeyValueType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetKeyValueType() *RateLimitingRuleKeyValueConditionType {
	return v.KeyValueType
}

// GetLhsRhsCondition returns InputRateLimitingRuleKeyValueCondition.LhsRhsCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetLhsRhsCondition() *InputRateLimitingRuleLhsRhsKeysCondition {
	return v.LhsRhsCondition
}

// GetStaticValueCondition returns InputRateLimitingRuleKeyValueCondition.StaticValueCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetStaticValueCondition() *InputRateLimitingRuleStaticValueCondition {
	return v.StaticValueCondition
}

// GetValueCondition returns InputRateLimitingRuleKeyValueCondition.ValueCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleKeyValueCondition) GetValueCondition() *InputRateLimitingRuleStringCondition {
	return v.ValueCondition
}

// Key-value pair for labels
type InputRateLimitingRuleLabel struct {
	// Key
	Key string `json:"key"`
	// Value
	Value string `json:"value"`
}

// GetKey returns InputRateLimitingRuleLabel.Key, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLabel) GetKey() string { return v.Key }

// GetValue returns InputRateLimitingRuleLabel.Value, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLabel) GetValue() string { return v.Value }

// Label scope condition applicable on a rate limit rule
type InputRateLimitingRuleLabelScope struct {
	// List of label ids applicable
	LabelIds []*string `json:"labelIds"`
	// Label type
	LabelType RateLimitingRuleLabelType `json:"labelType"`
}

// GetLabelIds returns InputRateLimitingRuleLabelScope.LabelIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLabelScope) GetLabelIds() []*string { return v.LabelIds }

// GetLabelType returns InputRateLimitingRuleLabelScope.LabelType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLabelScope) GetLabelType() RateLimitingRuleLabelType {
	return v.LabelType
}

// Leaf condition applicable on a rate limit rule
type InputRateLimitingRuleLeafCondition struct {
	// Leaf condition type
	ConditionType RateLimitingRuleLeafConditionType `json:"conditionType"`
	// Dataset and datatype condition applicable on a rate limit rule
	DatatypeCondition *InputRateLimitingRuleDatatypeCondition `json:"datatypeCondition"`
	// Email domain condition applicable on a rate limit rule
	EmailDomainCondition *InputRateLimitingRuleEmailDomainCondition `json:"emailDomainCondition"`
	// Ip abuse velocity condition applicable on a rate limit rule
	IpAbuseVelocityCondition *InputRateLimitingRuleIpAbuseVelocityCondition `json:"ipAbuseVelocityCondition"`
	// IP address condition applicable on a rate limit rule
	IpAddressCondition *InputRateLimitingRuleIpAddressCondition `json:"ipAddressCondition"`
	// Ip asn condition applicable on a rate limit rule
	IpAsnCondition *InputRateLimitingRuleIpAsnCondition `json:"ipAsnCondition"`
	// IP connection type condition applicable on a rate limit rule
	IpConnectionTypeCondition *InputRateLimitingRuleIpConnectionTypeCondition `json:"ipConnectionTypeCondition"`
	// IP location type condition applicable on a rate limit rule
	IpLocationTypeCondition *InputRateLimitingRuleIpLocationTypeCondition `json:"ipLocationTypeCondition"`
	// Ip organisation condition applicable on a rate limit rule
	IpOrganisationCondition *InputRateLimitingRuleIpOrganisationCondition `json:"ipOrganisationCondition"`
	// IP reputation condition applicable on a rate limit rule
	IpReputationCondition *InputRateLimitingRuleIpReputationCondition `json:"ipReputationCondition"`
	// Key value condition applicable on a rate limit rule
	KeyValueCondition *InputRateLimitingRuleKeyValueCondition `json:"keyValueCondition"`
	// Region condition applicable on a rate limit rule
	RegionCondition *InputRateLimitingRuleRegionCondition `json:"regionCondition"`
	// Request scanner type condition applicable on a rate limit rule
	RequestScannerTypeCondition *InputRateLimitingRuleRequestScannerTypeCondition `json:"requestScannerTypeCondition"`
	// Scope condition applicable on a rate limit rule
	ScopeCondition *InputRateLimitingRuleScopeCondition `json:"scopeCondition"`
	// User agent condition applicable on a rate limit rule
	UserAgentCondition *InputRateLimitingRuleUserAgentCondition `json:"userAgentCondition"`
	// User ID condition applicable on a rate limit rule
	UserIdCondition *InputRateLimitingRuleUserIdCondition `json:"userIdCondition"`
}

// GetConditionType returns InputRateLimitingRuleLeafCondition.ConditionType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetConditionType() RateLimitingRuleLeafConditionType {
	return v.ConditionType
}

// GetDatatypeCondition returns InputRateLimitingRuleLeafCondition.DatatypeCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetDatatypeCondition() *InputRateLimitingRuleDatatypeCondition {
	return v.DatatypeCondition
}

// GetEmailDomainCondition returns InputRateLimitingRuleLeafCondition.EmailDomainCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetEmailDomainCondition() *InputRateLimitingRuleEmailDomainCondition {
	return v.EmailDomainCondition
}

// GetIpAbuseVelocityCondition returns InputRateLimitingRuleLeafCondition.IpAbuseVelocityCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpAbuseVelocityCondition() *InputRateLimitingRuleIpAbuseVelocityCondition {
	return v.IpAbuseVelocityCondition
}

// GetIpAddressCondition returns InputRateLimitingRuleLeafCondition.IpAddressCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpAddressCondition() *InputRateLimitingRuleIpAddressCondition {
	return v.IpAddressCondition
}

// GetIpAsnCondition returns InputRateLimitingRuleLeafCondition.IpAsnCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpAsnCondition() *InputRateLimitingRuleIpAsnCondition {
	return v.IpAsnCondition
}

// GetIpConnectionTypeCondition returns InputRateLimitingRuleLeafCondition.IpConnectionTypeCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpConnectionTypeCondition() *InputRateLimitingRuleIpConnectionTypeCondition {
	return v.IpConnectionTypeCondition
}

// GetIpLocationTypeCondition returns InputRateLimitingRuleLeafCondition.IpLocationTypeCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpLocationTypeCondition() *InputRateLimitingRuleIpLocationTypeCondition {
	return v.IpLocationTypeCondition
}

// GetIpOrganisationCondition returns InputRateLimitingRuleLeafCondition.IpOrganisationCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpOrganisationCondition() *InputRateLimitingRuleIpOrganisationCondition {
	return v.IpOrganisationCondition
}

// GetIpReputationCondition returns InputRateLimitingRuleLeafCondition.IpReputationCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetIpReputationCondition() *InputRateLimitingRuleIpReputationCondition {
	return v.IpReputationCondition
}

// GetKeyValueCondition returns InputRateLimitingRuleLeafCondition.KeyValueCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetKeyValueCondition() *InputRateLimitingRuleKeyValueCondition {
	return v.KeyValueCondition
}

// GetRegionCondition returns InputRateLimitingRuleLeafCondition.RegionCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetRegionCondition() *InputRateLimitingRuleRegionCondition {
	return v.RegionCondition
}

// GetRequestScannerTypeCondition returns InputRateLimitingRuleLeafCondition.RequestScannerTypeCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetRequestScannerTypeCondition() *InputRateLimitingRuleRequestScannerTypeCondition {
	return v.RequestScannerTypeCondition
}

// GetScopeCondition returns InputRateLimitingRuleLeafCondition.ScopeCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetScopeCondition() *InputRateLimitingRuleScopeCondition {
	return v.ScopeCondition
}

// GetUserAgentCondition returns InputRateLimitingRuleLeafCondition.UserAgentCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetUserAgentCondition() *InputRateLimitingRuleUserAgentCondition {
	return v.UserAgentCondition
}

// GetUserIdCondition returns InputRateLimitingRuleLeafCondition.UserIdCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLeafCondition) GetUserIdCondition() *InputRateLimitingRuleUserIdCondition {
	return v.UserIdCondition
}

// Lhs-Rhs keys' values matching condition applicable on a rate limit rule
type InputRateLimitingRuleLhsRhsKeysCondition struct {
	// LHS Key condition
	LhsKeyCondition *InputRateLimitingRuleStringCondition `json:"lhsKeyCondition"`
	// LHS key metadata type
	LhsMetadataType RateLimitingRuleKeyValueConditionMetadataType `json:"lhsMetadataType"`
	// RHS Key condition
	LhsRhsMatchOperator RateLimitingRuleKeyValueMatchOperator `json:"lhsRhsMatchOperator"`
	// RHS Key condition
	RhsKeyCondition *InputRateLimitingRuleStringCondition `json:"rhsKeyCondition"`
	// RHS key metadata type
	RhsMetadataType RateLimitingRuleKeyValueConditionMetadataType `json:"rhsMetadataType"`
}

// GetLhsKeyCondition returns InputRateLimitingRuleLhsRhsKeysCondition.LhsKeyCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLhsRhsKeysCondition) GetLhsKeyCondition() *InputRateLimitingRuleStringCondition {
	return v.LhsKeyCondition
}

// GetLhsMetadataType returns InputRateLimitingRuleLhsRhsKeysCondition.LhsMetadataType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLhsRhsKeysCondition) GetLhsMetadataType() RateLimitingRuleKeyValueConditionMetadataType {
	return v.LhsMetadataType
}

// GetLhsRhsMatchOperator returns InputRateLimitingRuleLhsRhsKeysCondition.LhsRhsMatchOperator, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLhsRhsKeysCondition) GetLhsRhsMatchOperator() RateLimitingRuleKeyValueMatchOperator {
	return v.LhsRhsMatchOperator
}

// GetRhsKeyCondition returns InputRateLimitingRuleLhsRhsKeysCondition.RhsKeyCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLhsRhsKeysCondition) GetRhsKeyCondition() *InputRateLimitingRuleStringCondition {
	return v.RhsKeyCondition
}

// GetRhsMetadataType returns InputRateLimitingRuleLhsRhsKeysCondition.RhsMetadataType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLhsRhsKeysCondition) GetRhsMetadataType() RateLimitingRuleKeyValueConditionMetadataType {
	return v.RhsMetadataType
}

// Logical condition for a rate limited rule
type InputRateLimitingRuleLogicalCondition struct {
	// Child conditions of rate limit rule logical condition
	ChildRateLimitingRuleConditions []*InputRateLimitingRuleCondition `json:"childRateLimitingRuleConditions"`
	// Rate limit rule logical condition operator
	LogicalOperator LogicalOperator `json:"logicalOperator"`
}

// GetChildRateLimitingRuleConditions returns InputRateLimitingRuleLogicalCondition.ChildRateLimitingRuleConditions, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLogicalCondition) GetChildRateLimitingRuleConditions() []*InputRateLimitingRuleCondition {
	return v.ChildRateLimitingRuleConditions
}

// GetLogicalOperator returns InputRateLimitingRuleLogicalCondition.LogicalOperator, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleLogicalCondition) GetLogicalOperator() LogicalOperator {
	return v.LogicalOperator
}

// Details regarding mark for testing action applicable on a rate limit rule
type InputRateLimitingRuleMarkForTestingAction struct {
	// Agent effect associated with this action
	AgentEffect *InputRateLimitingRuleAgentEffect `json:"agentEffect"`
	// Severity of blocked event to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
}

// GetAgentEffect returns InputRateLimitingRuleMarkForTestingAction.AgentEffect, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleMarkForTestingAction) GetAgentEffect() *InputRateLimitingRuleAgentEffect {
	return v.AgentEffect
}

// GetEventSeverity returns InputRateLimitingRuleMarkForTestingAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleMarkForTestingAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// Rate limiting rule regex based matching
type InputRateLimitingRuleRegexBasedMatching struct {
	// custom matching location key value condition
	CustomMatchingLocation *InputRateLimitingRuleKeyValueCondition `json:"customMatchingLocation"`
}

// GetCustomMatchingLocation returns InputRateLimitingRuleRegexBasedMatching.CustomMatchingLocation, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRegexBasedMatching) GetCustomMatchingLocation() *InputRateLimitingRuleKeyValueCondition {
	return v.CustomMatchingLocation
}

// Region condition applicable on a rate limit rule
type InputRateLimitingRuleRegionCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of region identifiers
	RegionIdentifiers []*InputRateLimitingRegionIdentifier `json:"regionIdentifiers"`
	// List of regions
	Regions []*string `json:"regions"`
}

// GetExclude returns InputRateLimitingRuleRegionCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRegionCondition) GetExclude() *bool { return v.Exclude }

// GetRegionIdentifiers returns InputRateLimitingRuleRegionCondition.RegionIdentifiers, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRegionCondition) GetRegionIdentifiers() []*InputRateLimitingRegionIdentifier {
	return v.RegionIdentifiers
}

// GetRegions returns InputRateLimitingRuleRegionCondition.Regions, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRegionCondition) GetRegions() []*string { return v.Regions }

// Request scanner type condition for a rate limit rule
type InputRateLimitingRuleRequestScannerTypeCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of scanner types
	ScannerTypes []*string `json:"scannerTypes"`
}

// GetExclude returns InputRateLimitingRuleRequestScannerTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRequestScannerTypeCondition) GetExclude() *bool { return v.Exclude }

// GetScannerTypes returns InputRateLimitingRuleRequestScannerTypeCondition.ScannerTypes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleRequestScannerTypeCondition) GetScannerTypes() []*string {
	return v.ScannerTypes
}

// Scope condition applicable on a rate limit rule
type InputRateLimitingRuleScopeCondition struct {
	// Entity scope condition
	EntityScope *InputRateLimitingRuleEntityScope `json:"entityScope"`
	// Label scope condition
	LabelScope *InputRateLimitingRuleLabelScope `json:"labelScope"`
	// Scope condition type
	ScopeType RateLimitingRuleScopeConditionType `json:"scopeType"`
	// Url scope condition
	UrlScope *InputRateLimitingRuleUrlScope `json:"urlScope"`
}

// GetEntityScope returns InputRateLimitingRuleScopeCondition.EntityScope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleScopeCondition) GetEntityScope() *InputRateLimitingRuleEntityScope {
	return v.EntityScope
}

// GetLabelScope returns InputRateLimitingRuleScopeCondition.LabelScope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleScopeCondition) GetLabelScope() *InputRateLimitingRuleLabelScope {
	return v.LabelScope
}

// GetScopeType returns InputRateLimitingRuleScopeCondition.ScopeType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleScopeCondition) GetScopeType() RateLimitingRuleScopeConditionType {
	return v.ScopeType
}

// GetUrlScope returns InputRateLimitingRuleScopeCondition.UrlScope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleScopeCondition) GetUrlScope() *InputRateLimitingRuleUrlScope {
	return v.UrlScope
}

// Static value matching condition applicable on a rate limit rule
type InputRateLimitingRuleStaticValueCondition struct {
	// Key condition
	KeyCondition *InputRateLimitingRuleStringCondition `json:"keyCondition"`
	// Key value condition metadata type
	MetadataType RateLimitingRuleKeyValueConditionMetadataType `json:"metadataType"`
	// Value condition
	ValueCondition *InputRateLimitingRuleStringCondition `json:"valueCondition"`
}

// GetKeyCondition returns InputRateLimitingRuleStaticValueCondition.KeyCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStaticValueCondition) GetKeyCondition() *InputRateLimitingRuleStringCondition {
	return v.KeyCondition
}

// GetMetadataType returns InputRateLimitingRuleStaticValueCondition.MetadataType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStaticValueCondition) GetMetadataType() RateLimitingRuleKeyValueConditionMetadataType {
	return v.MetadataType
}

// GetValueCondition returns InputRateLimitingRuleStaticValueCondition.ValueCondition, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStaticValueCondition) GetValueCondition() *InputRateLimitingRuleStringCondition {
	return v.ValueCondition
}

// Status of rate limit rule
type InputRateLimitingRuleStatus struct {
	// Boolean denoting if rule should generate internal events
	GenerateInternalEvents *bool `json:"generateInternalEvents"`
	// Boolean denoting if rule should be hidden
	Hidden *bool `json:"hidden"`
	// Boolean denoting if rule should be internal and generate internal events
	Internal *bool `json:"internal"`
	// Source of rule creation
	RuleCreationSource *RateLimitingRuleSource `json:"ruleCreationSource"`
}

// GetGenerateInternalEvents returns InputRateLimitingRuleStatus.GenerateInternalEvents, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStatus) GetGenerateInternalEvents() *bool {
	return v.GenerateInternalEvents
}

// GetHidden returns InputRateLimitingRuleStatus.Hidden, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStatus) GetHidden() *bool { return v.Hidden }

// GetInternal returns InputRateLimitingRuleStatus.Internal, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStatus) GetInternal() *bool { return v.Internal }

// GetRuleCreationSource returns InputRateLimitingRuleStatus.RuleCreationSource, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStatus) GetRuleCreationSource() *RateLimitingRuleSource {
	return v.RuleCreationSource
}

// String condition which matches a string value using the specified operator
type InputRateLimitingRuleStringCondition struct {
	// Operator to be used to match the string value
	Operator RateLimitingRuleKeyValueMatchOperator `json:"operator"`
	// String value to be matched
	Value string `json:"value"`
}

// GetOperator returns InputRateLimitingRuleStringCondition.Operator, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStringCondition) GetOperator() RateLimitingRuleKeyValueMatchOperator {
	return v.Operator
}

// GetValue returns InputRateLimitingRuleStringCondition.Value, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleStringCondition) GetValue() string { return v.Value }

// Config for thresholds and actions applicable on a rate limit rule
type InputRateLimitingRuleThresholdActionConfig struct {
	// List of rate limit rule actions
	Actions []*InputRateLimitingRuleAction `json:"actions"`
	// List of rate limit rule threshold configs
	ThresholdConfigs []*InputRateLimitingRuleThresholdConfig `json:"thresholdConfigs"`
}

// GetActions returns InputRateLimitingRuleThresholdActionConfig.Actions, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdActionConfig) GetActions() []*InputRateLimitingRuleAction {
	return v.Actions
}

// GetThresholdConfigs returns InputRateLimitingRuleThresholdActionConfig.ThresholdConfigs, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdActionConfig) GetThresholdConfigs() []*InputRateLimitingRuleThresholdConfig {
	return v.ThresholdConfigs
}

// Threshold config for rate limit rule
type InputRateLimitingRuleThresholdConfig struct {
	// API aggregation type
	ApiAggregateType RateLimitingRuleApiAggregateType `json:"apiAggregateType"`
	// Dynamic threshold config
	DynamicThresholdConfig *InputDynamicThresholdConfig `json:"dynamicThresholdConfig"`
	// Rolling window threshold config
	RollingWindowThresholdConfig *InputRollingWindowThresholdConfig `json:"rollingWindowThresholdConfig"`
	// Threshold config type
	ThresholdConfigType RateLimitingRuleThresholdConfigType `json:"thresholdConfigType"`
	// User aggregation type
	UserAggregateType RateLimitingRuleUserAggregateType `json:"userAggregateType"`
	// Value based threshold config
	ValueBasedThresholdConfig *InputValueBasedThresholdConfig `json:"valueBasedThresholdConfig"`
}

// GetApiAggregateType returns InputRateLimitingRuleThresholdConfig.ApiAggregateType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetApiAggregateType() RateLimitingRuleApiAggregateType {
	return v.ApiAggregateType
}

// GetDynamicThresholdConfig returns InputRateLimitingRuleThresholdConfig.DynamicThresholdConfig, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetDynamicThresholdConfig() *InputDynamicThresholdConfig {
	return v.DynamicThresholdConfig
}

// GetRollingWindowThresholdConfig returns InputRateLimitingRuleThresholdConfig.RollingWindowThresholdConfig, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetRollingWindowThresholdConfig() *InputRollingWindowThresholdConfig {
	return v.RollingWindowThresholdConfig
}

// GetThresholdConfigType returns InputRateLimitingRuleThresholdConfig.ThresholdConfigType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetThresholdConfigType() RateLimitingRuleThresholdConfigType {
	return v.ThresholdConfigType
}

// GetUserAggregateType returns InputRateLimitingRuleThresholdConfig.UserAggregateType, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetUserAggregateType() RateLimitingRuleUserAggregateType {
	return v.UserAggregateType
}

// GetValueBasedThresholdConfig returns InputRateLimitingRuleThresholdConfig.ValueBasedThresholdConfig, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleThresholdConfig) GetValueBasedThresholdConfig() *InputValueBasedThresholdConfig {
	return v.ValueBasedThresholdConfig
}

// Url scope condition applicable on a rate limit rule
type InputRateLimitingRuleUrlScope struct {
	// List of url regex
	UrlRegexes []*string `json:"urlRegexes"`
}

// GetUrlRegexes returns InputRateLimitingRuleUrlScope.UrlRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUrlScope) GetUrlRegexes() []*string { return v.UrlRegexes }

// User agent condition for a rate limit rule
type InputRateLimitingRuleUserAgentCondition struct {
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of user agent regexes
	UserAgentRegexes []*string `json:"userAgentRegexes"`
	// List of user agents
	UserAgents []*string `json:"userAgents"`
}

// GetExclude returns InputRateLimitingRuleUserAgentCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserAgentCondition) GetExclude() *bool { return v.Exclude }

// GetUserAgentRegexes returns InputRateLimitingRuleUserAgentCondition.UserAgentRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserAgentCondition) GetUserAgentRegexes() []*string {
	return v.UserAgentRegexes
}

// GetUserAgents returns InputRateLimitingRuleUserAgentCondition.UserAgents, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserAgentCondition) GetUserAgents() []*string { return v.UserAgents }

// User ID condition for a rate limit rule
type InputRateLimitingRuleUserIdCondition struct {
	// List of actor entity IDs
	ActorEntityIds []*string `json:"actorEntityIds"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// List of user ID regexes
	UserIdRegexes []*string `json:"userIdRegexes"`
	// List of user IDs
	UserIds []*string `json:"userIds"`
}

// GetActorEntityIds returns InputRateLimitingRuleUserIdCondition.ActorEntityIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserIdCondition) GetActorEntityIds() []*string { return v.ActorEntityIds }

// GetExclude returns InputRateLimitingRuleUserIdCondition.Exclude, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserIdCondition) GetExclude() *bool { return v.Exclude }

// GetUserIdRegexes returns InputRateLimitingRuleUserIdCondition.UserIdRegexes, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserIdCondition) GetUserIdRegexes() []*string { return v.UserIdRegexes }

// GetUserIds returns InputRateLimitingRuleUserIdCondition.UserIds, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRuleUserIdCondition) GetUserIds() []*string { return v.UserIds }

type InputRateLimitingRulesFilter struct {
	Categories []*RateLimitingRuleCategory `json:"categories"`
	Scope      *InputRuleConfigScope       `json:"scope"`
}

// GetCategories returns InputRateLimitingRulesFilter.Categories, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRulesFilter) GetCategories() []*RateLimitingRuleCategory {
	return v.Categories
}

// GetScope returns InputRateLimitingRulesFilter.Scope, and is useful for accessing the field via an interface.
func (v *InputRateLimitingRulesFilter) GetScope() *InputRuleConfigScope { return v.Scope }

// Rate limit rule transaction action config
type InputRateLimitingTransactionActionConfig struct {
	// Rate limit rule action
	Action InputRateLimitingRuleAction `json:"action"`
	// Requested expiration timestamp for the rule
	ExpirationTimestamp *string `json:"expirationTimestamp"`
}

// GetAction returns InputRateLimitingTransactionActionConfig.Action, and is useful for accessing the field via an interface.
func (v *InputRateLimitingTransactionActionConfig) GetAction() InputRateLimitingRuleAction {
	return v.Action
}

// GetExpirationTimestamp returns InputRateLimitingTransactionActionConfig.ExpirationTimestamp, and is useful for accessing the field via an interface.
func (v *InputRateLimitingTransactionActionConfig) GetExpirationTimestamp() *string {
	return v.ExpirationTimestamp
}

type InputRegionEnvironmentScope struct {
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns InputRegionEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *InputRegionEnvironmentScope) GetEnvironmentIds() []*string { return v.EnvironmentIds }

type InputRegionRuleAgentEffect struct {
	AgentModifications []*InputRegionRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns InputRegionRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *InputRegionRuleAgentEffect) GetAgentModifications() []*InputRegionRuleAgentModification {
	return v.AgentModifications
}

type InputRegionRuleAgentModification struct {
	AgentModificationType RegionRuleAgentModificationType `json:"agentModificationType"`
	HeaderInjection       InputRegionRuleHeaderInjection  `json:"headerInjection"`
}

// GetAgentModificationType returns InputRegionRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *InputRegionRuleAgentModification) GetAgentModificationType() RegionRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns InputRegionRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *InputRegionRuleAgentModification) GetHeaderInjection() InputRegionRuleHeaderInjection {
	return v.HeaderInjection
}

type InputRegionRuleCreate struct {
	Description   *string                                  `json:"description"`
	Duration      *string                                  `json:"duration"`
	Effects       []*InputRegionRuleEffectWithModification `json:"effects"`
	EventSeverity *RegionRuleEventSeverity                 `json:"eventSeverity"`
	Name          string                                   `json:"name"`
	RegionIds     []*string                                `json:"regionIds"`
	RuleScope     *InputRegionRuleScope                    `json:"ruleScope"`
	Type          RegionRuleActionType                     `json:"type"`
}

// GetDescription returns InputRegionRuleCreate.Description, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetDescription() *string { return v.Description }

// GetDuration returns InputRegionRuleCreate.Duration, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetDuration() *string { return v.Duration }

// GetEffects returns InputRegionRuleCreate.Effects, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetEffects() []*InputRegionRuleEffectWithModification {
	return v.Effects
}

// GetEventSeverity returns InputRegionRuleCreate.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetEventSeverity() *RegionRuleEventSeverity { return v.EventSeverity }

// GetName returns InputRegionRuleCreate.Name, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetName() string { return v.Name }

// GetRegionIds returns InputRegionRuleCreate.RegionIds, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetRegionIds() []*string { return v.RegionIds }

// GetRuleScope returns InputRegionRuleCreate.RuleScope, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetRuleScope() *InputRegionRuleScope { return v.RuleScope }

// GetType returns InputRegionRuleCreate.Type, and is useful for accessing the field via an interface.
func (v *InputRegionRuleCreate) GetType() RegionRuleActionType { return v.Type }

type InputRegionRuleDelete struct {
	Id string `json:"id"`
}

// GetId returns InputRegionRuleDelete.Id, and is useful for accessing the field via an interface.
func (v *InputRegionRuleDelete) GetId() string { return v.Id }

type InputRegionRuleEffectWithModification struct {
	// Effects enforced for agent while inline processing of requests
	AgentEffect    InputRegionRuleAgentEffect       `json:"agentEffect"`
	RuleEffectType RegionRuleEffectModificationType `json:"ruleEffectType"`
}

// GetAgentEffect returns InputRegionRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *InputRegionRuleEffectWithModification) GetAgentEffect() InputRegionRuleAgentEffect {
	return v.AgentEffect
}

// GetRuleEffectType returns InputRegionRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *InputRegionRuleEffectWithModification) GetRuleEffectType() RegionRuleEffectModificationType {
	return v.RuleEffectType
}

type InputRegionRuleHeaderInjection struct {
	HeaderCategory RegionRuleHeaderCategory `json:"headerCategory"`
	Key            string                   `json:"key"`
	Value          string                   `json:"value"`
}

// GetHeaderCategory returns InputRegionRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *InputRegionRuleHeaderInjection) GetHeaderCategory() RegionRuleHeaderCategory {
	return v.HeaderCategory
}

// GetKey returns InputRegionRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *InputRegionRuleHeaderInjection) GetKey() string { return v.Key }

// GetValue returns InputRegionRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *InputRegionRuleHeaderInjection) GetValue() string { return v.Value }

type InputRegionRuleScope struct {
	EnvironmentScope *InputRegionEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns InputRegionRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputRegionRuleScope) GetEnvironmentScope() *InputRegionEnvironmentScope {
	return v.EnvironmentScope
}

type InputRegionRuleUpdate struct {
	Description   *string                                  `json:"description"`
	Disabled      *bool                                    `json:"disabled"`
	Duration      *string                                  `json:"duration"`
	Effects       []*InputRegionRuleEffectWithModification `json:"effects"`
	EventSeverity *RegionRuleEventSeverity                 `json:"eventSeverity"`
	Hidden        *bool                                    `json:"hidden"`
	Id            string                                   `json:"id"`
	Internal      *bool                                    `json:"internal"`
	Name          string                                   `json:"name"`
	RegionIds     []*string                                `json:"regionIds"`
	RuleScope     *InputRegionRuleScope                    `json:"ruleScope"`
	Type          RegionRuleActionType                     `json:"type"`
}

// GetDescription returns InputRegionRuleUpdate.Description, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetDescription() *string { return v.Description }

// GetDisabled returns InputRegionRuleUpdate.Disabled, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetDisabled() *bool { return v.Disabled }

// GetDuration returns InputRegionRuleUpdate.Duration, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetDuration() *string { return v.Duration }

// GetEffects returns InputRegionRuleUpdate.Effects, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetEffects() []*InputRegionRuleEffectWithModification {
	return v.Effects
}

// GetEventSeverity returns InputRegionRuleUpdate.EventSeverity, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetEventSeverity() *RegionRuleEventSeverity { return v.EventSeverity }

// GetHidden returns InputRegionRuleUpdate.Hidden, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetHidden() *bool { return v.Hidden }

// GetId returns InputRegionRuleUpdate.Id, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetId() string { return v.Id }

// GetInternal returns InputRegionRuleUpdate.Internal, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetInternal() *bool { return v.Internal }

// GetName returns InputRegionRuleUpdate.Name, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetName() string { return v.Name }

// GetRegionIds returns InputRegionRuleUpdate.RegionIds, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetRegionIds() []*string { return v.RegionIds }

// GetRuleScope returns InputRegionRuleUpdate.RuleScope, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetRuleScope() *InputRegionRuleScope { return v.RuleScope }

// GetType returns InputRegionRuleUpdate.Type, and is useful for accessing the field via an interface.
func (v *InputRegionRuleUpdate) GetType() RegionRuleActionType { return v.Type }

type InputRegionRulesFilter struct {
	RuleScope InputRegionRuleScope `json:"ruleScope"`
}

// GetRuleScope returns InputRegionRulesFilter.RuleScope, and is useful for accessing the field via an interface.
func (v *InputRegionRulesFilter) GetRuleScope() InputRegionRuleScope { return v.RuleScope }

// Threshold config which specifies count allowed over the given time range
type InputRollingWindowThresholdConfig struct {
	// Count allowed for specified time range
	CountAllowed int64 `json:"countAllowed"`
	// Time range during which counts are calculated
	Duration string `json:"duration"`
}

// GetCountAllowed returns InputRollingWindowThresholdConfig.CountAllowed, and is useful for accessing the field via an interface.
func (v *InputRollingWindowThresholdConfig) GetCountAllowed() int64 { return v.CountAllowed }

// GetDuration returns InputRollingWindowThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *InputRollingWindowThresholdConfig) GetDuration() string { return v.Duration }

// Rate limit rule scope
type InputRuleConfigScope struct {
	// Environment scope applicable on rate limit rule
	EnvironmentScope *InputEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns InputRuleConfigScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *InputRuleConfigScope) GetEnvironmentScope() *InputEnvironmentScope {
	return v.EnvironmentScope
}

type InputScopedAnomalyRuleConfigUpdate struct {
	AnomalyScope InputAnomalyScope               `json:"anomalyScope"`
	RuleConfig   *InputAnomalyRuleConfigUpdate   `json:"ruleConfig"`
	RuleConfigs  []*InputAnomalyRuleConfigUpdate `json:"ruleConfigs"`
}

// GetAnomalyScope returns InputScopedAnomalyRuleConfigUpdate.AnomalyScope, and is useful for accessing the field via an interface.
func (v *InputScopedAnomalyRuleConfigUpdate) GetAnomalyScope() InputAnomalyScope {
	return v.AnomalyScope
}

// GetRuleConfig returns InputScopedAnomalyRuleConfigUpdate.RuleConfig, and is useful for accessing the field via an interface.
func (v *InputScopedAnomalyRuleConfigUpdate) GetRuleConfig() *InputAnomalyRuleConfigUpdate {
	return v.RuleConfig
}

// GetRuleConfigs returns InputScopedAnomalyRuleConfigUpdate.RuleConfigs, and is useful for accessing the field via an interface.
func (v *InputScopedAnomalyRuleConfigUpdate) GetRuleConfigs() []*InputAnomalyRuleConfigUpdate {
	return v.RuleConfigs
}

// Segment matching based api naming rule config
type InputSegmentMatchingBasedRuleConfig struct {
	// Regex patterns to be matched against
	Regexes []*string `json:"regexes"`
	// Values with which the corresponding regexes are to be replaces with
	Values []*string `json:"values"`
}

// GetRegexes returns InputSegmentMatchingBasedRuleConfig.Regexes, and is useful for accessing the field via an interface.
func (v *InputSegmentMatchingBasedRuleConfig) GetRegexes() []*string { return v.Regexes }

// GetValues returns InputSegmentMatchingBasedRuleConfig.Values, and is useful for accessing the field via an interface.
func (v *InputSegmentMatchingBasedRuleConfig) GetValues() []*string { return v.Values }

type InputSessionDefinitionMetadataAnomalyDetectionConfig struct {
	KeyValuePairs []*InputAnomalyDetectionConfigKeyValuePair          `json:"keyValuePairs"`
	Name          SessionDefinitionMetadataAnomalyDetectionConfigName `json:"name"`
	RuleId        *string                                             `json:"ruleId"`
}

// GetKeyValuePairs returns InputSessionDefinitionMetadataAnomalyDetectionConfig.KeyValuePairs, and is useful for accessing the field via an interface.
func (v *InputSessionDefinitionMetadataAnomalyDetectionConfig) GetKeyValuePairs() []*InputAnomalyDetectionConfigKeyValuePair {
	return v.KeyValuePairs
}

// GetName returns InputSessionDefinitionMetadataAnomalyDetectionConfig.Name, and is useful for accessing the field via an interface.
func (v *InputSessionDefinitionMetadataAnomalyDetectionConfig) GetName() SessionDefinitionMetadataAnomalyDetectionConfigName {
	return v.Name
}

// GetRuleId returns InputSessionDefinitionMetadataAnomalyDetectionConfig.RuleId, and is useful for accessing the field via an interface.
func (v *InputSessionDefinitionMetadataAnomalyDetectionConfig) GetRuleId() *string { return v.RuleId }

type InputSessionExpiryConfig struct {
	// Allowed buffer of time difference for session expiry
	TimeDifferenceBufferMillis *int64 `json:"timeDifferenceBufferMillis"`
}

// GetTimeDifferenceBufferMillis returns InputSessionExpiryConfig.TimeDifferenceBufferMillis, and is useful for accessing the field via an interface.
func (v *InputSessionExpiryConfig) GetTimeDifferenceBufferMillis() *int64 {
	return v.TimeDifferenceBufferMillis
}

type InputTimeRange struct {
	EndTime   string `json:"endTime"`
	StartTime string `json:"startTime"`
}

// GetEndTime returns InputTimeRange.EndTime, and is useful for accessing the field via an interface.
func (v *InputTimeRange) GetEndTime() string { return v.EndTime }

// GetStartTime returns InputTimeRange.StartTime, and is useful for accessing the field via an interface.
func (v *InputTimeRange) GetStartTime() string { return v.StartTime }

type InputTraceableSpanProcessingLogicalFilter struct {
	LogicalOperator LogicalOperator                           `json:"logicalOperator"`
	SpanFilters     []*InputTraceableSpanProcessingRuleFilter `json:"spanFilters"`
}

// GetLogicalOperator returns InputTraceableSpanProcessingLogicalFilter.LogicalOperator, and is useful for accessing the field via an interface.
func (v *InputTraceableSpanProcessingLogicalFilter) GetLogicalOperator() LogicalOperator {
	return v.LogicalOperator
}

// GetSpanFilters returns InputTraceableSpanProcessingLogicalFilter.SpanFilters, and is useful for accessing the field via an interface.
func (v *InputTraceableSpanProcessingLogicalFilter) GetSpanFilters() []*InputTraceableSpanProcessingRuleFilter {
	return v.SpanFilters
}

type InputTraceableSpanProcessingRelationalFilter struct {
	Field              *TraceableSpanProcessingFilterField       `json:"field"`
	Key                *string                                   `json:"key"`
	RelationalOperator TraceableSpanProcessingRelationalOperator `json:"relationalOperator"`
	Value              interface{}                               `json:"value"`
}

// GetField returns InputTraceableSpanProcessingRelationalFilter.Field, and is useful for accessing the field via an interface.
func (v *InputTraceableSpanProcessingRelationalFilter) GetField() *TraceableSpanProcessingFilterField {
	return v.Field
}

// GetKey returns InputTraceableSpanProcessingRelationalFilter.Key, and is useful for accessing the field via an interface.
func (v *InputTraceableSpanProcessingRelationalFilter) GetKey() *string { return v.Key }

// GetRelationalOperator returns InputTraceableSpanProcessingRelationalFilter.RelationalOperator, and is useful for accessing the field via an interface.
func (v *InputTraceableSpanProcessingRelationalFilter) GetRelationalOperator() TraceableSpanProcessingRelationalOperator {
	return v.RelationalOperator
}

// GetValue returns InputTraceableSpanProcessingRelationalFilter.Value, and is useful for accessing the field via an interface.
func (v *InputTraceableSpanProcessingRelationalFilter) GetValue() interface{} { return v.Value }

type InputTraceableSpanProcessingRuleFilter struct {
	LogicalSpanFilter    *InputTraceableSpanProcessingLogicalFilter    `json:"logicalSpanFilter"`
	RelationalSpanFilter *InputTraceableSpanProcessingRelationalFilter `json:"relationalSpanFilter"`
}

// GetLogicalSpanFilter returns InputTraceableSpanProcessingRuleFilter.LogicalSpanFilter, and is useful for accessing the field via an interface.
func (v *InputTraceableSpanProcessingRuleFilter) GetLogicalSpanFilter() *InputTraceableSpanProcessingLogicalFilter {
	return v.LogicalSpanFilter
}

// GetRelationalSpanFilter returns InputTraceableSpanProcessingRuleFilter.RelationalSpanFilter, and is useful for accessing the field via an interface.
func (v *InputTraceableSpanProcessingRuleFilter) GetRelationalSpanFilter() *InputTraceableSpanProcessingRelationalFilter {
	return v.RelationalSpanFilter
}

type InputTransformationFunction struct {
	// Json extraction transform function
	JsonExtract *InputJsonExtractTransformationFunction `json:"jsonExtract"`
}

// GetJsonExtract returns InputTransformationFunction.JsonExtract, and is useful for accessing the field via an interface.
func (v *InputTransformationFunction) GetJsonExtract() *InputJsonExtractTransformationFunction {
	return v.JsonExtract
}

// Threshold config which specifies unique values allowed over the given time range
type InputValueBasedThresholdConfig struct {
	// Time range during which unique values are calculated
	Duration string `json:"duration"`
	// Type of sensitive params evaluation, only applicable for sensitive params value type
	SensitiveParamsEvaluationType *SensitiveParamsEvaluationType `json:"sensitiveParamsEvaluationType"`
	// Unique values allowed for specified time range
	UniqueValuesAllowed int64 `json:"uniqueValuesAllowed"`
	// Type of value based threshold config
	ValueType ValueBasedThresholdConfigType `json:"valueType"`
}

// GetDuration returns InputValueBasedThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *InputValueBasedThresholdConfig) GetDuration() string { return v.Duration }

// GetSensitiveParamsEvaluationType returns InputValueBasedThresholdConfig.SensitiveParamsEvaluationType, and is useful for accessing the field via an interface.
func (v *InputValueBasedThresholdConfig) GetSensitiveParamsEvaluationType() *SensitiveParamsEvaluationType {
	return v.SensitiveParamsEvaluationType
}

// GetUniqueValuesAllowed returns InputValueBasedThresholdConfig.UniqueValuesAllowed, and is useful for accessing the field via an interface.
func (v *InputValueBasedThresholdConfig) GetUniqueValuesAllowed() int64 { return v.UniqueValuesAllowed }

// GetValueType returns InputValueBasedThresholdConfig.ValueType, and is useful for accessing the field via an interface.
func (v *InputValueBasedThresholdConfig) GetValueType() ValueBasedThresholdConfigType {
	return v.ValueType
}

type InputVolumetricAnomalyDetectionConfig struct {
	KeyValuePairs []*InputAnomalyDetectionConfigKeyValuePair `json:"keyValuePairs"`
	Name          VolumetricAnomalyDetectionConfigName       `json:"name"`
	RuleId        *string                                    `json:"ruleId"`
}

// GetKeyValuePairs returns InputVolumetricAnomalyDetectionConfig.KeyValuePairs, and is useful for accessing the field via an interface.
func (v *InputVolumetricAnomalyDetectionConfig) GetKeyValuePairs() []*InputAnomalyDetectionConfigKeyValuePair {
	return v.KeyValuePairs
}

// GetName returns InputVolumetricAnomalyDetectionConfig.Name, and is useful for accessing the field via an interface.
func (v *InputVolumetricAnomalyDetectionConfig) GetName() VolumetricAnomalyDetectionConfigName {
	return v.Name
}

// GetRuleId returns InputVolumetricAnomalyDetectionConfig.RuleId, and is useful for accessing the field via an interface.
func (v *InputVolumetricAnomalyDetectionConfig) GetRuleId() *string { return v.RuleId }

type IpRangeEventSeverity string

const (
	// LOW
	IpRangeEventSeverityLow IpRangeEventSeverity = "LOW"
	// MEDIUM
	IpRangeEventSeverityMedium IpRangeEventSeverity = "MEDIUM"
	// HIGH
	IpRangeEventSeverityHigh IpRangeEventSeverity = "HIGH"
	// CRITICAL
	IpRangeEventSeverityCritical IpRangeEventSeverity = "CRITICAL"
)

var AllIpRangeEventSeverity = []IpRangeEventSeverity{
	IpRangeEventSeverityLow,
	IpRangeEventSeverityMedium,
	IpRangeEventSeverityHigh,
	IpRangeEventSeverityCritical,
}

type IpRangeRuleActionType string

const (
	// RULE_ACTION_BLOCK
	IpRangeRuleActionTypeRuleActionBlock IpRangeRuleActionType = "RULE_ACTION_BLOCK"
	// RULE_ACTION_ALLOW
	IpRangeRuleActionTypeRuleActionAllow IpRangeRuleActionType = "RULE_ACTION_ALLOW"
	// RULE_ACTION_BLOCK_ALL_EXCEPT
	IpRangeRuleActionTypeRuleActionBlockAllExcept IpRangeRuleActionType = "RULE_ACTION_BLOCK_ALL_EXCEPT"
	// RULE_ACTION_ALERT
	IpRangeRuleActionTypeRuleActionAlert IpRangeRuleActionType = "RULE_ACTION_ALERT"
)

var AllIpRangeRuleActionType = []IpRangeRuleActionType{
	IpRangeRuleActionTypeRuleActionBlock,
	IpRangeRuleActionTypeRuleActionAllow,
	IpRangeRuleActionTypeRuleActionBlockAllExcept,
	IpRangeRuleActionTypeRuleActionAlert,
}

// Malicious sources rule agent modification type
type IpRangeRuleAgentModificationType string

const (
	// Add a header with inline processing of request on matching conditions
	IpRangeRuleAgentModificationTypeHeaderInjection IpRangeRuleAgentModificationType = "HEADER_INJECTION"
)

var AllIpRangeRuleAgentModificationType = []IpRangeRuleAgentModificationType{
	IpRangeRuleAgentModificationTypeHeaderInjection,
}

type IpRangeRuleEffectModificationType string

const (
	// Modifications to be done on agent
	IpRangeRuleEffectModificationTypeAgentEffect IpRangeRuleEffectModificationType = "AGENT_EFFECT"
)

var AllIpRangeRuleEffectModificationType = []IpRangeRuleEffectModificationType{
	IpRangeRuleEffectModificationTypeAgentEffect,
}

// Malicious sources header category
type IpRangeRuleHeaderCategory string

const (
	// Request header category
	IpRangeRuleHeaderCategoryRequest IpRangeRuleHeaderCategory = "REQUEST"
	// Response header category
	IpRangeRuleHeaderCategoryResponse IpRangeRuleHeaderCategory = "RESPONSE"
)

var AllIpRangeRuleHeaderCategory = []IpRangeRuleHeaderCategory{
	IpRangeRuleHeaderCategoryRequest,
	IpRangeRuleHeaderCategoryResponse,
}

// Fragment for leafCondition
type LeafConditionFields struct {
	// Leaf condition type
	ConditionType RateLimitingRuleLeafConditionType `json:"conditionType"`
	// Dataset and datatype condition applicable on a rate limit rule
	DatatypeCondition *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition `json:"datatypeCondition"`
	// IP address condition applicable on a rate limit rule
	IpAddressCondition *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition `json:"ipAddressCondition"`
	// IP reputation condition applicable on a rate limit rule
	IpReputationCondition *LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition `json:"ipReputationCondition"`
	// IP location type condition applicable on a rate limit rule
	IpLocationTypeCondition *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition `json:"ipLocationTypeCondition"`
	// Email domain condition applicable on a rate limit rule
	EmailDomainCondition *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition `json:"emailDomainCondition"`
	// Ip organisation condition applicable on a rate limit rule
	IpOrganisationCondition *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition `json:"ipOrganisationCondition"`
	// Ip asn condition applicable on a rate limit rule
	IpAsnCondition *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition `json:"ipAsnCondition"`
	// User ID condition applicable on a rate limit rule
	UserIdCondition *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition `json:"userIdCondition"`
	// User agent condition applicable on a rate limit rule
	UserAgentCondition *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition `json:"userAgentCondition"`
	// IP connection type condition applicable on a rate limit rule
	IpConnectionTypeCondition *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition `json:"ipConnectionTypeCondition"`
	// Ip abuse velocity condition applicable on a rate limit rule
	IpAbuseVelocityCondition *LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition `json:"ipAbuseVelocityCondition"`
	// Key value condition applicable on a rate limit rule
	KeyValueCondition *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition `json:"keyValueCondition"`
	// Region condition applicable on a rate limit rule
	RegionCondition *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition `json:"regionCondition"`
	// Request scanner type condition applicable on a rate limit rule
	RequestScannerTypeCondition *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition `json:"requestScannerTypeCondition"`
	// Scope condition applicable on a rate limit rule
	ScopeCondition *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition `json:"scopeCondition"`
}

// GetConditionType returns LeafConditionFields.ConditionType, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetConditionType() RateLimitingRuleLeafConditionType {
	return v.ConditionType
}

// GetDatatypeCondition returns LeafConditionFields.DatatypeCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetDatatypeCondition() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition {
	return v.DatatypeCondition
}

// GetIpAddressCondition returns LeafConditionFields.IpAddressCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpAddressCondition() *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition {
	return v.IpAddressCondition
}

// GetIpReputationCondition returns LeafConditionFields.IpReputationCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpReputationCondition() *LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition {
	return v.IpReputationCondition
}

// GetIpLocationTypeCondition returns LeafConditionFields.IpLocationTypeCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpLocationTypeCondition() *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition {
	return v.IpLocationTypeCondition
}

// GetEmailDomainCondition returns LeafConditionFields.EmailDomainCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetEmailDomainCondition() *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition {
	return v.EmailDomainCondition
}

// GetIpOrganisationCondition returns LeafConditionFields.IpOrganisationCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpOrganisationCondition() *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition {
	return v.IpOrganisationCondition
}

// GetIpAsnCondition returns LeafConditionFields.IpAsnCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpAsnCondition() *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition {
	return v.IpAsnCondition
}

// GetUserIdCondition returns LeafConditionFields.UserIdCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetUserIdCondition() *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition {
	return v.UserIdCondition
}

// GetUserAgentCondition returns LeafConditionFields.UserAgentCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetUserAgentCondition() *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition {
	return v.UserAgentCondition
}

// GetIpConnectionTypeCondition returns LeafConditionFields.IpConnectionTypeCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpConnectionTypeCondition() *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition {
	return v.IpConnectionTypeCondition
}

// GetIpAbuseVelocityCondition returns LeafConditionFields.IpAbuseVelocityCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetIpAbuseVelocityCondition() *LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition {
	return v.IpAbuseVelocityCondition
}

// GetKeyValueCondition returns LeafConditionFields.KeyValueCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetKeyValueCondition() *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition {
	return v.KeyValueCondition
}

// GetRegionCondition returns LeafConditionFields.RegionCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetRegionCondition() *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition {
	return v.RegionCondition
}

// GetRequestScannerTypeCondition returns LeafConditionFields.RequestScannerTypeCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetRequestScannerTypeCondition() *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition {
	return v.RequestScannerTypeCondition
}

// GetScopeCondition returns LeafConditionFields.ScopeCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFields) GetScopeCondition() *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition {
	return v.ScopeCondition
}

// LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition includes the requested fields of the GraphQL type RateLimitingRuleDatatypeCondition.
// The GraphQL type's documentation follows.
//
// Dataset and datatype condition for a rate limit rule
type LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition struct {
	// List of dataset ids applicable
	DatasetIds []*string `json:"datasetIds"`
	// List of datatype ids applicable
	DatatypeIds []*string `json:"datatypeIds"`
	// data location type
	DataLocation *RateLimitingRuleDataLocation `json:"dataLocation"`
	// datatype matching
	DatatypeMatching *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching `json:"datatypeMatching"`
}

// GetDatasetIds returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition.DatasetIds, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition) GetDatasetIds() []*string {
	return v.DatasetIds
}

// GetDatatypeIds returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition.DatatypeIds, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition) GetDatatypeIds() []*string {
	return v.DatatypeIds
}

// GetDataLocation returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition.DataLocation, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition) GetDataLocation() *RateLimitingRuleDataLocation {
	return v.DataLocation
}

// GetDatatypeMatching returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition.DatatypeMatching, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition) GetDatatypeMatching() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching {
	return v.DatatypeMatching
}

// LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching includes the requested fields of the GraphQL type RateLimitingRuleDatatypeMatching.
// The GraphQL type's documentation follows.
//
// Rate limiting datatype matching
type LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching struct {
	// datatype matching type
	DatatypeMatchingType *RateLimitingRuleDatatypeMatchingType `json:"datatypeMatchingType"`
	// regex based matching
	RegexBasedMatching *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching `json:"regexBasedMatching"`
}

// GetDatatypeMatchingType returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching.DatatypeMatchingType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching) GetDatatypeMatchingType() *RateLimitingRuleDatatypeMatchingType {
	return v.DatatypeMatchingType
}

// GetRegexBasedMatching returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching.RegexBasedMatching, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatching) GetRegexBasedMatching() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching {
	return v.RegexBasedMatching
}

// LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching includes the requested fields of the GraphQL type RateLimitingRuleRegexBasedMatching.
// The GraphQL type's documentation follows.
//
// Rate limiting rule regex based matching
type LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching struct {
	// custom matching location key value condition
	CustomMatchingLocation *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition `json:"customMatchingLocation"`
}

// GetCustomMatchingLocation returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching.CustomMatchingLocation, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatching) GetCustomMatchingLocation() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition {
	return v.CustomMatchingLocation
}

// LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition includes the requested fields of the GraphQL type RateLimitingRuleKeyValueCondition.
// The GraphQL type's documentation follows.
//
// Key value condition applicable on a rate limit rule
type LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition struct {
	// Key value condition metadata type
	MetadataType *RateLimitingRuleKeyValueConditionMetadataType `json:"metadataType"`
	// Key condition
	KeyCondition *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition `json:"keyCondition"`
}

// GetMetadataType returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition.MetadataType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition) GetMetadataType() *RateLimitingRuleKeyValueConditionMetadataType {
	return v.MetadataType
}

// GetKeyCondition returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition.KeyCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueCondition) GetKeyCondition() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition {
	return v.KeyCondition
}

// LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition includes the requested fields of the GraphQL type RateLimitingRuleStringCondition.
// The GraphQL type's documentation follows.
//
// String condition which matches a string value using the specified operator
type LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition struct {
	// Operator to be used to match the string value
	Operator RateLimitingRuleKeyValueMatchOperator `json:"operator"`
	// String value to be matched
	Value string `json:"value"`
}

// GetOperator returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition.Operator, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition) GetOperator() RateLimitingRuleKeyValueMatchOperator {
	return v.Operator
}

// GetValue returns LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition.Value, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeConditionDatatypeMatchingRateLimitingRuleDatatypeMatchingRegexBasedMatchingRateLimitingRuleRegexBasedMatchingCustomMatchingLocationRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition) GetValue() string {
	return v.Value
}

// LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition includes the requested fields of the GraphQL type RateLimitingRuleEmailDomainCondition.
// The GraphQL type's documentation follows.
//
// Email domain condition for a rate limit rule
type LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition struct {
	// List of email regexes
	EmailRegexes []*string `json:"emailRegexes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetEmailRegexes returns LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition.EmailRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition) GetEmailRegexes() []*string {
	return v.EmailRegexes
}

// GetExclude returns LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition includes the requested fields of the GraphQL type RateLimitingRuleIpAbuseVelocityCondition.
// The GraphQL type's documentation follows.
//
// Ip abuse velocity condition applicable on a rate limit rule
type LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition struct {
	// Minimum Ip abuse velocity applicable
	MinIpAbuseVelocity RateLimitingRuleIpAbuseVelocity `json:"minIpAbuseVelocity"`
}

// GetMinIpAbuseVelocity returns LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition.MinIpAbuseVelocity, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition) GetMinIpAbuseVelocity() RateLimitingRuleIpAbuseVelocity {
	return v.MinIpAbuseVelocity
}

// LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition includes the requested fields of the GraphQL type RateLimitingRuleIpAddressCondition.
// The GraphQL type's documentation follows.
//
// IP address condition applicable on a rate limit rule
type LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition struct {
	// List of CIDR IP ranges
	CidrIpRanges []*string `json:"cidrIpRanges"`
	// List of IP addresses
	IpAddresses []*string `json:"ipAddresses"`
	// List of IP addresses and CIDR IP ranges
	RawInputIpData []*string `json:"rawInputIpData"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
	// ip address condition type
	IpAddressConditionType *RateLimitingRuleIpAddressConditionType `json:"ipAddressConditionType"`
}

// GetCidrIpRanges returns LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition.CidrIpRanges, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition) GetCidrIpRanges() []*string {
	return v.CidrIpRanges
}

// GetIpAddresses returns LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition.IpAddresses, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition) GetIpAddresses() []*string {
	return v.IpAddresses
}

// GetRawInputIpData returns LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition.RawInputIpData, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition) GetRawInputIpData() []*string {
	return v.RawInputIpData
}

// GetExclude returns LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition) GetExclude() *bool {
	return v.Exclude
}

// GetIpAddressConditionType returns LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition.IpAddressConditionType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition) GetIpAddressConditionType() *RateLimitingRuleIpAddressConditionType {
	return v.IpAddressConditionType
}

// LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition includes the requested fields of the GraphQL type RateLimitingRuleIpAsnCondition.
// The GraphQL type's documentation follows.
//
// Ip asn condition for a rate limit rule
type LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition struct {
	// List of ip asn regexes
	IpAsnRegexes []*string `json:"ipAsnRegexes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetIpAsnRegexes returns LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition.IpAsnRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition) GetIpAsnRegexes() []*string {
	return v.IpAsnRegexes
}

// GetExclude returns LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition includes the requested fields of the GraphQL type RateLimitingRuleIpConnectionTypeCondition.
// The GraphQL type's documentation follows.
//
// IP connection type condition for a rate limit rule
type LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition struct {
	// List of ip connection types
	IpConnectionTypes []*RateLimitingRuleIpConnectionType `json:"ipConnectionTypes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetIpConnectionTypes returns LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition.IpConnectionTypes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition) GetIpConnectionTypes() []*RateLimitingRuleIpConnectionType {
	return v.IpConnectionTypes
}

// GetExclude returns LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition includes the requested fields of the GraphQL type RateLimitingRuleIpLocationTypeCondition.
// The GraphQL type's documentation follows.
//
// IP location type condition applicable on a rate limit rule
type LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition struct {
	// List of IP locations types applicable
	IpLocationTypes []*RateLimitingRuleIpLocationType `json:"ipLocationTypes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetIpLocationTypes returns LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition.IpLocationTypes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition) GetIpLocationTypes() []*RateLimitingRuleIpLocationType {
	return v.IpLocationTypes
}

// GetExclude returns LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition includes the requested fields of the GraphQL type RateLimitingRuleIpOrganisationCondition.
// The GraphQL type's documentation follows.
//
// Ip organisation condition for a rate limit rule
type LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition struct {
	// List of ip organisation regexes
	IpOrganisationRegexes []*string `json:"ipOrganisationRegexes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetIpOrganisationRegexes returns LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition.IpOrganisationRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition) GetIpOrganisationRegexes() []*string {
	return v.IpOrganisationRegexes
}

// GetExclude returns LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition includes the requested fields of the GraphQL type RateLimitingRuleIpReputationCondition.
// The GraphQL type's documentation follows.
//
// IP reputation condition applicable on a rate limit rule
type LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition struct {
	// Minimum IP reputation severity applicable
	MinIpReputationSeverity RateLimitingRuleIpReputationSeverity `json:"minIpReputationSeverity"`
}

// GetMinIpReputationSeverity returns LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition.MinIpReputationSeverity, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition) GetMinIpReputationSeverity() RateLimitingRuleIpReputationSeverity {
	return v.MinIpReputationSeverity
}

// LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition includes the requested fields of the GraphQL type RateLimitingRuleKeyValueCondition.
// The GraphQL type's documentation follows.
//
// Key value condition applicable on a rate limit rule
type LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition struct {
	// Key condition
	KeyCondition *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition `json:"keyCondition"`
	// Key value condition metadata type
	MetadataType *RateLimitingRuleKeyValueConditionMetadataType `json:"metadataType"`
	// Value condition
	ValueCondition *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition `json:"valueCondition"`
}

// GetKeyCondition returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition.KeyCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition) GetKeyCondition() *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition {
	return v.KeyCondition
}

// GetMetadataType returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition.MetadataType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition) GetMetadataType() *RateLimitingRuleKeyValueConditionMetadataType {
	return v.MetadataType
}

// GetValueCondition returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition.ValueCondition, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition) GetValueCondition() *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition {
	return v.ValueCondition
}

// LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition includes the requested fields of the GraphQL type RateLimitingRuleStringCondition.
// The GraphQL type's documentation follows.
//
// String condition which matches a string value using the specified operator
type LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition struct {
	// Operator to be used to match the string value
	Operator RateLimitingRuleKeyValueMatchOperator `json:"operator"`
	// String value to be matched
	Value string `json:"value"`
}

// GetOperator returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition.Operator, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition) GetOperator() RateLimitingRuleKeyValueMatchOperator {
	return v.Operator
}

// GetValue returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition.Value, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionKeyConditionRateLimitingRuleStringCondition) GetValue() string {
	return v.Value
}

// LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition includes the requested fields of the GraphQL type RateLimitingRuleStringCondition.
// The GraphQL type's documentation follows.
//
// String condition which matches a string value using the specified operator
type LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition struct {
	// Operator to be used to match the string value
	Operator RateLimitingRuleKeyValueMatchOperator `json:"operator"`
	// String value to be matched
	Value string `json:"value"`
}

// GetOperator returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition.Operator, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition) GetOperator() RateLimitingRuleKeyValueMatchOperator {
	return v.Operator
}

// GetValue returns LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition.Value, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueConditionValueConditionRateLimitingRuleStringCondition) GetValue() string {
	return v.Value
}

// LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition includes the requested fields of the GraphQL type RateLimitingRuleRegionCondition.
// The GraphQL type's documentation follows.
//
// Region condition applicable on a rate limit rule
type LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition struct {
	// List of region identifiers
	RegionIdentifiers []*LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier `json:"regionIdentifiers"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetRegionIdentifiers returns LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition.RegionIdentifiers, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition) GetRegionIdentifiers() []*LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier {
	return v.RegionIdentifiers
}

// GetExclude returns LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier includes the requested fields of the GraphQL type RateLimitingRegionIdentifier.
// The GraphQL type's documentation follows.
//
// Region identifier schema for rate limit region condition
type LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier struct {
	// Country ISO code for region identifier
	CountryIsoCode string `json:"countryIsoCode"`
}

// GetCountryIsoCode returns LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier.CountryIsoCode, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsRegionConditionRateLimitingRuleRegionConditionRegionIdentifiersRateLimitingRegionIdentifier) GetCountryIsoCode() string {
	return v.CountryIsoCode
}

// LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition includes the requested fields of the GraphQL type RateLimitingRuleRequestScannerTypeCondition.
// The GraphQL type's documentation follows.
//
// Request scanner type condition for a rate limit rule
type LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition struct {
	// List of scanner types
	ScannerTypes []*string `json:"scannerTypes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetScannerTypes returns LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition.ScannerTypes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition) GetScannerTypes() []*string {
	return v.ScannerTypes
}

// GetExclude returns LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition includes the requested fields of the GraphQL type RateLimitingRuleScopeCondition.
// The GraphQL type's documentation follows.
//
// Scope condition applicable on a rate limit rule
type LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition struct {
	// Entity scope condition
	EntityScope *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope `json:"entityScope"`
	// Label scope condition
	LabelScope *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope `json:"labelScope"`
	// Scope condition type
	ScopeType RateLimitingRuleScopeConditionType `json:"scopeType"`
	// Url scope condition
	UrlScope *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope `json:"urlScope"`
}

// GetEntityScope returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition.EntityScope, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition) GetEntityScope() *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope {
	return v.EntityScope
}

// GetLabelScope returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition.LabelScope, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition) GetLabelScope() *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope {
	return v.LabelScope
}

// GetScopeType returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition.ScopeType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition) GetScopeType() RateLimitingRuleScopeConditionType {
	return v.ScopeType
}

// GetUrlScope returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition.UrlScope, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition) GetUrlScope() *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope {
	return v.UrlScope
}

// LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope includes the requested fields of the GraphQL type RateLimitingRuleEntityScope.
// The GraphQL type's documentation follows.
//
// Entity scope condition applicable on a rate limit rule
type LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope struct {
	// List of entity ids applicable
	EntityIds []*string `json:"entityIds"`
	// Entity type
	EntityType RateLimitingRuleEntityType `json:"entityType"`
}

// GetEntityIds returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope.EntityIds, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope) GetEntityIds() []*string {
	return v.EntityIds
}

// GetEntityType returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope.EntityType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionEntityScopeRateLimitingRuleEntityScope) GetEntityType() RateLimitingRuleEntityType {
	return v.EntityType
}

// LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope includes the requested fields of the GraphQL type RateLimitingRuleLabelScope.
// The GraphQL type's documentation follows.
//
// Label scope condition applicable on a rate limit rule
type LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope struct {
	// List of label ids applicable
	LabelIds []*string `json:"labelIds"`
	// Label type
	LabelType RateLimitingRuleLabelType `json:"labelType"`
}

// GetLabelIds returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope.LabelIds, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope) GetLabelIds() []*string {
	return v.LabelIds
}

// GetLabelType returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope.LabelType, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionLabelScopeRateLimitingRuleLabelScope) GetLabelType() RateLimitingRuleLabelType {
	return v.LabelType
}

// LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope includes the requested fields of the GraphQL type RateLimitingRuleUrlScope.
// The GraphQL type's documentation follows.
//
// Url scope condition applicable on a rate limit rule
type LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope struct {
	// List of url regex
	UrlRegexes []*string `json:"urlRegexes"`
}

// GetUrlRegexes returns LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope.UrlRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsScopeConditionRateLimitingRuleScopeConditionUrlScopeRateLimitingRuleUrlScope) GetUrlRegexes() []*string {
	return v.UrlRegexes
}

// LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition includes the requested fields of the GraphQL type RateLimitingRuleUserAgentCondition.
// The GraphQL type's documentation follows.
//
// User agent condition for a rate limit rule
type LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition struct {
	// List of user agent regexes
	UserAgentRegexes []*string `json:"userAgentRegexes"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetUserAgentRegexes returns LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition.UserAgentRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition) GetUserAgentRegexes() []*string {
	return v.UserAgentRegexes
}

// GetExclude returns LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition) GetExclude() *bool {
	return v.Exclude
}

// LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition includes the requested fields of the GraphQL type RateLimitingRuleUserIdCondition.
// The GraphQL type's documentation follows.
//
// User ID condition for a rate limit rule
type LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition struct {
	// List of user ID regexes
	UserIdRegexes []*string `json:"userIdRegexes"`
	// List of user IDs
	UserIds []*string `json:"userIds"`
	// boolean denoting exclude condition
	Exclude *bool `json:"exclude"`
}

// GetUserIdRegexes returns LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition.UserIdRegexes, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition) GetUserIdRegexes() []*string {
	return v.UserIdRegexes
}

// GetUserIds returns LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition.UserIds, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition) GetUserIds() []*string {
	return v.UserIds
}

// GetExclude returns LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition.Exclude, and is useful for accessing the field via an interface.
func (v *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition) GetExclude() *bool {
	return v.Exclude
}

// Logical operator describing how to combine multiple independent clauses
type LogicalOperator string

const (
	// AND
	LogicalOperatorAnd LogicalOperator = "AND"
	// OR
	LogicalOperatorOr LogicalOperator = "OR"
	// NOT
	LogicalOperatorNot LogicalOperator = "NOT"
)

var AllLogicalOperator = []LogicalOperator{
	LogicalOperatorAnd,
	LogicalOperatorOr,
	LogicalOperatorNot,
}

// MaliciousEmailDomainRuleFields includes the GraphQL fields of MaliciousSourcesRule requested by the fragment MaliciousEmailDomainRuleFields.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type MaliciousEmailDomainRuleFields struct {
	// Rule ID
	Id string `json:"id"`
	// Malicious Sources rule information
	Info MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`
	// Malicious Sources rule scope
	Scope *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`
	// Malicious Sources rule status
	Status MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

// GetId returns MaliciousEmailDomainRuleFields.Id, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFields) GetId() string { return v.Id }

// GetInfo returns MaliciousEmailDomainRuleFields.Info, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFields) GetInfo() MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.Info
}

// GetScope returns MaliciousEmailDomainRuleFields.Scope, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFields) GetScope() *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.Scope
}

// GetStatus returns MaliciousEmailDomainRuleFields.Status, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFields) GetStatus() MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.Status
}

// MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo includes the requested fields of the GraphQL type MaliciousSourcesRuleInfo.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule information
type MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo struct {
	// Rule name
	Name string `json:"name"`
	// Rule description
	Description *string `json:"description"`
	// Actions associated with the rule
	Action MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction `json:"action"`
	// Condition for the malicious sources rule to be applied
	Conditions []*MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition `json:"conditions"`
}

// GetName returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo.Name, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo) GetName() string { return v.Name }

// GetDescription returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo.Description, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo) GetDescription() *string {
	return v.Description
}

// GetAction returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo.Action, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo) GetAction() MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction {
	return v.Action
}

// GetConditions returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo.Conditions, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo) GetConditions() []*MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition {
	return v.Conditions
}

// MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction includes the requested fields of the GraphQL type MaliciousSourcesRuleAction.
// The GraphQL type's documentation follows.
//
// Actions associated with the rule
type MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction struct {
	// Severity of events generated by the rule
	EventSeverity *MaliciousSourcesRuleEventSeverity `json:"eventSeverity"`
	// Expiration details of the rule
	ExpirationDetails *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails `json:"expirationDetails"`
	// Rule Action
	RuleActionType MaliciousSourcesRuleActionType `json:"ruleActionType"`
}

// GetEventSeverity returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction) GetEventSeverity() *MaliciousSourcesRuleEventSeverity {
	return v.EventSeverity
}

// GetExpirationDetails returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction.ExpirationDetails, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction) GetExpirationDetails() *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails {
	return v.ExpirationDetails
}

// GetRuleActionType returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction.RuleActionType, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction) GetRuleActionType() MaliciousSourcesRuleActionType {
	return v.RuleActionType
}

// MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails includes the requested fields of the GraphQL type MaliciousSourcesRuleExpirationDetails.
// The GraphQL type's documentation follows.
//
// Expiration details of the rule
type MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails struct {
	// Requested expiration duration for the rule
	ExpirationDuration string `json:"expirationDuration"`
}

// GetExpirationDuration returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails.ExpirationDuration, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails) GetExpirationDuration() string {
	return v.ExpirationDuration
}

// MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition includes the requested fields of the GraphQL type MaliciousSourcesRuleCondition.
// The GraphQL type's documentation follows.
//
// Condition for the malicious sources rule to be applied
type MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition struct {
	// Condition Type for a rule
	ConditionType MaliciousSourcesRuleConditionType `json:"conditionType"`
	// Email domain conditions for the rule to be applied
	EmailDomainCondition *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition `json:"emailDomainCondition"`
}

// GetConditionType returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition.ConditionType, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition) GetConditionType() MaliciousSourcesRuleConditionType {
	return v.ConditionType
}

// GetEmailDomainCondition returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition.EmailDomainCondition, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition) GetEmailDomainCondition() *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition {
	return v.EmailDomainCondition
}

// MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition includes the requested fields of the GraphQL type MaliciousSourcesRuleEmailDomainCondition.
// The GraphQL type's documentation follows.
//
// Email domain conditions for the rule to be applied
type MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition struct {
	// boolean denoting whether the rule should apply to data leaked email
	DataLeakedEmail *bool `json:"dataLeakedEmail"`
	// boolean denoting whether the rule should apply to disposable email domains
	DisposableEmailDomain *bool `json:"disposableEmailDomain"`
	// list of email domain where rule should apply
	EmailDomains []*string `json:"emailDomains"`
	// email fraud score where rule should apply
	EmailFraudScore *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainConditionEmailFraudScoreMaliciousSourcesRuleEmailFraudScore `json:"emailFraudScore"`
	// list of email regexes where rule should apply
	EmailRegexes []*string `json:"emailRegexes"`
}

// GetDataLeakedEmail returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition.DataLeakedEmail, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition) GetDataLeakedEmail() *bool {
	return v.DataLeakedEmail
}

// GetDisposableEmailDomain returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition.DisposableEmailDomain, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition) GetDisposableEmailDomain() *bool {
	return v.DisposableEmailDomain
}

// GetEmailDomains returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition.EmailDomains, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition) GetEmailDomains() []*string {
	return v.EmailDomains
}

// GetEmailFraudScore returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition.EmailFraudScore, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition) GetEmailFraudScore() *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainConditionEmailFraudScoreMaliciousSourcesRuleEmailFraudScore {
	return v.EmailFraudScore
}

// GetEmailRegexes returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition.EmailRegexes, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainCondition) GetEmailRegexes() []*string {
	return v.EmailRegexes
}

// MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainConditionEmailFraudScoreMaliciousSourcesRuleEmailFraudScore includes the requested fields of the GraphQL type MaliciousSourcesRuleEmailFraudScore.
// The GraphQL type's documentation follows.
//
// email fraud score where rule should apply
type MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainConditionEmailFraudScoreMaliciousSourcesRuleEmailFraudScore struct {
	// Minimum Email Fraud Score Level
	MinEmailFraudScoreLevel *MaliciousSourcesRuleEmailFraudScoreLevel `json:"minEmailFraudScoreLevel"`
	// Email Fraud Score type for a rule
	EmailFraudScoreType MaliciousSourcesRuleEmailFraudScoreType `json:"emailFraudScoreType"`
}

// GetMinEmailFraudScoreLevel returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainConditionEmailFraudScoreMaliciousSourcesRuleEmailFraudScore.MinEmailFraudScoreLevel, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainConditionEmailFraudScoreMaliciousSourcesRuleEmailFraudScore) GetMinEmailFraudScoreLevel() *MaliciousSourcesRuleEmailFraudScoreLevel {
	return v.MinEmailFraudScoreLevel
}

// GetEmailFraudScoreType returns MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainConditionEmailFraudScoreMaliciousSourcesRuleEmailFraudScore.EmailFraudScoreType, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionEmailDomainConditionMaliciousSourcesRuleEmailDomainConditionEmailFraudScoreMaliciousSourcesRuleEmailFraudScore) GetEmailFraudScoreType() MaliciousSourcesRuleEmailFraudScoreType {
	return v.EmailFraudScoreType
}

// MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope includes the requested fields of the GraphQL type MaliciousSourcesRuleScope.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule scope
type MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope struct {
	// Environment Scope on which the rule will apply
	EnvironmentScope *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope) GetEnvironmentScope() *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope {
	return v.EnvironmentScope
}

// MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope includes the requested fields of the GraphQL type MaliciousSourcesRuleEnvironmentScope.
// The GraphQL type's documentation follows.
//
// Environment Scope on which the rule will apply
type MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope struct {
	// List of environments on which the rule should apply
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

// MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus includes the requested fields of the GraphQL type MaliciousSourcesRuleStatus.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule status
type MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus struct {
	// Disables rule
	Disabled bool `json:"disabled"`
	// Sets rule as internal, visible only to traceable users. Consumed only if disabled is set to true
	Internal *bool `json:"internal"`
}

// GetDisabled returns MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus.Disabled, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus) GetDisabled() bool {
	return v.Disabled
}

// GetInternal returns MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus.Internal, and is useful for accessing the field via an interface.
func (v *MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus) GetInternal() *bool {
	return v.Internal
}

// MaliciousIpRangeFields includes the GraphQL fields of IpRangeRule requested by the fragment MaliciousIpRangeFields.
type MaliciousIpRangeFields struct {
	Id          *string                                             `json:"id"`
	Internal    bool                                                `json:"internal"`
	Disabled    bool                                                `json:"disabled"`
	RuleDetails MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails `json:"ruleDetails"`
	RuleScope   *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope    `json:"ruleScope"`
}

// GetId returns MaliciousIpRangeFields.Id, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFields) GetId() *string { return v.Id }

// GetInternal returns MaliciousIpRangeFields.Internal, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFields) GetInternal() bool { return v.Internal }

// GetDisabled returns MaliciousIpRangeFields.Disabled, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFields) GetDisabled() bool { return v.Disabled }

// GetRuleDetails returns MaliciousIpRangeFields.RuleDetails, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFields) GetRuleDetails() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails {
	return v.RuleDetails
}

// GetRuleScope returns MaliciousIpRangeFields.RuleScope, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFields) GetRuleScope() *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope {
	return v.RuleScope
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails includes the requested fields of the GraphQL type IpRangeRuleDetails.
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails struct {
	Name              string                                                                                         `json:"name"`
	Description       *string                                                                                        `json:"description"`
	RawIpRangeData    []*string                                                                                      `json:"rawIpRangeData"`
	RuleAction        IpRangeRuleActionType                                                                          `json:"ruleAction"`
	EventSeverity     *IpRangeEventSeverity                                                                          `json:"eventSeverity"`
	ExpirationDetails *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails  `json:"expirationDetails"`
	Effects           []*MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification `json:"effects"`
}

// GetName returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.Name, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetName() string { return v.Name }

// GetDescription returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.Description, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetDescription() *string {
	return v.Description
}

// GetRawIpRangeData returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.RawIpRangeData, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetRawIpRangeData() []*string {
	return v.RawIpRangeData
}

// GetRuleAction returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.RuleAction, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetRuleAction() IpRangeRuleActionType {
	return v.RuleAction
}

// GetEventSeverity returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.EventSeverity, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetEventSeverity() *IpRangeEventSeverity {
	return v.EventSeverity
}

// GetExpirationDetails returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.ExpirationDetails, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetExpirationDetails() *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails {
	return v.ExpirationDetails
}

// GetEffects returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails.Effects, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails) GetEffects() []*MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification {
	return v.Effects
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification includes the requested fields of the GraphQL type IpRangeRuleEffectWithModification.
// The GraphQL type's documentation follows.
//
// Ip range rule effect with modification
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification struct {
	// Ip range rule effect modification type
	RuleEffectType IpRangeRuleEffectModificationType `json:"ruleEffectType"`
	// Effects enforced for agent while inline processing of requests
	AgentEffect MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect `json:"agentEffect"`
}

// GetRuleEffectType returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification) GetRuleEffectType() IpRangeRuleEffectModificationType {
	return v.RuleEffectType
}

// GetAgentEffect returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModification) GetAgentEffect() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect {
	return v.AgentEffect
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect includes the requested fields of the GraphQL type IpRangeRuleAgentEffect.
// The GraphQL type's documentation follows.
//
// Ip range rule agent effect
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect struct {
	// Ip range rule agent modification
	AgentModifications []*MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffect) GetAgentModifications() []*MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification {
	return v.AgentModifications
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification includes the requested fields of the GraphQL type IpRangeRuleAgentModification.
// The GraphQL type's documentation follows.
//
// Malicious sources rule agent modification
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification struct {
	// Ip range rule agent modification type
	AgentModificationType IpRangeRuleAgentModificationType `json:"agentModificationType"`
	// Ip range rule header injection
	HeaderInjection MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification) GetAgentModificationType() IpRangeRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModification) GetHeaderInjection() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection {
	return v.HeaderInjection
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection includes the requested fields of the GraphQL type IpRangeRuleHeaderInjection.
// The GraphQL type's documentation follows.
//
// Actions associated with the rule
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection struct {
	// Header key
	Key string `json:"key"`
	// Header value
	Value string `json:"value"`
	// Header category
	HeaderCategory IpRangeRuleHeaderCategory `json:"headerCategory"`
}

// GetKey returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection) GetKey() string {
	return v.Key
}

// GetValue returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection) GetValue() string {
	return v.Value
}

// GetHeaderCategory returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsEffectsIpRangeRuleEffectWithModificationAgentEffectIpRangeRuleAgentEffectAgentModificationsIpRangeRuleAgentModificationHeaderInjectionIpRangeRuleHeaderInjection) GetHeaderCategory() IpRangeRuleHeaderCategory {
	return v.HeaderCategory
}

// MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails includes the requested fields of the GraphQL type IpRangeExpirationDetails.
type MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails struct {
	ExpirationDuration  string `json:"expirationDuration"`
	ExpirationTimestamp string `json:"expirationTimestamp"`
}

// GetExpirationDuration returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails.ExpirationDuration, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails) GetExpirationDuration() string {
	return v.ExpirationDuration
}

// GetExpirationTimestamp returns MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails.ExpirationTimestamp, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetailsExpirationDetailsIpRangeExpirationDetails) GetExpirationTimestamp() string {
	return v.ExpirationTimestamp
}

// MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope includes the requested fields of the GraphQL type IpRangeRuleScope.
type MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope struct {
	EnvironmentScope *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope) GetEnvironmentScope() *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope {
	return v.EnvironmentScope
}

// MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope includes the requested fields of the GraphQL type IpRangeEnvironmentScope.
type MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope struct {
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScopeEnvironmentScopeIpRangeEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

// MaliciousIpTypeRuleFields includes the GraphQL fields of MaliciousSourcesRule requested by the fragment MaliciousIpTypeRuleFields.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type MaliciousIpTypeRuleFields struct {
	// Rule ID
	Id string `json:"id"`
	// Malicious Sources rule information
	Info MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`
	// Malicious Sources rule scope
	Scope *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`
	// Malicious Sources rule status
	Status MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

// GetId returns MaliciousIpTypeRuleFields.Id, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFields) GetId() string { return v.Id }

// GetInfo returns MaliciousIpTypeRuleFields.Info, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFields) GetInfo() MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.Info
}

// GetScope returns MaliciousIpTypeRuleFields.Scope, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFields) GetScope() *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.Scope
}

// GetStatus returns MaliciousIpTypeRuleFields.Status, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFields) GetStatus() MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.Status
}

// MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo includes the requested fields of the GraphQL type MaliciousSourcesRuleInfo.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule information
type MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo struct {
	// Rule name
	Name string `json:"name"`
	// Rule description
	Description *string `json:"description"`
	// Actions associated with the rule
	Action MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction `json:"action"`
	// Condition for the malicious sources rule to be applied
	Conditions []*MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition `json:"conditions"`
}

// GetName returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo.Name, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo) GetName() string { return v.Name }

// GetDescription returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo.Description, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo) GetDescription() *string {
	return v.Description
}

// GetAction returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo.Action, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo) GetAction() MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction {
	return v.Action
}

// GetConditions returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo.Conditions, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo) GetConditions() []*MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition {
	return v.Conditions
}

// MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction includes the requested fields of the GraphQL type MaliciousSourcesRuleAction.
// The GraphQL type's documentation follows.
//
// Actions associated with the rule
type MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction struct {
	// Severity of events generated by the rule
	EventSeverity *MaliciousSourcesRuleEventSeverity `json:"eventSeverity"`
	// Expiration details of the rule
	ExpirationDetails *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails `json:"expirationDetails"`
	// Rule Action
	RuleActionType MaliciousSourcesRuleActionType `json:"ruleActionType"`
}

// GetEventSeverity returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction) GetEventSeverity() *MaliciousSourcesRuleEventSeverity {
	return v.EventSeverity
}

// GetExpirationDetails returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction.ExpirationDetails, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction) GetExpirationDetails() *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails {
	return v.ExpirationDetails
}

// GetRuleActionType returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction.RuleActionType, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleAction) GetRuleActionType() MaliciousSourcesRuleActionType {
	return v.RuleActionType
}

// MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails includes the requested fields of the GraphQL type MaliciousSourcesRuleExpirationDetails.
// The GraphQL type's documentation follows.
//
// Expiration details of the rule
type MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails struct {
	// Requested expiration duration for the rule
	ExpirationDuration string `json:"expirationDuration"`
}

// GetExpirationDuration returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails.ExpirationDuration, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoActionMaliciousSourcesRuleActionExpirationDetailsMaliciousSourcesRuleExpirationDetails) GetExpirationDuration() string {
	return v.ExpirationDuration
}

// MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition includes the requested fields of the GraphQL type MaliciousSourcesRuleCondition.
// The GraphQL type's documentation follows.
//
// Condition for the malicious sources rule to be applied
type MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition struct {
	// Condition Type for a rule
	ConditionType MaliciousSourcesRuleConditionType `json:"conditionType"`
	// IP location type conditions for the rule to be applied
	IpLocationTypeCondition *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition `json:"ipLocationTypeCondition"`
}

// GetConditionType returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition.ConditionType, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition) GetConditionType() MaliciousSourcesRuleConditionType {
	return v.ConditionType
}

// GetIpLocationTypeCondition returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition.IpLocationTypeCondition, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleCondition) GetIpLocationTypeCondition() *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition {
	return v.IpLocationTypeCondition
}

// MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition includes the requested fields of the GraphQL type MaliciousSourcesRuleIpLocationTypeCondition.
// The GraphQL type's documentation follows.
//
// IP location type conditions for the rule to be applied
type MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition struct {
	// IP location types where rule should apply
	IpLocationTypes []*MaliciousSourcesRuleIpLocationType `json:"ipLocationTypes"`
}

// GetIpLocationTypes returns MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition.IpLocationTypes, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfoConditionsMaliciousSourcesRuleConditionIpLocationTypeConditionMaliciousSourcesRuleIpLocationTypeCondition) GetIpLocationTypes() []*MaliciousSourcesRuleIpLocationType {
	return v.IpLocationTypes
}

// MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope includes the requested fields of the GraphQL type MaliciousSourcesRuleScope.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule scope
type MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope struct {
	// Environment Scope on which the rule will apply
	EnvironmentScope *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope) GetEnvironmentScope() *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope {
	return v.EnvironmentScope
}

// MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope includes the requested fields of the GraphQL type MaliciousSourcesRuleEnvironmentScope.
// The GraphQL type's documentation follows.
//
// Environment Scope on which the rule will apply
type MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope struct {
	// List of environments on which the rule should apply
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScopeEnvironmentScopeMaliciousSourcesRuleEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

// MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus includes the requested fields of the GraphQL type MaliciousSourcesRuleStatus.
// The GraphQL type's documentation follows.
//
// Malicious Sources rule status
type MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus struct {
	// Disables rule
	Disabled bool `json:"disabled"`
	// Sets rule as internal, visible only to traceable users. Consumed only if disabled is set to true
	Internal *bool `json:"internal"`
}

// GetDisabled returns MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus.Disabled, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus) GetDisabled() bool {
	return v.Disabled
}

// GetInternal returns MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus.Internal, and is useful for accessing the field via an interface.
func (v *MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus) GetInternal() *bool {
	return v.Internal
}

// MaliciousRegionRuleFields includes the GraphQL fields of RegionRule requested by the fragment MaliciousRegionRuleFields.
type MaliciousRegionRuleFields struct {
	Id            string                                                              `json:"id"`
	Name          string                                                              `json:"name"`
	Type          RegionRuleActionType                                                `json:"type"`
	Description   *string                                                             `json:"description"`
	Disabled      bool                                                                `json:"disabled"`
	Internal      bool                                                                `json:"internal"`
	EventSeverity *RegionRuleEventSeverity                                            `json:"eventSeverity"`
	Expiration    *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration            `json:"expiration"`
	Regions       []*MaliciousRegionRuleFieldsRegionsRegion                           `json:"regions"`
	RuleScope     *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope                  `json:"ruleScope"`
	Effects       []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification `json:"effects"`
}

// GetId returns MaliciousRegionRuleFields.Id, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetId() string { return v.Id }

// GetName returns MaliciousRegionRuleFields.Name, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetName() string { return v.Name }

// GetType returns MaliciousRegionRuleFields.Type, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetType() RegionRuleActionType { return v.Type }

// GetDescription returns MaliciousRegionRuleFields.Description, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetDescription() *string { return v.Description }

// GetDisabled returns MaliciousRegionRuleFields.Disabled, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetDisabled() bool { return v.Disabled }

// GetInternal returns MaliciousRegionRuleFields.Internal, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetInternal() bool { return v.Internal }

// GetEventSeverity returns MaliciousRegionRuleFields.EventSeverity, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetEventSeverity() *RegionRuleEventSeverity {
	return v.EventSeverity
}

// GetExpiration returns MaliciousRegionRuleFields.Expiration, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetExpiration() *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration {
	return v.Expiration
}

// GetRegions returns MaliciousRegionRuleFields.Regions, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetRegions() []*MaliciousRegionRuleFieldsRegionsRegion {
	return v.Regions
}

// GetRuleScope returns MaliciousRegionRuleFields.RuleScope, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetRuleScope() *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope {
	return v.RuleScope
}

// GetEffects returns MaliciousRegionRuleFields.Effects, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFields) GetEffects() []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification {
	return v.Effects
}

// MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification includes the requested fields of the GraphQL type RegionRuleEffectWithModification.
type MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification struct {
	RuleEffectType RegionRuleEffectModificationType `json:"ruleEffectType"`
	// Effects enforced for agent while inline processing of requests
	AgentEffect MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect `json:"agentEffect"`
}

// GetRuleEffectType returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification.RuleEffectType, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification) GetRuleEffectType() RegionRuleEffectModificationType {
	return v.RuleEffectType
}

// GetAgentEffect returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification.AgentEffect, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification) GetAgentEffect() MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect {
	return v.AgentEffect
}

// MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect includes the requested fields of the GraphQL type RegionRuleAgentEffect.
type MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect struct {
	AgentModifications []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffect) GetAgentModifications() []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification {
	return v.AgentModifications
}

// MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification includes the requested fields of the GraphQL type RegionRuleAgentModification.
type MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification struct {
	AgentModificationType RegionRuleAgentModificationType                                                                                                                                                       `json:"agentModificationType"`
	HeaderInjection       MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification) GetAgentModificationType() RegionRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModification) GetHeaderInjection() MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection {
	return v.HeaderInjection
}

// MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection includes the requested fields of the GraphQL type RegionRuleHeaderInjection.
type MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection struct {
	Key            string                   `json:"key"`
	Value          string                   `json:"value"`
	HeaderCategory RegionRuleHeaderCategory `json:"headerCategory"`
}

// GetKey returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection) GetKey() string {
	return v.Key
}

// GetValue returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection) GetValue() string {
	return v.Value
}

// GetHeaderCategory returns MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModificationAgentEffectRegionRuleAgentEffectAgentModificationsRegionRuleAgentModificationHeaderInjectionRegionRuleHeaderInjection) GetHeaderCategory() RegionRuleHeaderCategory {
	return v.HeaderCategory
}

// MaliciousRegionRuleFieldsExpirationRegionRuleExpiration includes the requested fields of the GraphQL type RegionRuleExpiration.
type MaliciousRegionRuleFieldsExpirationRegionRuleExpiration struct {
	Duration  string `json:"duration"`
	Timestamp string `json:"timestamp"`
}

// GetDuration returns MaliciousRegionRuleFieldsExpirationRegionRuleExpiration.Duration, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration) GetDuration() string {
	return v.Duration
}

// GetTimestamp returns MaliciousRegionRuleFieldsExpirationRegionRuleExpiration.Timestamp, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration) GetTimestamp() string {
	return v.Timestamp
}

// MaliciousRegionRuleFieldsRegionsRegion includes the requested fields of the GraphQL type Region.
type MaliciousRegionRuleFieldsRegionsRegion struct {
	Id string `json:"id"`
	// Region name
	Name string `json:"name"`
	// Country data for region
	Country *MaliciousRegionRuleFieldsRegionsRegionCountry `json:"country"`
}

// GetId returns MaliciousRegionRuleFieldsRegionsRegion.Id, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRegionsRegion) GetId() string { return v.Id }

// GetName returns MaliciousRegionRuleFieldsRegionsRegion.Name, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRegionsRegion) GetName() string { return v.Name }

// GetCountry returns MaliciousRegionRuleFieldsRegionsRegion.Country, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRegionsRegion) GetCountry() *MaliciousRegionRuleFieldsRegionsRegionCountry {
	return v.Country
}

// MaliciousRegionRuleFieldsRegionsRegionCountry includes the requested fields of the GraphQL type Country.
type MaliciousRegionRuleFieldsRegionsRegionCountry struct {
	// Country iso code
	IsoCode string `json:"isoCode"`
	// Country name
	Name string `json:"name"`
}

// GetIsoCode returns MaliciousRegionRuleFieldsRegionsRegionCountry.IsoCode, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRegionsRegionCountry) GetIsoCode() string { return v.IsoCode }

// GetName returns MaliciousRegionRuleFieldsRegionsRegionCountry.Name, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRegionsRegionCountry) GetName() string { return v.Name }

// MaliciousRegionRuleFieldsRuleScopeRegionRuleScope includes the requested fields of the GraphQL type RegionRuleScope.
type MaliciousRegionRuleFieldsRuleScopeRegionRuleScope struct {
	EnvironmentScope *MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns MaliciousRegionRuleFieldsRuleScopeRegionRuleScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope) GetEnvironmentScope() *MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope {
	return v.EnvironmentScope
}

// MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope includes the requested fields of the GraphQL type RegionEnvironmentScope.
type MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope struct {
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *MaliciousRegionRuleFieldsRuleScopeRegionRuleScopeEnvironmentScopeRegionEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

// Rule action
type MaliciousSourcesRuleActionType string

const (
	// Block all the request matching the rule
	MaliciousSourcesRuleActionTypeBlock MaliciousSourcesRuleActionType = "BLOCK"
	// Allow all requests
	MaliciousSourcesRuleActionTypeAllow MaliciousSourcesRuleActionType = "ALLOW"
	// Block all requests except the ones matching the rule
	MaliciousSourcesRuleActionTypeBlockAllExcept MaliciousSourcesRuleActionType = "BLOCK_ALL_EXCEPT"
	// Alert all the request matching the rule
	MaliciousSourcesRuleActionTypeAlert MaliciousSourcesRuleActionType = "ALERT"
)

var AllMaliciousSourcesRuleActionType = []MaliciousSourcesRuleActionType{
	MaliciousSourcesRuleActionTypeBlock,
	MaliciousSourcesRuleActionTypeAllow,
	MaliciousSourcesRuleActionTypeBlockAllExcept,
	MaliciousSourcesRuleActionTypeAlert,
}

// Malicious sources rule agent modification type
type MaliciousSourcesRuleAgentModificationType string

const (
	// Add a header with inline processing of request on matching conditions
	MaliciousSourcesRuleAgentModificationTypeHeaderInjection MaliciousSourcesRuleAgentModificationType = "HEADER_INJECTION"
)

var AllMaliciousSourcesRuleAgentModificationType = []MaliciousSourcesRuleAgentModificationType{
	MaliciousSourcesRuleAgentModificationTypeHeaderInjection,
}

// Condition Type for a rule
type MaliciousSourcesRuleConditionType string

const (
	// IP_ADDRESS
	MaliciousSourcesRuleConditionTypeIpAddress MaliciousSourcesRuleConditionType = "IP_ADDRESS"
	// REGION
	MaliciousSourcesRuleConditionTypeRegion MaliciousSourcesRuleConditionType = "REGION"
	// IP_LOCATION_TYPE
	MaliciousSourcesRuleConditionTypeIpLocationType MaliciousSourcesRuleConditionType = "IP_LOCATION_TYPE"
	// IP_REPUTATION
	MaliciousSourcesRuleConditionTypeIpReputation MaliciousSourcesRuleConditionType = "IP_REPUTATION"
	// EMAIL_DOMAIN
	MaliciousSourcesRuleConditionTypeEmailDomain MaliciousSourcesRuleConditionType = "EMAIL_DOMAIN"
)

var AllMaliciousSourcesRuleConditionType = []MaliciousSourcesRuleConditionType{
	MaliciousSourcesRuleConditionTypeIpAddress,
	MaliciousSourcesRuleConditionTypeRegion,
	MaliciousSourcesRuleConditionTypeIpLocationType,
	MaliciousSourcesRuleConditionTypeIpReputation,
	MaliciousSourcesRuleConditionTypeEmailDomain,
}

type MaliciousSourcesRuleEffectModificationType string

const (
	// Modifications to be done on agent
	MaliciousSourcesRuleEffectModificationTypeAgentEffect MaliciousSourcesRuleEffectModificationType = "AGENT_EFFECT"
)

var AllMaliciousSourcesRuleEffectModificationType = []MaliciousSourcesRuleEffectModificationType{
	MaliciousSourcesRuleEffectModificationTypeAgentEffect,
}

// Email Fraud Score level for a rule
type MaliciousSourcesRuleEmailFraudScoreLevel string

const (
	// HIGH
	MaliciousSourcesRuleEmailFraudScoreLevelHigh MaliciousSourcesRuleEmailFraudScoreLevel = "HIGH"
	// CRITICAL
	MaliciousSourcesRuleEmailFraudScoreLevelCritical MaliciousSourcesRuleEmailFraudScoreLevel = "CRITICAL"
)

var AllMaliciousSourcesRuleEmailFraudScoreLevel = []MaliciousSourcesRuleEmailFraudScoreLevel{
	MaliciousSourcesRuleEmailFraudScoreLevelHigh,
	MaliciousSourcesRuleEmailFraudScoreLevelCritical,
}

// Email Fraud Score type for a rule
type MaliciousSourcesRuleEmailFraudScoreType string

const (
	// MIN_SEVERITY
	MaliciousSourcesRuleEmailFraudScoreTypeMinSeverity MaliciousSourcesRuleEmailFraudScoreType = "MIN_SEVERITY"
	// MIN_SCORE
	MaliciousSourcesRuleEmailFraudScoreTypeMinScore MaliciousSourcesRuleEmailFraudScoreType = "MIN_SCORE"
)

var AllMaliciousSourcesRuleEmailFraudScoreType = []MaliciousSourcesRuleEmailFraudScoreType{
	MaliciousSourcesRuleEmailFraudScoreTypeMinSeverity,
	MaliciousSourcesRuleEmailFraudScoreTypeMinScore,
}

// Severity of events generated by the rule
type MaliciousSourcesRuleEventSeverity string

const (
	// LOW
	MaliciousSourcesRuleEventSeverityLow MaliciousSourcesRuleEventSeverity = "LOW"
	// MEDIUM
	MaliciousSourcesRuleEventSeverityMedium MaliciousSourcesRuleEventSeverity = "MEDIUM"
	// HIGH
	MaliciousSourcesRuleEventSeverityHigh MaliciousSourcesRuleEventSeverity = "HIGH"
	// CRITICAL
	MaliciousSourcesRuleEventSeverityCritical MaliciousSourcesRuleEventSeverity = "CRITICAL"
)

var AllMaliciousSourcesRuleEventSeverity = []MaliciousSourcesRuleEventSeverity{
	MaliciousSourcesRuleEventSeverityLow,
	MaliciousSourcesRuleEventSeverityMedium,
	MaliciousSourcesRuleEventSeverityHigh,
	MaliciousSourcesRuleEventSeverityCritical,
}

// Malicious sources header category
type MaliciousSourcesRuleHeaderCategory string

const (
	// Request header category
	MaliciousSourcesRuleHeaderCategoryRequest MaliciousSourcesRuleHeaderCategory = "REQUEST"
	// Response header category
	MaliciousSourcesRuleHeaderCategoryResponse MaliciousSourcesRuleHeaderCategory = "RESPONSE"
)

var AllMaliciousSourcesRuleHeaderCategory = []MaliciousSourcesRuleHeaderCategory{
	MaliciousSourcesRuleHeaderCategoryRequest,
	MaliciousSourcesRuleHeaderCategoryResponse,
}

// IP location type for a rule
type MaliciousSourcesRuleIpLocationType string

const (
	// ANONYMOUS_VPN
	MaliciousSourcesRuleIpLocationTypeAnonymousVpn MaliciousSourcesRuleIpLocationType = "ANONYMOUS_VPN"
	// HOSTING_PROVIDER
	MaliciousSourcesRuleIpLocationTypeHostingProvider MaliciousSourcesRuleIpLocationType = "HOSTING_PROVIDER"
	// PUBLIC_PROXY
	MaliciousSourcesRuleIpLocationTypePublicProxy MaliciousSourcesRuleIpLocationType = "PUBLIC_PROXY"
	// TOR_EXIT_NODE
	MaliciousSourcesRuleIpLocationTypeTorExitNode MaliciousSourcesRuleIpLocationType = "TOR_EXIT_NODE"
	// BOT
	MaliciousSourcesRuleIpLocationTypeBot MaliciousSourcesRuleIpLocationType = "BOT"
)

var AllMaliciousSourcesRuleIpLocationType = []MaliciousSourcesRuleIpLocationType{
	MaliciousSourcesRuleIpLocationTypeAnonymousVpn,
	MaliciousSourcesRuleIpLocationTypeHostingProvider,
	MaliciousSourcesRuleIpLocationTypePublicProxy,
	MaliciousSourcesRuleIpLocationTypeTorExitNode,
	MaliciousSourcesRuleIpLocationTypeBot,
}

// IP reputation type for a rule
type MaliciousSourcesRuleIpReputationConditionType string

const (
	// MIN_SEVERITY
	MaliciousSourcesRuleIpReputationConditionTypeMinSeverity MaliciousSourcesRuleIpReputationConditionType = "MIN_SEVERITY"
	// MIN_SCORE
	MaliciousSourcesRuleIpReputationConditionTypeMinScore MaliciousSourcesRuleIpReputationConditionType = "MIN_SCORE"
)

var AllMaliciousSourcesRuleIpReputationConditionType = []MaliciousSourcesRuleIpReputationConditionType{
	MaliciousSourcesRuleIpReputationConditionTypeMinSeverity,
	MaliciousSourcesRuleIpReputationConditionTypeMinScore,
}

// Severity of event generated by the rule
type MaliciousSourcesRuleIpReputationSeverity string

const (
	// LOW
	MaliciousSourcesRuleIpReputationSeverityLow MaliciousSourcesRuleIpReputationSeverity = "LOW"
	// MEDIUM
	MaliciousSourcesRuleIpReputationSeverityMedium MaliciousSourcesRuleIpReputationSeverity = "MEDIUM"
	// HIGH
	MaliciousSourcesRuleIpReputationSeverityHigh MaliciousSourcesRuleIpReputationSeverity = "HIGH"
	// CRITICAL
	MaliciousSourcesRuleIpReputationSeverityCritical MaliciousSourcesRuleIpReputationSeverity = "CRITICAL"
)

var AllMaliciousSourcesRuleIpReputationSeverity = []MaliciousSourcesRuleIpReputationSeverity{
	MaliciousSourcesRuleIpReputationSeverityLow,
	MaliciousSourcesRuleIpReputationSeverityMedium,
	MaliciousSourcesRuleIpReputationSeverityHigh,
	MaliciousSourcesRuleIpReputationSeverityCritical,
}

// Region Type for a rule
type MaliciousSourcesRuleRegionType string

const (
	// COUNTRY_ISO_CODE
	MaliciousSourcesRuleRegionTypeCountryIsoCode MaliciousSourcesRuleRegionType = "COUNTRY_ISO_CODE"
)

var AllMaliciousSourcesRuleRegionType = []MaliciousSourcesRuleRegionType{
	MaliciousSourcesRuleRegionTypeCountryIsoCode,
}

type MetricAggregationType string

const (
	// COUNT
	MetricAggregationTypeCount MetricAggregationType = "COUNT"
	// AVG
	MetricAggregationTypeAvg MetricAggregationType = "AVG"
	// SUM
	MetricAggregationTypeSum MetricAggregationType = "SUM"
	// MIN
	MetricAggregationTypeMin MetricAggregationType = "MIN"
	// MAX
	MetricAggregationTypeMax MetricAggregationType = "MAX"
	// AVGRATE
	MetricAggregationTypeAvgrate MetricAggregationType = "AVGRATE"
	// PERCENTILE
	MetricAggregationTypePercentile MetricAggregationType = "PERCENTILE"
	// DISTINCTCOUNT
	MetricAggregationTypeDistinctcount MetricAggregationType = "DISTINCTCOUNT"
	// DISTINCT_ARRAY
	MetricAggregationTypeDistinctArray MetricAggregationType = "DISTINCT_ARRAY"
	// ANY_VALUE
	MetricAggregationTypeAnyValue MetricAggregationType = "ANY_VALUE"
)

var AllMetricAggregationType = []MetricAggregationType{
	MetricAggregationTypeCount,
	MetricAggregationTypeAvg,
	MetricAggregationTypeSum,
	MetricAggregationTypeMin,
	MetricAggregationTypeMax,
	MetricAggregationTypeAvgrate,
	MetricAggregationTypePercentile,
	MetricAggregationTypeDistinctcount,
	MetricAggregationTypeDistinctArray,
	MetricAggregationTypeAnyValue,
}

type ModsecurityAnomalyDetectionConfigName string

const (
	// MODSEC_ALL_DETECTION
	ModsecurityAnomalyDetectionConfigNameModsecAllDetection ModsecurityAnomalyDetectionConfigName = "MODSEC_ALL_DETECTION"
	// MODSEC_ANOMALY_RULE
	ModsecurityAnomalyDetectionConfigNameModsecAnomalyRule ModsecurityAnomalyDetectionConfigName = "MODSEC_ANOMALY_RULE"
)

var AllModsecurityAnomalyDetectionConfigName = []ModsecurityAnomalyDetectionConfigName{
	ModsecurityAnomalyDetectionConfigNameModsecAllDetection,
	ModsecurityAnomalyDetectionConfigNameModsecAnomalyRule,
}

type OrderDirection string

const (
	// ASC
	OrderDirectionAsc OrderDirection = "ASC"
	// DESC
	OrderDirectionDesc OrderDirection = "DESC"
)

var AllOrderDirection = []OrderDirection{
	OrderDirectionAsc,
	OrderDirectionDesc,
}

type ParamValueType string

const (
	// HTML
	ParamValueTypeHtml ParamValueType = "HTML"
	// RICH_TEXT_HTML
	ParamValueTypeRichTextHtml ParamValueType = "RICH_TEXT_HTML"
	// FREE_TEXT
	ParamValueTypeFreeText ParamValueType = "FREE_TEXT"
)

var AllParamValueType = []ParamValueType{
	ParamValueTypeHtml,
	ParamValueTypeRichTextHtml,
	ParamValueTypeFreeText,
}

type RateLimitingRuleActionType string

const (
	// ALERT
	RateLimitingRuleActionTypeAlert RateLimitingRuleActionType = "ALERT"
	// BLOCK
	RateLimitingRuleActionTypeBlock RateLimitingRuleActionType = "BLOCK"
	// ALLOW
	RateLimitingRuleActionTypeAllow RateLimitingRuleActionType = "ALLOW"
	// MARK_FOR_TESTING
	RateLimitingRuleActionTypeMarkForTesting RateLimitingRuleActionType = "MARK_FOR_TESTING"
)

var AllRateLimitingRuleActionType = []RateLimitingRuleActionType{
	RateLimitingRuleActionTypeAlert,
	RateLimitingRuleActionTypeBlock,
	RateLimitingRuleActionTypeAllow,
	RateLimitingRuleActionTypeMarkForTesting,
}

type RateLimitingRuleAgentModificationType string

const (
	// Add a header with inline processing of request on matching conditions
	RateLimitingRuleAgentModificationTypeHeaderInjection RateLimitingRuleAgentModificationType = "HEADER_INJECTION"
)

var AllRateLimitingRuleAgentModificationType = []RateLimitingRuleAgentModificationType{
	RateLimitingRuleAgentModificationTypeHeaderInjection,
}

type RateLimitingRuleApiAggregateType string

const (
	// PER_ENDPOINT
	RateLimitingRuleApiAggregateTypePerEndpoint RateLimitingRuleApiAggregateType = "PER_ENDPOINT"
	// ACROSS_ENDPOINTS
	RateLimitingRuleApiAggregateTypeAcrossEndpoints RateLimitingRuleApiAggregateType = "ACROSS_ENDPOINTS"
)

var AllRateLimitingRuleApiAggregateType = []RateLimitingRuleApiAggregateType{
	RateLimitingRuleApiAggregateTypePerEndpoint,
	RateLimitingRuleApiAggregateTypeAcrossEndpoints,
}

type RateLimitingRuleCategory string

const (
	// ENDPOINT_RATE_LIMITING
	RateLimitingRuleCategoryEndpointRateLimiting RateLimitingRuleCategory = "ENDPOINT_RATE_LIMITING"
	// DATA_EXFILTRATION
	RateLimitingRuleCategoryDataExfiltration RateLimitingRuleCategory = "DATA_EXFILTRATION"
	// ENUMERATION
	RateLimitingRuleCategoryEnumeration RateLimitingRuleCategory = "ENUMERATION"
)

var AllRateLimitingRuleCategory = []RateLimitingRuleCategory{
	RateLimitingRuleCategoryEndpointRateLimiting,
	RateLimitingRuleCategoryDataExfiltration,
	RateLimitingRuleCategoryEnumeration,
}

type RateLimitingRuleConditionType string

const (
	// LOGICAL_CONDITION
	RateLimitingRuleConditionTypeLogicalCondition RateLimitingRuleConditionType = "LOGICAL_CONDITION"
	// LEAF_CONDITION
	RateLimitingRuleConditionTypeLeafCondition RateLimitingRuleConditionType = "LEAF_CONDITION"
)

var AllRateLimitingRuleConditionType = []RateLimitingRuleConditionType{
	RateLimitingRuleConditionTypeLogicalCondition,
	RateLimitingRuleConditionTypeLeafCondition,
}

// Rate limiting rule data location
type RateLimitingRuleDataLocation string

const (
	// REQUEST
	RateLimitingRuleDataLocationRequest RateLimitingRuleDataLocation = "REQUEST"
	// RESPONSE
	RateLimitingRuleDataLocationResponse RateLimitingRuleDataLocation = "RESPONSE"
)

var AllRateLimitingRuleDataLocation = []RateLimitingRuleDataLocation{
	RateLimitingRuleDataLocationRequest,
	RateLimitingRuleDataLocationResponse,
}

// Rate limiting rule data sensitivity
type RateLimitingRuleDataSensitivityLevel string

const (
	// LOW
	RateLimitingRuleDataSensitivityLevelLow RateLimitingRuleDataSensitivityLevel = "LOW"
	// MEDIUM
	RateLimitingRuleDataSensitivityLevelMedium RateLimitingRuleDataSensitivityLevel = "MEDIUM"
	// HIGH
	RateLimitingRuleDataSensitivityLevelHigh RateLimitingRuleDataSensitivityLevel = "HIGH"
	// CRITICAL
	RateLimitingRuleDataSensitivityLevelCritical RateLimitingRuleDataSensitivityLevel = "CRITICAL"
)

var AllRateLimitingRuleDataSensitivityLevel = []RateLimitingRuleDataSensitivityLevel{
	RateLimitingRuleDataSensitivityLevelLow,
	RateLimitingRuleDataSensitivityLevelMedium,
	RateLimitingRuleDataSensitivityLevelHigh,
	RateLimitingRuleDataSensitivityLevelCritical,
}

// Rate limiting rule datatype matching type
type RateLimitingRuleDatatypeMatchingType string

const (
	// REGEX_BASED_MATCHING
	RateLimitingRuleDatatypeMatchingTypeRegexBasedMatching RateLimitingRuleDatatypeMatchingType = "REGEX_BASED_MATCHING"
	// LEARNED_TYPES_MATCHING
	RateLimitingRuleDatatypeMatchingTypeLearnedTypesMatching RateLimitingRuleDatatypeMatchingType = "LEARNED_TYPES_MATCHING"
)

var AllRateLimitingRuleDatatypeMatchingType = []RateLimitingRuleDatatypeMatchingType{
	RateLimitingRuleDatatypeMatchingTypeRegexBasedMatching,
	RateLimitingRuleDatatypeMatchingTypeLearnedTypesMatching,
}

type RateLimitingRuleEntityType string

const (
	// API
	RateLimitingRuleEntityTypeApi RateLimitingRuleEntityType = "API"
	// SERVICE
	RateLimitingRuleEntityTypeService RateLimitingRuleEntityType = "SERVICE"
)

var AllRateLimitingRuleEntityType = []RateLimitingRuleEntityType{
	RateLimitingRuleEntityTypeApi,
	RateLimitingRuleEntityTypeService,
}

// Rule evaluation points for rate limiting rules
type RateLimitingRuleEvaluationPoint string

const (
	// EDGE
	RateLimitingRuleEvaluationPointEdge RateLimitingRuleEvaluationPoint = "EDGE"
	// INLINE_TRACING_AGENT
	RateLimitingRuleEvaluationPointInlineTracingAgent RateLimitingRuleEvaluationPoint = "INLINE_TRACING_AGENT"
	// PLATFORM
	RateLimitingRuleEvaluationPointPlatform RateLimitingRuleEvaluationPoint = "PLATFORM"
)

var AllRateLimitingRuleEvaluationPoint = []RateLimitingRuleEvaluationPoint{
	RateLimitingRuleEvaluationPointEdge,
	RateLimitingRuleEvaluationPointInlineTracingAgent,
	RateLimitingRuleEvaluationPointPlatform,
}

type RateLimitingRuleEventSeverity string

const (
	// LOW
	RateLimitingRuleEventSeverityLow RateLimitingRuleEventSeverity = "LOW"
	// MEDIUM
	RateLimitingRuleEventSeverityMedium RateLimitingRuleEventSeverity = "MEDIUM"
	// HIGH
	RateLimitingRuleEventSeverityHigh RateLimitingRuleEventSeverity = "HIGH"
	// CRITICAL
	RateLimitingRuleEventSeverityCritical RateLimitingRuleEventSeverity = "CRITICAL"
)

var AllRateLimitingRuleEventSeverity = []RateLimitingRuleEventSeverity{
	RateLimitingRuleEventSeverityLow,
	RateLimitingRuleEventSeverityMedium,
	RateLimitingRuleEventSeverityHigh,
	RateLimitingRuleEventSeverityCritical,
}

// Fragment for rateLimitingRules
type RateLimitingRuleFields struct {
	// Rate limit rule category
	Category RateLimitingRuleCategory `json:"category"`
	// Rate limit rule description
	Description *string `json:"description"`
	// Rate limit rule enabled status
	Enabled bool `json:"enabled"`
	// Rate limit rule ID
	Id string `json:"id"`
	// Rate limit rule name
	Name string `json:"name"`
	// Rate limit rule custom labels
	Labels []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel `json:"labels"`
	// List of configs containing thresholds and actions for a rate limit rule
	ThresholdActionConfigs []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`
	// Transaction action config for DLP rule
	TransactionActionConfigs *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`
	// Rate limit rule scope
	RuleConfigScope *RateLimitingRuleFieldsRuleConfigScope `json:"ruleConfigScope"`
	// Rate limit rule status
	RuleStatus *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus `json:"ruleStatus"`
	// List of rate limit rule conditions
	Conditions []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition `json:"conditions"`
}

// GetCategory returns RateLimitingRuleFields.Category, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetCategory() RateLimitingRuleCategory { return v.Category }

// GetDescription returns RateLimitingRuleFields.Description, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetDescription() *string { return v.Description }

// GetEnabled returns RateLimitingRuleFields.Enabled, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetEnabled() bool { return v.Enabled }

// GetId returns RateLimitingRuleFields.Id, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetId() string { return v.Id }

// GetName returns RateLimitingRuleFields.Name, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetName() string { return v.Name }

// GetLabels returns RateLimitingRuleFields.Labels, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetLabels() []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel {
	return v.Labels
}

// GetThresholdActionConfigs returns RateLimitingRuleFields.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetThresholdActionConfigs() []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig {
	return v.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns RateLimitingRuleFields.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetTransactionActionConfigs() *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig {
	return v.TransactionActionConfigs
}

// GetRuleConfigScope returns RateLimitingRuleFields.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetRuleConfigScope() *RateLimitingRuleFieldsRuleConfigScope {
	return v.RuleConfigScope
}

// GetRuleStatus returns RateLimitingRuleFields.RuleStatus, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetRuleStatus() *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus {
	return v.RuleStatus
}

// GetConditions returns RateLimitingRuleFields.Conditions, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFields) GetConditions() []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition {
	return v.Conditions
}

// RateLimitingRuleFieldsConditionsRateLimitingRuleCondition includes the requested fields of the GraphQL type RateLimitingRuleCondition.
// The GraphQL type's documentation follows.
//
// Condition applicable for a rate limit rule
type RateLimitingRuleFieldsConditionsRateLimitingRuleCondition struct {
	// Rate limit rule leaf condition
	LeafCondition *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition `json:"leafCondition"`
}

// GetLeafCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleCondition.LeafCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleCondition) GetLeafCondition() *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition {
	return v.LeafCondition
}

// RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition includes the requested fields of the GraphQL type RateLimitingRuleLeafCondition.
// The GraphQL type's documentation follows.
//
// Leaf condition applicable on a rate limit rule
type RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition struct {
	LeafConditionFields `json:"-"`
}

// GetConditionType returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.ConditionType, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetConditionType() RateLimitingRuleLeafConditionType {
	return v.LeafConditionFields.ConditionType
}

// GetDatatypeCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.DatatypeCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetDatatypeCondition() *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition {
	return v.LeafConditionFields.DatatypeCondition
}

// GetIpAddressCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpAddressCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpAddressCondition() *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition {
	return v.LeafConditionFields.IpAddressCondition
}

// GetIpReputationCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpReputationCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpReputationCondition() *LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition {
	return v.LeafConditionFields.IpReputationCondition
}

// GetIpLocationTypeCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpLocationTypeCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpLocationTypeCondition() *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition {
	return v.LeafConditionFields.IpLocationTypeCondition
}

// GetEmailDomainCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.EmailDomainCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetEmailDomainCondition() *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition {
	return v.LeafConditionFields.EmailDomainCondition
}

// GetIpOrganisationCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpOrganisationCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpOrganisationCondition() *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition {
	return v.LeafConditionFields.IpOrganisationCondition
}

// GetIpAsnCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpAsnCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpAsnCondition() *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition {
	return v.LeafConditionFields.IpAsnCondition
}

// GetUserIdCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.UserIdCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetUserIdCondition() *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition {
	return v.LeafConditionFields.UserIdCondition
}

// GetUserAgentCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.UserAgentCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetUserAgentCondition() *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition {
	return v.LeafConditionFields.UserAgentCondition
}

// GetIpConnectionTypeCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpConnectionTypeCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpConnectionTypeCondition() *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition {
	return v.LeafConditionFields.IpConnectionTypeCondition
}

// GetIpAbuseVelocityCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.IpAbuseVelocityCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetIpAbuseVelocityCondition() *LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition {
	return v.LeafConditionFields.IpAbuseVelocityCondition
}

// GetKeyValueCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.KeyValueCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetKeyValueCondition() *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition {
	return v.LeafConditionFields.KeyValueCondition
}

// GetRegionCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.RegionCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetRegionCondition() *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition {
	return v.LeafConditionFields.RegionCondition
}

// GetRequestScannerTypeCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.RequestScannerTypeCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetRequestScannerTypeCondition() *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition {
	return v.LeafConditionFields.RequestScannerTypeCondition
}

// GetScopeCondition returns RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition.ScopeCondition, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) GetScopeCondition() *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition {
	return v.LeafConditionFields.ScopeCondition
}

func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition
		graphql.NoUnmarshalJSON
	}
	firstPass.RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.LeafConditionFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalRateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition struct {
	ConditionType RateLimitingRuleLeafConditionType `json:"conditionType"`

	DatatypeCondition *LeafConditionFieldsDatatypeConditionRateLimitingRuleDatatypeCondition `json:"datatypeCondition"`

	IpAddressCondition *LeafConditionFieldsIpAddressConditionRateLimitingRuleIpAddressCondition `json:"ipAddressCondition"`

	IpReputationCondition *LeafConditionFieldsIpReputationConditionRateLimitingRuleIpReputationCondition `json:"ipReputationCondition"`

	IpLocationTypeCondition *LeafConditionFieldsIpLocationTypeConditionRateLimitingRuleIpLocationTypeCondition `json:"ipLocationTypeCondition"`

	EmailDomainCondition *LeafConditionFieldsEmailDomainConditionRateLimitingRuleEmailDomainCondition `json:"emailDomainCondition"`

	IpOrganisationCondition *LeafConditionFieldsIpOrganisationConditionRateLimitingRuleIpOrganisationCondition `json:"ipOrganisationCondition"`

	IpAsnCondition *LeafConditionFieldsIpAsnConditionRateLimitingRuleIpAsnCondition `json:"ipAsnCondition"`

	UserIdCondition *LeafConditionFieldsUserIdConditionRateLimitingRuleUserIdCondition `json:"userIdCondition"`

	UserAgentCondition *LeafConditionFieldsUserAgentConditionRateLimitingRuleUserAgentCondition `json:"userAgentCondition"`

	IpConnectionTypeCondition *LeafConditionFieldsIpConnectionTypeConditionRateLimitingRuleIpConnectionTypeCondition `json:"ipConnectionTypeCondition"`

	IpAbuseVelocityCondition *LeafConditionFieldsIpAbuseVelocityConditionRateLimitingRuleIpAbuseVelocityCondition `json:"ipAbuseVelocityCondition"`

	KeyValueCondition *LeafConditionFieldsKeyValueConditionRateLimitingRuleKeyValueCondition `json:"keyValueCondition"`

	RegionCondition *LeafConditionFieldsRegionConditionRateLimitingRuleRegionCondition `json:"regionCondition"`

	RequestScannerTypeCondition *LeafConditionFieldsRequestScannerTypeConditionRateLimitingRuleRequestScannerTypeCondition `json:"requestScannerTypeCondition"`

	ScopeCondition *LeafConditionFieldsScopeConditionRateLimitingRuleScopeCondition `json:"scopeCondition"`
}

func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *RateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition) __premarshalJSON() (*__premarshalRateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition, error) {
	var retval __premarshalRateLimitingRuleFieldsConditionsRateLimitingRuleConditionLeafConditionRateLimitingRuleLeafCondition

	retval.ConditionType = v.LeafConditionFields.ConditionType
	retval.DatatypeCondition = v.LeafConditionFields.DatatypeCondition
	retval.IpAddressCondition = v.LeafConditionFields.IpAddressCondition
	retval.IpReputationCondition = v.LeafConditionFields.IpReputationCondition
	retval.IpLocationTypeCondition = v.LeafConditionFields.IpLocationTypeCondition
	retval.EmailDomainCondition = v.LeafConditionFields.EmailDomainCondition
	retval.IpOrganisationCondition = v.LeafConditionFields.IpOrganisationCondition
	retval.IpAsnCondition = v.LeafConditionFields.IpAsnCondition
	retval.UserIdCondition = v.LeafConditionFields.UserIdCondition
	retval.UserAgentCondition = v.LeafConditionFields.UserAgentCondition
	retval.IpConnectionTypeCondition = v.LeafConditionFields.IpConnectionTypeCondition
	retval.IpAbuseVelocityCondition = v.LeafConditionFields.IpAbuseVelocityCondition
	retval.KeyValueCondition = v.LeafConditionFields.KeyValueCondition
	retval.RegionCondition = v.LeafConditionFields.RegionCondition
	retval.RequestScannerTypeCondition = v.LeafConditionFields.RequestScannerTypeCondition
	retval.ScopeCondition = v.LeafConditionFields.ScopeCondition
	return &retval, nil
}

// RateLimitingRuleFieldsLabelsRateLimitingRuleLabel includes the requested fields of the GraphQL type RateLimitingRuleLabel.
// The GraphQL type's documentation follows.
//
// Key-value pair for labels
type RateLimitingRuleFieldsLabelsRateLimitingRuleLabel struct {
	// Key
	Key string `json:"key"`
	// Value
	Value string `json:"value"`
}

// GetKey returns RateLimitingRuleFieldsLabelsRateLimitingRuleLabel.Key, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsLabelsRateLimitingRuleLabel) GetKey() string { return v.Key }

// GetValue returns RateLimitingRuleFieldsLabelsRateLimitingRuleLabel.Value, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsLabelsRateLimitingRuleLabel) GetValue() string { return v.Value }

// RateLimitingRuleFieldsRuleConfigScope includes the requested fields of the GraphQL type RuleConfigScope.
// The GraphQL type's documentation follows.
//
// Rate limit rule scope
type RateLimitingRuleFieldsRuleConfigScope struct {
	RuleConfigScopeFields `json:"-"`
}

// GetEnvironmentScope returns RateLimitingRuleFieldsRuleConfigScope.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsRuleConfigScope) GetEnvironmentScope() *RuleConfigScopeFieldsEnvironmentScope {
	return v.RuleConfigScopeFields.EnvironmentScope
}

func (v *RateLimitingRuleFieldsRuleConfigScope) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*RateLimitingRuleFieldsRuleConfigScope
		graphql.NoUnmarshalJSON
	}
	firstPass.RateLimitingRuleFieldsRuleConfigScope = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.RuleConfigScopeFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalRateLimitingRuleFieldsRuleConfigScope struct {
	EnvironmentScope *RuleConfigScopeFieldsEnvironmentScope `json:"environmentScope"`
}

func (v *RateLimitingRuleFieldsRuleConfigScope) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *RateLimitingRuleFieldsRuleConfigScope) __premarshalJSON() (*__premarshalRateLimitingRuleFieldsRuleConfigScope, error) {
	var retval __premarshalRateLimitingRuleFieldsRuleConfigScope

	retval.EnvironmentScope = v.RuleConfigScopeFields.EnvironmentScope
	return &retval, nil
}

// RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus includes the requested fields of the GraphQL type RateLimitingRuleStatus.
// The GraphQL type's documentation follows.
//
// Status of rate limit rule
type RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus struct {
	RuleStatusFields `json:"-"`
}

// GetInternal returns RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus.Internal, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus) GetInternal() *bool {
	return v.RuleStatusFields.Internal
}

// GetRuleCreationSource returns RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus.RuleCreationSource, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus) GetRuleCreationSource() *RateLimitingRuleSource {
	return v.RuleStatusFields.RuleCreationSource
}

func (v *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus
		graphql.NoUnmarshalJSON
	}
	firstPass.RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.RuleStatusFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalRateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus struct {
	Internal *bool `json:"internal"`

	RuleCreationSource *RateLimitingRuleSource `json:"ruleCreationSource"`
}

func (v *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus) __premarshalJSON() (*__premarshalRateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus, error) {
	var retval __premarshalRateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus

	retval.Internal = v.RuleStatusFields.Internal
	retval.RuleCreationSource = v.RuleStatusFields.RuleCreationSource
	return &retval, nil
}

// RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig includes the requested fields of the GraphQL type RateLimitingRuleThresholdActionConfig.
// The GraphQL type's documentation follows.
//
// Config for thresholds and actions applicable on a rate limit rule
type RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig struct {
	ThresholdActionConfigFields `json:"-"`
}

// GetActions returns RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig.Actions, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig) GetActions() []*ThresholdActionConfigFieldsActionsRateLimitingRuleAction {
	return v.ThresholdActionConfigFields.Actions
}

// GetThresholdConfigs returns RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig.ThresholdConfigs, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig) GetThresholdConfigs() []*ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig {
	return v.ThresholdActionConfigFields.ThresholdConfigs
}

func (v *RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig
		graphql.NoUnmarshalJSON
	}
	firstPass.RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ThresholdActionConfigFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalRateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig struct {
	Actions []*ThresholdActionConfigFieldsActionsRateLimitingRuleAction `json:"actions"`

	ThresholdConfigs []*ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig `json:"thresholdConfigs"`
}

func (v *RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig) __premarshalJSON() (*__premarshalRateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig, error) {
	var retval __premarshalRateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig

	retval.Actions = v.ThresholdActionConfigFields.Actions
	retval.ThresholdConfigs = v.ThresholdActionConfigFields.ThresholdConfigs
	return &retval, nil
}

// RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig includes the requested fields of the GraphQL type RateLimitingTransactionActionConfig.
// The GraphQL type's documentation follows.
//
// Rate limit rule transaction action config
type RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig struct {
	TransactionActionConfigFields `json:"-"`
}

// GetAction returns RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig.Action, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig) GetAction() TransactionActionConfigFieldsActionRateLimitingRuleAction {
	return v.TransactionActionConfigFields.Action
}

// GetExpirationTimestamp returns RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig.ExpirationTimestamp, and is useful for accessing the field via an interface.
func (v *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig) GetExpirationTimestamp() *string {
	return v.TransactionActionConfigFields.ExpirationTimestamp
}

func (v *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig
		graphql.NoUnmarshalJSON
	}
	firstPass.RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.TransactionActionConfigFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalRateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig struct {
	Action TransactionActionConfigFieldsActionRateLimitingRuleAction `json:"action"`

	ExpirationTimestamp *string `json:"expirationTimestamp"`
}

func (v *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig) __premarshalJSON() (*__premarshalRateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig, error) {
	var retval __premarshalRateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig

	retval.Action = v.TransactionActionConfigFields.Action
	retval.ExpirationTimestamp = v.TransactionActionConfigFields.ExpirationTimestamp
	return &retval, nil
}

type RateLimitingRuleIpAbuseVelocity string

const (
	// LOW
	RateLimitingRuleIpAbuseVelocityLow RateLimitingRuleIpAbuseVelocity = "LOW"
	// MEDIUM
	RateLimitingRuleIpAbuseVelocityMedium RateLimitingRuleIpAbuseVelocity = "MEDIUM"
	// HIGH
	RateLimitingRuleIpAbuseVelocityHigh RateLimitingRuleIpAbuseVelocity = "HIGH"
)

var AllRateLimitingRuleIpAbuseVelocity = []RateLimitingRuleIpAbuseVelocity{
	RateLimitingRuleIpAbuseVelocityLow,
	RateLimitingRuleIpAbuseVelocityMedium,
	RateLimitingRuleIpAbuseVelocityHigh,
}

// Ip address condition type
type RateLimitingRuleIpAddressConditionType string

const (
	// All internal ip address condition type
	RateLimitingRuleIpAddressConditionTypeAllInternal RateLimitingRuleIpAddressConditionType = "ALL_INTERNAL"
	// All external ip address condition type
	RateLimitingRuleIpAddressConditionTypeAllExternal RateLimitingRuleIpAddressConditionType = "ALL_EXTERNAL"
)

var AllRateLimitingRuleIpAddressConditionType = []RateLimitingRuleIpAddressConditionType{
	RateLimitingRuleIpAddressConditionTypeAllInternal,
	RateLimitingRuleIpAddressConditionTypeAllExternal,
}

// IP connection types for rate limit rule IP connection type condition
type RateLimitingRuleIpConnectionType string

const (
	// RESIDENTIAL
	RateLimitingRuleIpConnectionTypeResidential RateLimitingRuleIpConnectionType = "RESIDENTIAL"
	// MOBILE
	RateLimitingRuleIpConnectionTypeMobile RateLimitingRuleIpConnectionType = "MOBILE"
	// CORPORATE
	RateLimitingRuleIpConnectionTypeCorporate RateLimitingRuleIpConnectionType = "CORPORATE"
	// DATA_CENTER
	RateLimitingRuleIpConnectionTypeDataCenter RateLimitingRuleIpConnectionType = "DATA_CENTER"
	// EDUCATION
	RateLimitingRuleIpConnectionTypeEducation RateLimitingRuleIpConnectionType = "EDUCATION"
)

var AllRateLimitingRuleIpConnectionType = []RateLimitingRuleIpConnectionType{
	RateLimitingRuleIpConnectionTypeResidential,
	RateLimitingRuleIpConnectionTypeMobile,
	RateLimitingRuleIpConnectionTypeCorporate,
	RateLimitingRuleIpConnectionTypeDataCenter,
	RateLimitingRuleIpConnectionTypeEducation,
}

type RateLimitingRuleIpLocationType string

const (
	// RESIDENTIAL
	RateLimitingRuleIpLocationTypeResidential RateLimitingRuleIpLocationType = "RESIDENTIAL"
	// ANONYMOUS
	RateLimitingRuleIpLocationTypeAnonymous RateLimitingRuleIpLocationType = "ANONYMOUS"
	// ANONYMOUS_VPN
	RateLimitingRuleIpLocationTypeAnonymousVpn RateLimitingRuleIpLocationType = "ANONYMOUS_VPN"
	// HOSTING_PROVIDER
	RateLimitingRuleIpLocationTypeHostingProvider RateLimitingRuleIpLocationType = "HOSTING_PROVIDER"
	// PUBLIC_PROXY
	RateLimitingRuleIpLocationTypePublicProxy RateLimitingRuleIpLocationType = "PUBLIC_PROXY"
	// TOR_EXIT_NODE
	RateLimitingRuleIpLocationTypeTorExitNode RateLimitingRuleIpLocationType = "TOR_EXIT_NODE"
	// BOT
	RateLimitingRuleIpLocationTypeBot RateLimitingRuleIpLocationType = "BOT"
	// SCANNER
	RateLimitingRuleIpLocationTypeScanner RateLimitingRuleIpLocationType = "SCANNER"
)

var AllRateLimitingRuleIpLocationType = []RateLimitingRuleIpLocationType{
	RateLimitingRuleIpLocationTypeResidential,
	RateLimitingRuleIpLocationTypeAnonymous,
	RateLimitingRuleIpLocationTypeAnonymousVpn,
	RateLimitingRuleIpLocationTypeHostingProvider,
	RateLimitingRuleIpLocationTypePublicProxy,
	RateLimitingRuleIpLocationTypeTorExitNode,
	RateLimitingRuleIpLocationTypeBot,
	RateLimitingRuleIpLocationTypeScanner,
}

type RateLimitingRuleIpReputationSeverity string

const (
	// LOW
	RateLimitingRuleIpReputationSeverityLow RateLimitingRuleIpReputationSeverity = "LOW"
	// MEDIUM
	RateLimitingRuleIpReputationSeverityMedium RateLimitingRuleIpReputationSeverity = "MEDIUM"
	// HIGH
	RateLimitingRuleIpReputationSeverityHigh RateLimitingRuleIpReputationSeverity = "HIGH"
	// CRITICAL
	RateLimitingRuleIpReputationSeverityCritical RateLimitingRuleIpReputationSeverity = "CRITICAL"
)

var AllRateLimitingRuleIpReputationSeverity = []RateLimitingRuleIpReputationSeverity{
	RateLimitingRuleIpReputationSeverityLow,
	RateLimitingRuleIpReputationSeverityMedium,
	RateLimitingRuleIpReputationSeverityHigh,
	RateLimitingRuleIpReputationSeverityCritical,
}

type RateLimitingRuleKeyValueConditionMetadataType string

const (
	// URL
	RateLimitingRuleKeyValueConditionMetadataTypeUrl RateLimitingRuleKeyValueConditionMetadataType = "URL"
	// HOST
	RateLimitingRuleKeyValueConditionMetadataTypeHost RateLimitingRuleKeyValueConditionMetadataType = "HOST"
	// HTTP_METHOD
	RateLimitingRuleKeyValueConditionMetadataTypeHttpMethod RateLimitingRuleKeyValueConditionMetadataType = "HTTP_METHOD"
	// USER_AGENT
	RateLimitingRuleKeyValueConditionMetadataTypeUserAgent RateLimitingRuleKeyValueConditionMetadataType = "USER_AGENT"
	// QUERY_PARAMETER
	RateLimitingRuleKeyValueConditionMetadataTypeQueryParameter RateLimitingRuleKeyValueConditionMetadataType = "QUERY_PARAMETER"
	// STATUS_CODE
	RateLimitingRuleKeyValueConditionMetadataTypeStatusCode RateLimitingRuleKeyValueConditionMetadataType = "STATUS_CODE"
	// REQUEST_BODY
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBody RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_BODY"
	// RESPONSE_BODY
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBody RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_BODY"
	// REQUEST_HEADER
	RateLimitingRuleKeyValueConditionMetadataTypeRequestHeader RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_HEADER"
	// RESPONSE_HEADER
	RateLimitingRuleKeyValueConditionMetadataTypeResponseHeader RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_HEADER"
	// REQUEST_COOKIE
	RateLimitingRuleKeyValueConditionMetadataTypeRequestCookie RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_COOKIE"
	// RESPONSE_COOKIE
	RateLimitingRuleKeyValueConditionMetadataTypeResponseCookie RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_COOKIE"
	// REQUEST_BODY_PARAMETER
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBodyParameter RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_BODY_PARAMETER"
	// RESPONSE_BODY_PARAMETER
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBodyParameter RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_BODY_PARAMETER"
	// TAG
	RateLimitingRuleKeyValueConditionMetadataTypeTag RateLimitingRuleKeyValueConditionMetadataType = "TAG"
	// REQUEST_BODY_SIZE
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBodySize RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_BODY_SIZE"
	// RESPONSE_BODY_SIZE
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBodySize RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_BODY_SIZE"
	// QUERY_PARAMS_COUNT
	RateLimitingRuleKeyValueConditionMetadataTypeQueryParamsCount RateLimitingRuleKeyValueConditionMetadataType = "QUERY_PARAMS_COUNT"
	// REQUEST_HEADERS_COUNT
	RateLimitingRuleKeyValueConditionMetadataTypeRequestHeadersCount RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_HEADERS_COUNT"
	// RESPONSE_HEADERS_COUNT
	RateLimitingRuleKeyValueConditionMetadataTypeResponseHeadersCount RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_HEADERS_COUNT"
	// REQUEST_COOKIES_COUNT
	RateLimitingRuleKeyValueConditionMetadataTypeRequestCookiesCount RateLimitingRuleKeyValueConditionMetadataType = "REQUEST_COOKIES_COUNT"
	// RESPONSE_COOKIES_COUNT
	RateLimitingRuleKeyValueConditionMetadataTypeResponseCookiesCount RateLimitingRuleKeyValueConditionMetadataType = "RESPONSE_COOKIES_COUNT"
)

var AllRateLimitingRuleKeyValueConditionMetadataType = []RateLimitingRuleKeyValueConditionMetadataType{
	RateLimitingRuleKeyValueConditionMetadataTypeUrl,
	RateLimitingRuleKeyValueConditionMetadataTypeHost,
	RateLimitingRuleKeyValueConditionMetadataTypeHttpMethod,
	RateLimitingRuleKeyValueConditionMetadataTypeUserAgent,
	RateLimitingRuleKeyValueConditionMetadataTypeQueryParameter,
	RateLimitingRuleKeyValueConditionMetadataTypeStatusCode,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBody,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBody,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestHeader,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseHeader,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestCookie,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseCookie,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBodyParameter,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBodyParameter,
	RateLimitingRuleKeyValueConditionMetadataTypeTag,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestBodySize,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseBodySize,
	RateLimitingRuleKeyValueConditionMetadataTypeQueryParamsCount,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestHeadersCount,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseHeadersCount,
	RateLimitingRuleKeyValueConditionMetadataTypeRequestCookiesCount,
	RateLimitingRuleKeyValueConditionMetadataTypeResponseCookiesCount,
}

type RateLimitingRuleKeyValueConditionType string

const (
	// STATIC_VALUE
	RateLimitingRuleKeyValueConditionTypeStaticValue RateLimitingRuleKeyValueConditionType = "STATIC_VALUE"
	// LHS_RHS_KEYS
	RateLimitingRuleKeyValueConditionTypeLhsRhsKeys RateLimitingRuleKeyValueConditionType = "LHS_RHS_KEYS"
)

var AllRateLimitingRuleKeyValueConditionType = []RateLimitingRuleKeyValueConditionType{
	RateLimitingRuleKeyValueConditionTypeStaticValue,
	RateLimitingRuleKeyValueConditionTypeLhsRhsKeys,
}

type RateLimitingRuleKeyValueMatchOperator string

const (
	// EQUALS
	RateLimitingRuleKeyValueMatchOperatorEquals RateLimitingRuleKeyValueMatchOperator = "EQUALS"
	// NOT_EQUAL
	RateLimitingRuleKeyValueMatchOperatorNotEqual RateLimitingRuleKeyValueMatchOperator = "NOT_EQUAL"
	// MATCHES_REGEX
	RateLimitingRuleKeyValueMatchOperatorMatchesRegex RateLimitingRuleKeyValueMatchOperator = "MATCHES_REGEX"
	// NOT_MATCH_REGEX
	RateLimitingRuleKeyValueMatchOperatorNotMatchRegex RateLimitingRuleKeyValueMatchOperator = "NOT_MATCH_REGEX"
	// CONTAINS
	RateLimitingRuleKeyValueMatchOperatorContains RateLimitingRuleKeyValueMatchOperator = "CONTAINS"
	// NOT_CONTAIN
	RateLimitingRuleKeyValueMatchOperatorNotContain RateLimitingRuleKeyValueMatchOperator = "NOT_CONTAIN"
	// GREATER_THAN
	RateLimitingRuleKeyValueMatchOperatorGreaterThan RateLimitingRuleKeyValueMatchOperator = "GREATER_THAN"
	// LESS_THAN
	RateLimitingRuleKeyValueMatchOperatorLessThan RateLimitingRuleKeyValueMatchOperator = "LESS_THAN"
)

var AllRateLimitingRuleKeyValueMatchOperator = []RateLimitingRuleKeyValueMatchOperator{
	RateLimitingRuleKeyValueMatchOperatorEquals,
	RateLimitingRuleKeyValueMatchOperatorNotEqual,
	RateLimitingRuleKeyValueMatchOperatorMatchesRegex,
	RateLimitingRuleKeyValueMatchOperatorNotMatchRegex,
	RateLimitingRuleKeyValueMatchOperatorContains,
	RateLimitingRuleKeyValueMatchOperatorNotContain,
	RateLimitingRuleKeyValueMatchOperatorGreaterThan,
	RateLimitingRuleKeyValueMatchOperatorLessThan,
}

type RateLimitingRuleLabelType string

const (
	// SERVICE
	RateLimitingRuleLabelTypeService RateLimitingRuleLabelType = "SERVICE"
	// API
	RateLimitingRuleLabelTypeApi RateLimitingRuleLabelType = "API"
)

var AllRateLimitingRuleLabelType = []RateLimitingRuleLabelType{
	RateLimitingRuleLabelTypeService,
	RateLimitingRuleLabelTypeApi,
}

type RateLimitingRuleLeafConditionType string

const (
	// SCOPE
	RateLimitingRuleLeafConditionTypeScope RateLimitingRuleLeafConditionType = "SCOPE"
	// DATATYPE
	RateLimitingRuleLeafConditionTypeDatatype RateLimitingRuleLeafConditionType = "DATATYPE"
	// IP_ADDRESS
	RateLimitingRuleLeafConditionTypeIpAddress RateLimitingRuleLeafConditionType = "IP_ADDRESS"
	// KEY_VALUE
	RateLimitingRuleLeafConditionTypeKeyValue RateLimitingRuleLeafConditionType = "KEY_VALUE"
	// IP_LOCATION_TYPE
	RateLimitingRuleLeafConditionTypeIpLocationType RateLimitingRuleLeafConditionType = "IP_LOCATION_TYPE"
	// IP_REPUTATION
	RateLimitingRuleLeafConditionTypeIpReputation RateLimitingRuleLeafConditionType = "IP_REPUTATION"
	// REGION
	RateLimitingRuleLeafConditionTypeRegion RateLimitingRuleLeafConditionType = "REGION"
	// EMAIL_DOMAIN
	RateLimitingRuleLeafConditionTypeEmailDomain RateLimitingRuleLeafConditionType = "EMAIL_DOMAIN"
	// IP_CONNECTION_TYPE
	RateLimitingRuleLeafConditionTypeIpConnectionType RateLimitingRuleLeafConditionType = "IP_CONNECTION_TYPE"
	// USER_AGENT
	RateLimitingRuleLeafConditionTypeUserAgent RateLimitingRuleLeafConditionType = "USER_AGENT"
	// USER_ID
	RateLimitingRuleLeafConditionTypeUserId RateLimitingRuleLeafConditionType = "USER_ID"
	// IP_ORGANISATION
	RateLimitingRuleLeafConditionTypeIpOrganisation RateLimitingRuleLeafConditionType = "IP_ORGANISATION"
	// IP_ASN
	RateLimitingRuleLeafConditionTypeIpAsn RateLimitingRuleLeafConditionType = "IP_ASN"
	// IP_ABUSE_VELOCITY
	RateLimitingRuleLeafConditionTypeIpAbuseVelocity RateLimitingRuleLeafConditionType = "IP_ABUSE_VELOCITY"
	// REQUEST_SCANNER_TYPE
	RateLimitingRuleLeafConditionTypeRequestScannerType RateLimitingRuleLeafConditionType = "REQUEST_SCANNER_TYPE"
)

var AllRateLimitingRuleLeafConditionType = []RateLimitingRuleLeafConditionType{
	RateLimitingRuleLeafConditionTypeScope,
	RateLimitingRuleLeafConditionTypeDatatype,
	RateLimitingRuleLeafConditionTypeIpAddress,
	RateLimitingRuleLeafConditionTypeKeyValue,
	RateLimitingRuleLeafConditionTypeIpLocationType,
	RateLimitingRuleLeafConditionTypeIpReputation,
	RateLimitingRuleLeafConditionTypeRegion,
	RateLimitingRuleLeafConditionTypeEmailDomain,
	RateLimitingRuleLeafConditionTypeIpConnectionType,
	RateLimitingRuleLeafConditionTypeUserAgent,
	RateLimitingRuleLeafConditionTypeUserId,
	RateLimitingRuleLeafConditionTypeIpOrganisation,
	RateLimitingRuleLeafConditionTypeIpAsn,
	RateLimitingRuleLeafConditionTypeIpAbuseVelocity,
	RateLimitingRuleLeafConditionTypeRequestScannerType,
}

type RateLimitingRuleMatchCategory string

const (
	// REQUEST
	RateLimitingRuleMatchCategoryRequest RateLimitingRuleMatchCategory = "REQUEST"
	// RESPONSE
	RateLimitingRuleMatchCategoryResponse RateLimitingRuleMatchCategory = "RESPONSE"
)

var AllRateLimitingRuleMatchCategory = []RateLimitingRuleMatchCategory{
	RateLimitingRuleMatchCategoryRequest,
	RateLimitingRuleMatchCategoryResponse,
}

type RateLimitingRuleScopeConditionType string

const (
	// ENTITY
	RateLimitingRuleScopeConditionTypeEntity RateLimitingRuleScopeConditionType = "ENTITY"
	// LABEL
	RateLimitingRuleScopeConditionTypeLabel RateLimitingRuleScopeConditionType = "LABEL"
	// URL
	RateLimitingRuleScopeConditionTypeUrl RateLimitingRuleScopeConditionType = "URL"
)

var AllRateLimitingRuleScopeConditionType = []RateLimitingRuleScopeConditionType{
	RateLimitingRuleScopeConditionTypeEntity,
	RateLimitingRuleScopeConditionTypeLabel,
	RateLimitingRuleScopeConditionTypeUrl,
}

type RateLimitingRuleSource string

const (
	// DEFAULT
	RateLimitingRuleSourceDefault RateLimitingRuleSource = "DEFAULT"
	// CUSTOMER
	RateLimitingRuleSourceCustomer RateLimitingRuleSource = "CUSTOMER"
	// TRACEABLE
	RateLimitingRuleSourceTraceable RateLimitingRuleSource = "TRACEABLE"
)

var AllRateLimitingRuleSource = []RateLimitingRuleSource{
	RateLimitingRuleSourceDefault,
	RateLimitingRuleSourceCustomer,
	RateLimitingRuleSourceTraceable,
}

type RateLimitingRuleThresholdConfigType string

const (
	// ROLLING_WINDOW
	RateLimitingRuleThresholdConfigTypeRollingWindow RateLimitingRuleThresholdConfigType = "ROLLING_WINDOW"
	// VALUE_BASED
	RateLimitingRuleThresholdConfigTypeValueBased RateLimitingRuleThresholdConfigType = "VALUE_BASED"
	// DYNAMIC
	RateLimitingRuleThresholdConfigTypeDynamic RateLimitingRuleThresholdConfigType = "DYNAMIC"
)

var AllRateLimitingRuleThresholdConfigType = []RateLimitingRuleThresholdConfigType{
	RateLimitingRuleThresholdConfigTypeRollingWindow,
	RateLimitingRuleThresholdConfigTypeValueBased,
	RateLimitingRuleThresholdConfigTypeDynamic,
}

type RateLimitingRuleUserAggregateType string

const (
	// PER_USER
	RateLimitingRuleUserAggregateTypePerUser RateLimitingRuleUserAggregateType = "PER_USER"
	// ACROSS_USERS
	RateLimitingRuleUserAggregateTypeAcrossUsers RateLimitingRuleUserAggregateType = "ACROSS_USERS"
)

var AllRateLimitingRuleUserAggregateType = []RateLimitingRuleUserAggregateType{
	RateLimitingRuleUserAggregateTypePerUser,
	RateLimitingRuleUserAggregateTypeAcrossUsers,
}

type RegionRuleActionType string

const (
	// BLOCK
	RegionRuleActionTypeBlock RegionRuleActionType = "BLOCK"
	// BLOCK_ALL_EXCEPT
	RegionRuleActionTypeBlockAllExcept RegionRuleActionType = "BLOCK_ALL_EXCEPT"
	// ALERT
	RegionRuleActionTypeAlert RegionRuleActionType = "ALERT"
)

var AllRegionRuleActionType = []RegionRuleActionType{
	RegionRuleActionTypeBlock,
	RegionRuleActionTypeBlockAllExcept,
	RegionRuleActionTypeAlert,
}

type RegionRuleAgentModificationType string

const (
	// Add a header with inline processing of request on matching conditions
	RegionRuleAgentModificationTypeHeaderInjection RegionRuleAgentModificationType = "HEADER_INJECTION"
)

var AllRegionRuleAgentModificationType = []RegionRuleAgentModificationType{
	RegionRuleAgentModificationTypeHeaderInjection,
}

type RegionRuleEffectModificationType string

const (
	// Modifications to be done on agent
	RegionRuleEffectModificationTypeAgentEffect RegionRuleEffectModificationType = "AGENT_EFFECT"
)

var AllRegionRuleEffectModificationType = []RegionRuleEffectModificationType{
	RegionRuleEffectModificationTypeAgentEffect,
}

type RegionRuleEventSeverity string

const (
	// LOW
	RegionRuleEventSeverityLow RegionRuleEventSeverity = "LOW"
	// MEDIUM
	RegionRuleEventSeverityMedium RegionRuleEventSeverity = "MEDIUM"
	// HIGH
	RegionRuleEventSeverityHigh RegionRuleEventSeverity = "HIGH"
	// CRITICAL
	RegionRuleEventSeverityCritical RegionRuleEventSeverity = "CRITICAL"
)

var AllRegionRuleEventSeverity = []RegionRuleEventSeverity{
	RegionRuleEventSeverityLow,
	RegionRuleEventSeverityMedium,
	RegionRuleEventSeverityHigh,
	RegionRuleEventSeverityCritical,
}

type RegionRuleHeaderCategory string

const (
	// REQUEST
	RegionRuleHeaderCategoryRequest RegionRuleHeaderCategory = "REQUEST"
	// RESPONSE
	RegionRuleHeaderCategoryResponse RegionRuleHeaderCategory = "RESPONSE"
)

var AllRegionRuleHeaderCategory = []RegionRuleHeaderCategory{
	RegionRuleHeaderCategoryRequest,
	RegionRuleHeaderCategoryResponse,
}

// Fragment for ruleConfigScope
type RuleConfigScopeFields struct {
	// Environment scope applicable on rate limit rule
	EnvironmentScope *RuleConfigScopeFieldsEnvironmentScope `json:"environmentScope"`
}

// GetEnvironmentScope returns RuleConfigScopeFields.EnvironmentScope, and is useful for accessing the field via an interface.
func (v *RuleConfigScopeFields) GetEnvironmentScope() *RuleConfigScopeFieldsEnvironmentScope {
	return v.EnvironmentScope
}

// RuleConfigScopeFieldsEnvironmentScope includes the requested fields of the GraphQL type EnvironmentScope.
// The GraphQL type's documentation follows.
//
// Environment scope applicable for rate limit rule
type RuleConfigScopeFieldsEnvironmentScope struct {
	// List of environment ids applicable for rate limit rule
	EnvironmentIds []*string `json:"environmentIds"`
}

// GetEnvironmentIds returns RuleConfigScopeFieldsEnvironmentScope.EnvironmentIds, and is useful for accessing the field via an interface.
func (v *RuleConfigScopeFieldsEnvironmentScope) GetEnvironmentIds() []*string {
	return v.EnvironmentIds
}

// Fragment for ruleStatus
type RuleStatusFields struct {
	// Boolean denoting if rule should be internal and generate internal events
	Internal *bool `json:"internal"`
	// Source of rule creation
	RuleCreationSource *RateLimitingRuleSource `json:"ruleCreationSource"`
}

// GetInternal returns RuleStatusFields.Internal, and is useful for accessing the field via an interface.
func (v *RuleStatusFields) GetInternal() *bool { return v.Internal }

// GetRuleCreationSource returns RuleStatusFields.RuleCreationSource, and is useful for accessing the field via an interface.
func (v *RuleStatusFields) GetRuleCreationSource() *RateLimitingRuleSource {
	return v.RuleCreationSource
}

// Sensitive params evaluation type for it's corresponding value based threshold config
type SensitiveParamsEvaluationType string

const (
	// ALL
	SensitiveParamsEvaluationTypeAll SensitiveParamsEvaluationType = "ALL"
	// SELECTED_DATA_TYPES
	SensitiveParamsEvaluationTypeSelectedDataTypes SensitiveParamsEvaluationType = "SELECTED_DATA_TYPES"
)

var AllSensitiveParamsEvaluationType = []SensitiveParamsEvaluationType{
	SensitiveParamsEvaluationTypeAll,
	SensitiveParamsEvaluationTypeSelectedDataTypes,
}

type SessionDefinitionMetadataAnomalyDetectionConfigName string

const (
	// OBJECT_BOLA_ANOMALY_CONFIG
	SessionDefinitionMetadataAnomalyDetectionConfigNameObjectBolaAnomalyConfig SessionDefinitionMetadataAnomalyDetectionConfigName = "OBJECT_BOLA_ANOMALY_CONFIG"
	// USER_ID_BOLA_ANOMALY_CONFIG
	SessionDefinitionMetadataAnomalyDetectionConfigNameUserIdBolaAnomalyConfig SessionDefinitionMetadataAnomalyDetectionConfigName = "USER_ID_BOLA_ANOMALY_CONFIG"
	// SEQUENCE_ANOMALY_CONFIG
	SessionDefinitionMetadataAnomalyDetectionConfigNameSequenceAnomalyConfig SessionDefinitionMetadataAnomalyDetectionConfigName = "SEQUENCE_ANOMALY_CONFIG"
	// SESSION_VIOLATION_CONFIG
	SessionDefinitionMetadataAnomalyDetectionConfigNameSessionViolationConfig SessionDefinitionMetadataAnomalyDetectionConfigName = "SESSION_VIOLATION_CONFIG"
)

var AllSessionDefinitionMetadataAnomalyDetectionConfigName = []SessionDefinitionMetadataAnomalyDetectionConfigName{
	SessionDefinitionMetadataAnomalyDetectionConfigNameObjectBolaAnomalyConfig,
	SessionDefinitionMetadataAnomalyDetectionConfigNameUserIdBolaAnomalyConfig,
	SessionDefinitionMetadataAnomalyDetectionConfigNameSequenceAnomalyConfig,
	SessionDefinitionMetadataAnomalyDetectionConfigNameSessionViolationConfig,
}

// Fragment for thresholdActionConfigs
type ThresholdActionConfigFields struct {
	// List of rate limit rule actions
	Actions []*ThresholdActionConfigFieldsActionsRateLimitingRuleAction `json:"actions"`
	// List of rate limit rule threshold configs
	ThresholdConfigs []*ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig `json:"thresholdConfigs"`
}

// GetActions returns ThresholdActionConfigFields.Actions, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFields) GetActions() []*ThresholdActionConfigFieldsActionsRateLimitingRuleAction {
	return v.Actions
}

// GetThresholdConfigs returns ThresholdActionConfigFields.ThresholdConfigs, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFields) GetThresholdConfigs() []*ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig {
	return v.ThresholdConfigs
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleAction includes the requested fields of the GraphQL type RateLimitingRuleAction.
// The GraphQL type's documentation follows.
//
// Action to take if a rate limit rule is applicable
type ThresholdActionConfigFieldsActionsRateLimitingRuleAction struct {
	// Type of action
	ActionType RateLimitingRuleActionType `json:"actionType"`
	// Details regarding alert action
	Alert *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction `json:"alert"`
	// Details regarding block action
	Block *ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction `json:"block"`
	// Details regarding mark for testing action
	MarkForTesting *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction `json:"markForTesting"`
}

// GetActionType returns ThresholdActionConfigFieldsActionsRateLimitingRuleAction.ActionType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleAction) GetActionType() RateLimitingRuleActionType {
	return v.ActionType
}

// GetAlert returns ThresholdActionConfigFieldsActionsRateLimitingRuleAction.Alert, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleAction) GetAlert() *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction {
	return v.Alert
}

// GetBlock returns ThresholdActionConfigFieldsActionsRateLimitingRuleAction.Block, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleAction) GetBlock() *ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction {
	return v.Block
}

// GetMarkForTesting returns ThresholdActionConfigFieldsActionsRateLimitingRuleAction.MarkForTesting, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleAction) GetMarkForTesting() *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction {
	return v.MarkForTesting
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction includes the requested fields of the GraphQL type RateLimitingRuleAlertAction.
// The GraphQL type's documentation follows.
//
// Details regarding alert action applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction struct {
	// Severity of alert to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
	// Agent effect associated with this action
	AgentEffect *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect `json:"agentEffect"`
}

// GetEventSeverity returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// GetAgentEffect returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction.AgentEffect, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertAction) GetAgentEffect() *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect {
	return v.AgentEffect
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect includes the requested fields of the GraphQL type RateLimitingRuleAgentEffect.
// The GraphQL type's documentation follows.
//
// Details regarding agent effect applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect struct {
	// List of agent modifications to be done as part of rate limiting rule action
	AgentModifications []*ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffect) GetAgentModifications() []*ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification {
	return v.AgentModifications
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification includes the requested fields of the GraphQL type RateLimitingRuleAgentModification.
// The GraphQL type's documentation follows.
//
// Details regarding agent modification applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification struct {
	// Type of agent modification to be performed
	AgentModificationType RateLimitingRuleAgentModificationType `json:"agentModificationType"`
	// Details of header injection action
	HeaderInjection ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification) GetAgentModificationType() RateLimitingRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification) GetHeaderInjection() ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection {
	return v.HeaderInjection
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection includes the requested fields of the GraphQL type RateLimitingRuleHeaderInjection.
// The GraphQL type's documentation follows.
//
// Details regarding header injection applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection struct {
	// Header name to be injected
	Key string `json:"key"`
	// Header value to be injected
	Value string `json:"value"`
	// Category defining where the header needs to be injected
	HeaderCategory RateLimitingRuleMatchCategory `json:"headerCategory"`
}

// GetKey returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetKey() string {
	return v.Key
}

// GetValue returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetValue() string {
	return v.Value
}

// GetHeaderCategory returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionAlertRateLimitingRuleAlertActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetHeaderCategory() RateLimitingRuleMatchCategory {
	return v.HeaderCategory
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction includes the requested fields of the GraphQL type RateLimitingRuleBlockAction.
// The GraphQL type's documentation follows.
//
// Details regarding block action applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction struct {
	// Duration to block the malicious actor
	Duration *string `json:"duration"`
	// Severity of blocked event to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
	// Use duration in threshold config
	UseThresholdDuration *bool `json:"useThresholdDuration"`
}

// GetDuration returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction.Duration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction) GetDuration() *string {
	return v.Duration
}

// GetEventSeverity returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// GetUseThresholdDuration returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction.UseThresholdDuration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionBlockRateLimitingRuleBlockAction) GetUseThresholdDuration() *bool {
	return v.UseThresholdDuration
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction includes the requested fields of the GraphQL type RateLimitingRuleMarkForTestingAction.
// The GraphQL type's documentation follows.
//
// Details regarding mark for testing action applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction struct {
	// Severity of blocked event to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
	// Agent effect associated with this action
	AgentEffect *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect `json:"agentEffect"`
}

// GetEventSeverity returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// GetAgentEffect returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction.AgentEffect, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingAction) GetAgentEffect() *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect {
	return v.AgentEffect
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect includes the requested fields of the GraphQL type RateLimitingRuleAgentEffect.
// The GraphQL type's documentation follows.
//
// Details regarding agent effect applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect struct {
	// List of agent modifications to be done as part of rate limiting rule action
	AgentModifications []*ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification `json:"agentModifications"`
}

// GetAgentModifications returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect.AgentModifications, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffect) GetAgentModifications() []*ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification {
	return v.AgentModifications
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification includes the requested fields of the GraphQL type RateLimitingRuleAgentModification.
// The GraphQL type's documentation follows.
//
// Details regarding agent modification applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification struct {
	// Type of agent modification to be performed
	AgentModificationType RateLimitingRuleAgentModificationType `json:"agentModificationType"`
	// Details of header injection action
	HeaderInjection ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection `json:"headerInjection"`
}

// GetAgentModificationType returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification.AgentModificationType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification) GetAgentModificationType() RateLimitingRuleAgentModificationType {
	return v.AgentModificationType
}

// GetHeaderInjection returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification.HeaderInjection, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModification) GetHeaderInjection() ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection {
	return v.HeaderInjection
}

// ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection includes the requested fields of the GraphQL type RateLimitingRuleHeaderInjection.
// The GraphQL type's documentation follows.
//
// Details regarding header injection applicable on a rate limit rule
type ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection struct {
	// Header name to be injected
	Key string `json:"key"`
	// Header value to be injected
	Value string `json:"value"`
	// Category defining where the header needs to be injected
	HeaderCategory RateLimitingRuleMatchCategory `json:"headerCategory"`
}

// GetKey returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.Key, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetKey() string {
	return v.Key
}

// GetValue returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.Value, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetValue() string {
	return v.Value
}

// GetHeaderCategory returns ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection.HeaderCategory, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsActionsRateLimitingRuleActionMarkForTestingRateLimitingRuleMarkForTestingActionAgentEffectRateLimitingRuleAgentEffectAgentModificationsRateLimitingRuleAgentModificationHeaderInjectionRateLimitingRuleHeaderInjection) GetHeaderCategory() RateLimitingRuleMatchCategory {
	return v.HeaderCategory
}

// ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig includes the requested fields of the GraphQL type RateLimitingRuleThresholdConfig.
// The GraphQL type's documentation follows.
//
// Threshold config for rate limit rule
type ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig struct {
	// API aggregation type
	ApiAggregateType RateLimitingRuleApiAggregateType `json:"apiAggregateType"`
	// Rolling window threshold config
	RollingWindowThresholdConfig *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig `json:"rollingWindowThresholdConfig"`
	// Dynamic threshold config
	DynamicThresholdConfig *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig `json:"dynamicThresholdConfig"`
	// Value based threshold config
	ValueBasedThresholdConfig *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig `json:"valueBasedThresholdConfig"`
	// Threshold config type
	ThresholdConfigType RateLimitingRuleThresholdConfigType `json:"thresholdConfigType"`
	// User aggregation type
	UserAggregateType RateLimitingRuleUserAggregateType `json:"userAggregateType"`
}

// GetApiAggregateType returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.ApiAggregateType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetApiAggregateType() RateLimitingRuleApiAggregateType {
	return v.ApiAggregateType
}

// GetRollingWindowThresholdConfig returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.RollingWindowThresholdConfig, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetRollingWindowThresholdConfig() *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig {
	return v.RollingWindowThresholdConfig
}

// GetDynamicThresholdConfig returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.DynamicThresholdConfig, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetDynamicThresholdConfig() *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig {
	return v.DynamicThresholdConfig
}

// GetValueBasedThresholdConfig returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.ValueBasedThresholdConfig, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetValueBasedThresholdConfig() *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig {
	return v.ValueBasedThresholdConfig
}

// GetThresholdConfigType returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.ThresholdConfigType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetThresholdConfigType() RateLimitingRuleThresholdConfigType {
	return v.ThresholdConfigType
}

// GetUserAggregateType returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig.UserAggregateType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfig) GetUserAggregateType() RateLimitingRuleUserAggregateType {
	return v.UserAggregateType
}

// ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig includes the requested fields of the GraphQL type DynamicThresholdConfig.
// The GraphQL type's documentation follows.
//
// Threshold config which specifies percentage allowed exceeding a mean countwhich
// is calculated over the specified duration for the given time range
type ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig struct {
	// Allowed percentage exceeding mean
	PercentageExceedingMeanAllowed int64 `json:"percentageExceedingMeanAllowed"`
	// Duration for calculating mean over the specified time range
	MeanCalculationDuration string `json:"meanCalculationDuration"`
	// Time range over which mean and counts are calculated
	Duration string `json:"duration"`
}

// GetPercentageExceedingMeanAllowed returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig.PercentageExceedingMeanAllowed, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig) GetPercentageExceedingMeanAllowed() int64 {
	return v.PercentageExceedingMeanAllowed
}

// GetMeanCalculationDuration returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig.MeanCalculationDuration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig) GetMeanCalculationDuration() string {
	return v.MeanCalculationDuration
}

// GetDuration returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigDynamicThresholdConfig) GetDuration() string {
	return v.Duration
}

// ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig includes the requested fields of the GraphQL type RollingWindowThresholdConfig.
// The GraphQL type's documentation follows.
//
// Threshold config which specifies count allowed over the given time range
type ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig struct {
	// Count allowed for specified time range
	CountAllowed int64 `json:"countAllowed"`
	// Time range during which counts are calculated
	Duration string `json:"duration"`
}

// GetCountAllowed returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig.CountAllowed, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig) GetCountAllowed() int64 {
	return v.CountAllowed
}

// GetDuration returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigRollingWindowThresholdConfig) GetDuration() string {
	return v.Duration
}

// ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig includes the requested fields of the GraphQL type ValueBasedThresholdConfig.
// The GraphQL type's documentation follows.
//
// Threshold config which specifies unique values allowed over the given time range
type ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig struct {
	// Type of value based threshold config
	ValueType ValueBasedThresholdConfigType `json:"valueType"`
	// Unique values allowed for specified time range
	UniqueValuesAllowed int64 `json:"uniqueValuesAllowed"`
	// Time range during which unique values are calculated
	Duration string `json:"duration"`
	// Type of sensitive params evaluation, only applicable for sensitive params value type
	SensitiveParamsEvaluationType *SensitiveParamsEvaluationType `json:"sensitiveParamsEvaluationType"`
}

// GetValueType returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig.ValueType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig) GetValueType() ValueBasedThresholdConfigType {
	return v.ValueType
}

// GetUniqueValuesAllowed returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig.UniqueValuesAllowed, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig) GetUniqueValuesAllowed() int64 {
	return v.UniqueValuesAllowed
}

// GetDuration returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig.Duration, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig) GetDuration() string {
	return v.Duration
}

// GetSensitiveParamsEvaluationType returns ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig.SensitiveParamsEvaluationType, and is useful for accessing the field via an interface.
func (v *ThresholdActionConfigFieldsThresholdConfigsRateLimitingRuleThresholdConfigValueBasedThresholdConfig) GetSensitiveParamsEvaluationType() *SensitiveParamsEvaluationType {
	return v.SensitiveParamsEvaluationType
}

type TimeUnit string

const (
	// MILLISECONDS
	TimeUnitMilliseconds TimeUnit = "MILLISECONDS"
	// SECONDS
	TimeUnitSeconds TimeUnit = "SECONDS"
	// MINUTES
	TimeUnitMinutes TimeUnit = "MINUTES"
	// HOURS
	TimeUnitHours TimeUnit = "HOURS"
	// DAYS
	TimeUnitDays TimeUnit = "DAYS"
)

var AllTimeUnit = []TimeUnit{
	TimeUnitMilliseconds,
	TimeUnitSeconds,
	TimeUnitMinutes,
	TimeUnitHours,
	TimeUnitDays,
}

type TraceableSpanProcessingFilterField string

const (
	// URL
	TraceableSpanProcessingFilterFieldUrl TraceableSpanProcessingFilterField = "URL"
	// URL_PATH
	TraceableSpanProcessingFilterFieldUrlPath TraceableSpanProcessingFilterField = "URL_PATH"
	// SERVICE_NAME
	TraceableSpanProcessingFilterFieldServiceName TraceableSpanProcessingFilterField = "SERVICE_NAME"
	// ENVIRONMENT_NAME
	TraceableSpanProcessingFilterFieldEnvironmentName TraceableSpanProcessingFilterField = "ENVIRONMENT_NAME"
)

var AllTraceableSpanProcessingFilterField = []TraceableSpanProcessingFilterField{
	TraceableSpanProcessingFilterFieldUrl,
	TraceableSpanProcessingFilterFieldUrlPath,
	TraceableSpanProcessingFilterFieldServiceName,
	TraceableSpanProcessingFilterFieldEnvironmentName,
}

type TraceableSpanProcessingRelationalOperator string

const (
	// EQUALS
	TraceableSpanProcessingRelationalOperatorEquals TraceableSpanProcessingRelationalOperator = "EQUALS"
	// NOT_EQUALS
	TraceableSpanProcessingRelationalOperatorNotEquals TraceableSpanProcessingRelationalOperator = "NOT_EQUALS"
	// CONTAINS
	TraceableSpanProcessingRelationalOperatorContains TraceableSpanProcessingRelationalOperator = "CONTAINS"
	// NOT_CONTAINS
	TraceableSpanProcessingRelationalOperatorNotContains TraceableSpanProcessingRelationalOperator = "NOT_CONTAINS"
	// STARTS_WITH
	TraceableSpanProcessingRelationalOperatorStartsWith TraceableSpanProcessingRelationalOperator = "STARTS_WITH"
	// ENDS_WITH
	TraceableSpanProcessingRelationalOperatorEndsWith TraceableSpanProcessingRelationalOperator = "ENDS_WITH"
	// REGEX_MATCH
	TraceableSpanProcessingRelationalOperatorRegexMatch TraceableSpanProcessingRelationalOperator = "REGEX_MATCH"
	// IN
	TraceableSpanProcessingRelationalOperatorIn TraceableSpanProcessingRelationalOperator = "IN"
)

var AllTraceableSpanProcessingRelationalOperator = []TraceableSpanProcessingRelationalOperator{
	TraceableSpanProcessingRelationalOperatorEquals,
	TraceableSpanProcessingRelationalOperatorNotEquals,
	TraceableSpanProcessingRelationalOperatorContains,
	TraceableSpanProcessingRelationalOperatorNotContains,
	TraceableSpanProcessingRelationalOperatorStartsWith,
	TraceableSpanProcessingRelationalOperatorEndsWith,
	TraceableSpanProcessingRelationalOperatorRegexMatch,
	TraceableSpanProcessingRelationalOperatorIn,
}

// Fragment for transactionActionConfigs
type TransactionActionConfigFields struct {
	// Rate limit rule action
	Action TransactionActionConfigFieldsActionRateLimitingRuleAction `json:"action"`
	// Requested expiration timestamp for the rule
	ExpirationTimestamp *string `json:"expirationTimestamp"`
}

// GetAction returns TransactionActionConfigFields.Action, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFields) GetAction() TransactionActionConfigFieldsActionRateLimitingRuleAction {
	return v.Action
}

// GetExpirationTimestamp returns TransactionActionConfigFields.ExpirationTimestamp, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFields) GetExpirationTimestamp() *string {
	return v.ExpirationTimestamp
}

// TransactionActionConfigFieldsActionRateLimitingRuleAction includes the requested fields of the GraphQL type RateLimitingRuleAction.
// The GraphQL type's documentation follows.
//
// Action to take if a rate limit rule is applicable
type TransactionActionConfigFieldsActionRateLimitingRuleAction struct {
	// Type of action
	ActionType RateLimitingRuleActionType `json:"actionType"`
	// Details regarding alert action
	Alert *TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction `json:"alert"`
	// Details regarding allow action
	Allow *TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction `json:"allow"`
	// Details regarding block action
	Block *TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction `json:"block"`
}

// GetActionType returns TransactionActionConfigFieldsActionRateLimitingRuleAction.ActionType, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleAction) GetActionType() RateLimitingRuleActionType {
	return v.ActionType
}

// GetAlert returns TransactionActionConfigFieldsActionRateLimitingRuleAction.Alert, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleAction) GetAlert() *TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction {
	return v.Alert
}

// GetAllow returns TransactionActionConfigFieldsActionRateLimitingRuleAction.Allow, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleAction) GetAllow() *TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction {
	return v.Allow
}

// GetBlock returns TransactionActionConfigFieldsActionRateLimitingRuleAction.Block, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleAction) GetBlock() *TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction {
	return v.Block
}

// TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction includes the requested fields of the GraphQL type RateLimitingRuleAlertAction.
// The GraphQL type's documentation follows.
//
// Details regarding alert action applicable on a rate limit rule
type TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction struct {
	// Severity of alert to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
}

// GetEventSeverity returns TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleActionAlertRateLimitingRuleAlertAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction includes the requested fields of the GraphQL type RateLimitingRuleAllowAction.
// The GraphQL type's documentation follows.
//
// Details regarding allow action applicable on a rate limit rule
type TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction struct {
	// Duration to allow the malicious actor
	Duration *string `json:"duration"`
}

// GetDuration returns TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction.Duration, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleActionAllowRateLimitingRuleAllowAction) GetDuration() *string {
	return v.Duration
}

// TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction includes the requested fields of the GraphQL type RateLimitingRuleBlockAction.
// The GraphQL type's documentation follows.
//
// Details regarding block action applicable on a rate limit rule
type TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction struct {
	// Duration to block the malicious actor
	Duration *string `json:"duration"`
	// Severity of blocked event to be generated
	EventSeverity RateLimitingRuleEventSeverity `json:"eventSeverity"`
}

// GetDuration returns TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction.Duration, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction) GetDuration() *string {
	return v.Duration
}

// GetEventSeverity returns TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction.EventSeverity, and is useful for accessing the field via an interface.
func (v *TransactionActionConfigFieldsActionRateLimitingRuleActionBlockRateLimitingRuleBlockAction) GetEventSeverity() RateLimitingRuleEventSeverity {
	return v.EventSeverity
}

// UpdateAnomalyRuleConfigResponse is returned by UpdateAnomalyRuleConfig on success.
type UpdateAnomalyRuleConfigResponse struct {
	UpdateAnomalyRuleConfig UpdateAnomalyRuleConfigUpdateAnomalyRuleConfigAnomalyRuleConfigUpdate `json:"updateAnomalyRuleConfig"`
}

// GetUpdateAnomalyRuleConfig returns UpdateAnomalyRuleConfigResponse.UpdateAnomalyRuleConfig, and is useful for accessing the field via an interface.
func (v *UpdateAnomalyRuleConfigResponse) GetUpdateAnomalyRuleConfig() UpdateAnomalyRuleConfigUpdateAnomalyRuleConfigAnomalyRuleConfigUpdate {
	return v.UpdateAnomalyRuleConfig
}

// UpdateAnomalyRuleConfigUpdateAnomalyRuleConfigAnomalyRuleConfigUpdate includes the requested fields of the GraphQL type AnomalyRuleConfigUpdate.
type UpdateAnomalyRuleConfigUpdateAnomalyRuleConfigAnomalyRuleConfigUpdate struct {
	RuleId string `json:"ruleId"`
}

// GetRuleId returns UpdateAnomalyRuleConfigUpdateAnomalyRuleConfigAnomalyRuleConfigUpdate.RuleId, and is useful for accessing the field via an interface.
func (v *UpdateAnomalyRuleConfigUpdateAnomalyRuleConfigAnomalyRuleConfigUpdate) GetRuleId() string {
	return v.RuleId
}

// UpdateApiNamingRuleResponse is returned by UpdateApiNamingRule on success.
type UpdateApiNamingRuleResponse struct {
	// Mutation to update api naming rule
	UpdateApiNamingRule UpdateApiNamingRuleUpdateApiNamingRule `json:"updateApiNamingRule"`
}

// GetUpdateApiNamingRule returns UpdateApiNamingRuleResponse.UpdateApiNamingRule, and is useful for accessing the field via an interface.
func (v *UpdateApiNamingRuleResponse) GetUpdateApiNamingRule() UpdateApiNamingRuleUpdateApiNamingRule {
	return v.UpdateApiNamingRule
}

// UpdateApiNamingRuleUpdateApiNamingRule includes the requested fields of the GraphQL type ApiNamingRule.
type UpdateApiNamingRuleUpdateApiNamingRule struct {
	ApiNamingRuleFields `json:"-"`
}

// GetId returns UpdateApiNamingRuleUpdateApiNamingRule.Id, and is useful for accessing the field via an interface.
func (v *UpdateApiNamingRuleUpdateApiNamingRule) GetId() string { return v.ApiNamingRuleFields.Id }

// GetName returns UpdateApiNamingRuleUpdateApiNamingRule.Name, and is useful for accessing the field via an interface.
func (v *UpdateApiNamingRuleUpdateApiNamingRule) GetName() string { return v.ApiNamingRuleFields.Name }

// GetCreationTime returns UpdateApiNamingRuleUpdateApiNamingRule.CreationTime, and is useful for accessing the field via an interface.
func (v *UpdateApiNamingRuleUpdateApiNamingRule) GetCreationTime() string {
	return v.ApiNamingRuleFields.CreationTime
}

// GetLastUpdatedTime returns UpdateApiNamingRuleUpdateApiNamingRule.LastUpdatedTime, and is useful for accessing the field via an interface.
func (v *UpdateApiNamingRuleUpdateApiNamingRule) GetLastUpdatedTime() string {
	return v.ApiNamingRuleFields.LastUpdatedTime
}

// GetDisabled returns UpdateApiNamingRuleUpdateApiNamingRule.Disabled, and is useful for accessing the field via an interface.
func (v *UpdateApiNamingRuleUpdateApiNamingRule) GetDisabled() bool {
	return v.ApiNamingRuleFields.Disabled
}

// GetApiNamingRuleConfig returns UpdateApiNamingRuleUpdateApiNamingRule.ApiNamingRuleConfig, and is useful for accessing the field via an interface.
func (v *UpdateApiNamingRuleUpdateApiNamingRule) GetApiNamingRuleConfig() ApiNamingRuleFieldsApiNamingRuleConfig {
	return v.ApiNamingRuleFields.ApiNamingRuleConfig
}

// GetSpanFilter returns UpdateApiNamingRuleUpdateApiNamingRule.SpanFilter, and is useful for accessing the field via an interface.
func (v *UpdateApiNamingRuleUpdateApiNamingRule) GetSpanFilter() ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter {
	return v.ApiNamingRuleFields.SpanFilter
}

func (v *UpdateApiNamingRuleUpdateApiNamingRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateApiNamingRuleUpdateApiNamingRule
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateApiNamingRuleUpdateApiNamingRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ApiNamingRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateApiNamingRuleUpdateApiNamingRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	CreationTime string `json:"creationTime"`

	LastUpdatedTime string `json:"lastUpdatedTime"`

	Disabled bool `json:"disabled"`

	ApiNamingRuleConfig ApiNamingRuleFieldsApiNamingRuleConfig `json:"apiNamingRuleConfig"`

	SpanFilter ApiNamingRuleFieldsSpanFilterTraceableSpanProcessingRuleFilter `json:"spanFilter"`
}

func (v *UpdateApiNamingRuleUpdateApiNamingRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateApiNamingRuleUpdateApiNamingRule) __premarshalJSON() (*__premarshalUpdateApiNamingRuleUpdateApiNamingRule, error) {
	var retval __premarshalUpdateApiNamingRuleUpdateApiNamingRule

	retval.Id = v.ApiNamingRuleFields.Id
	retval.Name = v.ApiNamingRuleFields.Name
	retval.CreationTime = v.ApiNamingRuleFields.CreationTime
	retval.LastUpdatedTime = v.ApiNamingRuleFields.LastUpdatedTime
	retval.Disabled = v.ApiNamingRuleFields.Disabled
	retval.ApiNamingRuleConfig = v.ApiNamingRuleFields.ApiNamingRuleConfig
	retval.SpanFilter = v.ApiNamingRuleFields.SpanFilter
	return &retval, nil
}

// UpdateCustomSignatureResponse is returned by UpdateCustomSignature on success.
type UpdateCustomSignatureResponse struct {
	UpdateCustomSignatureRule UpdateCustomSignatureUpdateCustomSignatureRule `json:"updateCustomSignatureRule"`
}

// GetUpdateCustomSignatureRule returns UpdateCustomSignatureResponse.UpdateCustomSignatureRule, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureResponse) GetUpdateCustomSignatureRule() UpdateCustomSignatureUpdateCustomSignatureRule {
	return v.UpdateCustomSignatureRule
}

// UpdateCustomSignatureUpdateCustomSignatureRule includes the requested fields of the GraphQL type CustomSignatureRule.
type UpdateCustomSignatureUpdateCustomSignatureRule struct {
	CustomSignatureFields `json:"-"`
}

// GetId returns UpdateCustomSignatureUpdateCustomSignatureRule.Id, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureUpdateCustomSignatureRule) GetId() string {
	return v.CustomSignatureFields.Id
}

// GetName returns UpdateCustomSignatureUpdateCustomSignatureRule.Name, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureUpdateCustomSignatureRule) GetName() string {
	return v.CustomSignatureFields.Name
}

// GetDescription returns UpdateCustomSignatureUpdateCustomSignatureRule.Description, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureUpdateCustomSignatureRule) GetDescription() string {
	return v.CustomSignatureFields.Description
}

// GetDisabled returns UpdateCustomSignatureUpdateCustomSignatureRule.Disabled, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureUpdateCustomSignatureRule) GetDisabled() *bool {
	return v.CustomSignatureFields.Disabled
}

// GetInternal returns UpdateCustomSignatureUpdateCustomSignatureRule.Internal, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureUpdateCustomSignatureRule) GetInternal() *bool {
	return v.CustomSignatureFields.Internal
}

// GetBlockingExpirationDuration returns UpdateCustomSignatureUpdateCustomSignatureRule.BlockingExpirationDuration, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureUpdateCustomSignatureRule) GetBlockingExpirationDuration() *string {
	return v.CustomSignatureFields.BlockingExpirationDuration
}

// GetBlockingExpirationTime returns UpdateCustomSignatureUpdateCustomSignatureRule.BlockingExpirationTime, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureUpdateCustomSignatureRule) GetBlockingExpirationTime() *string {
	return v.CustomSignatureFields.BlockingExpirationTime
}

// GetRuleSource returns UpdateCustomSignatureUpdateCustomSignatureRule.RuleSource, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureUpdateCustomSignatureRule) GetRuleSource() *CustomSignatureRuleSource {
	return v.CustomSignatureFields.RuleSource
}

// GetRuleEffect returns UpdateCustomSignatureUpdateCustomSignatureRule.RuleEffect, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureUpdateCustomSignatureRule) GetRuleEffect() CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect {
	return v.CustomSignatureFields.RuleEffect
}

// GetRuleDefinition returns UpdateCustomSignatureUpdateCustomSignatureRule.RuleDefinition, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureUpdateCustomSignatureRule) GetRuleDefinition() CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition {
	return v.CustomSignatureFields.RuleDefinition
}

// GetRuleScope returns UpdateCustomSignatureUpdateCustomSignatureRule.RuleScope, and is useful for accessing the field via an interface.
func (v *UpdateCustomSignatureUpdateCustomSignatureRule) GetRuleScope() *CustomSignatureFieldsRuleScopeCustomSignatureRuleScope {
	return v.CustomSignatureFields.RuleScope
}

func (v *UpdateCustomSignatureUpdateCustomSignatureRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateCustomSignatureUpdateCustomSignatureRule
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateCustomSignatureUpdateCustomSignatureRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.CustomSignatureFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateCustomSignatureUpdateCustomSignatureRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	Description string `json:"description"`

	Disabled *bool `json:"disabled"`

	Internal *bool `json:"internal"`

	BlockingExpirationDuration *string `json:"blockingExpirationDuration"`

	BlockingExpirationTime *string `json:"blockingExpirationTime"`

	RuleSource *CustomSignatureRuleSource `json:"ruleSource"`

	RuleEffect CustomSignatureFieldsRuleEffectCustomSignatureRuleEffect `json:"ruleEffect"`

	RuleDefinition CustomSignatureFieldsRuleDefinitionCustomSignatureRuleDefinition `json:"ruleDefinition"`

	RuleScope *CustomSignatureFieldsRuleScopeCustomSignatureRuleScope `json:"ruleScope"`
}

func (v *UpdateCustomSignatureUpdateCustomSignatureRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateCustomSignatureUpdateCustomSignatureRule) __premarshalJSON() (*__premarshalUpdateCustomSignatureUpdateCustomSignatureRule, error) {
	var retval __premarshalUpdateCustomSignatureUpdateCustomSignatureRule

	retval.Id = v.CustomSignatureFields.Id
	retval.Name = v.CustomSignatureFields.Name
	retval.Description = v.CustomSignatureFields.Description
	retval.Disabled = v.CustomSignatureFields.Disabled
	retval.Internal = v.CustomSignatureFields.Internal
	retval.BlockingExpirationDuration = v.CustomSignatureFields.BlockingExpirationDuration
	retval.BlockingExpirationTime = v.CustomSignatureFields.BlockingExpirationTime
	retval.RuleSource = v.CustomSignatureFields.RuleSource
	retval.RuleEffect = v.CustomSignatureFields.RuleEffect
	retval.RuleDefinition = v.CustomSignatureFields.RuleDefinition
	retval.RuleScope = v.CustomSignatureFields.RuleScope
	return &retval, nil
}

// UpdateDataSetResponse is returned by UpdateDataSet on success.
type UpdateDataSetResponse struct {
	UpdateDataSet UpdateDataSetUpdateDataSet `json:"updateDataSet"`
}

// GetUpdateDataSet returns UpdateDataSetResponse.UpdateDataSet, and is useful for accessing the field via an interface.
func (v *UpdateDataSetResponse) GetUpdateDataSet() UpdateDataSetUpdateDataSet { return v.UpdateDataSet }

// UpdateDataSetUpdateDataSet includes the requested fields of the GraphQL type DataSet.
type UpdateDataSetUpdateDataSet struct {
	Id          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	// An icon used to represent this Dataset visually
	IconType *string `json:"iconType"`
}

// GetId returns UpdateDataSetUpdateDataSet.Id, and is useful for accessing the field via an interface.
func (v *UpdateDataSetUpdateDataSet) GetId() string { return v.Id }

// GetName returns UpdateDataSetUpdateDataSet.Name, and is useful for accessing the field via an interface.
func (v *UpdateDataSetUpdateDataSet) GetName() string { return v.Name }

// GetDescription returns UpdateDataSetUpdateDataSet.Description, and is useful for accessing the field via an interface.
func (v *UpdateDataSetUpdateDataSet) GetDescription() *string { return v.Description }

// GetIconType returns UpdateDataSetUpdateDataSet.IconType, and is useful for accessing the field via an interface.
func (v *UpdateDataSetUpdateDataSet) GetIconType() *string { return v.IconType }

// UpdateMaliciousEmailDomainRuleResponse is returned by UpdateMaliciousEmailDomainRule on success.
type UpdateMaliciousEmailDomainRuleResponse struct {
	// Mutation API to update Malicious Sources rule
	UpdateMaliciousSourcesRule UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule `json:"updateMaliciousSourcesRule"`
}

// GetUpdateMaliciousSourcesRule returns UpdateMaliciousEmailDomainRuleResponse.UpdateMaliciousSourcesRule, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousEmailDomainRuleResponse) GetUpdateMaliciousSourcesRule() UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule {
	return v.UpdateMaliciousSourcesRule
}

// UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule struct {
	MaliciousEmailDomainRuleFields `json:"-"`
}

// GetId returns UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule) GetId() string {
	return v.MaliciousEmailDomainRuleFields.Id
}

// GetInfo returns UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule) GetInfo() MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.MaliciousEmailDomainRuleFields.Info
}

// GetScope returns UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule.Scope, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule) GetScope() *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.MaliciousEmailDomainRuleFields.Scope
}

// GetStatus returns UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule.Status, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule) GetStatus() MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.MaliciousEmailDomainRuleFields.Status
}

func (v *UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousEmailDomainRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule struct {
	Id string `json:"id"`

	Info MaliciousEmailDomainRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`

	Scope *MaliciousEmailDomainRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`

	Status MaliciousEmailDomainRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

func (v *UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule) __premarshalJSON() (*__premarshalUpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule, error) {
	var retval __premarshalUpdateMaliciousEmailDomainRuleUpdateMaliciousSourcesRule

	retval.Id = v.MaliciousEmailDomainRuleFields.Id
	retval.Info = v.MaliciousEmailDomainRuleFields.Info
	retval.Scope = v.MaliciousEmailDomainRuleFields.Scope
	retval.Status = v.MaliciousEmailDomainRuleFields.Status
	return &retval, nil
}

// UpdateMaliciousIpRangeRuleResponse is returned by UpdateMaliciousIpRangeRule on success.
type UpdateMaliciousIpRangeRuleResponse struct {
	UpdateIpRangeRule UpdateMaliciousIpRangeRuleUpdateIpRangeRule `json:"updateIpRangeRule"`
}

// GetUpdateIpRangeRule returns UpdateMaliciousIpRangeRuleResponse.UpdateIpRangeRule, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleResponse) GetUpdateIpRangeRule() UpdateMaliciousIpRangeRuleUpdateIpRangeRule {
	return v.UpdateIpRangeRule
}

// UpdateMaliciousIpRangeRuleUpdateIpRangeRule includes the requested fields of the GraphQL type IpRangeRule.
type UpdateMaliciousIpRangeRuleUpdateIpRangeRule struct {
	MaliciousIpRangeFields `json:"-"`
}

// GetId returns UpdateMaliciousIpRangeRuleUpdateIpRangeRule.Id, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) GetId() *string {
	return v.MaliciousIpRangeFields.Id
}

// GetInternal returns UpdateMaliciousIpRangeRuleUpdateIpRangeRule.Internal, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) GetInternal() bool {
	return v.MaliciousIpRangeFields.Internal
}

// GetDisabled returns UpdateMaliciousIpRangeRuleUpdateIpRangeRule.Disabled, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) GetDisabled() bool {
	return v.MaliciousIpRangeFields.Disabled
}

// GetRuleDetails returns UpdateMaliciousIpRangeRuleUpdateIpRangeRule.RuleDetails, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) GetRuleDetails() MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails {
	return v.MaliciousIpRangeFields.RuleDetails
}

// GetRuleScope returns UpdateMaliciousIpRangeRuleUpdateIpRangeRule.RuleScope, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) GetRuleScope() *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope {
	return v.MaliciousIpRangeFields.RuleScope
}

func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateMaliciousIpRangeRuleUpdateIpRangeRule
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateMaliciousIpRangeRuleUpdateIpRangeRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpRangeFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateMaliciousIpRangeRuleUpdateIpRangeRule struct {
	Id *string `json:"id"`

	Internal bool `json:"internal"`

	Disabled bool `json:"disabled"`

	RuleDetails MaliciousIpRangeFieldsRuleDetailsIpRangeRuleDetails `json:"ruleDetails"`

	RuleScope *MaliciousIpRangeFieldsRuleScopeIpRangeRuleScope `json:"ruleScope"`
}

func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateMaliciousIpRangeRuleUpdateIpRangeRule) __premarshalJSON() (*__premarshalUpdateMaliciousIpRangeRuleUpdateIpRangeRule, error) {
	var retval __premarshalUpdateMaliciousIpRangeRuleUpdateIpRangeRule

	retval.Id = v.MaliciousIpRangeFields.Id
	retval.Internal = v.MaliciousIpRangeFields.Internal
	retval.Disabled = v.MaliciousIpRangeFields.Disabled
	retval.RuleDetails = v.MaliciousIpRangeFields.RuleDetails
	retval.RuleScope = v.MaliciousIpRangeFields.RuleScope
	return &retval, nil
}

// UpdateMaliciousIpTypeRuleResponse is returned by UpdateMaliciousIpTypeRule on success.
type UpdateMaliciousIpTypeRuleResponse struct {
	// Mutation API to update Malicious Sources rule
	UpdateMaliciousSourcesRule UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule `json:"updateMaliciousSourcesRule"`
}

// GetUpdateMaliciousSourcesRule returns UpdateMaliciousIpTypeRuleResponse.UpdateMaliciousSourcesRule, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpTypeRuleResponse) GetUpdateMaliciousSourcesRule() UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule {
	return v.UpdateMaliciousSourcesRule
}

// UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule includes the requested fields of the GraphQL type MaliciousSourcesRule.
// The GraphQL type's documentation follows.
//
// Custom Rule to identify malicious sources like IP addresses, IP regions, IP location types and IP reputation
type UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule struct {
	MaliciousIpTypeRuleFields `json:"-"`
}

// GetId returns UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule.Id, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) GetId() string {
	return v.MaliciousIpTypeRuleFields.Id
}

// GetInfo returns UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule.Info, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) GetInfo() MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo {
	return v.MaliciousIpTypeRuleFields.Info
}

// GetScope returns UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule.Scope, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) GetScope() *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope {
	return v.MaliciousIpTypeRuleFields.Scope
}

// GetStatus returns UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule.Status, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) GetStatus() MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus {
	return v.MaliciousIpTypeRuleFields.Status
}

func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousIpTypeRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule struct {
	Id string `json:"id"`

	Info MaliciousIpTypeRuleFieldsInfoMaliciousSourcesRuleInfo `json:"info"`

	Scope *MaliciousIpTypeRuleFieldsScopeMaliciousSourcesRuleScope `json:"scope"`

	Status MaliciousIpTypeRuleFieldsStatusMaliciousSourcesRuleStatus `json:"status"`
}

func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule) __premarshalJSON() (*__premarshalUpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule, error) {
	var retval __premarshalUpdateMaliciousIpTypeRuleUpdateMaliciousSourcesRule

	retval.Id = v.MaliciousIpTypeRuleFields.Id
	retval.Info = v.MaliciousIpTypeRuleFields.Info
	retval.Scope = v.MaliciousIpTypeRuleFields.Scope
	retval.Status = v.MaliciousIpTypeRuleFields.Status
	return &retval, nil
}

// UpdateMaliciousRegionRuleResponse is returned by UpdateMaliciousRegionRule on success.
type UpdateMaliciousRegionRuleResponse struct {
	UpdateRegionRule UpdateMaliciousRegionRuleUpdateRegionRule `json:"updateRegionRule"`
}

// GetUpdateRegionRule returns UpdateMaliciousRegionRuleResponse.UpdateRegionRule, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleResponse) GetUpdateRegionRule() UpdateMaliciousRegionRuleUpdateRegionRule {
	return v.UpdateRegionRule
}

// UpdateMaliciousRegionRuleUpdateRegionRule includes the requested fields of the GraphQL type RegionRule.
type UpdateMaliciousRegionRuleUpdateRegionRule struct {
	MaliciousRegionRuleFields `json:"-"`
}

// GetId returns UpdateMaliciousRegionRuleUpdateRegionRule.Id, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetId() string {
	return v.MaliciousRegionRuleFields.Id
}

// GetName returns UpdateMaliciousRegionRuleUpdateRegionRule.Name, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetName() string {
	return v.MaliciousRegionRuleFields.Name
}

// GetType returns UpdateMaliciousRegionRuleUpdateRegionRule.Type, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetType() RegionRuleActionType {
	return v.MaliciousRegionRuleFields.Type
}

// GetDescription returns UpdateMaliciousRegionRuleUpdateRegionRule.Description, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetDescription() *string {
	return v.MaliciousRegionRuleFields.Description
}

// GetDisabled returns UpdateMaliciousRegionRuleUpdateRegionRule.Disabled, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetDisabled() bool {
	return v.MaliciousRegionRuleFields.Disabled
}

// GetInternal returns UpdateMaliciousRegionRuleUpdateRegionRule.Internal, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetInternal() bool {
	return v.MaliciousRegionRuleFields.Internal
}

// GetEventSeverity returns UpdateMaliciousRegionRuleUpdateRegionRule.EventSeverity, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetEventSeverity() *RegionRuleEventSeverity {
	return v.MaliciousRegionRuleFields.EventSeverity
}

// GetExpiration returns UpdateMaliciousRegionRuleUpdateRegionRule.Expiration, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetExpiration() *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration {
	return v.MaliciousRegionRuleFields.Expiration
}

// GetRegions returns UpdateMaliciousRegionRuleUpdateRegionRule.Regions, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetRegions() []*MaliciousRegionRuleFieldsRegionsRegion {
	return v.MaliciousRegionRuleFields.Regions
}

// GetRuleScope returns UpdateMaliciousRegionRuleUpdateRegionRule.RuleScope, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetRuleScope() *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope {
	return v.MaliciousRegionRuleFields.RuleScope
}

// GetEffects returns UpdateMaliciousRegionRuleUpdateRegionRule.Effects, and is useful for accessing the field via an interface.
func (v *UpdateMaliciousRegionRuleUpdateRegionRule) GetEffects() []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification {
	return v.MaliciousRegionRuleFields.Effects
}

func (v *UpdateMaliciousRegionRuleUpdateRegionRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateMaliciousRegionRuleUpdateRegionRule
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateMaliciousRegionRuleUpdateRegionRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.MaliciousRegionRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateMaliciousRegionRuleUpdateRegionRule struct {
	Id string `json:"id"`

	Name string `json:"name"`

	Type RegionRuleActionType `json:"type"`

	Description *string `json:"description"`

	Disabled bool `json:"disabled"`

	Internal bool `json:"internal"`

	EventSeverity *RegionRuleEventSeverity `json:"eventSeverity"`

	Expiration *MaliciousRegionRuleFieldsExpirationRegionRuleExpiration `json:"expiration"`

	Regions []*MaliciousRegionRuleFieldsRegionsRegion `json:"regions"`

	RuleScope *MaliciousRegionRuleFieldsRuleScopeRegionRuleScope `json:"ruleScope"`

	Effects []*MaliciousRegionRuleFieldsEffectsRegionRuleEffectWithModification `json:"effects"`
}

func (v *UpdateMaliciousRegionRuleUpdateRegionRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateMaliciousRegionRuleUpdateRegionRule) __premarshalJSON() (*__premarshalUpdateMaliciousRegionRuleUpdateRegionRule, error) {
	var retval __premarshalUpdateMaliciousRegionRuleUpdateRegionRule

	retval.Id = v.MaliciousRegionRuleFields.Id
	retval.Name = v.MaliciousRegionRuleFields.Name
	retval.Type = v.MaliciousRegionRuleFields.Type
	retval.Description = v.MaliciousRegionRuleFields.Description
	retval.Disabled = v.MaliciousRegionRuleFields.Disabled
	retval.Internal = v.MaliciousRegionRuleFields.Internal
	retval.EventSeverity = v.MaliciousRegionRuleFields.EventSeverity
	retval.Expiration = v.MaliciousRegionRuleFields.Expiration
	retval.Regions = v.MaliciousRegionRuleFields.Regions
	retval.RuleScope = v.MaliciousRegionRuleFields.RuleScope
	retval.Effects = v.MaliciousRegionRuleFields.Effects
	return &retval, nil
}

// UpdateRateLimitingRuleResponse is returned by UpdateRateLimitingRule on success.
type UpdateRateLimitingRuleResponse struct {
	UpdateRateLimitingRule UpdateRateLimitingRuleUpdateRateLimitingRule `json:"updateRateLimitingRule"`
}

// GetUpdateRateLimitingRule returns UpdateRateLimitingRuleResponse.UpdateRateLimitingRule, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleResponse) GetUpdateRateLimitingRule() UpdateRateLimitingRuleUpdateRateLimitingRule {
	return v.UpdateRateLimitingRule
}

// UpdateRateLimitingRuleUpdateRateLimitingRule includes the requested fields of the GraphQL type RateLimitingRule.
// The GraphQL type's documentation follows.
//
// Custom rule to protect endpoints and other services from brute-force attacks
type UpdateRateLimitingRuleUpdateRateLimitingRule struct {
	RateLimitingRuleFields `json:"-"`
}

// GetCategory returns UpdateRateLimitingRuleUpdateRateLimitingRule.Category, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetCategory() RateLimitingRuleCategory {
	return v.RateLimitingRuleFields.Category
}

// GetDescription returns UpdateRateLimitingRuleUpdateRateLimitingRule.Description, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetDescription() *string {
	return v.RateLimitingRuleFields.Description
}

// GetEnabled returns UpdateRateLimitingRuleUpdateRateLimitingRule.Enabled, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetEnabled() bool {
	return v.RateLimitingRuleFields.Enabled
}

// GetId returns UpdateRateLimitingRuleUpdateRateLimitingRule.Id, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetId() string {
	return v.RateLimitingRuleFields.Id
}

// GetName returns UpdateRateLimitingRuleUpdateRateLimitingRule.Name, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetName() string {
	return v.RateLimitingRuleFields.Name
}

// GetLabels returns UpdateRateLimitingRuleUpdateRateLimitingRule.Labels, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetLabels() []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel {
	return v.RateLimitingRuleFields.Labels
}

// GetThresholdActionConfigs returns UpdateRateLimitingRuleUpdateRateLimitingRule.ThresholdActionConfigs, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetThresholdActionConfigs() []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig {
	return v.RateLimitingRuleFields.ThresholdActionConfigs
}

// GetTransactionActionConfigs returns UpdateRateLimitingRuleUpdateRateLimitingRule.TransactionActionConfigs, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetTransactionActionConfigs() *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig {
	return v.RateLimitingRuleFields.TransactionActionConfigs
}

// GetRuleConfigScope returns UpdateRateLimitingRuleUpdateRateLimitingRule.RuleConfigScope, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetRuleConfigScope() *RateLimitingRuleFieldsRuleConfigScope {
	return v.RateLimitingRuleFields.RuleConfigScope
}

// GetRuleStatus returns UpdateRateLimitingRuleUpdateRateLimitingRule.RuleStatus, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetRuleStatus() *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus {
	return v.RateLimitingRuleFields.RuleStatus
}

// GetConditions returns UpdateRateLimitingRuleUpdateRateLimitingRule.Conditions, and is useful for accessing the field via an interface.
func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) GetConditions() []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition {
	return v.RateLimitingRuleFields.Conditions
}

func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateRateLimitingRuleUpdateRateLimitingRule
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateRateLimitingRuleUpdateRateLimitingRule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.RateLimitingRuleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateRateLimitingRuleUpdateRateLimitingRule struct {
	Category RateLimitingRuleCategory `json:"category"`

	Description *string `json:"description"`

	Enabled bool `json:"enabled"`

	Id string `json:"id"`

	Name string `json:"name"`

	Labels []*RateLimitingRuleFieldsLabelsRateLimitingRuleLabel `json:"labels"`

	ThresholdActionConfigs []*RateLimitingRuleFieldsThresholdActionConfigsRateLimitingRuleThresholdActionConfig `json:"thresholdActionConfigs"`

	TransactionActionConfigs *RateLimitingRuleFieldsTransactionActionConfigsRateLimitingTransactionActionConfig `json:"transactionActionConfigs"`

	RuleConfigScope *RateLimitingRuleFieldsRuleConfigScope `json:"ruleConfigScope"`

	RuleStatus *RateLimitingRuleFieldsRuleStatusRateLimitingRuleStatus `json:"ruleStatus"`

	Conditions []*RateLimitingRuleFieldsConditionsRateLimitingRuleCondition `json:"conditions"`
}

func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateRateLimitingRuleUpdateRateLimitingRule) __premarshalJSON() (*__premarshalUpdateRateLimitingRuleUpdateRateLimitingRule, error) {
	var retval __premarshalUpdateRateLimitingRuleUpdateRateLimitingRule

	retval.Category = v.RateLimitingRuleFields.Category
	retval.Description = v.RateLimitingRuleFields.Description
	retval.Enabled = v.RateLimitingRuleFields.Enabled
	retval.Id = v.RateLimitingRuleFields.Id
	retval.Name = v.RateLimitingRuleFields.Name
	retval.Labels = v.RateLimitingRuleFields.Labels
	retval.ThresholdActionConfigs = v.RateLimitingRuleFields.ThresholdActionConfigs
	retval.TransactionActionConfigs = v.RateLimitingRuleFields.TransactionActionConfigs
	retval.RuleConfigScope = v.RateLimitingRuleFields.RuleConfigScope
	retval.RuleStatus = v.RateLimitingRuleFields.RuleStatus
	retval.Conditions = v.RateLimitingRuleFields.Conditions
	return &retval, nil
}

// Type of value based threshold config
type ValueBasedThresholdConfigType string

const (
	// REQUEST_BODY
	ValueBasedThresholdConfigTypeRequestBody ValueBasedThresholdConfigType = "REQUEST_BODY"
	// SENSITIVE_PARAMS
	ValueBasedThresholdConfigTypeSensitiveParams ValueBasedThresholdConfigType = "SENSITIVE_PARAMS"
	// PATH_PARAMS
	ValueBasedThresholdConfigTypePathParams ValueBasedThresholdConfigType = "PATH_PARAMS"
)

var AllValueBasedThresholdConfigType = []ValueBasedThresholdConfigType{
	ValueBasedThresholdConfigTypeRequestBody,
	ValueBasedThresholdConfigTypeSensitiveParams,
	ValueBasedThresholdConfigTypePathParams,
}

type VolumetricAnomalyDetectionConfigName string

const (
	// API_CALL_SPIKE_ANOMALY_CONFIG
	VolumetricAnomalyDetectionConfigNameApiCallSpikeAnomalyConfig VolumetricAnomalyDetectionConfigName = "API_CALL_SPIKE_ANOMALY_CONFIG"
)

var AllVolumetricAnomalyDetectionConfigName = []VolumetricAnomalyDetectionConfigName{
	VolumetricAnomalyDetectionConfigNameApiCallSpikeAnomalyConfig,
}

// __AnomalyDetectionRuleConfigsInput is used internally by genqlient
type __AnomalyDetectionRuleConfigsInput struct {
	Input InputAnomalyScope `json:"input"`
}

// GetInput returns __AnomalyDetectionRuleConfigsInput.Input, and is useful for accessing the field via an interface.
func (v *__AnomalyDetectionRuleConfigsInput) GetInput() InputAnomalyScope { return v.Input }

// __CreateApiNamingRuleInput is used internally by genqlient
type __CreateApiNamingRuleInput struct {
	Input InputApiNamingRuleCreate `json:"input"`
}

// GetInput returns __CreateApiNamingRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateApiNamingRuleInput) GetInput() InputApiNamingRuleCreate { return v.Input }

// __CreateCustomSignatureInput is used internally by genqlient
type __CreateCustomSignatureInput struct {
	Input InputCustomSignatureRuleDescriptor `json:"input"`
}

// GetInput returns __CreateCustomSignatureInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateCustomSignatureInput) GetInput() InputCustomSignatureRuleDescriptor { return v.Input }

// __CreateDataSetInput is used internally by genqlient
type __CreateDataSetInput struct {
	DataSetCreate InputDataSetCreate `json:"dataSetCreate"`
}

// GetDataSetCreate returns __CreateDataSetInput.DataSetCreate, and is useful for accessing the field via an interface.
func (v *__CreateDataSetInput) GetDataSetCreate() InputDataSetCreate { return v.DataSetCreate }

// __CreateMaliciousEmailDomainRuleInput is used internally by genqlient
type __CreateMaliciousEmailDomainRuleInput struct {
	Input InputMaliciousSourcesRuleCreate `json:"input"`
}

// GetInput returns __CreateMaliciousEmailDomainRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateMaliciousEmailDomainRuleInput) GetInput() InputMaliciousSourcesRuleCreate {
	return v.Input
}

// __CreateMaliciousIpRangeRuleInput is used internally by genqlient
type __CreateMaliciousIpRangeRuleInput struct {
	Input InputIpRangeRuleCreate `json:"input"`
}

// GetInput returns __CreateMaliciousIpRangeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateMaliciousIpRangeRuleInput) GetInput() InputIpRangeRuleCreate { return v.Input }

// __CreateMaliciousIpTypeRuleInput is used internally by genqlient
type __CreateMaliciousIpTypeRuleInput struct {
	Input InputMaliciousSourcesRuleCreate `json:"input"`
}

// GetInput returns __CreateMaliciousIpTypeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateMaliciousIpTypeRuleInput) GetInput() InputMaliciousSourcesRuleCreate { return v.Input }

// __CreateMaliciousRegionRuleInput is used internally by genqlient
type __CreateMaliciousRegionRuleInput struct {
	Input InputRegionRuleCreate `json:"input"`
}

// GetInput returns __CreateMaliciousRegionRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateMaliciousRegionRuleInput) GetInput() InputRegionRuleCreate { return v.Input }

// __CreateRateLimitingRuleInput is used internally by genqlient
type __CreateRateLimitingRuleInput struct {
	Input InputRateLimitingRuleData `json:"input"`
}

// GetInput returns __CreateRateLimitingRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateRateLimitingRuleInput) GetInput() InputRateLimitingRuleData { return v.Input }

// __DeleteApiNamingRuleInput is used internally by genqlient
type __DeleteApiNamingRuleInput struct {
	Input InputApiNamingRuleDelete `json:"input"`
}

// GetInput returns __DeleteApiNamingRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteApiNamingRuleInput) GetInput() InputApiNamingRuleDelete { return v.Input }

// __DeleteCustomSignatureInput is used internally by genqlient
type __DeleteCustomSignatureInput struct {
	Input InputCustomSignatureRuleDelete `json:"input"`
}

// GetInput returns __DeleteCustomSignatureInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteCustomSignatureInput) GetInput() InputCustomSignatureRuleDelete { return v.Input }

// __DeleteDataSetInput is used internally by genqlient
type __DeleteDataSetInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteDataSetInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteDataSetInput) GetId() string { return v.Id }

// __DeleteMaliciousEmailDomainRuleInput is used internally by genqlient
type __DeleteMaliciousEmailDomainRuleInput struct {
	Input InputMaliciousSourcesRuleDelete `json:"input"`
}

// GetInput returns __DeleteMaliciousEmailDomainRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteMaliciousEmailDomainRuleInput) GetInput() InputMaliciousSourcesRuleDelete {
	return v.Input
}

// __DeleteMaliciousIpRangeRuleInput is used internally by genqlient
type __DeleteMaliciousIpRangeRuleInput struct {
	Input InputIpRangeRuleDelete `json:"input"`
}

// GetInput returns __DeleteMaliciousIpRangeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteMaliciousIpRangeRuleInput) GetInput() InputIpRangeRuleDelete { return v.Input }

// __DeleteMaliciousIpTypeRuleInput is used internally by genqlient
type __DeleteMaliciousIpTypeRuleInput struct {
	Input InputMaliciousSourcesRuleDelete `json:"input"`
}

// GetInput returns __DeleteMaliciousIpTypeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteMaliciousIpTypeRuleInput) GetInput() InputMaliciousSourcesRuleDelete { return v.Input }

// __DeleteMaliciousRegionRuleInput is used internally by genqlient
type __DeleteMaliciousRegionRuleInput struct {
	Input InputRegionRuleDelete `json:"input"`
}

// GetInput returns __DeleteMaliciousRegionRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteMaliciousRegionRuleInput) GetInput() InputRegionRuleDelete { return v.Input }

// __DeleteRateLimitingRuleInput is used internally by genqlient
type __DeleteRateLimitingRuleInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteRateLimitingRuleInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteRateLimitingRuleInput) GetId() string { return v.Id }

// __DeleteScopedAnomalyDetectionConfigInput is used internally by genqlient
type __DeleteScopedAnomalyDetectionConfigInput struct {
	Input InputAnomalyDetectionConfigDelete `json:"input"`
}

// GetInput returns __DeleteScopedAnomalyDetectionConfigInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteScopedAnomalyDetectionConfigInput) GetInput() InputAnomalyDetectionConfigDelete {
	return v.Input
}

// __GetCustomSignatureIdInput is used internally by genqlient
type __GetCustomSignatureIdInput struct {
	Input InputCustomSignatureRulesFilter `json:"input"`
}

// GetInput returns __GetCustomSignatureIdInput.Input, and is useful for accessing the field via an interface.
func (v *__GetCustomSignatureIdInput) GetInput() InputCustomSignatureRulesFilter { return v.Input }

// __GetCustomSignatureInput is used internally by genqlient
type __GetCustomSignatureInput struct {
	Input InputCustomSignatureRulesFilter `json:"input"`
}

// GetInput returns __GetCustomSignatureInput.Input, and is useful for accessing the field via an interface.
func (v *__GetCustomSignatureInput) GetInput() InputCustomSignatureRulesFilter { return v.Input }

// __GetEntitiesIdsInput is used internally by genqlient
type __GetEntitiesIdsInput struct {
	EntityType      *EntityType               `json:"entityType"`
	Scope           *string                   `json:"scope"`
	Between         InputTimeRange            `json:"between"`
	Space           *string                   `json:"space"`
	FilterBy        []*InputFilter            `json:"filterBy"`
	OrderBy         []*InputAggregatableOrder `json:"orderBy"`
	Limit           *int64                    `json:"limit"`
	Offset          *int64                    `json:"offset"`
	IncludeInactive *bool                     `json:"includeInactive"`
}

// GetEntityType returns __GetEntitiesIdsInput.EntityType, and is useful for accessing the field via an interface.
func (v *__GetEntitiesIdsInput) GetEntityType() *EntityType { return v.EntityType }

// GetScope returns __GetEntitiesIdsInput.Scope, and is useful for accessing the field via an interface.
func (v *__GetEntitiesIdsInput) GetScope() *string { return v.Scope }

// GetBetween returns __GetEntitiesIdsInput.Between, and is useful for accessing the field via an interface.
func (v *__GetEntitiesIdsInput) GetBetween() InputTimeRange { return v.Between }

// GetSpace returns __GetEntitiesIdsInput.Space, and is useful for accessing the field via an interface.
func (v *__GetEntitiesIdsInput) GetSpace() *string { return v.Space }

// GetFilterBy returns __GetEntitiesIdsInput.FilterBy, and is useful for accessing the field via an interface.
func (v *__GetEntitiesIdsInput) GetFilterBy() []*InputFilter { return v.FilterBy }

// GetOrderBy returns __GetEntitiesIdsInput.OrderBy, and is useful for accessing the field via an interface.
func (v *__GetEntitiesIdsInput) GetOrderBy() []*InputAggregatableOrder { return v.OrderBy }

// GetLimit returns __GetEntitiesIdsInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetEntitiesIdsInput) GetLimit() *int64 { return v.Limit }

// GetOffset returns __GetEntitiesIdsInput.Offset, and is useful for accessing the field via an interface.
func (v *__GetEntitiesIdsInput) GetOffset() *int64 { return v.Offset }

// GetIncludeInactive returns __GetEntitiesIdsInput.IncludeInactive, and is useful for accessing the field via an interface.
func (v *__GetEntitiesIdsInput) GetIncludeInactive() *bool { return v.IncludeInactive }

// __GetMaliciousEmailDomainRuleDetailsInput is used internally by genqlient
type __GetMaliciousEmailDomainRuleDetailsInput struct {
	Input *InputMaliciousSourcesRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousEmailDomainRuleDetailsInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousEmailDomainRuleDetailsInput) GetInput() *InputMaliciousSourcesRulesFilter {
	return v.Input
}

// __GetMaliciousEmailDomainRulesNameInput is used internally by genqlient
type __GetMaliciousEmailDomainRulesNameInput struct {
	Input *InputMaliciousSourcesRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousEmailDomainRulesNameInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousEmailDomainRulesNameInput) GetInput() *InputMaliciousSourcesRulesFilter {
	return v.Input
}

// __GetMaliciousIpRangeRuleDetailsInput is used internally by genqlient
type __GetMaliciousIpRangeRuleDetailsInput struct {
	Input *InputIpRangeRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousIpRangeRuleDetailsInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousIpRangeRuleDetailsInput) GetInput() *InputIpRangeRulesFilter { return v.Input }

// __GetMaliciousIpRangeRulesNameInput is used internally by genqlient
type __GetMaliciousIpRangeRulesNameInput struct {
	Input *InputIpRangeRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousIpRangeRulesNameInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousIpRangeRulesNameInput) GetInput() *InputIpRangeRulesFilter { return v.Input }

// __GetMaliciousIpTypeRuleDetailsInput is used internally by genqlient
type __GetMaliciousIpTypeRuleDetailsInput struct {
	Input *InputMaliciousSourcesRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousIpTypeRuleDetailsInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousIpTypeRuleDetailsInput) GetInput() *InputMaliciousSourcesRulesFilter {
	return v.Input
}

// __GetMaliciousIpTypeRulesNameInput is used internally by genqlient
type __GetMaliciousIpTypeRulesNameInput struct {
	Input *InputMaliciousSourcesRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousIpTypeRulesNameInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousIpTypeRulesNameInput) GetInput() *InputMaliciousSourcesRulesFilter {
	return v.Input
}

// __GetMaliciousRegionRuleDetailsInput is used internally by genqlient
type __GetMaliciousRegionRuleDetailsInput struct {
	Input *InputRegionRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousRegionRuleDetailsInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousRegionRuleDetailsInput) GetInput() *InputRegionRulesFilter { return v.Input }

// __GetMaliciousRegionRulesNameInput is used internally by genqlient
type __GetMaliciousRegionRulesNameInput struct {
	Input *InputRegionRulesFilter `json:"input"`
}

// GetInput returns __GetMaliciousRegionRulesNameInput.Input, and is useful for accessing the field via an interface.
func (v *__GetMaliciousRegionRulesNameInput) GetInput() *InputRegionRulesFilter { return v.Input }

// __GetRateLimitingDetailsInput is used internally by genqlient
type __GetRateLimitingDetailsInput struct {
	Category                []*RateLimitingRuleCategory   `json:"category"`
	RateLimitingRulesFilter *InputRateLimitingRulesFilter `json:"rateLimitingRulesFilter"`
}

// GetCategory returns __GetRateLimitingDetailsInput.Category, and is useful for accessing the field via an interface.
func (v *__GetRateLimitingDetailsInput) GetCategory() []*RateLimitingRuleCategory { return v.Category }

// GetRateLimitingRulesFilter returns __GetRateLimitingDetailsInput.RateLimitingRulesFilter, and is useful for accessing the field via an interface.
func (v *__GetRateLimitingDetailsInput) GetRateLimitingRulesFilter() *InputRateLimitingRulesFilter {
	return v.RateLimitingRulesFilter
}

// __GetRateLimitingRulesNameInput is used internally by genqlient
type __GetRateLimitingRulesNameInput struct {
	Category                []*RateLimitingRuleCategory   `json:"category"`
	RateLimitingRulesFilter *InputRateLimitingRulesFilter `json:"rateLimitingRulesFilter"`
}

// GetCategory returns __GetRateLimitingRulesNameInput.Category, and is useful for accessing the field via an interface.
func (v *__GetRateLimitingRulesNameInput) GetCategory() []*RateLimitingRuleCategory {
	return v.Category
}

// GetRateLimitingRulesFilter returns __GetRateLimitingRulesNameInput.RateLimitingRulesFilter, and is useful for accessing the field via an interface.
func (v *__GetRateLimitingRulesNameInput) GetRateLimitingRulesFilter() *InputRateLimitingRulesFilter {
	return v.RateLimitingRulesFilter
}

// __UpdateAnomalyRuleConfigInput is used internally by genqlient
type __UpdateAnomalyRuleConfigInput struct {
	Input InputScopedAnomalyRuleConfigUpdate `json:"input"`
}

// GetInput returns __UpdateAnomalyRuleConfigInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateAnomalyRuleConfigInput) GetInput() InputScopedAnomalyRuleConfigUpdate {
	return v.Input
}

// __UpdateApiNamingRuleInput is used internally by genqlient
type __UpdateApiNamingRuleInput struct {
	Input InputApiNamingRuleUpdate `json:"input"`
}

// GetInput returns __UpdateApiNamingRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateApiNamingRuleInput) GetInput() InputApiNamingRuleUpdate { return v.Input }

// __UpdateCustomSignatureInput is used internally by genqlient
type __UpdateCustomSignatureInput struct {
	Input InputCustomSignatureRuleUpdate `json:"input"`
}

// GetInput returns __UpdateCustomSignatureInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateCustomSignatureInput) GetInput() InputCustomSignatureRuleUpdate { return v.Input }

// __UpdateDataSetInput is used internally by genqlient
type __UpdateDataSetInput struct {
	DataSetUpdate InputDataSetUpdate `json:"dataSetUpdate"`
}

// GetDataSetUpdate returns __UpdateDataSetInput.DataSetUpdate, and is useful for accessing the field via an interface.
func (v *__UpdateDataSetInput) GetDataSetUpdate() InputDataSetUpdate { return v.DataSetUpdate }

// __UpdateMaliciousEmailDomainRuleInput is used internally by genqlient
type __UpdateMaliciousEmailDomainRuleInput struct {
	Input InputMaliciousSourcesRuleUpdate `json:"input"`
}

// GetInput returns __UpdateMaliciousEmailDomainRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateMaliciousEmailDomainRuleInput) GetInput() InputMaliciousSourcesRuleUpdate {
	return v.Input
}

// __UpdateMaliciousIpRangeRuleInput is used internally by genqlient
type __UpdateMaliciousIpRangeRuleInput struct {
	Input InputIpRangeRuleUpdate `json:"input"`
}

// GetInput returns __UpdateMaliciousIpRangeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateMaliciousIpRangeRuleInput) GetInput() InputIpRangeRuleUpdate { return v.Input }

// __UpdateMaliciousIpTypeRuleInput is used internally by genqlient
type __UpdateMaliciousIpTypeRuleInput struct {
	Input InputMaliciousSourcesRuleUpdate `json:"input"`
}

// GetInput returns __UpdateMaliciousIpTypeRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateMaliciousIpTypeRuleInput) GetInput() InputMaliciousSourcesRuleUpdate { return v.Input }

// __UpdateMaliciousRegionRuleInput is used internally by genqlient
type __UpdateMaliciousRegionRuleInput struct {
	Input InputRegionRuleUpdate `json:"input"`
}

// GetInput returns __UpdateMaliciousRegionRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateMaliciousRegionRuleInput) GetInput() InputRegionRuleUpdate { return v.Input }

// __UpdateRateLimitingRuleInput is used internally by genqlient
type __UpdateRateLimitingRuleInput struct {
	Input InputRateLimitingRule `json:"input"`
}

// GetInput returns __UpdateRateLimitingRuleInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateRateLimitingRuleInput) GetInput() InputRateLimitingRule { return v.Input }

// The query executed by AnomalyDetectionRuleConfigs.
const AnomalyDetectionRuleConfigs_Operation = `
query AnomalyDetectionRuleConfigs ($input: InputAnomalyScope!) {
	anomalyDetectionRuleConfigs(anomalyScope: $input) {
		results {
			... AnomalyRuleConfigFields
		}
	}
}
fragment AnomalyRuleConfigFields on AnomalyRuleConfig {
	configStatus {
		disabled
		internal
	}
	hidden
	eventFamily
	configType
	ruleCategory
	ruleId
	ruleName
	eventLabels {
		labelKey
		labelValue
	}
	eventDetails {
		description
		impact
		mitigation
		references
	}
	subRuleConfigs {
		blockingEnabled
		configStatus {
			disabled
			internal
		}
		subRuleId
		subRuleName
		subRuleTypes
		eventLabels {
			labelKey
			labelValue
		}
		eventDetails {
			description
			impact
			mitigation
			references
		}
		anomalyProtectionType
		anomalyRuleSeverity
		anomalySubRuleAction
		hidden
		overriddenParentScopes {
			scopeType
			environmentScope {
				id
			}
		}
		overridingChildrenScopes {
			scopeType
			environmentScope {
				id
			}
		}
	}
	anomalyRuleSeverity
	overriddenParentScopes {
		scopeType
		environmentScope {
			id
		}
	}
	overridingChildrenScopes {
		scopeType
		environmentScope {
			id
		}
	}
}
`

func AnomalyDetectionRuleConfigs(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputAnomalyScope,
) (data_ *AnomalyDetectionRuleConfigsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "AnomalyDetectionRuleConfigs",
		Query:  AnomalyDetectionRuleConfigs_Operation,
		Variables: &__AnomalyDetectionRuleConfigsInput{
			Input: input,
		},
	}

	data_ = &AnomalyDetectionRuleConfigsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateApiNamingRule.
const CreateApiNamingRule_Operation = `
mutation CreateApiNamingRule ($input: InputApiNamingRuleCreate!) {
	createApiNamingRule(input: $input) {
		... ApiNamingRuleFields
	}
}
fragment ApiNamingRuleFields on ApiNamingRule {
	id
	name
	creationTime
	lastUpdatedTime
	disabled
	apiNamingRuleConfig {
		apiNamingRuleConfigType
		segmentMatchingBasedRuleConfig {
			regexes
			values
		}
	}
	spanFilter {
		logicalSpanFilter {
			logicalOperator
			spanFilters {
				relationalSpanFilter {
					relationalOperator
					key
					value
					field
				}
			}
		}
	}
}
`

func CreateApiNamingRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputApiNamingRuleCreate,
) (data_ *CreateApiNamingRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateApiNamingRule",
		Query:  CreateApiNamingRule_Operation,
		Variables: &__CreateApiNamingRuleInput{
			Input: input,
		},
	}

	data_ = &CreateApiNamingRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateCustomSignature.
const CreateCustomSignature_Operation = `
mutation CreateCustomSignature ($input: InputCustomSignatureRuleDescriptor!) {
	createCustomSignatureRule(create: $input) {
		... CustomSignatureFields
	}
}
fragment CustomSignatureFields on CustomSignatureRule {
	id
	name
	description
	disabled
	internal
	blockingExpirationDuration
	blockingExpirationTime
	ruleSource
	ruleEffect {
		eventType
		eventSeverity
		effects {
			ruleEffectType
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	ruleDefinition {
		labels {
			key
			value
		}
		clauseGroup {
			clauseOperator
			clauses {
				clauseType
				matchExpression {
					matchKey
					matchOperator
					matchValue
					matchCategory
				}
				keyValueExpression {
					keyValueTag
					matchKey
					matchValue
					keyMatchOperator
					valueMatchOperator
					matchCategory
				}
				attributeKeyValueExpression {
					keyCondition {
						operator
						value
					}
					valueCondition {
						operator
						value
					}
				}
				customSecRule {
					inputSecRuleString
				}
			}
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
}
`

func CreateCustomSignature(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputCustomSignatureRuleDescriptor,
) (data_ *CreateCustomSignatureResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateCustomSignature",
		Query:  CreateCustomSignature_Operation,
		Variables: &__CreateCustomSignatureInput{
			Input: input,
		},
	}

	data_ = &CreateCustomSignatureResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateDataSet.
const CreateDataSet_Operation = `
mutation CreateDataSet ($dataSetCreate: InputDataSetCreate!) {
	createDataSet(dataSetCreate: $dataSetCreate) {
		id
		name
		description
		iconType
	}
}
`

func CreateDataSet(
	ctx_ context.Context,
	client_ graphql.Client,
	dataSetCreate InputDataSetCreate,
) (data_ *CreateDataSetResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateDataSet",
		Query:  CreateDataSet_Operation,
		Variables: &__CreateDataSetInput{
			DataSetCreate: dataSetCreate,
		},
	}

	data_ = &CreateDataSetResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateMaliciousEmailDomainRule.
const CreateMaliciousEmailDomainRule_Operation = `
mutation CreateMaliciousEmailDomainRule ($input: InputMaliciousSourcesRuleCreate!) {
	createMaliciousSourcesRule(create: $input) {
		... MaliciousEmailDomainRuleFields
	}
}
fragment MaliciousEmailDomainRuleFields on MaliciousSourcesRule {
	id
	info {
		name
		description
		action {
			eventSeverity
			expirationDetails {
				expirationDuration
			}
			ruleActionType
		}
		conditions {
			conditionType
			emailDomainCondition {
				dataLeakedEmail
				disposableEmailDomain
				emailDomains
				emailFraudScore {
					minEmailFraudScoreLevel
					emailFraudScoreType
				}
				emailRegexes
			}
		}
	}
	scope {
		environmentScope {
			environmentIds
		}
	}
	status {
		disabled
		internal
	}
}
`

func CreateMaliciousEmailDomainRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputMaliciousSourcesRuleCreate,
) (data_ *CreateMaliciousEmailDomainRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateMaliciousEmailDomainRule",
		Query:  CreateMaliciousEmailDomainRule_Operation,
		Variables: &__CreateMaliciousEmailDomainRuleInput{
			Input: input,
		},
	}

	data_ = &CreateMaliciousEmailDomainRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateMaliciousIpRangeRule.
const CreateMaliciousIpRangeRule_Operation = `
mutation CreateMaliciousIpRangeRule ($input: InputIpRangeRuleCreate!) {
	createIpRangeRule(create: $input) {
		... MaliciousIpRangeFields
	}
}
fragment MaliciousIpRangeFields on IpRangeRule {
	id
	internal
	disabled
	ruleDetails {
		name
		description
		rawIpRangeData
		ruleAction
		eventSeverity
		expirationDetails {
			expirationDuration
			expirationTimestamp
		}
		effects {
			ruleEffectType
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
}
`

func CreateMaliciousIpRangeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputIpRangeRuleCreate,
) (data_ *CreateMaliciousIpRangeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateMaliciousIpRangeRule",
		Query:  CreateMaliciousIpRangeRule_Operation,
		Variables: &__CreateMaliciousIpRangeRuleInput{
			Input: input,
		},
	}

	data_ = &CreateMaliciousIpRangeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateMaliciousIpTypeRule.
const CreateMaliciousIpTypeRule_Operation = `
mutation CreateMaliciousIpTypeRule ($input: InputMaliciousSourcesRuleCreate!) {
	createMaliciousSourcesRule(create: $input) {
		... MaliciousIpTypeRuleFields
	}
}
fragment MaliciousIpTypeRuleFields on MaliciousSourcesRule {
	id
	info {
		name
		description
		action {
			eventSeverity
			expirationDetails {
				expirationDuration
			}
			ruleActionType
		}
		conditions {
			conditionType
			ipLocationTypeCondition {
				ipLocationTypes
			}
		}
	}
	scope {
		environmentScope {
			environmentIds
		}
	}
	status {
		disabled
		internal
	}
}
`

func CreateMaliciousIpTypeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputMaliciousSourcesRuleCreate,
) (data_ *CreateMaliciousIpTypeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateMaliciousIpTypeRule",
		Query:  CreateMaliciousIpTypeRule_Operation,
		Variables: &__CreateMaliciousIpTypeRuleInput{
			Input: input,
		},
	}

	data_ = &CreateMaliciousIpTypeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateMaliciousRegionRule.
const CreateMaliciousRegionRule_Operation = `
mutation CreateMaliciousRegionRule ($input: InputRegionRuleCreate!) {
	createRegionRule(input: $input) {
		... MaliciousRegionRuleFields
	}
}
fragment MaliciousRegionRuleFields on RegionRule {
	id
	name
	type
	description
	disabled
	internal
	eventSeverity
	expiration {
		duration
		timestamp
	}
	regions {
		id
		name
		country {
			isoCode
			name
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
	effects {
		ruleEffectType
		agentEffect {
			agentModifications {
				agentModificationType
				headerInjection {
					key
					value
					headerCategory
				}
			}
		}
	}
}
`

func CreateMaliciousRegionRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputRegionRuleCreate,
) (data_ *CreateMaliciousRegionRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateMaliciousRegionRule",
		Query:  CreateMaliciousRegionRule_Operation,
		Variables: &__CreateMaliciousRegionRuleInput{
			Input: input,
		},
	}

	data_ = &CreateMaliciousRegionRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by CreateRateLimitingRule.
const CreateRateLimitingRule_Operation = `
mutation CreateRateLimitingRule ($input: InputRateLimitingRuleData!) {
	createRateLimitingRule(rateLimitingRuleData: $input) {
		... RateLimitingRuleFields
	}
}
fragment RateLimitingRuleFields on RateLimitingRule {
	category
	description
	enabled
	id
	name
	labels {
		key
		value
	}
	thresholdActionConfigs {
		... ThresholdActionConfigFields
	}
	transactionActionConfigs {
		... TransactionActionConfigFields
	}
	ruleConfigScope {
		... RuleConfigScopeFields
	}
	ruleStatus {
		... RuleStatusFields
	}
	conditions {
		leafCondition {
			... LeafConditionFields
		}
	}
}
fragment ThresholdActionConfigFields on RateLimitingRuleThresholdActionConfig {
	actions {
		actionType
		alert {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
		block {
			duration
			eventSeverity
			useThresholdDuration
		}
		markForTesting {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	thresholdConfigs {
		apiAggregateType
		rollingWindowThresholdConfig {
			countAllowed
			duration
		}
		dynamicThresholdConfig {
			percentageExceedingMeanAllowed
			meanCalculationDuration
			duration
		}
		valueBasedThresholdConfig {
			valueType
			uniqueValuesAllowed
			duration
			sensitiveParamsEvaluationType
		}
		thresholdConfigType
		userAggregateType
	}
}
fragment TransactionActionConfigFields on RateLimitingTransactionActionConfig {
	action {
		actionType
		alert {
			eventSeverity
		}
		allow {
			duration
		}
		block {
			duration
			eventSeverity
		}
	}
	expirationTimestamp
}
fragment RuleConfigScopeFields on RuleConfigScope {
	environmentScope {
		environmentIds
	}
}
fragment RuleStatusFields on RateLimitingRuleStatus {
	internal
	ruleCreationSource
}
fragment LeafConditionFields on RateLimitingRuleLeafCondition {
	conditionType
	datatypeCondition {
		datasetIds
		datatypeIds
		dataLocation
		datatypeMatching {
			datatypeMatchingType
			regexBasedMatching {
				customMatchingLocation {
					metadataType
					keyCondition {
						operator
						value
					}
				}
			}
		}
	}
	ipAddressCondition {
		cidrIpRanges
		ipAddresses
		rawInputIpData
		exclude
		ipAddressConditionType
	}
	ipReputationCondition {
		minIpReputationSeverity
	}
	ipLocationTypeCondition {
		ipLocationTypes
		exclude
	}
	emailDomainCondition {
		emailRegexes
		exclude
	}
	ipOrganisationCondition {
		ipOrganisationRegexes
		exclude
	}
	ipAsnCondition {
		ipAsnRegexes
		exclude
	}
	userIdCondition {
		userIdRegexes
		userIds
		exclude
	}
	userAgentCondition {
		userAgentRegexes
		exclude
	}
	ipConnectionTypeCondition {
		ipConnectionTypes
		exclude
	}
	ipAbuseVelocityCondition {
		minIpAbuseVelocity
	}
	keyValueCondition {
		keyCondition {
			operator
			value
		}
		metadataType
		valueCondition {
			operator
			value
		}
	}
	regionCondition {
		regionIdentifiers {
			countryIsoCode
		}
		exclude
	}
	requestScannerTypeCondition {
		scannerTypes
		exclude
	}
	scopeCondition {
		entityScope {
			entityIds
			entityType
		}
		labelScope {
			labelIds
			labelType
		}
		scopeType
		urlScope {
			urlRegexes
		}
	}
}
`

func CreateRateLimitingRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputRateLimitingRuleData,
) (data_ *CreateRateLimitingRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "CreateRateLimitingRule",
		Query:  CreateRateLimitingRule_Operation,
		Variables: &__CreateRateLimitingRuleInput{
			Input: input,
		},
	}

	data_ = &CreateRateLimitingRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by DataSets.
const DataSets_Operation = `
query DataSets {
	dataSets {
		count
		results {
			id
			name
			description
			iconType
		}
		total
	}
}
`

func DataSets(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *DataSetsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DataSets",
		Query:  DataSets_Operation,
	}

	data_ = &DataSetsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteApiNamingRule.
const DeleteApiNamingRule_Operation = `
mutation DeleteApiNamingRule ($input: InputApiNamingRuleDelete!) {
	deleteApiNamingRule(input: $input) {
		success
	}
}
`

func DeleteApiNamingRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputApiNamingRuleDelete,
) (data_ *DeleteApiNamingRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteApiNamingRule",
		Query:  DeleteApiNamingRule_Operation,
		Variables: &__DeleteApiNamingRuleInput{
			Input: input,
		},
	}

	data_ = &DeleteApiNamingRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteCustomSignature.
const DeleteCustomSignature_Operation = `
mutation DeleteCustomSignature ($input: InputCustomSignatureRuleDelete!) {
	deleteCustomSignatureRule(delete: $input) {
		success
	}
}
`

func DeleteCustomSignature(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputCustomSignatureRuleDelete,
) (data_ *DeleteCustomSignatureResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteCustomSignature",
		Query:  DeleteCustomSignature_Operation,
		Variables: &__DeleteCustomSignatureInput{
			Input: input,
		},
	}

	data_ = &DeleteCustomSignatureResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteDataSet.
const DeleteDataSet_Operation = `
mutation DeleteDataSet ($id: String!) {
	deleteDataSet(id: $id)
}
`

func DeleteDataSet(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (data_ *DeleteDataSetResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteDataSet",
		Query:  DeleteDataSet_Operation,
		Variables: &__DeleteDataSetInput{
			Id: id,
		},
	}

	data_ = &DeleteDataSetResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteMaliciousEmailDomainRule.
const DeleteMaliciousEmailDomainRule_Operation = `
mutation DeleteMaliciousEmailDomainRule ($input: InputMaliciousSourcesRuleDelete!) {
	deleteMaliciousSourcesRule(delete: $input) {
		success
	}
}
`

func DeleteMaliciousEmailDomainRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputMaliciousSourcesRuleDelete,
) (data_ *DeleteMaliciousEmailDomainRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteMaliciousEmailDomainRule",
		Query:  DeleteMaliciousEmailDomainRule_Operation,
		Variables: &__DeleteMaliciousEmailDomainRuleInput{
			Input: input,
		},
	}

	data_ = &DeleteMaliciousEmailDomainRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteMaliciousIpRangeRule.
const DeleteMaliciousIpRangeRule_Operation = `
mutation DeleteMaliciousIpRangeRule ($input: InputIpRangeRuleDelete!) {
	deleteIpRangeRule(delete: $input) {
		success
	}
}
`

func DeleteMaliciousIpRangeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputIpRangeRuleDelete,
) (data_ *DeleteMaliciousIpRangeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteMaliciousIpRangeRule",
		Query:  DeleteMaliciousIpRangeRule_Operation,
		Variables: &__DeleteMaliciousIpRangeRuleInput{
			Input: input,
		},
	}

	data_ = &DeleteMaliciousIpRangeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteMaliciousIpTypeRule.
const DeleteMaliciousIpTypeRule_Operation = `
mutation DeleteMaliciousIpTypeRule ($input: InputMaliciousSourcesRuleDelete!) {
	deleteMaliciousSourcesRule(delete: $input) {
		success
	}
}
`

func DeleteMaliciousIpTypeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputMaliciousSourcesRuleDelete,
) (data_ *DeleteMaliciousIpTypeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteMaliciousIpTypeRule",
		Query:  DeleteMaliciousIpTypeRule_Operation,
		Variables: &__DeleteMaliciousIpTypeRuleInput{
			Input: input,
		},
	}

	data_ = &DeleteMaliciousIpTypeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteMaliciousRegionRule.
const DeleteMaliciousRegionRule_Operation = `
mutation DeleteMaliciousRegionRule ($input: InputRegionRuleDelete!) {
	deleteRegionRule(input: $input) {
		success
	}
}
`

func DeleteMaliciousRegionRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputRegionRuleDelete,
) (data_ *DeleteMaliciousRegionRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteMaliciousRegionRule",
		Query:  DeleteMaliciousRegionRule_Operation,
		Variables: &__DeleteMaliciousRegionRuleInput{
			Input: input,
		},
	}

	data_ = &DeleteMaliciousRegionRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteRateLimitingRule.
const DeleteRateLimitingRule_Operation = `
mutation DeleteRateLimitingRule ($id: String!) {
	deleteRateLimitingRule(id: $id) {
		success
	}
}
`

func DeleteRateLimitingRule(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (data_ *DeleteRateLimitingRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteRateLimitingRule",
		Query:  DeleteRateLimitingRule_Operation,
		Variables: &__DeleteRateLimitingRuleInput{
			Id: id,
		},
	}

	data_ = &DeleteRateLimitingRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by DeleteScopedAnomalyDetectionConfig.
const DeleteScopedAnomalyDetectionConfig_Operation = `
mutation DeleteScopedAnomalyDetectionConfig ($input: InputAnomalyDetectionConfigDelete!) {
	deleteScopedAnomalyDetectionConfig(delete: $input) {
		anomalyScope {
			scopeType
		}
	}
}
`

func DeleteScopedAnomalyDetectionConfig(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputAnomalyDetectionConfigDelete,
) (data_ *DeleteScopedAnomalyDetectionConfigResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "DeleteScopedAnomalyDetectionConfig",
		Query:  DeleteScopedAnomalyDetectionConfig_Operation,
		Variables: &__DeleteScopedAnomalyDetectionConfigInput{
			Input: input,
		},
	}

	data_ = &DeleteScopedAnomalyDetectionConfigResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetApiNamingRule.
const GetApiNamingRule_Operation = `
query GetApiNamingRule {
	apiNamingRules {
		results {
			... ApiNamingRuleFields
		}
	}
}
fragment ApiNamingRuleFields on ApiNamingRule {
	id
	name
	creationTime
	lastUpdatedTime
	disabled
	apiNamingRuleConfig {
		apiNamingRuleConfigType
		segmentMatchingBasedRuleConfig {
			regexes
			values
		}
	}
	spanFilter {
		logicalSpanFilter {
			logicalOperator
			spanFilters {
				relationalSpanFilter {
					relationalOperator
					key
					value
					field
				}
			}
		}
	}
}
`

func GetApiNamingRule(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *GetApiNamingRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetApiNamingRule",
		Query:  GetApiNamingRule_Operation,
	}

	data_ = &GetApiNamingRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetApiNamingRuleId.
const GetApiNamingRuleId_Operation = `
query GetApiNamingRuleId {
	apiNamingRules {
		results {
			id
			name
		}
	}
}
`

func GetApiNamingRuleId(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *GetApiNamingRuleIdResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetApiNamingRuleId",
		Query:  GetApiNamingRuleId_Operation,
	}

	data_ = &GetApiNamingRuleIdResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetCountries.
const GetCountries_Operation = `
query GetCountries {
	countries {
		results {
			id
			country {
				isoCode
				name
			}
		}
	}
}
`

func GetCountries(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *GetCountriesResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetCountries",
		Query:  GetCountries_Operation,
	}

	data_ = &GetCountriesResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetCustomSignature.
const GetCustomSignature_Operation = `
query GetCustomSignature ($input: InputCustomSignatureRulesFilter!) {
	customSignatureRules(filter: $input) {
		results {
			... CustomSignatureFields
		}
	}
}
fragment CustomSignatureFields on CustomSignatureRule {
	id
	name
	description
	disabled
	internal
	blockingExpirationDuration
	blockingExpirationTime
	ruleSource
	ruleEffect {
		eventType
		eventSeverity
		effects {
			ruleEffectType
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	ruleDefinition {
		labels {
			key
			value
		}
		clauseGroup {
			clauseOperator
			clauses {
				clauseType
				matchExpression {
					matchKey
					matchOperator
					matchValue
					matchCategory
				}
				keyValueExpression {
					keyValueTag
					matchKey
					matchValue
					keyMatchOperator
					valueMatchOperator
					matchCategory
				}
				attributeKeyValueExpression {
					keyCondition {
						operator
						value
					}
					valueCondition {
						operator
						value
					}
				}
				customSecRule {
					inputSecRuleString
				}
			}
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
}
`

func GetCustomSignature(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputCustomSignatureRulesFilter,
) (data_ *GetCustomSignatureResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetCustomSignature",
		Query:  GetCustomSignature_Operation,
		Variables: &__GetCustomSignatureInput{
			Input: input,
		},
	}

	data_ = &GetCustomSignatureResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetCustomSignatureId.
const GetCustomSignatureId_Operation = `
query GetCustomSignatureId ($input: InputCustomSignatureRulesFilter!) {
	customSignatureRules(filter: $input) {
		results {
			id
			name
		}
	}
}
`

func GetCustomSignatureId(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputCustomSignatureRulesFilter,
) (data_ *GetCustomSignatureIdResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetCustomSignatureId",
		Query:  GetCustomSignatureId_Operation,
		Variables: &__GetCustomSignatureIdInput{
			Input: input,
		},
	}

	data_ = &GetCustomSignatureIdResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetDataSetsId.
const GetDataSetsId_Operation = `
query GetDataSetsId {
	dataSets {
		results {
			id
			name
		}
	}
}
`

func GetDataSetsId(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *GetDataSetsIdResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetDataSetsId",
		Query:  GetDataSetsId_Operation,
	}

	data_ = &GetDataSetsIdResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetDataTypesId.
const GetDataTypesId_Operation = `
query GetDataTypesId {
	dataTypes {
		results {
			id
			name
		}
	}
}
`

func GetDataTypesId(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *GetDataTypesIdResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetDataTypesId",
		Query:  GetDataTypesId_Operation,
	}

	data_ = &GetDataTypesIdResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetEndpointLabelsId.
const GetEndpointLabelsId_Operation = `
query GetEndpointLabelsId {
	labels {
		count
		results {
			id
			key
		}
		total
	}
}
`

func GetEndpointLabelsId(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *GetEndpointLabelsIdResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetEndpointLabelsId",
		Query:  GetEndpointLabelsId_Operation,
	}

	data_ = &GetEndpointLabelsIdResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetEntitiesIds.
const GetEntitiesIds_Operation = `
query GetEntitiesIds ($entityType: EntityType, $scope: String, $between: InputTimeRange!, $space: String, $filterBy: [InputFilter], $orderBy: [InputAggregatableOrder], $limit: Int, $offset: Int, $includeInactive: Boolean) {
	entities(type: $entityType, scope: $scope, between: $between, space: $space, filterBy: $filterBy, orderBy: $orderBy, limit: $limit, offset: $offset, includeInactive: $includeInactive) {
		results {
			entityId: id
			id: attribute(expression: {key:"id"})
			name: attribute(expression: {key:"name"})
		}
		total
	}
}
`

func GetEntitiesIds(
	ctx_ context.Context,
	client_ graphql.Client,
	entityType *EntityType,
	scope *string,
	between InputTimeRange,
	space *string,
	filterBy []*InputFilter,
	orderBy []*InputAggregatableOrder,
	limit *int64,
	offset *int64,
	includeInactive *bool,
) (data_ *GetEntitiesIdsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetEntitiesIds",
		Query:  GetEntitiesIds_Operation,
		Variables: &__GetEntitiesIdsInput{
			EntityType:      entityType,
			Scope:           scope,
			Between:         between,
			Space:           space,
			FilterBy:        filterBy,
			OrderBy:         orderBy,
			Limit:           limit,
			Offset:          offset,
			IncludeInactive: includeInactive,
		},
	}

	data_ = &GetEntitiesIdsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousEmailDomainRuleDetails.
const GetMaliciousEmailDomainRuleDetails_Operation = `
query GetMaliciousEmailDomainRuleDetails ($input: InputMaliciousSourcesRulesFilter) {
	maliciousSourcesRules(filter: $input) {
		count
		total
		results {
			... MaliciousEmailDomainRuleFields
		}
	}
}
fragment MaliciousEmailDomainRuleFields on MaliciousSourcesRule {
	id
	info {
		name
		description
		action {
			eventSeverity
			expirationDetails {
				expirationDuration
			}
			ruleActionType
		}
		conditions {
			conditionType
			emailDomainCondition {
				dataLeakedEmail
				disposableEmailDomain
				emailDomains
				emailFraudScore {
					minEmailFraudScoreLevel
					emailFraudScoreType
				}
				emailRegexes
			}
		}
	}
	scope {
		environmentScope {
			environmentIds
		}
	}
	status {
		disabled
		internal
	}
}
`

func GetMaliciousEmailDomainRuleDetails(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputMaliciousSourcesRulesFilter,
) (data_ *GetMaliciousEmailDomainRuleDetailsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousEmailDomainRuleDetails",
		Query:  GetMaliciousEmailDomainRuleDetails_Operation,
		Variables: &__GetMaliciousEmailDomainRuleDetailsInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousEmailDomainRuleDetailsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousEmailDomainRulesName.
const GetMaliciousEmailDomainRulesName_Operation = `
query GetMaliciousEmailDomainRulesName ($input: InputMaliciousSourcesRulesFilter) {
	maliciousSourcesRules(filter: $input) {
		count
		total
		results {
			info {
				name
			}
			id
		}
	}
}
`

func GetMaliciousEmailDomainRulesName(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputMaliciousSourcesRulesFilter,
) (data_ *GetMaliciousEmailDomainRulesNameResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousEmailDomainRulesName",
		Query:  GetMaliciousEmailDomainRulesName_Operation,
		Variables: &__GetMaliciousEmailDomainRulesNameInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousEmailDomainRulesNameResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousIpRangeRuleDetails.
const GetMaliciousIpRangeRuleDetails_Operation = `
query GetMaliciousIpRangeRuleDetails ($input: InputIpRangeRulesFilter) {
	ipRangeRules(filter: $input) {
		count
		total
		results {
			... MaliciousIpRangeFields
		}
	}
}
fragment MaliciousIpRangeFields on IpRangeRule {
	id
	internal
	disabled
	ruleDetails {
		name
		description
		rawIpRangeData
		ruleAction
		eventSeverity
		expirationDetails {
			expirationDuration
			expirationTimestamp
		}
		effects {
			ruleEffectType
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
}
`

func GetMaliciousIpRangeRuleDetails(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputIpRangeRulesFilter,
) (data_ *GetMaliciousIpRangeRuleDetailsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousIpRangeRuleDetails",
		Query:  GetMaliciousIpRangeRuleDetails_Operation,
		Variables: &__GetMaliciousIpRangeRuleDetailsInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousIpRangeRuleDetailsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousIpRangeRulesName.
const GetMaliciousIpRangeRulesName_Operation = `
query GetMaliciousIpRangeRulesName ($input: InputIpRangeRulesFilter) {
	ipRangeRules(filter: $input) {
		count
		total
		results {
			ruleDetails {
				name
			}
			id
		}
	}
}
`

func GetMaliciousIpRangeRulesName(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputIpRangeRulesFilter,
) (data_ *GetMaliciousIpRangeRulesNameResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousIpRangeRulesName",
		Query:  GetMaliciousIpRangeRulesName_Operation,
		Variables: &__GetMaliciousIpRangeRulesNameInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousIpRangeRulesNameResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousIpTypeRuleDetails.
const GetMaliciousIpTypeRuleDetails_Operation = `
query GetMaliciousIpTypeRuleDetails ($input: InputMaliciousSourcesRulesFilter) {
	maliciousSourcesRules(filter: $input) {
		count
		total
		results {
			... MaliciousIpTypeRuleFields
		}
	}
}
fragment MaliciousIpTypeRuleFields on MaliciousSourcesRule {
	id
	info {
		name
		description
		action {
			eventSeverity
			expirationDetails {
				expirationDuration
			}
			ruleActionType
		}
		conditions {
			conditionType
			ipLocationTypeCondition {
				ipLocationTypes
			}
		}
	}
	scope {
		environmentScope {
			environmentIds
		}
	}
	status {
		disabled
		internal
	}
}
`

func GetMaliciousIpTypeRuleDetails(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputMaliciousSourcesRulesFilter,
) (data_ *GetMaliciousIpTypeRuleDetailsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousIpTypeRuleDetails",
		Query:  GetMaliciousIpTypeRuleDetails_Operation,
		Variables: &__GetMaliciousIpTypeRuleDetailsInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousIpTypeRuleDetailsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousIpTypeRulesName.
const GetMaliciousIpTypeRulesName_Operation = `
query GetMaliciousIpTypeRulesName ($input: InputMaliciousSourcesRulesFilter) {
	maliciousSourcesRules(filter: $input) {
		count
		total
		results {
			info {
				name
			}
			id
		}
	}
}
`

func GetMaliciousIpTypeRulesName(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputMaliciousSourcesRulesFilter,
) (data_ *GetMaliciousIpTypeRulesNameResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousIpTypeRulesName",
		Query:  GetMaliciousIpTypeRulesName_Operation,
		Variables: &__GetMaliciousIpTypeRulesNameInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousIpTypeRulesNameResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousRegionRuleDetails.
const GetMaliciousRegionRuleDetails_Operation = `
query GetMaliciousRegionRuleDetails ($input: InputRegionRulesFilter) {
	regionRules(filter: $input) {
		count
		total
		results {
			... MaliciousRegionRuleFields
		}
	}
}
fragment MaliciousRegionRuleFields on RegionRule {
	id
	name
	type
	description
	disabled
	internal
	eventSeverity
	expiration {
		duration
		timestamp
	}
	regions {
		id
		name
		country {
			isoCode
			name
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
	effects {
		ruleEffectType
		agentEffect {
			agentModifications {
				agentModificationType
				headerInjection {
					key
					value
					headerCategory
				}
			}
		}
	}
}
`

func GetMaliciousRegionRuleDetails(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputRegionRulesFilter,
) (data_ *GetMaliciousRegionRuleDetailsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousRegionRuleDetails",
		Query:  GetMaliciousRegionRuleDetails_Operation,
		Variables: &__GetMaliciousRegionRuleDetailsInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousRegionRuleDetailsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetMaliciousRegionRulesName.
const GetMaliciousRegionRulesName_Operation = `
query GetMaliciousRegionRulesName ($input: InputRegionRulesFilter) {
	regionRules(filter: $input) {
		count
		total
		results {
			id
			name
		}
	}
}
`

func GetMaliciousRegionRulesName(
	ctx_ context.Context,
	client_ graphql.Client,
	input *InputRegionRulesFilter,
) (data_ *GetMaliciousRegionRulesNameResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetMaliciousRegionRulesName",
		Query:  GetMaliciousRegionRulesName_Operation,
		Variables: &__GetMaliciousRegionRulesNameInput{
			Input: input,
		},
	}

	data_ = &GetMaliciousRegionRulesNameResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetRateLimitingDetails.
const GetRateLimitingDetails_Operation = `
query GetRateLimitingDetails ($category: [RateLimitingRuleCategory], $rateLimitingRulesFilter: InputRateLimitingRulesFilter) {
	rateLimitingRules(category: $category, rateLimitingRulesFilter: $rateLimitingRulesFilter) {
		count
		total
		results {
			... RateLimitingRuleFields
		}
	}
}
fragment RateLimitingRuleFields on RateLimitingRule {
	category
	description
	enabled
	id
	name
	labels {
		key
		value
	}
	thresholdActionConfigs {
		... ThresholdActionConfigFields
	}
	transactionActionConfigs {
		... TransactionActionConfigFields
	}
	ruleConfigScope {
		... RuleConfigScopeFields
	}
	ruleStatus {
		... RuleStatusFields
	}
	conditions {
		leafCondition {
			... LeafConditionFields
		}
	}
}
fragment ThresholdActionConfigFields on RateLimitingRuleThresholdActionConfig {
	actions {
		actionType
		alert {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
		block {
			duration
			eventSeverity
			useThresholdDuration
		}
		markForTesting {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	thresholdConfigs {
		apiAggregateType
		rollingWindowThresholdConfig {
			countAllowed
			duration
		}
		dynamicThresholdConfig {
			percentageExceedingMeanAllowed
			meanCalculationDuration
			duration
		}
		valueBasedThresholdConfig {
			valueType
			uniqueValuesAllowed
			duration
			sensitiveParamsEvaluationType
		}
		thresholdConfigType
		userAggregateType
	}
}
fragment TransactionActionConfigFields on RateLimitingTransactionActionConfig {
	action {
		actionType
		alert {
			eventSeverity
		}
		allow {
			duration
		}
		block {
			duration
			eventSeverity
		}
	}
	expirationTimestamp
}
fragment RuleConfigScopeFields on RuleConfigScope {
	environmentScope {
		environmentIds
	}
}
fragment RuleStatusFields on RateLimitingRuleStatus {
	internal
	ruleCreationSource
}
fragment LeafConditionFields on RateLimitingRuleLeafCondition {
	conditionType
	datatypeCondition {
		datasetIds
		datatypeIds
		dataLocation
		datatypeMatching {
			datatypeMatchingType
			regexBasedMatching {
				customMatchingLocation {
					metadataType
					keyCondition {
						operator
						value
					}
				}
			}
		}
	}
	ipAddressCondition {
		cidrIpRanges
		ipAddresses
		rawInputIpData
		exclude
		ipAddressConditionType
	}
	ipReputationCondition {
		minIpReputationSeverity
	}
	ipLocationTypeCondition {
		ipLocationTypes
		exclude
	}
	emailDomainCondition {
		emailRegexes
		exclude
	}
	ipOrganisationCondition {
		ipOrganisationRegexes
		exclude
	}
	ipAsnCondition {
		ipAsnRegexes
		exclude
	}
	userIdCondition {
		userIdRegexes
		userIds
		exclude
	}
	userAgentCondition {
		userAgentRegexes
		exclude
	}
	ipConnectionTypeCondition {
		ipConnectionTypes
		exclude
	}
	ipAbuseVelocityCondition {
		minIpAbuseVelocity
	}
	keyValueCondition {
		keyCondition {
			operator
			value
		}
		metadataType
		valueCondition {
			operator
			value
		}
	}
	regionCondition {
		regionIdentifiers {
			countryIsoCode
		}
		exclude
	}
	requestScannerTypeCondition {
		scannerTypes
		exclude
	}
	scopeCondition {
		entityScope {
			entityIds
			entityType
		}
		labelScope {
			labelIds
			labelType
		}
		scopeType
		urlScope {
			urlRegexes
		}
	}
}
`

func GetRateLimitingDetails(
	ctx_ context.Context,
	client_ graphql.Client,
	category []*RateLimitingRuleCategory,
	rateLimitingRulesFilter *InputRateLimitingRulesFilter,
) (data_ *GetRateLimitingDetailsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetRateLimitingDetails",
		Query:  GetRateLimitingDetails_Operation,
		Variables: &__GetRateLimitingDetailsInput{
			Category:                category,
			RateLimitingRulesFilter: rateLimitingRulesFilter,
		},
	}

	data_ = &GetRateLimitingDetailsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by GetRateLimitingRulesName.
const GetRateLimitingRulesName_Operation = `
query GetRateLimitingRulesName ($category: [RateLimitingRuleCategory], $rateLimitingRulesFilter: InputRateLimitingRulesFilter) {
	rateLimitingRules(category: $category, rateLimitingRulesFilter: $rateLimitingRulesFilter) {
		count
		total
		results {
			name
			id
		}
	}
}
`

func GetRateLimitingRulesName(
	ctx_ context.Context,
	client_ graphql.Client,
	category []*RateLimitingRuleCategory,
	rateLimitingRulesFilter *InputRateLimitingRulesFilter,
) (data_ *GetRateLimitingRulesNameResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetRateLimitingRulesName",
		Query:  GetRateLimitingRulesName_Operation,
		Variables: &__GetRateLimitingRulesNameInput{
			Category:                category,
			RateLimitingRulesFilter: rateLimitingRulesFilter,
		},
	}

	data_ = &GetRateLimitingRulesNameResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateAnomalyRuleConfig.
const UpdateAnomalyRuleConfig_Operation = `
mutation UpdateAnomalyRuleConfig ($input: InputScopedAnomalyRuleConfigUpdate!) {
	updateAnomalyRuleConfig(update: $input) {
		ruleId
	}
}
`

func UpdateAnomalyRuleConfig(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputScopedAnomalyRuleConfigUpdate,
) (data_ *UpdateAnomalyRuleConfigResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateAnomalyRuleConfig",
		Query:  UpdateAnomalyRuleConfig_Operation,
		Variables: &__UpdateAnomalyRuleConfigInput{
			Input: input,
		},
	}

	data_ = &UpdateAnomalyRuleConfigResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateApiNamingRule.
const UpdateApiNamingRule_Operation = `
mutation UpdateApiNamingRule ($input: InputApiNamingRuleUpdate!) {
	updateApiNamingRule(input: $input) {
		... ApiNamingRuleFields
	}
}
fragment ApiNamingRuleFields on ApiNamingRule {
	id
	name
	creationTime
	lastUpdatedTime
	disabled
	apiNamingRuleConfig {
		apiNamingRuleConfigType
		segmentMatchingBasedRuleConfig {
			regexes
			values
		}
	}
	spanFilter {
		logicalSpanFilter {
			logicalOperator
			spanFilters {
				relationalSpanFilter {
					relationalOperator
					key
					value
					field
				}
			}
		}
	}
}
`

func UpdateApiNamingRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputApiNamingRuleUpdate,
) (data_ *UpdateApiNamingRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateApiNamingRule",
		Query:  UpdateApiNamingRule_Operation,
		Variables: &__UpdateApiNamingRuleInput{
			Input: input,
		},
	}

	data_ = &UpdateApiNamingRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateCustomSignature.
const UpdateCustomSignature_Operation = `
mutation UpdateCustomSignature ($input: InputCustomSignatureRuleUpdate!) {
	updateCustomSignatureRule(update: $input) {
		... CustomSignatureFields
	}
}
fragment CustomSignatureFields on CustomSignatureRule {
	id
	name
	description
	disabled
	internal
	blockingExpirationDuration
	blockingExpirationTime
	ruleSource
	ruleEffect {
		eventType
		eventSeverity
		effects {
			ruleEffectType
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	ruleDefinition {
		labels {
			key
			value
		}
		clauseGroup {
			clauseOperator
			clauses {
				clauseType
				matchExpression {
					matchKey
					matchOperator
					matchValue
					matchCategory
				}
				keyValueExpression {
					keyValueTag
					matchKey
					matchValue
					keyMatchOperator
					valueMatchOperator
					matchCategory
				}
				attributeKeyValueExpression {
					keyCondition {
						operator
						value
					}
					valueCondition {
						operator
						value
					}
				}
				customSecRule {
					inputSecRuleString
				}
			}
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
}
`

func UpdateCustomSignature(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputCustomSignatureRuleUpdate,
) (data_ *UpdateCustomSignatureResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateCustomSignature",
		Query:  UpdateCustomSignature_Operation,
		Variables: &__UpdateCustomSignatureInput{
			Input: input,
		},
	}

	data_ = &UpdateCustomSignatureResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateDataSet.
const UpdateDataSet_Operation = `
mutation UpdateDataSet ($dataSetUpdate: InputDataSetUpdate!) {
	updateDataSet(dataSetUpdate: $dataSetUpdate) {
		id
		name
		description
		iconType
	}
}
`

func UpdateDataSet(
	ctx_ context.Context,
	client_ graphql.Client,
	dataSetUpdate InputDataSetUpdate,
) (data_ *UpdateDataSetResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateDataSet",
		Query:  UpdateDataSet_Operation,
		Variables: &__UpdateDataSetInput{
			DataSetUpdate: dataSetUpdate,
		},
	}

	data_ = &UpdateDataSetResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateMaliciousEmailDomainRule.
const UpdateMaliciousEmailDomainRule_Operation = `
mutation UpdateMaliciousEmailDomainRule ($input: InputMaliciousSourcesRuleUpdate!) {
	updateMaliciousSourcesRule(update: $input) {
		... MaliciousEmailDomainRuleFields
	}
}
fragment MaliciousEmailDomainRuleFields on MaliciousSourcesRule {
	id
	info {
		name
		description
		action {
			eventSeverity
			expirationDetails {
				expirationDuration
			}
			ruleActionType
		}
		conditions {
			conditionType
			emailDomainCondition {
				dataLeakedEmail
				disposableEmailDomain
				emailDomains
				emailFraudScore {
					minEmailFraudScoreLevel
					emailFraudScoreType
				}
				emailRegexes
			}
		}
	}
	scope {
		environmentScope {
			environmentIds
		}
	}
	status {
		disabled
		internal
	}
}
`

func UpdateMaliciousEmailDomainRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputMaliciousSourcesRuleUpdate,
) (data_ *UpdateMaliciousEmailDomainRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateMaliciousEmailDomainRule",
		Query:  UpdateMaliciousEmailDomainRule_Operation,
		Variables: &__UpdateMaliciousEmailDomainRuleInput{
			Input: input,
		},
	}

	data_ = &UpdateMaliciousEmailDomainRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateMaliciousIpRangeRule.
const UpdateMaliciousIpRangeRule_Operation = `
mutation UpdateMaliciousIpRangeRule ($input: InputIpRangeRuleUpdate!) {
	updateIpRangeRule(update: $input) {
		... MaliciousIpRangeFields
	}
}
fragment MaliciousIpRangeFields on IpRangeRule {
	id
	internal
	disabled
	ruleDetails {
		name
		description
		rawIpRangeData
		ruleAction
		eventSeverity
		expirationDetails {
			expirationDuration
			expirationTimestamp
		}
		effects {
			ruleEffectType
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
}
`

func UpdateMaliciousIpRangeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputIpRangeRuleUpdate,
) (data_ *UpdateMaliciousIpRangeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateMaliciousIpRangeRule",
		Query:  UpdateMaliciousIpRangeRule_Operation,
		Variables: &__UpdateMaliciousIpRangeRuleInput{
			Input: input,
		},
	}

	data_ = &UpdateMaliciousIpRangeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateMaliciousIpTypeRule.
const UpdateMaliciousIpTypeRule_Operation = `
mutation UpdateMaliciousIpTypeRule ($input: InputMaliciousSourcesRuleUpdate!) {
	updateMaliciousSourcesRule(update: $input) {
		... MaliciousIpTypeRuleFields
	}
}
fragment MaliciousIpTypeRuleFields on MaliciousSourcesRule {
	id
	info {
		name
		description
		action {
			eventSeverity
			expirationDetails {
				expirationDuration
			}
			ruleActionType
		}
		conditions {
			conditionType
			ipLocationTypeCondition {
				ipLocationTypes
			}
		}
	}
	scope {
		environmentScope {
			environmentIds
		}
	}
	status {
		disabled
		internal
	}
}
`

func UpdateMaliciousIpTypeRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputMaliciousSourcesRuleUpdate,
) (data_ *UpdateMaliciousIpTypeRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateMaliciousIpTypeRule",
		Query:  UpdateMaliciousIpTypeRule_Operation,
		Variables: &__UpdateMaliciousIpTypeRuleInput{
			Input: input,
		},
	}

	data_ = &UpdateMaliciousIpTypeRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateMaliciousRegionRule.
const UpdateMaliciousRegionRule_Operation = `
mutation UpdateMaliciousRegionRule ($input: InputRegionRuleUpdate!) {
	updateRegionRule(input: $input) {
		... MaliciousRegionRuleFields
	}
}
fragment MaliciousRegionRuleFields on RegionRule {
	id
	name
	type
	description
	disabled
	internal
	eventSeverity
	expiration {
		duration
		timestamp
	}
	regions {
		id
		name
		country {
			isoCode
			name
		}
	}
	ruleScope {
		environmentScope {
			environmentIds
		}
	}
	effects {
		ruleEffectType
		agentEffect {
			agentModifications {
				agentModificationType
				headerInjection {
					key
					value
					headerCategory
				}
			}
		}
	}
}
`

func UpdateMaliciousRegionRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputRegionRuleUpdate,
) (data_ *UpdateMaliciousRegionRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateMaliciousRegionRule",
		Query:  UpdateMaliciousRegionRule_Operation,
		Variables: &__UpdateMaliciousRegionRuleInput{
			Input: input,
		},
	}

	data_ = &UpdateMaliciousRegionRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The mutation executed by UpdateRateLimitingRule.
const UpdateRateLimitingRule_Operation = `
mutation UpdateRateLimitingRule ($input: InputRateLimitingRule!) {
	updateRateLimitingRule(rateLimitingRule: $input) {
		... RateLimitingRuleFields
	}
}
fragment RateLimitingRuleFields on RateLimitingRule {
	category
	description
	enabled
	id
	name
	labels {
		key
		value
	}
	thresholdActionConfigs {
		... ThresholdActionConfigFields
	}
	transactionActionConfigs {
		... TransactionActionConfigFields
	}
	ruleConfigScope {
		... RuleConfigScopeFields
	}
	ruleStatus {
		... RuleStatusFields
	}
	conditions {
		leafCondition {
			... LeafConditionFields
		}
	}
}
fragment ThresholdActionConfigFields on RateLimitingRuleThresholdActionConfig {
	actions {
		actionType
		alert {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
		block {
			duration
			eventSeverity
			useThresholdDuration
		}
		markForTesting {
			eventSeverity
			agentEffect {
				agentModifications {
					agentModificationType
					headerInjection {
						key
						value
						headerCategory
					}
				}
			}
		}
	}
	thresholdConfigs {
		apiAggregateType
		rollingWindowThresholdConfig {
			countAllowed
			duration
		}
		dynamicThresholdConfig {
			percentageExceedingMeanAllowed
			meanCalculationDuration
			duration
		}
		valueBasedThresholdConfig {
			valueType
			uniqueValuesAllowed
			duration
			sensitiveParamsEvaluationType
		}
		thresholdConfigType
		userAggregateType
	}
}
fragment TransactionActionConfigFields on RateLimitingTransactionActionConfig {
	action {
		actionType
		alert {
			eventSeverity
		}
		allow {
			duration
		}
		block {
			duration
			eventSeverity
		}
	}
	expirationTimestamp
}
fragment RuleConfigScopeFields on RuleConfigScope {
	environmentScope {
		environmentIds
	}
}
fragment RuleStatusFields on RateLimitingRuleStatus {
	internal
	ruleCreationSource
}
fragment LeafConditionFields on RateLimitingRuleLeafCondition {
	conditionType
	datatypeCondition {
		datasetIds
		datatypeIds
		dataLocation
		datatypeMatching {
			datatypeMatchingType
			regexBasedMatching {
				customMatchingLocation {
					metadataType
					keyCondition {
						operator
						value
					}
				}
			}
		}
	}
	ipAddressCondition {
		cidrIpRanges
		ipAddresses
		rawInputIpData
		exclude
		ipAddressConditionType
	}
	ipReputationCondition {
		minIpReputationSeverity
	}
	ipLocationTypeCondition {
		ipLocationTypes
		exclude
	}
	emailDomainCondition {
		emailRegexes
		exclude
	}
	ipOrganisationCondition {
		ipOrganisationRegexes
		exclude
	}
	ipAsnCondition {
		ipAsnRegexes
		exclude
	}
	userIdCondition {
		userIdRegexes
		userIds
		exclude
	}
	userAgentCondition {
		userAgentRegexes
		exclude
	}
	ipConnectionTypeCondition {
		ipConnectionTypes
		exclude
	}
	ipAbuseVelocityCondition {
		minIpAbuseVelocity
	}
	keyValueCondition {
		keyCondition {
			operator
			value
		}
		metadataType
		valueCondition {
			operator
			value
		}
	}
	regionCondition {
		regionIdentifiers {
			countryIsoCode
		}
		exclude
	}
	requestScannerTypeCondition {
		scannerTypes
		exclude
	}
	scopeCondition {
		entityScope {
			entityIds
			entityType
		}
		labelScope {
			labelIds
			labelType
		}
		scopeType
		urlScope {
			urlRegexes
		}
	}
}
`

func UpdateRateLimitingRule(
	ctx_ context.Context,
	client_ graphql.Client,
	input InputRateLimitingRule,
) (data_ *UpdateRateLimitingRuleResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UpdateRateLimitingRule",
		Query:  UpdateRateLimitingRule_Operation,
		Variables: &__UpdateRateLimitingRuleInput{
			Input: input,
		},
	}

	data_ = &UpdateRateLimitingRuleResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
